{"version":3,"sources":["api/ajax.js","api/index.js","pages/login/login.jsx","components/left-nav/index.jsx","components/link-button/index.jsx","components/header/index.jsx","pages/home/home.jsx","utils/dateUtils.js","pages/user/user-nick.jsx","components/MyDatePicker.jsx","pages/user/gold_details.jsx","pages/user/user.jsx","pages/admin_manage/admin_manage_list/addData.jsx","pages/admin_manage/admin_manage_list/admin_manage_list.jsx","pages/admin_manage/role/addData.jsx","pages/admin_manage/role/role.jsx","pages/charge/order_list/editData.jsx","pages/charge/order_list/order_list.jsx","pages/charge/channel_list/addorEdit.jsx","pages/charge/channel_list/channel_list.jsx","pages/charge/bankcard_list/addorEdit.jsx","pages/charge/bankcard_list/bankcard_list.jsx","pages/charge/recharge_order/recharge_order.jsx","pages/charge/recharge_channel/recharge_channel.jsx","pages/customer_service/notice_list/addorEdit.jsx","pages/customer_service/notice_list/index.jsx","pages/customer_service/customer_list/addorEdit.jsx","pages/customer_service/customer_list/index.jsx","pages/withdraw/withdraw_list/details.jsx","pages/withdraw/withdraw_list/edit.jsx","pages/withdraw/withdraw_list/index.jsx","components/myComponents.jsx","pages/gameSetting/config/edit.jsx","pages/gameSetting/config/index.jsx","pages/messageCenter/tasks/edit.jsx","pages/messageCenter/tasks/index.jsx","pages/trade/accountList/edit.jsx","pages/trade/accountList/index.jsx","pages/trade/applyHistory/edit.jsx","pages/trade/applyHistory/index.jsx","pages/trade/tradeOrder/edit.jsx","pages/trade/tradeOrder/index.jsx","pages/activity/activityList/editForm.jsx","pages/activity/activityList/index.jsx","pages/activity/recieve/index.jsx","pages/activity/giftVoucher/editForm.jsx","pages/activity/giftVoucher/index.jsx","pages/gift/giftList/details.jsx","pages/gift/giftList/editForm.jsx","pages/gift/giftList/index.jsx","pages/gift/giftSetting/index.jsx","pages/AI/robot/index.jsx","pages/withdraw/Daiti_list/details.jsx","pages/withdraw/Daiti_list/edit.jsx","pages/withdraw/Daiti_list/index.jsx","pages/withdraw/Channel/index.jsx","pages/not-found/not-found.jsx","pages/list/DailyReport/dateGameReport.jsx","pages/list/DailyReport/details.jsx","pages/list/DailyReport/index.jsx","pages/admin_manage/ruleManage/edit.jsx","pages/admin_manage/ruleManage/index.jsx","pages/admin/admin.jsx","store/reducer.js","store/index.js","App.js","utils/storageUtils.js","index.js"],"names":["ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","promise","axios","get","params","defaults","headers","post","transformRequest","ret","it","encodeURIComponent","then","response","catch","error","message","BASE","process","token","localStorage","setToken","reqLogin","username","password","authcode","reqAuthCode","navList","getAuthCode","editPass","reqUsers","page","limit","start","end","inputKey","inputValue","_ajax","Object","defineProperty","setGameUserNickName","id","game_nick","changeGold","record","value","obj","str","gold","desc","proxy_user_id","package_id","objectSpread","task_type","reqLoadGold","userDetail","goldDetails","bindInfo","user_id","saveUserBlack","action","createTask","resetpwd","params[id]","params[account_pass]","setCustomer","reqAdminList","searchAdminData","name","roleList","packageList","addUser","formValue","forEach","element","newobj","status","userStatus","group_id","userGroup","source","proxy","use_money","loadGold","pass","repass","confirmPssword","editUser","resetAuthCode","ruleList","addRule","editRule","rule_id","console","log","ruleDel","getRoleList","addRole","rules","editRole","role_name","role_id","getList","addNotice","formData","updateNotice","delNotice","customerList","saveCustomerService","dailyReport","dateReport","group_by","gameReport","oneDayGameReport","date","configList","conf_key","saveConf","tasksList","changeUserBalance","reviewTask","allAccountList","resetPassword","accountList","sellGoldApplyList","tradeRemark","sellGoldInfoList","reviewInfo2","remarkInfo2","sellGoldOrderList","activityConfigList","saveActivityConfig","delActivityConfig","giftVoucherList","activityList","reqOrder_list","start_time","end_time","order_status","reqLostOrder_list","order_id","orderReview","review_type","orderReviewEdit","downloadList","searchData","inputParam","paramKey","window","open","getChannelList","addChannel","editPayChannel","bankList","saveBankCard","deleteBankCard","rechargeOrder","getChannel","getChannelInfo","channel_id","editChannelInfo","pay_code","withDraw","flag","filed","time_type","reviewInfo","remarkInfo","downloadWithdrawList","withDrawRemark","temarks","remark_type","auditOrder","reqData","orderWithDrawReview","getConfigList","saveWithDrawChannel","alipay[name]","alipay[withdraw_type]","bankcard[name]","bankcard[withdraw_type]","withDrawReview","review_status","is_pass","setGiftConfig","getAIList","changeInternalUserBalance","amount","Item","es_form","Login","getMenuList","_callee","result","regenerator_default","a","wrap","_context","prev","next","sent","children","item","title","slice","menuList","JSON","stringify","_this","props","history","replace","stop","handleSubmit","event","preventDefault","form","validateFields","_ref2","asyncToGenerator","mark","_callee2","err","values","_context2","success","tokenTimeStamp","Date","getTime","msg","_x","_x2","apply","this","handleClick","_ref3","_callee3","_context3","modal","info","content","react_default","createElement","src","qrurl","alt","_x3","_x4","validatePwd","rule","callback","test","react_router","to","getFieldDecorator","className","onSubmit","required","whitespace","min","max","pattern","input","prefix","icon","style","color","placeholder","validator","marginTop","onClick","es_button","htmlType","Component","WrapLogin","create","SubMenu","menu","LeftNav","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","getMenuNodes","path","location","pathname","reduce","pre","find","currentValue","indexOf","key","openKey","push","openMenu","cpre","ele","react_router_dom","state","_this2","parse","getItem","menuNodes","justifyContent","mode","theme","selectedKeys","onOpenChange","openKeys","withRouter","LinkButton","assign","size","marginRight","TabPane","Header","onChange","activeKey","onEdit","targetKey","add","tabConfig","oldKey","panes","isTabExist","concat","newTabIndex","remove","lastIndex","pane","i","filter","logout","confirm","onOk","assertThisInitialized","removeItem","authCode","res","lib_default","width","resetPWD","isEditFormShow","handleEditSubmit","closable","clearInterval","intervalId","onRef","val","_this$props$form","getFieldValue","dropdown","overlay","trigger","tabs","hideAdd","map","tab","forceRender","visible","onCancel","footer","labelCol","span","labelAlign","label","WrappedHeader","Home","typing","timer","setTimeout","clearTimeout","fontSize","formateDate","time","timeStamp","parseInt","moment","format","FormItem","NormalLoginForm","isNickModal","display","initialValue","TextArea","autosize","minRows","maxRows","WrappedNormalLoginForm","RangePicker","MyDatePicker","config_provider","locale","zh_CN","showTime","defaultValue","dateString","handleValue","GoldDetail","search","startTime","endTime","funds_type","GoldDetailRecord","initColumns","isBindInfo","dataIndex","sorter","b","total_balance","card","table","bordered","rowKey","dataSource","columns","Option","User","fixed","onCell","rowIndex","isNickShow","onDoubleClick","onContextMenu","onMouseEnter","target","cursor","onMouseLeave","game_gold","goldRecord","isGoldShow","render","regin_time","login_time","getGoldDetail","getMoreDetail","getLoadGold","text","index","getUsers","_ref","_result$data","game_user","proxy_user","proxy_nick","proxy_pid","count","changeNickName","refs","getFormValue","resetFields","loading","_x5","_x6","_ref4","_callee4","_context4","_x7","_ref5","_callee5","_context5","moreModal","destroy","t0","isGoldDetailShow","_x8","_x9","_ref6","_callee6","isAdd","_context6","_x10","_x11","resetPwd","isResetPwdShow","resetPwdId","handleResetpwd","_callee7","_context7","okText","popconfirm","onConfirm","cancelText","setCustomerAccount","_ref8","_callee8","_context8","_x12","pageSize","isBindInfoShow","_this$state","es_select","user_Option","ref","Input","extra","reload","pagination","defaultPageSize","showSizeChanger","showQuickJumper","showTotal","total","range","defaultCurrent","onShowSizeChange","current","scroll","x","y","user_nick","gold_details","e","AddDataForm","checkboxOnChange","checkedList","indeterminate","checkAll","onCheckAllChange","list","checked","setFieldsValue","isEdit","editDataRecord","refreshPage","cancel","isBan","group","split","Number","_this$props","optionList","es_radio","Group","es_checkbox","options","use_balance","WrappedAddDataForm","Admin_manage_list","wordWrap","wordBreak","align","edit","onSearchData","addData","isAddDataShow","isEditDataShow","_onOk","handleChange","bind","TreeNode","getTreeNodes","onSelect","node","expandedKeys","isLeaf","expanded","k","eventKey","onCheck","checkedKeys","onExpand","defaultCheckedKeys","treeData","tree","checkable","description","Role","role_addData","Diaodan","handleRecieveSubmit","Order_list","isQueryShow","download","word","replace_id","arrival_amount","created_at","arrival_at","isEditShow","editUser_id","editMount","editType","editRefused","float","editData","wrapperCol","nick_name","pay_type","min_amount","max_amount","span_amount","seed","rate","sort","Channel_list","addorEdit","card_name","bank_name","card_num","offset","Bankcard_list","delete","bankcard_list_addorEdit","Recharge_order","Recharge_channel","expandedRowRender","indent","childData","onExpandRow","keys","expandedRowKeys","recordId","handleEditData","expandRowByClick","getPackageList","arr","_id","$oid","package_ids","is_open","words","date_picker","Notice_list","onDelete","join","popover","overlayStyle","textOverflow","whiteSpace","overflow","notice_list_addorEdit","user_type","Customer_list","handleReset","create_time","update_time","customer_list_addorEdit","detailRecord","EditForm","sumbitOrderStatus","orderStatus","onclose","review","sumbitRemarkUser","remarkUser","sumbitRemarkOperator","remarkOperator","orderStatusShow","reviewShow","confirmButtonShow","submitRadio","successRadio","failRadio","submitRadioChecked","successRadioChecked","failRadioChecked","readOnly","disabled","React","Withdraw_list","getDetail","user_remark","t1","isDetailShow","details","lineNumbers","json","CodeEditor","_Component","inherits","createClass","conf_val","react_codemirror2","editor","WrappedEditForm","finished","myComponents_CodeEditor","Config","getInitialData","onSearch","onAdd","config_edit","data[id]","data[params]","data[status]","reason","Tasks","refuse","operator_nick","tasks_edit","pay_url","checkQrcode","AccountList","checkAccount","accountList_edit","checkDetail","okType","userRemarkInput","editComfirm","operatorRemarkInput","abrupt","applyHistory_edit","tradeOrder_edit","is_close","need_mobile","need_bankcard","order_by","editForm","check","receive_info","giftVoucher_editForm","dataPickerOnChange","editRecord","giftList_details","giftList_editForm","Channel","get_val","resData","_this$resData","give_info","version","WrappedChannel","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","minGold","maxGold","handleOk","onBlur","randNum","Range","Rand","Math","random","round","changeNickname","Daiti","Daiti_list_RangePicker","Daiti_list_details","Daiti_list_edit","initialData","_this$initialData","bankcard","channel","alipay","artificial","valuePropName","es_switch","checkedChildren","unCheckedChildren","divider","channel_name","NotFound","row","col","DateGameReport","MoreDetail","getGameReport","footerData","isGameReportShow","nextLevelData","reportData","dateGameReport","DailyReport","getDateReport","newRes","parseData","format_data","user","order","first_pay_user_number","first_pay_user","pay_user_number","pay_user","first_pay_user_number_res","first_pay_user_res","pay_user_number_res","pay_user_res","exchange_user_number","exchange_user","exchange_user_number_res","exchange_user_res","d","game","statement_ratio","abs","lose_statement_total","win_statement_total","toFixed","statement_total","code","parseDateData","parseGameData","reportTable","packageNode","diff","marginBottom","backgroundColor","border","DailyReport_details","pid","module","href","router_key","Rule","layout","ruleManage_edit","RuleManage","Sider","Content","createHashHistory","Admin","minHeight","components_left_nav","child1","components_header","margin","Provider","height","from","exact","component","KeepAlive","user_User","notice_list","customer_list","admin_manage_list","ruleManage","role","list_DailyReport","config","tasks","trade_accountList","applyHistory","tradeOrder","activity_activityList","recieve","giftVoucher","order_list","channel_list","bankcard_list","recharge_order","recharge_channel","withdraw_list","Daiti_list","withdraw_Channel","giftList","giftSetting","robot","defaultState","store","createStore","newState","App","es","USER","storageUtils","createBrowserHistory","listen","destroyAll","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.625a089e.chunk.js","sourcesContent":["/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\n//设置axios为form-data\r\n\r\nexport default function ajax(url, data = {}, type = \"GET\") {\r\n  // axios.interceptors.request.use((config) => {\r\n  //   if (['/user/login', '/user/register'].indexOf(config.url) === -1) {\r\n  //     const token = localStorage.getItem('token')\r\n  //     if (token) {\r\n  //       config.headers.Authorization = token\r\n  //     }\r\n  //   }\r\n  //   return config\r\n  // })\r\n  return new Promise((resolve, reject) => {\r\n    let promise;\r\n    // 1. 执行异步ajax请求\r\n    if (type === \"GET\") {\r\n      // 发GET请求\r\n      promise = axios.get(url, {\r\n        // 配置对象\r\n        params: data // 指定请求参数\r\n      });\r\n    } else {\r\n      // 发POST请求\r\n      axios.defaults.headers.post[\"Content-Type\"] =\r\n        \"application/x-www-form-urlencoded\";\r\n      axios.defaults.transformRequest = [\r\n        function(data) {\r\n          let ret = \"\";\r\n          for (let it in data) {\r\n            ret +=\r\n              encodeURIComponent(it) + \"=\" + encodeURIComponent(data[it]) + \"&\";\r\n          }\r\n          return ret;\r\n        }\r\n      ];\r\n      promise = axios.post(url, data);\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise\r\n      .then(response => {\r\n        resolve(response.data);\r\n        // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n      })\r\n      .catch(error => {\r\n        // reject(error)\r\n        message.error(\"请求出错了: \" + error.message);\r\n      });\r\n  });\r\n}","import ajax from \"./ajax\";\r\n//import storageUtils from \"../utils/storageUtils\";\r\n// import token from '../pages/login'\r\n//import memory from\r\n\r\nconst BASE = process.env.REACT_APP_HOST;\r\n\r\nvar token = localStorage.token || \"\";\r\n//登陆成功后赋值token\r\nexport const setToken = () => {\r\n  token = localStorage.token;\r\n};\r\n\r\n// 登陆\r\nexport const reqLogin = (username, password, authcode) =>\r\n  ajax(BASE + \"/login/login\", { username, password, authcode }, \"POST\");\r\n\r\n// 获取authCode\r\nexport const reqAuthCode = (username, password) =>\r\n  ajax(BASE + \"/login/authCode\", { username, password }, \"POST\");\r\n\r\n// 获取菜单\r\nexport const navList = () => {\r\n  const token = localStorage.token;\r\n  return ajax(BASE + \"/acl/navList\", { token }, \"POST\");\r\n};\r\n//安全码设置\r\nexport const getAuthCode = () =>\r\n  ajax(BASE + \"/index/getAuthCode\", { token }, \"POST\");\r\n//修改密码\r\nexport const editPass = password =>\r\n  ajax(BASE + \"/acl/editPass\", { token, password }, \"POST\");\r\n//用户列表\r\nexport const reqUsers = (page, limit, start, end, inputKey, inputValue) => {\r\n  return ajax(\r\n    BASE + \"/user/index\",\r\n    { page, limit, start, end, [inputKey]: inputValue, token },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const setGameUserNickName = (id, game_nick) =>\r\n  ajax(BASE + \"/user/setGameUserNickName\", { token, id, game_nick }, \"POST\");\r\nexport const changeGold = (record, value) => {\r\n  let obj = {};\r\n  let str = \"params[user_id]\";\r\n  obj[str] = record.id;\r\n  str = \"params[amount]\";\r\n  obj[str] = value.gold;\r\n  str = \"params[reason]\";\r\n  obj[str] = value.desc;\r\n  str = \"params[user_name]\";\r\n  obj[str] = record.game_nick;\r\n  str = \"params[proxy_user_id]\";\r\n  obj[str] = record.proxy_user_id;\r\n  str = \"params[package_id]\";\r\n  obj[str] = record.package_id;\r\n  return ajax(\r\n    BASE + \"/user/changeGold\",\r\n    { token, task_type: 0, ...obj },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const reqLoadGold = id => {\r\n  return ajax(\r\n    BASE + \"/user/getGameUser\",\r\n    {\r\n      page: 1,\r\n      limit: 10,\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const userDetail = (page, limit, id, goldDetails) => {\r\n  return ajax(\r\n    BASE + \"/user/userDetail\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      id,\r\n      ...goldDetails\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const bindInfo = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/user/bindInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      user_id: id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveUserBlack = (user_id, action) => {\r\n  return ajax(\r\n    BASE + \"/trade/saveUserBlack\",\r\n    {\r\n      token,\r\n      type: 1,\r\n      user_id,\r\n      action\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const createTask = (user_id, resetpwd) => {\r\n  return ajax(\r\n    BASE + \"/tasks/createTask\",\r\n    {\r\n      token,\r\n      task_type: 2,\r\n      \"params[id]\": user_id,\r\n      \"params[account_pass]\": resetpwd\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const setCustomer = id => {\r\n  return ajax(\r\n    BASE + \"/user/setCustomer \",\r\n    {\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//后台管理-账户列表\r\nexport const reqAdminList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/acl/index\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const searchAdminData = name => {\r\n  return ajax(\r\n    BASE + \"/acl/index\",\r\n    {\r\n      page: 1,\r\n      limit: 20,\r\n      token,\r\n      name\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const roleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/roleList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const packageList = () => {\r\n  return ajax(\r\n    BASE + \"/user/packageList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addUser = formValue => {\r\n  let obj = {};\r\n  formValue.packageList.forEach(element => {\r\n    let str = \"group[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    username: formValue.username,\r\n    status: formValue.userStatus,\r\n    group_id: formValue.userGroup,\r\n    source: formValue.proxy ? formValue.proxy : [],\r\n    ...obj,\r\n    use_money: formValue.loadGold,\r\n    pass: formValue.password,\r\n    repass: formValue.confirmPssword,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/addUser\", newobj, \"POST\");\r\n};\r\nexport const editUser = (formValue, id) => {\r\n  let obj = {};\r\n  formValue.packageList.forEach(element => {\r\n    let str = \"group[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    id,\r\n    username: formValue.username,\r\n    status: formValue.userStatus,\r\n    group_id: formValue.userGroup,\r\n    source: formValue.proxy ? formValue.proxy : [],\r\n    ...obj,\r\n    use_money: formValue.loadGold,\r\n    pass: formValue.password ? formValue.password : [],\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/editUser\", newobj, \"POST\");\r\n};\r\nexport const resetAuthCode = id => {\r\n  return ajax(\r\n    BASE + \"/acl/resetAuthCode\",\r\n    {\r\n      id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//后台管理-权限列表\r\nexport const ruleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/ruleList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addRule = value => {\r\n  return ajax(\r\n    BASE + \"/acl/addRule\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const editRule = (rule_id, value) => {\r\n  console.log(value);\r\n\r\n  return ajax(BASE + \"/acl/editRule\", { ...value, rule_id, token }, \"POST\");\r\n};\r\nexport const ruleDel = id => {\r\n  return ajax(\r\n    BASE + \"/acl/ruleDel\",\r\n    {\r\n      id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//后台管理-角色管理\r\nexport const getRoleList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/acl/roleList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const getRuleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/ruleList\",\r\n    {\r\n      page: 1,\r\n      limit: 10,\r\n      token,\r\n      flag: 1\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const addRole = (name, rules, desc) => {\r\n  let obj = {};\r\n  rules.forEach(element => {\r\n    let str = \"rules[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    name,\r\n    ...obj,\r\n    desc,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/addRole\", newobj, \"POST\");\r\n};\r\nexport const editRole = (name, rules, desc, id) => {\r\n  let obj = {};\r\n  rules.forEach(element => {\r\n    let str = \"rules[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    role_name: name,\r\n    role_id: id,\r\n    ...obj,\r\n    desc,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/editRole\", newobj, \"POST\");\r\n};\r\n//客服-公告设置\r\nexport const getList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/notice/getList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addNotice = formData => {\r\n  return ajax(\r\n    BASE + \"/notice/addNotice\",\r\n    {\r\n      token,\r\n      ...formData\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const updateNotice = (formData, id) => {\r\n  return ajax(\r\n    BASE + \"/notice/updateNotice\",\r\n    {\r\n      token,\r\n      id,\r\n      ...formData\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const delNotice = id => {\r\n  return ajax(\r\n    BASE + \"/notice/delNotice\",\r\n    {\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//客服-代充账号\r\nexport const customerList = (page, limit, user_id) => {\r\n  return ajax(\r\n    BASE + \"/customer/customerList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      user_id: user_id ? user_id : \"\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveCustomerService = (formData, action, user_id) => {\r\n  if (user_id) {\r\n    formData.user_id = user_id;\r\n  }\r\n  return ajax(\r\n    BASE + \"/customer/saveCustomerService\",\r\n    {\r\n      token,\r\n      ...formData,\r\n      action\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//报表-日常运营\r\nexport const dailyReportInit = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/report/dailyReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const dailyReport = (page, limit, package_id, start = \"\", end = \"\") => {\r\n  return ajax(\r\n    BASE + \"/report/dailyReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      start,\r\n      end\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const dateReport = (page, limit, package_id, start = \"\", end = \"\") => {\r\n  return ajax(\r\n    BASE + \"/report/dateReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      start,\r\n      end,\r\n      group_by: \"date\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const gameReport = (page, limit, package_id, start = \"\", end = \"\") => {\r\n  return ajax(\r\n    BASE + \"/report/gameReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      start,\r\n      end,\r\n      group_by: \"game_id\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const oneDayGameReport = (page, limit, package_id, date) => {\r\n  return ajax(\r\n    BASE + \"/report/gameReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      date,\r\n      group_by: \"game_id\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//游戏设置-配置项\r\nexport const configList = (page, limit, conf_key) => {\r\n  return ajax(\r\n    BASE + \"/config/list\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      conf_key: conf_key ? conf_key : \"\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveConf = (value, action) => {\r\n  return ajax(\r\n    BASE + \"/config/saveConf\",\r\n    {\r\n      ...value,\r\n      action,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//消息中心-任务列表\r\nexport const tasksList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/tasks/tasksList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const changeUserBalance = value => {\r\n  return ajax(\r\n    BASE + \"/tasks/changeUserBalance\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const reviewTask = value => {\r\n  return ajax(\r\n    BASE + \"/tasks/reviewTask\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//交易所-收付款管理\r\nexport const allAccountList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/trade/allAccountList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const resetPassword = user_id => {\r\n  return ajax(\r\n    BASE + \"/trade/resetPassword\",\r\n    {\r\n      user_id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const accountList = user_id => {\r\n  return ajax(BASE + \"/trade/accountList\", { user_id, token }, \"POST\");\r\n};\r\n\r\n//交易所-申请上架历史\r\nexport const sellGoldApplyList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/trade/sellGoldApplyList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const tradeRemark = value => {\r\n  return ajax(\r\n    BASE + \"/trade/tradeRemark\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const sellGoldInfoList = (page, limit, user_id) => {\r\n  return ajax(\r\n    BASE + \"/order/sellGoldInfoList\",\r\n    {\r\n      page,\r\n      limit,\r\n      user_id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const reviewInfo2 = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/reviewInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      id,\r\n      type: 3,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const remarkInfo2 = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/remarkInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      id,\r\n      type: 6,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//交易所-交易订单\r\nexport const sellGoldOrderList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/trade/sellGoldOrderList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//活动-活动列表\r\nexport const activityConfigList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/activity/activityConfigList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveActivityConfig = value => {\r\n  return ajax(\r\n    BASE + \"/activity/saveActivityConfig\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const delActivityConfig = id => {\r\n  return ajax(\r\n    BASE + \"/activity/delActivityConfig\",\r\n    {\r\n      id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\n//活动-礼金券领取列表\r\nexport const giftVoucherList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/activity/giftVoucherList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//活动-活动领取列表\r\nexport const activityList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/activity/activityList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-充值订单\r\nexport const reqOrder_list = (\r\n  page,\r\n  limit,\r\n  start_time,\r\n  end_time,\r\n  order_status,\r\n  type,\r\n  inputKey,\r\n  inputValue\r\n) => {\r\n  if (inputKey === \"1\" || inputKey === \"2\") {\r\n    inputValue = inputKey;\r\n    inputKey = \"time_type\";\r\n  }\r\n  return ajax(\r\n    BASE + \"/order/recharge\",\r\n    { start_time, end_time, order_status, type, token, [inputKey]: inputValue },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const reqLostOrder_list = (page, limit, user_id, order_id) => {\r\n  return ajax(\r\n    BASE + \"/order/recharge\",\r\n    { page, limit, order_id, user_id, token },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const orderReview = (user_id, order_id) => {\r\n  return ajax(\r\n    BASE + \"/order/orderReview\",\r\n    { user_id, order_id, status: 7, review_type: 1, token },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const orderReviewEdit = (user_id, order_id, type) => {\r\n  return ajax(\r\n    BASE + \"/order/orderReview\",\r\n    { user_id, order_id, status: 8, review_type: 2, token, type },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const downloadList = searchData => {\r\n  let {\r\n    start_time,\r\n    end_time,\r\n    order_status,\r\n    type,\r\n    inputParam,\r\n    paramKey\r\n  } = searchData;\r\n  if (!paramKey || paramKey === \"\") {\r\n    paramKey = 0;\r\n  }\r\n  let params =\r\n    \"token=\" +\r\n    token +\r\n    \"&filed=\" +\r\n    paramKey +\r\n    \"&keyword=\" +\r\n    inputParam +\r\n    \"&start_time=\" +\r\n    start_time +\r\n    \"&end_time=\" +\r\n    end_time +\r\n    \"&order_status=\" +\r\n    order_status +\r\n    \"&type=\" +\r\n    type;\r\n  let url = BASE + \"/order/recharge/?export=2&\" + params;\r\n  if (paramKey) {\r\n    switch (paramKey) {\r\n      case \"user_id\":\r\n        url = url + \"&user_id=\" + inputParam;\r\n        break;\r\n      case \"order_id\":\r\n        url = url + \"&order_id=\" + inputParam;\r\n        break;\r\n      case \"create_time\":\r\n        url = url + \"&time_type=1\";\r\n        break;\r\n      case \"arrival_time\":\r\n        url = url + \"&time_type=2\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  window.open(url);\r\n};\r\nexport const getChannelList = (page, limit, name) => {\r\n  return ajax(\r\n    BASE + \"/order/channelList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      name: name ? name : \"\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addChannel = value => {\r\n  return ajax(\r\n    BASE + \"/order/addChannel\",\r\n    {\r\n      ...value,\r\n      token,\r\n      action: \"add\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const editPayChannel = (value, id) => {\r\n  return ajax(\r\n    BASE + \"/order/editPayChannel\",\r\n    {\r\n      ...value,\r\n      token,\r\n      id,\r\n      action: \"edit\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-古都银行卡\r\nexport const bankList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/order/bankList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const saveBankCard = (searchData, id) => {\r\n  if (id) {\r\n    searchData.id = id;\r\n  }\r\n  return ajax(\r\n    BASE + \"/order/saveBankCard\",\r\n    {\r\n      ...searchData,\r\n      action: id ? \"edit\" : \"add\",\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const deleteBankCard = id => {\r\n  return ajax(\r\n    BASE + \"/order/saveBankCard\",\r\n    {\r\n      id,\r\n      action: \"del\",\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-代充订单\r\nexport const rechargeOrder = (\r\n  page,\r\n  limit,\r\n  start_time,\r\n  end_time,\r\n  order_status,\r\n  inputKey,\r\n  inputValue\r\n) => {\r\n  return ajax(\r\n    BASE + \"/order/rechargeOrder\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      type: 14,\r\n      start_time,\r\n      end_time,\r\n      order_status,\r\n      [inputKey]: inputValue\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-渠道配置\r\nexport const getChannel = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/order/getChannel\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const getChannelInfo = channel_id => {\r\n  return ajax(\r\n    BASE + \"/order/getChannelInfo\",\r\n    {\r\n      page: 1,\r\n      limit: 20,\r\n      token,\r\n      channel_id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const editChannelInfo = (id, pay_code) => {\r\n  return ajax(\r\n    BASE + \"/order/editChannelInfo\",\r\n    {\r\n      id,\r\n      token,\r\n      pay_code\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//兑换-兑换订单&代提设置\r\nexport const withDraw = (page, limit, flag, searchData) => {\r\n  if (searchData) {\r\n    let {\r\n      start_time,\r\n      end_time,\r\n      order_status,\r\n      type,\r\n      inputParam,\r\n      filed\r\n    } = searchData;\r\n    //处理输入关键字和选择关键字，组合成传输参数\r\n    let obj = {};\r\n    if (filed !== \"create_time\" && filed !== \"arrival_time\") {\r\n      obj[filed] = inputParam;\r\n    } else if (filed !== \"create_time\") {\r\n      obj.time_type = 1;\r\n    } else if (filed !== \"arrival_time\") {\r\n      obj.time_type = 2;\r\n    }\r\n    return ajax(\r\n      BASE + \"/order/withDraw\",\r\n      {\r\n        page,\r\n        limit,\r\n        token,\r\n        start_time,\r\n        end_time,\r\n        order_status,\r\n        type,\r\n        ...obj,\r\n        flag\r\n      },\r\n      \"POST\"\r\n    );\r\n  } else {\r\n    return ajax(\r\n      BASE + \"/order/withDraw\",\r\n      {\r\n        page,\r\n        limit,\r\n        token,\r\n        flag\r\n      },\r\n      \"POST\"\r\n    );\r\n  }\r\n};\r\nexport const reviewInfo = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/reviewInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      id,\r\n      type: 2\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const remarkInfo = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/remarkInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      id,\r\n      type: 2\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const downloadWithdrawList = searchData => {\r\n  let {\r\n    start_time,\r\n    end_time,\r\n    order_status,\r\n    type,\r\n    inputParam,\r\n    filed\r\n  } = searchData;\r\n  let params =\r\n    \"token=\" +\r\n    token +\r\n    \"&filed=\" +\r\n    filed +\r\n    \"&keyword=\" +\r\n    inputParam +\r\n    \"&start_time=\" +\r\n    start_time +\r\n    \"&end_time=\" +\r\n    end_time +\r\n    \"&order_status=\" +\r\n    order_status +\r\n    \"&type=\" +\r\n    type;\r\n  let url = BASE + \"/order/withDraw/?export=2&flag=2&\" + params;\r\n  if (filed) {\r\n    switch (filed) {\r\n      case \"user_id\":\r\n        url = url + \"&user_id=\" + inputParam;\r\n        break;\r\n      case \"order_id\":\r\n        url = url + \"&order_id=\" + inputParam;\r\n        break;\r\n      case \"create_time\":\r\n        url = url + \"&time_type=1\";\r\n        break;\r\n      case \"arrival_time\":\r\n        url = url + \"&time_type=2\";\r\n        break;\r\n      case \"replace_id\":\r\n        url = url + \"&replace_id=\" + inputParam;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  window.open(url);\r\n};\r\nexport const withDrawRemark = (id, temarks, remark_type) => {\r\n  return ajax(\r\n    BASE + \"/order/withDrawRemark\",\r\n    {\r\n      token,\r\n      id,\r\n      temarks,\r\n      remark_type,\r\n      type: 2\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const auditOrder = reqData => {\r\n  return ajax(\r\n    BASE + \"/order/withDraw\",\r\n    {\r\n      ...reqData,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const orderWithDrawReview = reqData => {\r\n  return ajax(\r\n    BASE + \"/order/withDrawReview\",\r\n    {\r\n      ...reqData,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\n//兑换-第三方提款设置\r\nexport const getConfigList = reqData => {\r\n  return ajax(\r\n    BASE + \"/config/list\",\r\n    {\r\n      ...reqData,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveWithDrawChannel = (id, name, value) => {\r\n  return ajax(\r\n    BASE + \"/config/saveWithDrawChannel\",\r\n    {\r\n      id,\r\n      name,\r\n      ...value,\r\n      \"alipay[name]\": \"支付宝\",\r\n      \"alipay[withdraw_type]\": 1,\r\n      \"bankcard[name]\": \"银行卡\",\r\n      \"bankcard[withdraw_type]\": 2,\r\n      conf_key: \"withdraw_channel_info\",\r\n      action: \"edit\",\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//赠送-赠送订单\r\nexport const withDrawReview = (order_id, user_id, review_status) => {\r\n  return ajax(\r\n    BASE + \"/order/withDraw\",\r\n    {\r\n      token,\r\n      order_id,\r\n      review_status,\r\n      user_id,\r\n      review_type: 1,\r\n      is_pass: 1\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const setGiftConfig = reqData => {\r\n  return ajax(\r\n    BASE + \"/config/setGiftConfig\",\r\n    {\r\n      ...reqData,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//AI\r\nexport const getAIList = (page, limit, package_id, value) => {\r\n  return ajax(\r\n    BASE + \"/user/index\",\r\n    {\r\n      page,\r\n      limit,\r\n      package_id,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const changeInternalUserBalance = (user_id, amount) => {\r\n  return ajax(\r\n    BASE + \"/user/changeInternalUserBalance\",\r\n    {\r\n      user_id,\r\n      amount,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Icon, Input, Button, Modal, message } from \"antd\";\r\nimport \"./login.less\";\r\nimport { reqLogin, reqAuthCode, navList, setToken } from \"../../api\";\r\n\r\nconst Item = Form.Item;\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n    if (result.status === 0) {\r\n      let { data } = result;\r\n      data.forEach(element => {\r\n        if (element.children) {\r\n          element.children.forEach(item => {\r\n            item.title = item.title.slice(24);\r\n          });\r\n        }\r\n      });\r\n      localStorage.menuList = JSON.stringify(data);\r\n      // 跳转到管理界面 (不需要再回退回到登陆)\r\n      this.props.history.replace(\"/\");\r\n\r\n      // setTimeout(() => this.props.history.replace(\"/\"), 300);\r\n    }\r\n  };\r\n  handleSubmit = event => {\r\n    // 阻止事件的默认行为\r\n    event.preventDefault();\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // 请求登陆\r\n        const { username, password, authcode } = values;\r\n        const result = await reqLogin(username, password, authcode);\r\n\r\n        if (result.status === 0) {\r\n          // 登陆成功\r\n          message.success(\"登陆成功\");\r\n          localStorage.token = result.data.token;\r\n          localStorage.name = result.data.name;\r\n          localStorage.tokenTimeStamp = new Date().getTime();\r\n          setToken();\r\n          this.getMenuList();\r\n        } else {\r\n          // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"检验失败!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // 请求登陆\r\n        const { username, password } = values;\r\n        const result = await reqAuthCode(username, password);\r\n        // console.log(\"请求成功\", result);\r\n        if (result.status === 0 && result.data) {\r\n          // 登陆成功\r\n          Modal.info({\r\n            title: \"首次登录扫码获取验证码\",\r\n            content: (\r\n              <div>\r\n                <img src={result.data.qrurl} alt=\"验证码\" />\r\n              </div>\r\n            )\r\n          });\r\n        } else {\r\n          // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"检验失败!\");\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  };\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    console.log(\"validatePwd()\", rule, value);\r\n    if (!value) {\r\n      callback(\"密码必须输入\");\r\n    } else if (value.length < 4) {\r\n      callback(\"密码长度不能小于4位\");\r\n    } else if (value.length > 12) {\r\n      callback(\"密码长度不能大于12位\");\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback(\"密码必须是英文、数字或下划线组成\");\r\n    } else {\r\n      callback(); // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  };\r\n\r\n  render() {\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const token = localStorage.token;\r\n    if (token) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form;\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <h1>QGame: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {/*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */}\r\n              {getFieldDecorator(\"username\", {\r\n                // 配置对象: 属性名是特定的一些名称\r\n                // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"用户名必须输入\"\r\n                  },\r\n                  { min: 3, message: \"用户名至少3位\" },\r\n                  { max: 12, message: \"用户名最多12位\" },\r\n                  {\r\n                    pattern: /^[a-zA-Z0-9_]+$/,\r\n                    message: \"用户名必须是英文、数字或下划线组成\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"用户名\"\r\n                />\r\n              )}\r\n            </Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  {\r\n                    validator: this.validatePwd\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"authcode\", {\r\n                rules: [\r\n                  //{ required: true, whitespace: true, message: '验证码必须输入' },\r\n                  //{ min: 4, message: '验证码至少4位' }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"qrcode\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"验证码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <span style={{ marginTop: 5 }} onClick={this.handleClick}>\r\n              首次登录，手机下载Google Authenticator\r\n              安装，点击此处扫码获取验证码\r\n            </span>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst WrapLogin = Form.create()(Login);\r\nexport default WrapLogin;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu, message } from \"antd\";\r\nimport { navList } from \"../../api\";\r\nimport \"./index.less\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n// 左侧导航的组件\r\nclass LeftNav extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { data: [], openKey: \"\" };\r\n  }\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n\r\n    if (result.status === 0) {\r\n      //登陆成功\r\n      this.setState({\r\n        data: result.data\r\n      });\r\n    } else {\r\n      // 提示错误信息\r\n      message.error(result.msg);\r\n    }\r\n  };\r\n  /*\r\n   获取左侧菜单导航栏\r\n    */\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data\r\n      });\r\n    } else {\r\n      message.error(\"网络问题，请重新登陆\");\r\n    }\r\n  };\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = menuList => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname;\r\n    return menuList.reduce((pre, item) => {\r\n      // 向pre添加<Menu.Item>\r\n      // if (item.key) {\r\n        //按需渲染侧边栏，必须已经在后台-权限管理中设置了路由key才能渲染\r\n        if (!item.children) {\r\n          pre.push(\r\n            <Menu.Item\r\n              key={item.key}\r\n              onClick={() => {\r\n                this.props.onClick(item);\r\n                this.openMenu = item.key;\r\n              }}\r\n            >\r\n              <Link to={item.key}>\r\n                {/* <Icon type={item.icon} /> */}\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(\r\n            currentValue => path.indexOf(currentValue.key) === 0\r\n          );\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key;\r\n            // this.setState({ openKey: item.key });\r\n          }\r\n          pre.push(\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n              onClick={() => {\r\n                this.openMenu = item.key;\r\n                // console.log(this.openMenu);\r\n              }}\r\n            >\r\n              {item.children.reduce((cpre, ele) => {\r\n                cpre.push(\r\n                  <Menu.Item\r\n                    key={ele.key}\r\n                    onClick={() => {\r\n                      this.props.onClick(ele);\r\n                    }}\r\n                  >\r\n                    <Link to={ele.key}>\r\n                      <span>{ele.title}</span>\r\n                    </Link>\r\n                  </Menu.Item>\r\n                );\r\n                return cpre;\r\n              }, [])}\r\n            </SubMenu>\r\n          );\r\n        }\r\n      // }\r\n      return pre;\r\n    }, []);\r\n  };\r\n  componentDidMount() {\r\n    this.setState({openKey:this.openKey})\r\n  }\r\n  render() {\r\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n    const menuNodes = this.getMenuNodes(menuList);\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname;\r\n    // 得到需要打开菜单项的key\r\n    // const openKey = this.openKey;\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link\r\n          to=\"/\"\r\n          className=\"left-nav-header\"\r\n          style={{ justifyContent: \"center\" }}\r\n        >\r\n          <h1>QGame后台管理</h1>\r\n        </Link>\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          // defaultOpenKeys={[this.openKey]}\r\n          onOpenChange={key => {\r\n            console.log(key);\r\n            if (key[1] && key[0] !== key[1]) {\r\n              this.setState({ openKey: key[1] });\r\n            } else {\r\n              this.setState({ openKey: null });\r\n            }\r\n          }}\r\n          openKeys={[this.state.openKey]}\r\n        >\r\n          {menuNodes}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default withRouter(LeftNav);\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nexport default function LinkButton(props) {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      size='small'\r\n      style={{ marginRight: 10}}\r\n      {...props}\r\n    ></Button>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n// import { browserHistory } from \"react-router\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {\r\n  Modal,\r\n  Tabs,\r\n  Dropdown,\r\n  Menu,\r\n  Icon,\r\n  Button,\r\n  message,\r\n  Input,\r\n  Form\r\n} from \"antd\";\r\n\r\nimport LinkButton from \"../link-button\";\r\n// import memoryUtils from \"../../utils/memoryUtils\";\r\n// import storageUtils from \"../../utils/storageUtils\";\r\nimport { getAuthCode, editPass } from \"../../api\";\r\nimport QRCode from \"qrcode.react\";\r\nimport \"./index.less\";\r\nconst { TabPane } = Tabs;\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.newTabIndex = 0;\r\n    const panes = [\r\n      {\r\n        title: \"首页\",\r\n        content: \"Content of Tab 1\",\r\n        key: \"1\",\r\n        closable: false,\r\n        path: \"/home\"\r\n      }\r\n    ];\r\n    this.state = {\r\n      activeKey: panes[0].key,\r\n      panes,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  onChange = activeKey => {\r\n    this.setState({ activeKey });\r\n  };\r\n\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  };\r\n\r\n  add = tabConfig => {\r\n    // console.log(\"tabConfig\", tabConfig);\r\n    const { panes } = this.state;\r\n    let isTabExist = false;\r\n    let oldKey;\r\n    panes.forEach(item => {\r\n      if (item.title === tabConfig.title) {\r\n        isTabExist = true;\r\n        oldKey = item.key;\r\n      }\r\n    });\r\n    if (isTabExist) {\r\n      this.onChange(oldKey);\r\n    } else {\r\n      const activeKey = `newTab${this.newTabIndex++}`;\r\n      panes.push({\r\n        title: tabConfig.title,\r\n        content: \"Content of new Tab\",\r\n        key: activeKey,\r\n        path: tabConfig.key\r\n      });\r\n      this.onChange(activeKey);\r\n      this.setState({ panes, activeKey });\r\n    }\r\n  };\r\n\r\n  remove = targetKey => {\r\n    let { activeKey } = this.state;\r\n    let lastIndex;\r\n    this.state.panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n    if (panes.length && activeKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        activeKey = panes[lastIndex].key;\r\n        // browserHistory.push(panes[lastIndex].path);\r\n        this.props.history.push(panes[lastIndex].path);\r\n      } else {\r\n        activeKey = panes[0].key;\r\n      }\r\n    }\r\n    this.setState({ panes, activeKey });\r\n  };\r\n\r\n  //退出LOG OUT\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: \"确定退出吗?\",\r\n      onOk: () => {\r\n        console.log(\"OK\", this);\r\n        // 删除保存的user数据\r\n        // storageUtils.removeUser();\r\n        // memoryUtils.user = {};\r\n        // localStorage={}\r\n        localStorage.removeItem(\"menuList\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"name\");\r\n        localStorage.removeItem(\"tokenTimeStamp\");\r\n        // 跳转到login\r\n        this.props.history.replace(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId);\r\n  }\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this);\r\n    let data = this.state;\r\n    const path = this.props.location.pathname;\r\n    let title;\r\n    if (path !== \"/home\" && path !== \"/\") {\r\n      const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n      menuList.forEach(item => {\r\n        if (!item.children && item.key === path) {\r\n          title = item.title;\r\n        } else if (item.children) {\r\n          item.children.forEach(val => {\r\n            if (val.key === path) {\r\n              title = val.title;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      data.activeKey = \"2\";\r\n      data.panes.push({\r\n        title: title,\r\n        key: \"2\",\r\n        path: path\r\n      });\r\n      this.setState({\r\n        ...data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = localStorage.getItem(\"name\");\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <Dropdown\r\n            overlay={\r\n              <Menu>\r\n                <Menu.Item key=\"0\">\r\n                  <Button type=\"link\" onClick={this.authCode}>\r\n                    安全码设置\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"1\">\r\n                  <Button type=\"link\" onClick={this.resetPWD}>\r\n                    修改密码\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu>\r\n            }\r\n            trigger={[\"click\"]}\r\n          >\r\n            <Button type=\"link\">\r\n              {username} <Icon type=\"down\" />\r\n            </Button>\r\n          </Dropdown>\r\n          <LinkButton onClick={this.logout} size=\"default\">\r\n            退出\r\n          </LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          {/* <div className=\"header-bottom-left\">{title}</div> */}\r\n          <Tabs\r\n            onChange={this.onChange}\r\n            activeKey={this.state.activeKey}\r\n            type=\"editable-card\"\r\n            onEdit={this.onEdit}\r\n            hideAdd\r\n          >\r\n            {this.state.panes.map(pane => (\r\n              <TabPane\r\n                tab={<Link to={pane.path}>{pane.title}</Link>}\r\n                key={pane.key}\r\n                closable={pane.closable}\r\n                forceRender\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </div>\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <Form\r\n              labelCol={{ span: 6 }}\r\n              labelAlign=\"left\"\r\n              onSubmit={this.handleEditSubmit}\r\n            >\r\n              <Form.Item label=\"新密码\">\r\n                {getFieldDecorator(\"editPass\", {\r\n                  rules: [\r\n                    { required: true, message: \"密码不能为空\" },\r\n                    { whitespace: true },\r\n                    { min: 6, message: \"密码至少6位\" },\r\n                    { max: 16, message: \"密码最多16位\" }\r\n                    // {\r\n                    //   pattern: /^[a-zA-Z0-9_]+$/,\r\n                    //   message: \"用户名必须是英文、数字或下划线组成\"\r\n                    // }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    style={{ width: \"40%\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"6到16个字符\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"重复密码\">\r\n                {getFieldDecorator(\"repeat\", {\r\n                  rules: [\r\n                    { required: true },\r\n                    {\r\n                      validator: (rule, value, callback) => {\r\n                        if (!value) {\r\n                          callback(); //如果还没填写，则不进行一致性验证\r\n                        }\r\n                        if (value === getFieldValue(\"editPass\")) {\r\n                          callback();\r\n                        } else {\r\n                          callback(\"两次密码不一致\");\r\n                        }\r\n                      }\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    style={{ width: \"40%\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"6到16个字符\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  提交\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  authCode = async () => {\r\n    const res = await getAuthCode();\r\n    if (res.status === 0) {\r\n      Modal.info({\r\n        title: \"扫码获取验证码\",\r\n        content: <QRCode value={res.data.qrurl}></QRCode>,\r\n        width: 300\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  resetPWD = () => {\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        const res = await editPass(value.editPass);\r\n        if (res.status === 0) {\r\n          message.success(res.msg);\r\n        } else {\r\n          message.error(res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\nconst WrappedHeader = Form.create()(Header);\r\nexport default withRouter(WrappedHeader);\r\n","import React, { Component } from \"react\";\r\n// import ElasticText from \"../../components/elasticText\";\r\n// import { Icon} from \"antd\";\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      res: \"\"\r\n    };\r\n    this.i = 0;\r\n    this.timer = 0;\r\n    this.str = \"欢迎您来到QGame后台管理系统\";\r\n  }\r\n  typing = () => {\r\n    if (this.i <= this.str.length) {\r\n      this.setState(\r\n        {\r\n          res: this.str.slice(0, this.i++) + \"__\"\r\n        },\r\n        () => {\r\n          this.timer = setTimeout(() => this.typing(), 200);\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        res: this.str\r\n      });\r\n      clearTimeout(this.timer);\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.typing();\r\n  }\r\n  render() {\r\n    return <span style={{ fontSize: \"20px\" }}>{this.state.res}</span>;\r\n    // <ElasticText></ElasticText>\r\n  }\r\n}\r\n","import moment from \"moment\";\r\n/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return \"\";\r\n  let timeStamp = parseInt(time);\r\n  if (timeStamp === 0) return \"\";\r\n  return moment(timeStamp * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\r\n  // let date = new Date(time * 1000);\r\n  // return (\r\n  //   date.getFullYear() +\r\n  //   \"-\" +\r\n  //   (date.getMonth() + 1) +\r\n  //   \"-\" +\r\n  //   date.getDate() +\r\n  //   \" \" +\r\n  //   date.getHours() +\r\n  //   \":\" +\r\n  //   date.getMinutes() +\r\n  //   \":\" +\r\n  //   date.getSeconds()\r\n  // );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nclass NormalLoginForm extends Component {\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { isNickModal } = this.props;\r\n    return (\r\n      <Form className=\"login-form\">\r\n        <FormItem style={isNickModal ? {} : { display: \"none\" }}>\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: isNickModal,\r\n                message: \"Please input your username!\"\r\n              }\r\n            ],\r\n            initialValue: this.props.val\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"请输入昵称\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n        <FormItem label=\"金额\" style={isNickModal ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"gold\", {\r\n            rules: [\r\n              {\r\n                required: !isNickModal,\r\n                whitespace: true,\r\n                pattern: /^\\d+(\\.\\d+)?$/,\r\n                message: \"必须为数字，减少时金额为负\"\r\n              }\r\n            ],\r\n          })(<Input placeholder=\"必须为数字，减少时金额为负\" />)}\r\n        </FormItem>\r\n        <FormItem label=\"备注\" style={isNickModal ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"desc\", {\r\n            rules: [\r\n              { max: 400, message: \"最多400字\" },\r\n              {\r\n                required: !isNickModal\r\n              }\r\n            ]\r\n          })(\r\n            <Input.TextArea\r\n              placeholder=\"请输入文字\"\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n            />\r\n          )}\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n\r\nexport default WrappedNormalLoginForm;\r\n","import React from \"react\";\r\nimport { DatePicker, ConfigProvider } from \"antd\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\nimport \"moment/locale/zh-cn\";\r\nimport moment from \"moment\";\r\nconst { RangePicker } = DatePicker;\r\nexport default function MyDatePicker(props) {\r\n  return (\r\n    <ConfigProvider locale={zh_CN}>\r\n      <RangePicker\r\n        // defaultValue={[moment().locale(\"zh-cn\")]}\r\n        style={{ width: 300 }}\r\n        showTime={{\r\n          format: \"HH:mm\",\r\n          defaultValue: [\r\n            moment(\"00:00\", \"HH:mm\"),\r\n            moment(\"00:00\", \"HH:mm\")\r\n          ]\r\n        }}\r\n        format=\"YYYY-MM-DD HH:mm:00\"\r\n        placeholder={[\"开始日期\", \"结束日期\"]}\r\n        onChange={(data, dateString) => {\r\n          props.handleValue(dateString);\r\n        }}\r\n        // disabledDate={disabledDate}\r\n        // disabledTime={disabledRangeTime}\r\n        {...props}\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table, Card, Icon } from \"antd\";\r\nimport MyDatePicker from \"../../components/MyDatePicker\";\r\nimport LinkButton from \"../../components/link-button/index\";\r\nimport { userDetail } from \"../../api/index\";\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      data: this.props.GoldDetailRecord.data\r\n    });\r\n  }\r\n  search = async () => {\r\n    let goldDetails = {\r\n      start: this.startTime ? this.startTime : \"\",\r\n      end: this.endTime ? this.endTime : \"\",\r\n      funds_type: 0\r\n    };\r\n    const res = await userDetail(\r\n      1,\r\n      100,\r\n      this.props.GoldDetailRecord.id,\r\n      goldDetails\r\n    );\r\n    this.setState({ data: res.data });\r\n  };\r\n  render() {\r\n    // const { data } = this.props.GoldDetailRecord;\r\n    let title;\r\n    if (!this.props.isBindInfo) {\r\n      title = (\r\n        <span>\r\n          <MyDatePicker\r\n            handleValue={val => {\r\n              this.startTime = val[0];\r\n              this.endTime = val[1];\r\n            }}\r\n          />\r\n          &nbsp; &nbsp;\r\n          <LinkButton onClick={this.search} size=\"default\">\r\n            <Icon type=\"search\" />\r\n          </LinkButton>\r\n        </span>\r\n      );\r\n    }\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.isBindInfo) {\r\n      return [\r\n        {\r\n          title: \"支付宝账号\",\r\n          dataIndex: \"alipay_account\"\r\n        },\r\n        {\r\n          title: \"绑定支付宝时间\",\r\n          dataIndex: \"bind_alipay_at\"\r\n        },\r\n\r\n        {\r\n          title: \"开户人姓名\",\r\n          dataIndex: \"card_name\"\r\n        },\r\n        {\r\n          title: \"银行名称\",\r\n          dataIndex: \"bank_name\"\r\n        },\r\n        {\r\n          title: \"银行卡号\",\r\n          dataIndex: \"bank_num\"\r\n        },\r\n        {\r\n          title: \"绑定银行卡时间\",\r\n          dataIndex: \"bind_bank_at\"\r\n        },\r\n        {\r\n          title: \"是否灰名单\",\r\n          dataIndex: \"is_gray\"\r\n        },\r\n        {\r\n          title: \"灰名单备注\",\r\n          dataIndex: \"black_remark\"\r\n        },\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"remark_at\"\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          dataIndex: \"option\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Select,\r\n  Input,\r\n  Popconfirm,\r\n  Button\r\n} from \"antd\";\r\n\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport LinkButton from \"../../components/link-button/index\";\r\nimport {\r\n  reqUsers,\r\n  setGameUserNickName,\r\n  changeGold,\r\n  reqLoadGold,\r\n  userDetail,\r\n  bindInfo,\r\n  saveUserBlack,\r\n  createTask,\r\n  setCustomer\r\n} from \"../../api/index\";\r\nimport WrappedNormalLoginForm from \"././user-nick\";\r\nimport WrappedComponent from \"./gold_details\";\r\nimport MyDatePicker from \"../../components/MyDatePicker\";\r\n\r\nconst { Option } = Select;\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isNickShow: false,\r\n      isGoldShow: false,\r\n      isGoldDetailShow: false,\r\n      isBindInfoShow: false,\r\n      isResetPwdShow: false,\r\n      resetpwd: \"\",\r\n      game_nick: \"\",\r\n      startTime: \"\",\r\n      endTime: \"\",\r\n      loading: false\r\n    };\r\n    this.inputKey = \"id\";\r\n    this.inputValue = \"\";\r\n  }\r\n\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      fixed: \"left\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"game_nick\",\r\n      key: \"game_nick\",\r\n      fixed: \"left\",\r\n      width: 150,\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.game_nick = record.game_nick;\r\n            this.id = record.id;\r\n            this.rowIndex = rowIndex;\r\n            this.setState({\r\n              isNickShow: true\r\n            });\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n\r\n    {\r\n      title: \"账户余额\",\r\n      dataIndex: \"game_gold\",\r\n      key: \"game_gold\",\r\n      sorter: (a, b) => a.game_gold - b.game_gold,\r\n      width: 150,\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.goldRecord = record;\r\n            this.setState({\r\n              isGoldShow: true\r\n            });\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      key: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_nick\",\r\n      key: \"proxy_nick\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"手机\",\r\n      dataIndex: \"phone_number\",\r\n      key: \"phone_number\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"role_name\",\r\n      key: \"role_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"注册时间\",\r\n      dataIndex: \"regin_time\",\r\n      render: formateDate,\r\n      key: \"regin_time\",\r\n      sorter: (a, b) => a.regin_time - b.regin_time,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"登录IP\",\r\n      dataIndex: \"login_ip\",\r\n      key: \"login_ip\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"登陆时间\",\r\n      dataIndex: \"login_time\",\r\n      render: formateDate,\r\n      sorter: (a, b) => a.login_time - b.login_time,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getGoldDetail(record)} size=\"small\">\r\n            资金明细\r\n          </LinkButton>\r\n          <LinkButton onClick={() => this.getMoreDetail(record)} size=\"small\">\r\n            更多\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"实时余额\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton size=\"small\" onClick={() => this.getLoadGold(record)}>\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"是否为客服账号\",\r\n      dataIndex: \"game_user_type\",\r\n      width: 120,\r\n      render: (text, record, index) => (\r\n        <span>{parseInt(text) === 4 ? \"是\" : \"\"}</span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqUsers(\r\n      page,\r\n      limit,\r\n      this.state.startTime,\r\n      this.state.endTime,\r\n      this.inputKey,\r\n      this.inputValue\r\n    );\r\n    if (result.status === 0) {\r\n      const { game_user, proxy_user } = result.data;\r\n      game_user.forEach(element => {\r\n        proxy_user.forEach(item => {\r\n          if (element.id === item.id) {\r\n            element.proxy_nick = item.proxy_pid;\r\n            // element.proxy_user_type = item.proxy_user_type;\r\n          }\r\n        });\r\n      });\r\n      this.setState({\r\n        data: game_user,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(result.msg + \"接口异常,未检索到数据\");\r\n    }\r\n  };\r\n  changeNickName = () => {\r\n    let form = this.refs.getFormValue; //通过refs属性可以获得对话框内form对象\r\n    form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        this.setState({ isNickShow: false });\r\n        if (value.name !== this.game_nick) {\r\n          const result = await setGameUserNickName(this.id, value.name);\r\n          if (result.status === 0) {\r\n            message.success(\"修改成功!\");\r\n            // 首先拿到索引, 也可以从参数中传递过来\r\n            let index = this.rowIndex;\r\n            // 然后根据索引修改\r\n            this.state.data[index][`game_nick`] = value.name;\r\n            // 这个时候并不会更新视图, 需要 setState更新 arr\r\n            this.setState({\r\n              data: this.state.data\r\n            });\r\n          }\r\n        }\r\n      }\r\n      form.resetFields();\r\n    });\r\n  };\r\n  changeGold = () => {\r\n    this.setState({ loading: true });\r\n    //这里直接复用了user-nick的模态框，所以取input的值时用value.name\r\n    let form = this.refs.getFormValue;\r\n    let goldRecord = this.goldRecord;\r\n    form.validateFields(async (err, value) => {\r\n      const res = await changeGold(goldRecord, value);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n        this.setState({ isGoldShow: false, loading: false });\r\n      } else {\r\n        this.setState({ loading: false });\r\n        message.error(res.msg);\r\n      }\r\n      form.resetFields();\r\n    });\r\n  };\r\n  handleChange(event) {\r\n    let data = Object.assign({}, this.state.inputParam, {\r\n      val: event.target.value\r\n    });\r\n    this.setState({ inputParam: data });\r\n  }\r\n  getLoadGold = async record => {\r\n    const id = record.id;\r\n    const result = await reqLoadGold(id);\r\n    if (result.status === 0) {\r\n      Modal.success({\r\n        title: \"实时余额\",\r\n        content: `用户${record.id}实时余额是 : ${result.data[0].game_gold}`\r\n      });\r\n    }\r\n  };\r\n  getGoldDetail = async (record, isBindInfo) => {\r\n    if (this.moreModal) {\r\n      this.moreModal.destroy();\r\n    }\r\n    this.isBindInfo = isBindInfo;\r\n    this.GoldDetailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.id\r\n    };\r\n    const res = !isBindInfo\r\n      ? await userDetail(1, 20, record.id)\r\n      : await bindInfo(1, 20, record.id);\r\n    if (res.status === 0) {\r\n      this.GoldDetailRecord.data = res.data;\r\n      this.GoldDetailRecord.count = res.count;\r\n    }\r\n    this.setState({ isGoldDetailShow: true });\r\n  };\r\n  saveUserBlack = async (record, isAdd) => {\r\n    let action = isAdd ? \"add\" : \"remove\";\r\n    const res = await saveUserBlack(record.id, action);\r\n    if (res.status === 0) {\r\n      message.success(\"操作成功！\");\r\n    } else {\r\n      message.success(\"操作失败:\" + res.msg);\r\n    }\r\n  };\r\n  resetPwd = record => {\r\n    if (this.moreModal) {\r\n      this.moreModal.destroy();\r\n    }\r\n    this.setState({ isResetPwdShow: true });\r\n    this.resetPwdId = record.id;\r\n  };\r\n  handleResetpwd = async () => {\r\n    const res = await createTask(this.resetPwdId, this.state.resetpwd);\r\n    if (res.status === 0) {\r\n      message.success(\"操作成功！\");\r\n      this.setState({ resetpwd: \"\", isResetPwdShow: false });\r\n    } else {\r\n      message.success(\"操作失败:\" + res.msg);\r\n    }\r\n  };\r\n  getMoreDetail = record => {\r\n    this.moreModal = Modal.info({\r\n      title: \"更多\",\r\n      okText: \"关闭\",\r\n      width: \"50%\",\r\n      content: (\r\n        <div>\r\n          <LinkButton\r\n            onClick={() => this.getGoldDetail(record, true)}\r\n            size=\"small\"\r\n          >\r\n            查看绑定信息\r\n          </LinkButton>\r\n          <Popconfirm\r\n            title=\"交易所黑名单\"\r\n            onConfirm={() => this.saveUserBlack(record, true)}\r\n            onCancel={() => this.saveUserBlack(record, false)}\r\n            okText=\"添加\"\r\n            cancelText=\"移除\"\r\n          >\r\n            <LinkButton size=\"small\">交易所黑名单</LinkButton>\r\n          </Popconfirm>\r\n          <LinkButton onClick={() => this.resetPwd(record)} size=\"small\">\r\n            重置密码\r\n          </LinkButton>\r\n          <Popconfirm\r\n            title=\"确定要设置为客户账号吗？\"\r\n            onConfirm={() => this.setCustomerAccount(record)}\r\n            okText=\"确定\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <LinkButton size=\"small\">设置客户账号</LinkButton>\r\n          </Popconfirm>\r\n        </div>\r\n      )\r\n    });\r\n  };\r\n  setCustomerAccount = async record => {\r\n    let id = record.id;\r\n    const res = await setCustomer(id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg + \"操作成功\");\r\n    } else {\r\n      message.error(res.msg + \"操作失败\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    const { data, count } = this.state;\r\n    const title = (\r\n      <span>\r\n        <MyDatePicker\r\n          handleValue={val => {\r\n            this.setState({\r\n              startTime: val[0],\r\n              endTime: val[1]\r\n            });\r\n          }}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <Select\r\n          style={{ width: 200 }}\r\n          placeholder=\"Select a person\"\r\n          defaultValue=\"id\"\r\n          onChange={val => {\r\n            this.inputKey = val;\r\n          }}\r\n        >\r\n          <Option value=\"id\">user_id</Option>\r\n          <Option value=\"game_nick\">昵称</Option>\r\n          <Option value=\"phone_number\">手机号</Option>\r\n          <Option value=\"role_name\">账号</Option>\r\n          <Option value=\"proxy_nick\">所属代理</Option>\r\n          <Option value=\"package_nick\">所属品牌</Option>\r\n        </Select>\r\n        &nbsp; &nbsp;\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"请输入关键字搜索\"\r\n          style={{ width: 150 }}\r\n          ref={Input => (this.input = Input)}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <LinkButton\r\n          onClick={() => {\r\n            this.inputValue = this.input.input.value;\r\n            this.getUsers(1, this.state.pageSize);\r\n          }}\r\n          size=\"default\"\r\n        >\r\n          <Icon type=\"search\" />\r\n        </LinkButton>\r\n      </span>\r\n    );\r\n    const extra = (\r\n      <LinkButton\r\n        onClick={() => {\r\n          window.location.reload();\r\n        }}\r\n        size=\"default\"\r\n      >\r\n        <Icon type=\"reload\" />\r\n      </LinkButton>\r\n    );\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1900, y: \"65vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"修改昵称\"\r\n          visible={this.state.isNickShow}\r\n          onOk={this.changeNickName}\r\n          onCancel={() => {\r\n            this.setState({ isNickShow: false });\r\n          }}\r\n        >\r\n          <WrappedNormalLoginForm\r\n            ref=\"getFormValue\"\r\n            val={this.game_nick}\r\n            isNickModal\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"修改金额\"\r\n          visible={this.state.isGoldShow}\r\n          // onOk={this.changeGold}\r\n          onCancel={() => {\r\n            this.setState({ isGoldShow: false });\r\n          }}\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              onClick={() => {\r\n                this.setState({ isGoldShow: false });\r\n              }}\r\n            >\r\n              取消\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              loading={this.state.loading}\r\n              onClick={this.changeGold}\r\n            >\r\n              确定\r\n            </Button>\r\n          ]}\r\n        >\r\n          <WrappedNormalLoginForm\r\n            ref=\"getFormValue\"\r\n            goldRecord={this.goldRecord}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title={this.isBindInfo ? \"查看绑定信息\" : \"资金明细\"}\r\n          visible={this.state.isGoldDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isGoldDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            GoldDetailRecord={this.GoldDetailRecord}\r\n            isBindInfo={this.isBindInfo}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"重置密码\"\r\n          visible={this.state.isResetPwdShow}\r\n          onOk={this.handleResetpwd}\r\n          onCancel={() => {\r\n            this.setState({ isResetPwdShow: false });\r\n          }}\r\n        >\r\n          <span>重置密码</span>\r\n          <Input\r\n            value={this.state.resetpwd}\r\n            onChange={e => this.setState({ resetpwd: e.target.value })}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Checkbox,\r\n  Button,\r\n  message\r\n} from \"antd\";\r\nimport { addUser, editUser } from \"../../../api\";\r\n\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBan: 1,\r\n      checkedList: [],\r\n      indeterminate: true,\r\n      checkAll: false\r\n    };\r\n  }\r\n  checkboxOnChange = checkedList => {\r\n    // console.log(checkedList);\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate:\r\n        !!checkedList.length &&\r\n        checkedList.length < this.props.packageList.length,\r\n      checkAll: checkedList.length === this.props.packageList.length\r\n    });\r\n  };\r\n  onCheckAllChange = e => {\r\n    let list = this.props.packageList.map(item => {\r\n      return item.value;\r\n    });\r\n    this.setState(\r\n      {\r\n        checkedList: e.target.checked ? list : [],\r\n        indeterminate: false,\r\n        checkAll: e.target.checked\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          packageList: this.state.checkedList\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await addUser(value)\r\n          : await editUser(value, this.props.editDataRecord.id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.isEdit && this.props.editDataRecord.group) {\r\n      let defaultValue = this.props.editDataRecord.group.split(\",\");\r\n      this.props.form.setFieldsValue({\r\n        packageList: defaultValue.map(Number)\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    const Option = this.props.optionList.map(item => (\r\n      <Select.Option value={item.id} key={item.id}>\r\n        {item.name}\r\n      </Select.Option>\r\n    ));\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        onSubmit={this.handleSubmit}\r\n        labelAlign=\"left\"\r\n      >\r\n        <Form.Item label=\"登录名\">\r\n          {getFieldDecorator(\"username\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"登录名必须输入\"\r\n              },\r\n              { min: 3, message: \"用户名至少3位\" },\r\n              { max: 10, message: \"用户名最多10位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"用户名必须是英文、数字或下划线组成\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"将会成为您唯一的登入名\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户状态\">\r\n          {getFieldDecorator(\"userStatus\", {\r\n            initialValue: isEdit ? editDataRecord.status : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>启用</Radio>\r\n              <Radio value={0}>禁用</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户组\">\r\n          {getFieldDecorator(\"userGroup\", {\r\n            rules: [{ required: true, message: \"请选择用户组!\" }],\r\n            initialValue: isEdit && editDataRecord.group_id\r\n          })(\r\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择用户组\">\r\n              {Option}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权品牌\">\r\n          <Checkbox\r\n            indeterminate={this.state.indeterminate}\r\n            onChange={this.onCheckAllChange}\r\n            checked={this.state.checkAll}\r\n          >\r\n            全选\r\n          </Checkbox>\r\n          {getFieldDecorator(\"packageList\", {\r\n            rules: [{ required: true, message: \"请选择授权品牌!\" }]\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.props.packageList}\r\n              // value={this.state.checkedList}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权代理\">\r\n          {getFieldDecorator(\"proxy\", {\r\n            rules: [\r\n              {\r\n                whitespace: true,\r\n                message: \"多个代理请用英文逗号分隔\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.proxy : \"\"\r\n          })(\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"多个代理请用英文逗号分隔\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"携带金额\">\r\n          {getFieldDecorator(\"loadGold\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              },\r\n              {\r\n                pattern: /^\\d+(\\.\\d+)?$/,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.use_balance\r\n          })(<Input style={{ width: \"60%\" }} placeholder=\"请输入数字\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true,\r\n                message: \"密码不能为空\"\r\n              },\r\n              { min: 6, message: \"密码至少6位\" },\r\n              { max: 16, message: \"密码最多16位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"密码必须是英文、数字或下划线组成\"\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"确认密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"confirmPssword\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"密码(选填)\"\r\n          style={!isEdit ? { display: \"none\" } : {}}\r\n        >\r\n          {getFieldDecorator(\"editPassword\", {\r\n            rules: [\r\n              {\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符，重置密码时使用\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\nimport WrappedAddDataForm from \"./addData\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n  reqAdminList,\r\n  searchAdminData,\r\n  roleList,\r\n  packageList,\r\n  resetAuthCode\r\n} from \"../../../api/index\";\r\n\r\nclass Admin_manage_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"用户名\",\r\n      dataIndex: \"name\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"角色\",\r\n      dataIndex: \"role_name\",\r\n    },\r\n    {\r\n      title: \"授权品牌\",\r\n      dataIndex: \"group\",\r\n    },\r\n    {\r\n      title: \"授权代理\",\r\n      dataIndex: \"proxy\",\r\n    },\r\n    {\r\n      title: \"可使用金额\",\r\n      dataIndex: \"use_balance\",\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"更新时间\",\r\n      dataIndex: \"updated_at\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 1 ? \"启用\" : \"禁用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n          <LinkButton onClick={() => this.resetAuthCode(record)}>\r\n            AuthCode重置\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqAdminList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await searchAdminData(this.state.inputParam);\r\n    // if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: 1\r\n      });\r\n    // }\r\n  };\r\n  addData = async () => {\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isAddDataShow: true\r\n      });\r\n    }\r\n  };\r\n  edit = async record => {\r\n    console.log(record);\r\n    this.editDataRecord = record;\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isEditDataShow: true\r\n      });\r\n    }\r\n  };\r\n  resetAuthCode = record => {\r\n    Modal.confirm({\r\n      title: \"信息\",\r\n      content: \"真的要重置么?\",\r\n      async onOk() {\r\n        const res = await resetAuthCode(record.id);\r\n        if (res.status === 0) {\r\n          message.success(res.msg);\r\n        } else {\r\n          message.success(res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入用户名\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={this.handleChange}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData} size='default'>\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.addData} size='default'>\r\n              <Icon type=\"user-add\" />\r\n              添加账户\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size='default'>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n        />\r\n        <Modal\r\n          title=\"添加用户\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            optionList={this.optionList}\r\n            packageList={this.packageList}\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={() => this.getUsers(1, 20)}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit=\"true\"\r\n              optionList={this.optionList}\r\n              packageList={this.packageList}\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin_manage_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Tree } from \"antd\";\r\nimport { addRole, editRole } from \"../../../api\";\r\n\r\nconst { TreeNode } = Tree;\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandedKeys: [],\r\n      selectedKeys: [],\r\n      checkedKeys: this.props.isEdit\r\n        ? this.props.editDataRecord.rules.split(\",\")\r\n        : [],\r\n      defaultCheckedKeys: []\r\n    };\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n    const treeData = this.getTreeNodes(menuList);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        onSubmit={this.handleSubmit}\r\n        labelAlign=\"left\"\r\n      >\r\n        <Form.Item label=\"角色名\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"角色名必须输入\"\r\n              },\r\n              { min: 3, message: \"用户名至少3位\" }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"分配权限\">\r\n          <br />\r\n          <Tree\r\n            checkable\r\n            defaultCheckedKeys={isEdit ? editDataRecord.rules.split(\",\") : []}\r\n            expandedKeys={this.state.expandedKeys}\r\n            selectedKeys={this.state.selectedKeys}\r\n            onSelect={this.onSelect}\r\n            onCheck={this.onCheck}\r\n            onExpand={this.onExpand}\r\n          >\r\n            {treeData}\r\n          </Tree>\r\n        </Form.Item>\r\n        <Form.Item label=\"描述\">\r\n          {getFieldDecorator(\"desc\", {\r\n            rules: [{ max: 400, message: \"最多400字\" }],\r\n            initialValue: isEdit ? editDataRecord.description : \"\"\r\n          })(\r\n            <Input.TextArea\r\n              placeholder=\"请输入文字\"\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  getTreeNodes = menuList => {\r\n    return menuList.map(item => {\r\n      if (!item.children) {\r\n        return <TreeNode key={item.id} title={item.title.replace(/&nbsp;/g, \"\")} />;\r\n      } else {\r\n        return (\r\n          <TreeNode key={item.id} title={item.title.replace(/&nbsp;/g, \"\")}>\r\n            {this.getTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n    });\r\n  };\r\n  onSelect = (selectedKeys, info) => {\r\n    const { node } = info;\r\n    const { expandedKeys } = this.state;\r\n    if (node.props.isLeaf) {\r\n      this.setState({ selectedKeys });\r\n    } else {\r\n      this.setState({\r\n        expandedKeys: node.props.expanded\r\n          ? expandedKeys.filter(k => k !== node.props.eventKey)\r\n          : expandedKeys.concat(node.props.eventKey)\r\n      });\r\n    }\r\n  };\r\n  onCheck = (checkedKeys, info) => {\r\n    // console.log(\"onCheck\", checkedKeys, info);\r\n    this.setState({\r\n      checkedKeys: checkedKeys.map(Number)\r\n    });\r\n  };\r\n  onExpand = (expandedKeys, info) => {\r\n    this.setState({ expandedKeys });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        let { name, desc } = value;\r\n        let rules = this.state.checkedKeys;\r\n        let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n        const res = !this.props.isEdit\r\n          ? await addRole(name, rules, desc)\r\n          : await editRole(name, rules, desc, id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n          this.setState({\r\n            checkedKeys: []\r\n          });\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport WrappedAddDataForm from \"./addData\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getRoleList, getRuleList } from \"../../../api/index\";\r\n\r\nclass Role extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"角色名\",\r\n      dataIndex: \"name\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"描述\",\r\n      dataIndex: \"description\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 1 ? \"已启用\" : \"禁用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  getUsers = async (page, limit) => {\r\n    const result = await getRoleList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  addData = async () => {\r\n    //getRuleList的请求/acl/ruleList返回的不是树状结构的数据，所以使用缓存在本地navlist返回的menulist\r\n    // const res = await getRuleList();\r\n    // if (res.status === 0) {\r\n    //   this.ruleList = res.data;\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n    // }\r\n  };\r\n  edit = async record => {\r\n    // console.log(record);\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <LinkButton onClick={this.addData} size='default'>\r\n              <Icon type=\"user-add\" />\r\n              添加账户\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size='default'>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n            // scroll={{ x: 1500, y: 550 }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={() => this.getUsers(1, 20)}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit=\"true\"\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Role;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Input, Icon, Button, message } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport { reqLostOrder_list, orderReview } from \"../../../api/index\";\r\n\r\nclass Diaodan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      user_id: \"\",\r\n      order_id: \"\"\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"user_id\"\r\n          style={{ width: 150 }}\r\n          value={this.state.user_id}\r\n          onChange={e => this.setState({ user_id: e.target.value })}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"订单Id\"\r\n          style={{ width: 300 }}\r\n          value={this.state.order_id}\r\n          onChange={e => this.setState({ order_id: e.target.value })}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <Button onClick={this.handleClick}>\r\n          <Icon type=\"search\" />\r\n        </Button>\r\n        <br></br>\r\n        <br></br>\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    return [\r\n      {\r\n        title: \"订单Id\",\r\n        dataIndex: \"order_id\"\r\n      },\r\n      {\r\n        title: \"user_id\",\r\n        dataIndex: \"user_id\"\r\n      },\r\n      {\r\n        title: \"金额\",\r\n        dataIndex: \"amount\"\r\n      },\r\n      {\r\n        title: \"下单时间\",\r\n        dataIndex: \"created_at\",\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        dataIndex: \"status\",\r\n        render: (text, record, index) => {\r\n          if (text !== \"6\" && text !== \"7\" && text !== \"9\") {\r\n            return (\r\n              <Button size='small' onClick={() => this.handleRecieveSubmit(record)}>\r\n                手动到账提交\r\n              </Button>\r\n            );\r\n          } else {\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    ];\r\n  };\r\n  handleClick = async () => {\r\n    const res = await reqLostOrder_list(\r\n      1,\r\n      50,\r\n      this.state.user_id,\r\n      this.state.order_id\r\n    );\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  handleRecieveSubmit = async record => {\r\n    let { user_id, order_id } = record;\r\n    const res = await orderReview(user_id, order_id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n    this.handleClick();\r\n  };\r\n}\r\n\r\nexport default Diaodan;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, message, Icon, Input, Select, Modal, Button } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport \"moment/locale/zh-cn\";\r\nimport {\r\n  reqOrder_list,\r\n  downloadList,\r\n  orderReviewEdit\r\n} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport Diaodan from \"./editData\";\r\n\r\nclass Order_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\",\r\n      isQueryShow: false,\r\n      isEditShow: false\r\n    };\r\n    this.inputKey = \"\";\r\n    this.inputValue = \"\";\r\n    this.order_status = \"\";\r\n    this.type = \"\";\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqOrder_list(\r\n      page,\r\n      limit,\r\n      this.state.start_time,\r\n      this.state.end_time,\r\n      this.order_status,\r\n      this.type,\r\n      this.inputKey,\r\n      this.inputValue\r\n    );\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  onSearchData = async () => {\r\n    this.setState({ isQueryShow: true });\r\n  };\r\n  download = () => {\r\n    downloadList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.inputKey = value)}\r\n              >\r\n                <Select.Option value=\"order_id\">订单id</Select.Option>\r\n                <Select.Option value=\"user_id\">user_id</Select.Option>\r\n                <Select.Option value=\"1\">创建时间</Select.Option>\r\n                <Select.Option value=\"2\">到账时间</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"请输入关键字\"\r\n                style={{ width: 150 }}\r\n                ref={Input => (this.input = Input)}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <MyDatePicker\r\n                handleValue={val => {\r\n                  this.setState({\r\n                    start_time: val[0],\r\n                    end_time: val[1]\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 200 }}\r\n                onSelect={value => (this.order_status = value)}\r\n              >\r\n                <Select.Option value=\"\">订单状态</Select.Option>\r\n                <Select.Option value=\"0\">全部</Select.Option>\r\n                <Select.Option value=\"1\">未支付</Select.Option>\r\n                <Select.Option value=\"4\">已撤销</Select.Option>\r\n                <Select.Option value=\"5\">已支付</Select.Option>\r\n                <Select.Option value=\"6\">已完成</Select.Option>\r\n                <Select.Option value=\"7\">补单初审通过</Select.Option>\r\n                <Select.Option value=\"8\">补单初审拒绝</Select.Option>\r\n                <Select.Option value=\"9\">补单复审通过</Select.Option>\r\n                <Select.Option value=\"10\">补单复审拒绝</Select.Option>\r\n                <Select.Option value=\"11\">充值失败</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.type = value)}\r\n              >\r\n                <Select.Option value=\"\">订单类型</Select.Option>\r\n                <Select.Option value=\"0\">全部</Select.Option>\r\n                <Select.Option value=\"1\">alipay</Select.Option>\r\n                <Select.Option value=\"2\">银行卡转账</Select.Option>\r\n                <Select.Option value=\"3\">人工代充</Select.Option>\r\n                <Select.Option value=\"4\">人工代提</Select.Option>\r\n                <Select.Option value=\"6\">微信支付</Select.Option>\r\n                <Select.Option value=\"7\">银联支付</Select.Option>\r\n                <Select.Option value=\"8\">网银支付</Select.Option>\r\n                <Select.Option value=\"9\">快捷支付</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <LinkButton\r\n                onClick={() => {\r\n                  this.inputValue = this.input.input.value;\r\n                  this.getUsers(1, this.state.pageSize);\r\n                }}\r\n                size=\"default\"\r\n              >\r\n                <Icon type=\"search\" />\r\n              </LinkButton>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n            <div style={{ marginTop: 10 }}>\r\n              <LinkButton onClick={this.onSearchData} size=\"default\">\r\n                <Icon type=\"search\" />\r\n                玩家掉单查询\r\n              </LinkButton>\r\n            </div>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <LinkButton\r\n              size=\"default\"\r\n              style={{ float: \"right\" }}\r\n              onClick={this.download}\r\n              icon=\"download\"\r\n            ></LinkButton>\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 1900, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"玩家调单查询\"\r\n          visible={this.state.isQueryShow}\r\n          onCancel={() => {\r\n            this.setState({ isQueryShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <Diaodan />\r\n        </Modal>\r\n        <Modal\r\n          title=\"编辑\"\r\n          visible={this.state.isEditShow}\r\n          onCancel={() => {\r\n            this.setState({ isEditShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"50%\"\r\n        >\r\n          <div>\r\n            <div>用户ID：{this.state.editUser_id}</div>\r\n            <br />\r\n            <div>金额：{this.state.editMount}</div>\r\n            <br />\r\n            <div>\r\n              手动到账复审：<Button type=\"primary\">通过</Button>{\" \"}\r\n              <Button type=\"primary\" onClick={this.editRefused}>\r\n                拒绝\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"支付渠道\",\r\n      dataIndex: \"channel_type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"0\":\r\n            word = record.replace_id;\r\n            break;\r\n          case \"5\":\r\n            word = \"充提UC\";\r\n            break;\r\n          case \"12\":\r\n            word = \"onePay\";\r\n            break;\r\n          case \"11\":\r\n            word = \"古都\";\r\n            break;\r\n          case [\"10\", \"13\", \"14\", \"15\", \"16\"]:\r\n            word = \"聚鑫\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"支付类型\",\r\n      dataIndex: \"type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"alipay\";\r\n            break;\r\n          case \"2\":\r\n            word = \"银行卡转账\";\r\n            break;\r\n          case \"3\":\r\n            word = \"人工代充\";\r\n            break;\r\n          case \"4\":\r\n            word = \"人工代提\";\r\n            break;\r\n          case \"5\":\r\n            word = \"被赠送\";\r\n            break;\r\n          case \"6\":\r\n            word = \"微信支付\";\r\n            break;\r\n          case \"7\":\r\n            word = \"银联支付\";\r\n            break;\r\n          case \"8\":\r\n            word = \"网银支付\";\r\n            break;\r\n          case \"9\":\r\n            word = \"快捷支付\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"订单状态\",\r\n      dataIndex: \"status\",\r\n      width: 130,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"未支付\";\r\n            break;\r\n          case \"2\":\r\n            word = \"已过期\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已分配\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已撤销\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已支付\";\r\n            break;\r\n          case \"6\":\r\n            word = \"已完成\";\r\n            break;\r\n          case \"7\":\r\n            word = \"补单初审通过\";\r\n            break;\r\n          case \"8\":\r\n            word = \"初审拒绝\";\r\n            break;\r\n          case \"9\":\r\n            word = \"补单复审通过\";\r\n            break;\r\n          case \"10\":\r\n            word = \"复审拒绝\";\r\n            break;\r\n          case \"11\":\r\n            word = \"充值失败\";\r\n            break;\r\n          case \"12\":\r\n            word = \"客服拒绝\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 200,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        if (record.status === \"7\") {\r\n          return (\r\n            <LinkButton size=\"small\" onClick={() => this.edit(record)}>\r\n              编辑\r\n            </LinkButton>\r\n          );\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: \"备注\",\r\n      dataIndex: \"remark\"\r\n    }\r\n  ];\r\n  edit = record => {\r\n    this.setState({\r\n      isEditShow: true,\r\n      editUser_id: record.user_id,\r\n      editMount: record.amount\r\n    });\r\n    this.user_id = record.user_id;\r\n    this.order_id = record.order_id;\r\n    this.editType = record.type;\r\n  };\r\n  editRefused = async () => {\r\n    const res = await orderReviewEdit(\r\n      this.user_id,\r\n      this.order_id,\r\n      this.editType\r\n    );\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n      this.setState({\r\n        isEditShow: false\r\n      });\r\n      this.getUsers(1, this.pageSize);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Order_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\r\nimport { addChannel, editPayChannel } from \"../../../api\";\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 7 }}\r\n        wrapperCol={{ span: 17 }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form.Item label=\"支付名称\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"所属渠道ID\">\r\n          {getFieldDecorator(\"channel_id\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.channel_id : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付名称\">\r\n          {getFieldDecorator(\"nick_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>开启</Radio>\r\n              <Radio value={0}>关闭</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付方式\">\r\n          {getFieldDecorator(\"pay_type\", {\r\n            rules: [{ required: true, message: \"请选择支付方式!\" }],\r\n            initialValue: isEdit && editDataRecord.pay_type\r\n          })(\r\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择支付方式\">\r\n              <Select.Option value=\"7\">支付宝H5</Select.Option>\r\n              <Select.Option value=\"8\">支付宝扫码</Select.Option>\r\n              <Select.Option value=\"2\">快捷支付</Select.Option>\r\n              <Select.Option value=\"4\">微信H5</Select.Option>\r\n              <Select.Option value=\"5\">微信扫码</Select.Option>\r\n              <Select.Option value=\"1\">网银支付</Select.Option>\r\n              <Select.Option value=\"13\">银联扫码</Select.Option>\r\n              <Select.Option value=\"17\">转账银行卡</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付限额最小面值\">\r\n          {getFieldDecorator(\"min_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.min_amount : \"\"\r\n          })(<Input style={{ width: \"30%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付限额最大面值\">\r\n          {getFieldDecorator(\"max_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.max_amount : \"\"\r\n          })(<Input style={{ width: \"30%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"固定面值\">\r\n          {getFieldDecorator(\"span_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.span_amount\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"单笔间隔\">\r\n          {getFieldDecorator(\"seed\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.seed\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"玩家承担费率%\">\r\n          {getFieldDecorator(\"rate\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.rate\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"显示排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            initialValue: isEdit ? editDataRecord.sort : \"0\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await addChannel(value)\r\n          : await editPayChannel(value,id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getChannelList, getRuleList } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Channel_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getChannelList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  onSearchData = async () => {\r\n    const res = await getChannelList(1, 20, this.state.inputParam);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  refreshPage=()=>{\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  }\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入支付名称\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={e => this.setState({ inputParam: e.target.value })}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData}>\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton\r\n          onClick={() => window.location.reload()}\r\n          >\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1900, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"支付名称\",\r\n      dataIndex: \"name\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"渠道昵称\",\r\n      dataIndex: \"nick_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"单笔-最小限额\",\r\n      dataIndex: \"min_amount\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"单笔-最大限额\",\r\n      dataIndex: \"max_amount\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"单笔间隔\",\r\n      dataIndex: \"seed\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"玩家承担的费率%\",\r\n      dataIndex: \"rate\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"固定面值\",\r\n      dataIndex: \"span_amount\",\r\n      width: 250\r\n    },\r\n    {\r\n      title: \"支付方式\",\r\n      dataIndex: \"pay_type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"7\":\r\n            word = \"支付宝H5\";\r\n            break;\r\n          case \"8\":\r\n            word = \"支付宝扫码\";\r\n            break;\r\n          case \"2\":\r\n            word = \"快捷支付\";\r\n            break;\r\n          case \"4\":\r\n            word = \"微信H5\";\r\n            break;\r\n          case \"5\":\r\n            word = \"微信扫码\";\r\n            break;\r\n          case \"1\":\r\n            word = \"网银支付\";\r\n            break;\r\n          case \"13\":\r\n            word = \"银联扫码\";\r\n            break;\r\n          case \"17\":\r\n            word = \"转账银行卡\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 80,\r\n      render: (text, record, index) => {\r\n        return <span>{text === \"1\" ? \"开启\" : \"关闭\"}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"显示顺序\",\r\n      width: 100,\r\n      dataIndex: \"sort\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Channel_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\r\nimport { saveBankCard } from \"../../../api\";\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 7 }}\r\n        wrapperCol={{ span: 17 }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form.Item label=\"开户人\">\r\n          {getFieldDecorator(\"card_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.card_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"银行名称\">\r\n          {getFieldDecorator(\"bank_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.bank_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"卡号\">\r\n          {getFieldDecorator(\"card_num\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              },\r\n              {\r\n                min: 15,\r\n                max: 20,\r\n                message: \"请输入15-20位正确卡号\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.card_num : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"用途\">\r\n          {getFieldDecorator(\"type\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>收款卡</Radio>\r\n              <Radio value={0}>出款卡</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 2\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>空闲</Radio>\r\n              <Radio value={2}>使用中</Radio>\r\n              <Radio value={3}>停用</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付密码\">\r\n          {getFieldDecorator(\"pay_password\", {})(\r\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"查询密码\">\r\n          {getFieldDecorator(\"query_password\", {})(\r\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"U盾密码\">\r\n          {getFieldDecorator(\"u_code\", {})(\r\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ offset: 18 }}>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await saveBankCard(value)\r\n          : await saveBankCard(value, id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功:\" + res.msg);\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input, Popconfirm } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { bankList, deleteBankCard } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass Bankcard_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await bankList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题:\" + result.msg);\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    // console.log(record);\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  delete = async record => {\r\n    const result = await deleteBankCard(record.id);\r\n    if (result.status === 0) {\r\n      message.success(result.msg);\r\n      this.refreshPage(1, 20);\r\n    } else {\r\n      message.error(\"网络问题:\" + result.msg);\r\n    }\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <LinkButton onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()}>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1000, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      width: 50\r\n    },\r\n    {\r\n      title: \"卡使用类型\",\r\n      dataIndex: \"type\",\r\n      width: 100,\r\n      render: (text, record, index) => (\r\n        <span>{text === \"1\" ? \"收款卡\" : \"出款卡\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"银行卡号\",\r\n      dataIndex: \"card_num\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"开户人姓名\",\r\n      dataIndex: \"card_name\",\r\n      width: 100,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"银行名称\",\r\n      dataIndex: \"bank_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => (\r\n        <span>{text === \"1\" ? \"空闲\" : text === \"2\" ? \"使用中\" : \"停用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 150,\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n          <Popconfirm\r\n            title=\"确定要删除吗\"\r\n            onConfirm={() => this.delete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <LinkButton>删除</LinkButton>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Bankcard_list;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Icon, Input, Select, Button } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport \"moment/locale/zh-cn\";\r\nimport { rechargeOrder, downloadList } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\n\r\nclass Recharge_order extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      type: \"14\",\r\n      paramKey: \"\",\r\n      inputParam: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\"\r\n    };\r\n    this.inputKey = \"\";\r\n    this.inputValue = \"\";\r\n    this.order_status = \"\";\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await rechargeOrder(\r\n      page,\r\n      limit,\r\n      this.state.start_time,\r\n      this.state.end_time,\r\n      this.order_status,\r\n      this.inputKey,\r\n      this.inputValue\r\n    );\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  download = () => {\r\n    downloadList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <MyDatePicker\r\n                handleValue={val => {\r\n                  this.setState({\r\n                    start_time: val[0],\r\n                    end_time: val[1]\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.inputKey = value)}\r\n              >\r\n                <Select.Option value=\"order_id\">订单id</Select.Option>\r\n                <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"请输入关键字\"\r\n                style={{ width: 150 }}\r\n                ref={Input => (this.input = Input)}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 100 }}\r\n                onSelect={value => (this.order_status = value)}\r\n              >\r\n                <Select.Option value=\"\">状态</Select.Option>\r\n                <Select.Option value=\"0\">未成功</Select.Option>\r\n                <Select.Option value=\"1\">已分配</Select.Option>\r\n                <Select.Option value=\"4\">已撤销</Select.Option>\r\n                <Select.Option value=\"6\">已完成</Select.Option>\r\n                <Select.Option value=\"7\">初审通过</Select.Option>\r\n                <Select.Option value=\"8\">初审拒绝</Select.Option>\r\n                <Select.Option value=\"9\">复审通过</Select.Option>\r\n                <Select.Option value=\"10\">复审拒绝</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <LinkButton\r\n                onClick={() => {\r\n                  this.inputValue = this.input.input.value;\r\n                  this.getUsers(1, this.state.pageSize);\r\n                }}\r\n              >\r\n                <Icon type=\"search\" />\r\n              </LinkButton>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <Button onClick={this.download} icon=\"download\">\r\n              下载列表\r\n            </Button>\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 1500, y: \"60vh\" }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 280\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"代充ID\",\r\n      dataIndex: \"replace_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"代充昵称\",\r\n      dataIndex: \"replace_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"订单状态\",\r\n      dataIndex: \"status\",\r\n      width: 130,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"未支付\";\r\n            break;\r\n          case \"2\":\r\n            word = \"已过期\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已分配\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已撤销\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已支付\";\r\n            break;\r\n          case \"6\":\r\n            word = \"已完成\";\r\n            break;\r\n          case \"7\":\r\n            word = \"补单初审通过\";\r\n            break;\r\n          case \"8\":\r\n            word = \"初审拒绝\";\r\n            break;\r\n          case \"9\":\r\n            word = \"补单复审通过\";\r\n            break;\r\n          case \"10\":\r\n            word = \"复审拒绝\";\r\n            break;\r\n          case \"11\":\r\n            word = \"充值失败\";\r\n            break;\r\n          case \"12\":\r\n            word = \"客服拒绝\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 150,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Recharge_order;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Input,\r\n  Button,\r\n} from \"antd\";\r\nimport { getChannel, getChannelInfo,editChannelInfo } from \"../../../api/index\";\r\n\r\nclass Recharge_channel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      childData: [],\r\n      expandedRowKeys: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isEditDataShow: false,\r\n      recordId: \"\"\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getChannel(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"middle\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          expandedRowRender={this.expandedRowRender}\r\n          expandRowByClick\r\n          onExpand={this.onExpandRow}\r\n          expandedRowKeys={this.state.expandedRowKeys}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n        />\r\n        <Modal\r\n          title=\"修改\"\r\n          visible={this.state.isEditDataShow}\r\n          onOk={this.handleEditData}\r\n          onCancel={() => {\r\n            this.setState({ isEditDataShow: false });\r\n          }}\r\n        >\r\n          <span>pay_code:</span>\r\n          <Input\r\n            type=\"text\"\r\n            value={this.state.inputParam}\r\n            onChange={event =>\r\n              this.setState({ inputParam: event.target.value })\r\n            }\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"渠道名\",\r\n      dataIndex: \"name\"\r\n    },\r\n    {\r\n      title: \"商户号\",\r\n      dataIndex: \"member_id\"\r\n    }\r\n  ];\r\n  expandedRowRender = (record, index, indent, expanded) => {\r\n    const columns = [\r\n      {\r\n        title: \"支付方式名称\",\r\n        dataIndex: \"pay_name\",\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"所属支付渠道\",\r\n        dataIndex: \"channel_name\",\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"pay_code\",\r\n        dataIndex: \"pay_code\",\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        dataIndex: \"action\",\r\n        render: (text, record, index) => (\r\n          <Button onClick={() => this.edit(record)}>修改pay_code</Button>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <Table\r\n        columns={columns}\r\n        dataSource={this.state.childData}\r\n        pagination={false}\r\n      />\r\n    );\r\n  };\r\n  onExpandRow = async (expanded, record) => {\r\n    let keys = [];\r\n    if (expanded) {\r\n      keys.push(record.id);\r\n      this.setState({\r\n        expandedRowKeys: keys\r\n      });\r\n      const result = await getChannelInfo(record.id);\r\n      if (result.status === 0) {\r\n        result.data.forEach((element, index) => {\r\n          element.key = index;\r\n        });\r\n        this.setState({\r\n          childData: result.data\r\n        });\r\n      } else {\r\n        message.error(\"网络问题\");\r\n        this.setState({\r\n          childData: []\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        expandedRowKeys: []\r\n      });\r\n    }\r\n  };\r\n  edit = record => {\r\n    console.log(record.pay_code);\r\n    this.setState({\r\n      recordId: record.id,\r\n      inputParam: record.pay_code,\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  handleEditData = async () => {\r\n    const result = await editChannelInfo(this.state.recordId, this.state.inputParam);\r\n    if (result.status === 0) {\r\n      message.success(result.msg);\r\n      this.setState({\r\n        isEditDataShow: false,\r\n        expandedRowKeys:[],\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n}\r\nexport default Recharge_channel;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Checkbox,\r\n  DatePicker,\r\n  message\r\n} from \"antd\";\r\nimport { packageList, addNotice, updateNotice } from \"../../../api\";\r\nimport moment from \"moment\";\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      checkedList: this.props.isEdit\r\n        ? this.props.editDataRecord.package_ids\r\n        : []\r\n    };\r\n  }\r\n  getPackageList = async () => {\r\n    let res = await packageList();\r\n    if (res.status === 0) {\r\n      let arr = [];\r\n      res.data.forEach(element => {\r\n        arr.push({ label: element.name, value: element.id });\r\n      });\r\n      this.setState({\r\n        options: arr\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getPackageList();\r\n  }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  // componentWillUnmount() {\r\n  //   this.setState = (state, callback) => {\r\n  //     return;\r\n  //   };\r\n  // }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"开关\">\r\n          {getFieldDecorator(\"is_open\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.is_open) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>开启</Radio>\r\n              <Radio value={0}>关闭</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"标题\">\r\n          {getFieldDecorator(\"title\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.title : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"品牌\">\r\n          {getFieldDecorator(\"packageList\", {\r\n            rules: [{ required: true, message: \"请选择品牌!\" }],\r\n            initialValue: isEdit && editDataRecord.package_ids\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.state.options}\r\n              // defaultValue={editDataRecord.package_ids}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"公告类型\">\r\n          {getFieldDecorator(\"type\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>活动</Radio>\r\n              <Radio value={2}>公告</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"是否跑马灯\">\r\n          {getFieldDecorator(\"is_slider\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>是</Radio>\r\n              <Radio value={0}>否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            rules: [{ required: true }],\r\n            initialValue: isEdit && editDataRecord.sort\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"内容\">\r\n          {getFieldDecorator(\"words\", {\r\n            rules: [{ required: true }],\r\n            initialValue: isEdit ? editDataRecord.words : \"\"\r\n          })(\r\n            <Input.TextArea\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"开始日期\">\r\n          {getFieldDecorator(\"start_time\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit && moment(editDataRecord.start_time * 1000)\r\n          })(<DatePicker showTime format={\"YYYY-MM-DD HH:mm:ss\"} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"截止日期\">\r\n          {getFieldDecorator(\"end_time\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit && moment(editDataRecord.end_time * 1000)\r\n          })(<DatePicker showTime format={\"YYYY-MM-DD HH:mm:ss\"} />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      console.log(value);\r\n      let id = this.props.editDataRecord\r\n        ? this.props.editDataRecord._id.$oid\r\n        : \"\";\r\n      if (!err) {\r\n        value.packageList.forEach(item => {\r\n          let str = \"group[\" + item + \"]\";\r\n          value[str] = item;\r\n        });\r\n        value.start_time = value.start_time.format(\"YYYY-MM-DD HH:mm:ss\");\r\n        value.end_time = value.end_time.format(\"YYYY-MM-DD HH:mm:ss\");\r\n        delete value.packageList;\r\n        const res = !this.props.isEdit\r\n          ? await addNotice(value)\r\n          : await updateNotice(value, id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  checkboxOnChange = checkedList => {\r\n    this.setState({\r\n      checkedList: checkedList\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Button,\r\n  Popover,\r\n  Popconfirm\r\n} from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getList, delNotice } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Notice_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  // onSearchData = async () => {\r\n  //   const res = await getChannelList(1, 20, this.state.inputParam);\r\n  //   if (res.status === 0) {\r\n  //     this.setState({\r\n  //       data: res.data,\r\n  //       count: parseInt(res.count)\r\n  //     });\r\n  //   } else {\r\n  //     message.error(\"网络问题\");\r\n  //   }\r\n  // };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  onDelete = async record => {\r\n    let res = await delNotice(record._id.$oid);\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.refreshPage();\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <LinkButton onClick={this.addData} size='default'>添加</LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size='default'>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={record => record._id.$oid}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 2000 }}\r\n        />\r\n        <Modal\r\n          title=\"新增公告\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"标题\",\r\n      dataIndex: \"title\"\r\n    },\r\n    {\r\n      title: \"品牌\",\r\n      dataIndex: \"package_ids\",\r\n      render: (text, record) => <span>{text.join(\",\")}</span>\r\n    },\r\n    {\r\n      title: \"代理\",\r\n      dataIndex: \"proxy_user_id\"\r\n    },\r\n    {\r\n      title: \"公告类型\",\r\n      dataIndex: \"type\",\r\n      render: (text, record) => (\r\n        <span>{text === \"1\" || text === 1 ? \"活动\" : \"公告\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"是否跑马灯\",\r\n      dataIndex: \"is_slider\",\r\n      render: (text, record) => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"公告内容\",\r\n      dataIndex: \"words\",\r\n      render: (text, record) => (\r\n        <Popover content={text} trigger=\"click\" overlayStyle={{ width: \"30%\" }}>\r\n          <div\r\n            style={{\r\n              width: \"100px\",\r\n              textOverflow: \"ellipsis\",\r\n              whiteSpace: \"nowrap\",\r\n              overflow: \"hidden\"\r\n            }}\r\n          >\r\n            {text}\r\n          </div>\r\n        </Popover>\r\n      ),\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {}, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n    {\r\n      title: \"开始时间\",\r\n      dataIndex: \"start_time\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"截止时间\",\r\n      dataIndex: \"end_time\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"create_time\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\r\n            编辑\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.onDelete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button type=\"danger\" size=\"small\">\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Notice_list;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Checkbox,\r\n  DatePicker,\r\n  message\r\n} from \"antd\";\r\nimport { packageList, saveCustomerService} from \"../../../api\";\r\nimport moment from \"moment\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      checkedList: this.props.isEdit\r\n        ? this.props.editDataRecord.package_ids.split(\",\").map(Number)\r\n        : []\r\n    };\r\n  }\r\n  getPackageList = async () => {\r\n    let res = await packageList();\r\n    if (res.status === 0) {\r\n      let arr = [];\r\n      res.data.forEach(element => {\r\n        arr.push({ label: element.name, value: element.id });\r\n      });\r\n      this.setState({\r\n        options: arr\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getPackageList();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"账号\">\r\n          {getFieldDecorator(\"user_id\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.user_id) : ''\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"昵称\">\r\n          {getFieldDecorator(\"nick_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权品牌\">\r\n          {getFieldDecorator(\"package_ids\", {\r\n            rules: [{ required: true, message: \"请选择品牌!\" }],\r\n            initialValue:\r\n              isEdit && editDataRecord.package_ids.split(\",\").map(Number)\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.state.options}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"账号类型\">\r\n          {getFieldDecorator(\"user_type\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.user_type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>人工充值</Radio>\r\n              <Radio value={2}>人工兑换</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"是否显示\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>是</Radio>\r\n              <Radio value={0}>否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"显示排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            rules: [{ required: true }],\r\n            initialValue: isEdit && editDataRecord.sort\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord\r\n        ? this.props.editDataRecord.user_id\r\n        : \"\";\r\n      if (!err) {\r\n        value.package_ids.forEach(item => {\r\n          let str = \"group[\" + item + \"]\";\r\n          value[str] = item;\r\n        });\r\n        delete value.package_ids;\r\n        const res = !this.props.isEdit\r\n          ? await saveCustomerService(value, \"add\")\r\n          : await saveCustomerService(value, \"edit\", id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  checkboxOnChange = checkedList => {\r\n    this.setState({\r\n      checkedList: checkedList\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Button\r\n} from \"antd\";\r\nimport { customerList, saveCustomerService } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport LinkButton from \"../../../components/link-button\";\r\n\r\nclass Customer_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await customerList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  onSearchData = async () => {\r\n    const res = await customerList(1, 20, this.input.input.value);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  onDelete = async record => {\r\n    let user_id = record.user_id;\r\n    let res = await saveCustomerService({ user_id }, \"del\");\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.refreshPage();\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n    this.input.handleReset();\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入支付名称\"\r\n              style={{ width: 150 }}\r\n              ref={input => (this.input = input)}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.addData} size=\"default\">\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"user_id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1300, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"新增\"\r\n          visible={this.state.isAddDataShow}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"user_id\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"nick_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"品牌ID\",\r\n      dataIndex: \"package_ids\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"是否显示\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record) => (text === 1 ? \"是\" : \"否\")\r\n    },\r\n    {\r\n      title: \"账号类型\",\r\n      dataIndex: \"user_type\",\r\n      width: 100,\r\n      render: text => (parseInt(text) === 1 ? \"人工充值\" : \"人工兑换\")\r\n    },\r\n    {\r\n      title: \"排序\",\r\n      dataIndex: \"sort\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"create_time\",\r\n      width: 200,\r\n      render: (text, record) => (\r\n        <span>{formateDate(record.create_time / 1000)}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"update_time\",\r\n      width: 200,\r\n      render: (text, record) => (\r\n        <span>{formateDate(record.update_time / 1000)}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\r\n            编辑\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.onDelete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button type=\"danger\" size=\"small\">\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Customer_list;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data } = this.props.detailRecord;\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey={(record,index)=>`${index}`}\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"check\") {\r\n      return [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    } else if (this.props.action === \"risk\") {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React from \"react\";\r\nimport { Form, Input, Radio, message } from \"antd\";\r\nimport { orderWithDrawReview, withDrawRemark } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\n\r\nclass EditForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const data = this.props.editData;\r\n    let review_status = parseInt(data.review_status);\r\n    let status = parseInt(data.status);\r\n    let orderStatusShow,\r\n      reviewShow,\r\n      confirmButtonShow,\r\n      submitRadio,\r\n      successRadio,\r\n      failRadio,\r\n      submitRadioChecked,\r\n      successRadioChecked,\r\n      failRadioChecked;\r\n    switch (status) {\r\n      case 1:\r\n        orderStatusShow = true;\r\n        confirmButtonShow = true;\r\n        break;\r\n      case 2:\r\n        orderStatusShow = true;\r\n        reviewShow = true;\r\n        switch (review_status) {\r\n          case 1:\r\n            successRadio = true;\r\n            failRadio = true;\r\n            submitRadioChecked = true;\r\n            break;\r\n          case 2:\r\n            submitRadio = true;\r\n            failRadio = true;\r\n            successRadioChecked = true;\r\n            break;\r\n          case 3:\r\n            successRadio = true;\r\n            submitRadio = true;\r\n            failRadioChecked = true;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      case 3:\r\n        orderStatusShow = true;\r\n        confirmButtonShow = true;\r\n        submitRadio = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return (\r\n      <Form labelCol={{ span: 4 }} labelAlign=\"left\">\r\n        <Form.Item label=\"订单ID\">\r\n          <Input\r\n            style={{ width: \"60%\" }}\r\n            value={data.order_id}\r\n            readOnly\r\n          ></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"用户ID\">\r\n          <Input style={{ width: \"60%\" }} value={data.user_id} readOnly></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"金额\">\r\n          <Input style={{ width: \"60%\" }} value={data.amount} readOnly></Input>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"订单状态:\"\r\n          style={orderStatusShow ? {} : { display: \"none\" }}\r\n        >\r\n          <Radio.Group\r\n            defaultValue={review_status}\r\n            onChange={e => (this.orderStatus = e.target.value)}\r\n          >\r\n            <Radio\r\n              value={1}\r\n              disabled={submitRadio}\r\n              checked={submitRadioChecked}\r\n            >\r\n              提交第三方\r\n            </Radio>\r\n            <Radio\r\n              value={2}\r\n              disabled={successRadio}\r\n              checked={successRadioChecked}\r\n            >\r\n              已成功\r\n            </Radio>\r\n            <Radio value={3} disabled={failRadio} checked={failRadioChecked}>\r\n              已失败\r\n            </Radio>\r\n          </Radio.Group>\r\n          <LinkButton\r\n            onClick={this.sumbitOrderStatus}\r\n            style={confirmButtonShow ? {} : { display: \"none\" }}\r\n          >\r\n            确认\r\n          </LinkButton>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"复审:\" style={reviewShow ? {} : { display: \"none\" }}>\r\n          <LinkButton\r\n            onClick={() => {\r\n              this.review(1);\r\n            }}\r\n          >\r\n            通过\r\n          </LinkButton>\r\n          <LinkButton\r\n            onClick={() => {\r\n              this.review(2);\r\n            }}\r\n          >\r\n            拒绝\r\n          </LinkButton>\r\n        </Form.Item>\r\n        <Form.Item label=\"备注[用户]\">\r\n          <Input\r\n            style={{ width: \"60%\" }}\r\n            onChange={e => {\r\n              this.remarkUser = e.target.value;\r\n            }}\r\n          ></Input>\r\n          <LinkButton onClick={this.sumbitRemarkUser}>确认</LinkButton>\r\n        </Form.Item>\r\n        <Form.Item label=\"备注[运营]\">\r\n          <Input\r\n            style={{ width: \"60%\" }}\r\n            onChange={e => {\r\n              this.remarkOperator = e.target.value;\r\n            }}\r\n          ></Input>\r\n          <LinkButton onClick={this.sumbitRemarkOperator}>确认</LinkButton>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  sumbitOrderStatus = async () => {\r\n    const data = this.props.editData;\r\n    if (!this.orderStatus) {\r\n      message.error(\"请选择订单状态！\");\r\n    } else {\r\n      let reqData = {\r\n        order_id: data.order_id,\r\n        review_status: this.orderStatus,\r\n        user_id: data.user_id,\r\n        review_type: 1,\r\n        is_pass: 1\r\n      };\r\n      const res = await orderWithDrawReview(reqData);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n      } else {\r\n        message.error(\"操作失败\");\r\n      }\r\n      this.props.onclose();\r\n    }\r\n  };\r\n  review = async is_pass => {\r\n    const data = this.props.editData;\r\n    let reqData = {\r\n      order_id: data.order_id,\r\n      review_status: data.review_status,\r\n      user_id: data.user_id,\r\n      review_type: 2,\r\n      is_pass: is_pass\r\n    };\r\n    const res = await orderWithDrawReview(reqData);\r\n    if (res.status === 0) {\r\n      message.info(res.msg);\r\n    } else {\r\n      message.error(\"操作失败\");\r\n    }\r\n    this.props.onclose();\r\n  };\r\n  sumbitRemarkUser = async () => {\r\n    console.log(this.remarkUser);\r\n    const data = this.props.editData;\r\n    if (!this.remarkUser) {\r\n      message.error(\"请输入有效内容！\");\r\n    } else {\r\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 1);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n      } else {\r\n        message.error(res.msg);\r\n      }\r\n    }\r\n  };\r\n  sumbitRemarkOperator = async () => {\r\n    console.log(this.remarkOperator);\r\n    const data = this.props.editData;\r\n    if (!this.remarkOperator) {\r\n      message.error(\"请输入有效内容！\");\r\n    } else {\r\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 2);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n      } else {\r\n        message.error(res.msg);\r\n      }\r\n    }\r\n  };\r\n}\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  Popover,\r\n  message\r\n} from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport {\r\n  withDraw,\r\n  downloadWithdrawList,\r\n  userDetail,\r\n  reviewInfo,\r\n  remarkInfo,\r\n  auditOrder\r\n} from \"../../../api\";\r\nimport WrappedComponent from \"./details\";\r\nimport WrappedEdit from \"./edit\";\r\n\r\nclass Withdraw_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: \"\",\r\n      filed: \"\",\r\n      inputParam: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\",\r\n      isBindInfoShow: false,\r\n      isEditShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await withDraw(page, limit, 3);\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await withDraw(1, 20, 3, this.state);\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  download = () => {\r\n    downloadWithdrawList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ filed: value })}\r\n            >\r\n              <Select.Option value=\"order_id\">订单id</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\r\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={this.handleChange}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.setState({\r\n                  start_time: val[0],\r\n                  end_time: val[1]\r\n                });\r\n              }}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ order_status: value })}\r\n            >\r\n              <Select.Option value=\"\">订单状态</Select.Option>\r\n              <Select.Option value=\"1\">待审核</Select.Option>\r\n              <Select.Option value=\"2\">处理中</Select.Option>\r\n              <Select.Option value=\"3\">已提交</Select.Option>\r\n              <Select.Option value=\"4\">已成功</Select.Option>\r\n              <Select.Option value=\"5\">已失败</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ type: value })}\r\n            >\r\n              <Select.Option value=\"\">兑换方式</Select.Option>\r\n              <Select.Option value=\"1\">alipay</Select.Option>\r\n              <Select.Option value=\"2\">bank</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 2600, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title={\r\n            this.action === \"check\"\r\n              ? \"审核信息\"\r\n              : this.action === \"risk\"\r\n              ? \"资金明细\"\r\n              : \"运营备注\"\r\n          }\r\n          visible={this.state.isDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            detailRecord={this.detailRecord}\r\n            action={this.action}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditShow: false });\r\n            }}\r\n            footer={null}\r\n            width=\"50%\"\r\n          >\r\n            <WrappedEdit\r\n              editData={this.editData}\r\n              onclose={() => {\r\n                this.setState({ isEditShow: false });\r\n                this.onSearchData();\r\n                // window.location.reload();\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"申请费率\",\r\n      dataIndex: \"handling_fee\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"实际费率\",\r\n      dataIndex: \"gold\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"兑换方式\",\r\n      dataIndex: \"order_type\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"待审核\";\r\n            break;\r\n          case \"2\":\r\n            word = \"处理中\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已提交\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已成功\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已失败\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 80,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"兑换账号\",\r\n      dataIndex: \"pay_account\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"账号名称\",\r\n      dataIndex: \"pay_name\",\r\n      width: 100\r\n    },\r\n\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 150,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 150,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"风控\",\r\n      dataIndex: \"\",\r\n      width: 200,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"risk\")}>\r\n            风控\r\n          </LinkButton>\r\n          <LinkButton>游戏数据</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <Popover\r\n            content={record.user_remark}\r\n            title={record.user_id + \"用户备注\"}\r\n            trigger=\"click\"\r\n          >\r\n            <LinkButton>用户备注</LinkButton>\r\n          </Popover>\r\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  getDetail = async (record, action) => {\r\n    this.action = action;\r\n    this.detailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.user_id\r\n    };\r\n    const res =\r\n      action === \"risk\"\r\n        ? await userDetail(1, 20, record.user_id)\r\n        : action === \"check\"\r\n        ? await reviewInfo(1, 20, record.order_id)\r\n        : await remarkInfo(1, 20, record.order_id);\r\n    if (res.status === 0) {\r\n      this.detailRecord.data = res.data;\r\n      this.detailRecord.count = res.count;\r\n    }\r\n    this.setState({ isDetailShow: true });\r\n  };\r\n  edit = async record => {\r\n    let reqData = {\r\n      flag: 3,\r\n      order_id: record.order_id\r\n    };\r\n    const res = await auditOrder(reqData);\r\n    if (res.status === 0) {\r\n      this.editData = res.data[0];\r\n      this.setState({ isEditShow: true });\r\n    } else {\r\n      message.error(\"操作失败\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default Withdraw_list;\r\n","import React, { Component } from \"react\";\r\nimport { Progress } from \"antd\";\r\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/addon/lint/lint.css\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/mode/javascript/javascript.js\";\r\nimport \"codemirror/addon/lint/lint.js\";\r\nimport \"codemirror/addon/lint/json-lint.js\";\r\nimport \"codemirror/theme/rubyblue.css\";\r\n\r\nexport class MyProgress extends React.Component {\r\n  state = {\r\n    percent: 0\r\n  };\r\n  handle;\r\n  render() {\r\n    return (\r\n      <Progress\r\n        type=\"circle\"\r\n        strokeColor={{\r\n          \"0%\": \"#108ee9\",\r\n          \"100%\": \"#87d068\"\r\n        }}\r\n        percent={this.state.percent}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst options = {\r\n  lineNumbers: true, //显示行号\r\n  mode: { name: \"javascript\", json: true }, //定义mode\r\n  theme: \"rubyblue\" //选中的theme\r\n};\r\nexport class CodeEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const conf_val = JSON.stringify([JSON.parse(this.props.conf_val)], null, 2);\r\n    //使用默认传过来的onChange事件\r\n    const { onChange } = this.props;\r\n    return (\r\n      <div className=\"json-editor\">\r\n        <CodeMirror\r\n          // ref=\"editor-sql\"\r\n          value={conf_val}\r\n          onChange={(editor, data, value) => {\r\n            //返回value值给edit中的form\r\n            return onChange(JSON.stringify(JSON.parse(value)[0]));\r\n          }}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { saveConf } from \"../../../api/index\";\r\nimport { CodeEditor } from \"../../../components/myComponents\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  let getValueFromEvent = e => {\r\n    console.log(\"Upload event:\", e);\r\n    // if (Array.isArray(e)) {\r\n    //   return e;\r\n    // }\r\n    // return e && e.fileList;\r\n  };\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      console.log(value);\r\n      if (!err) {\r\n        if (props.action === \"edit\") {\r\n          value.id = record.id;\r\n        }\r\n        const res = await saveConf(value, props.action);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Form labelCol={{ span: 3 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\r\n      <Form.Item label=\"配置名\">\r\n        {getFieldDecorator(\"name\", {\r\n          rules: [{ required: true, message: \"请输入配置名\" }],\r\n          initialValue: props.action === \"add\" ? \"\" : props.record.name\r\n        })(<Input style={{ width: \"50%\" }} />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"配置Key\">\r\n        {getFieldDecorator(\"conf_key\", {\r\n          rules: [{ required: true, message: \"请输入配置Key\" }],\r\n          initialValue: props.action === \"add\" ? \"\" : props.record.conf_key\r\n        })(<Input style={{ width: \"50%\" }} />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"配置Val\">\r\n        {getFieldDecorator(\"conf_val\", {\r\n          rules: [{ required: true, message: \"请输入配置Val\" }]\r\n        })(\r\n          props.action === \"add\" ? (\r\n            <Input style={{ width: \"50%\" }} />\r\n          ) : (\r\n            <CodeEditor conf_val={props.record.conf_val} />\r\n          )\r\n        )}\r\n        <span style={props.action === \"add\" ? { display: \"none\" } : {}}>\r\n          请注意首尾中括号【】为代码编辑器携带符号，实际参数不带首尾中括号,请勿修改删除【】\r\n        </span>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Button\r\n} from \"antd\";\r\nimport { configList, saveConf } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Config extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await configList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Input\r\n              style={{ width: 120 }}\r\n              placeholder=\"请输入配置Key\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              size=\"default\"\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton type=\"primary\" onClick={this.onAdd} size=\"default\">\r\n              添加\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          // scroll={{ y: \"100%\" }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"add\" ? \"添加配置\" : \"编辑配置\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n            width=\"50%\"\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"配置名\",\r\n      dataIndex: \"name\"\r\n    },\r\n    {\r\n      title: \"配置Key\",\r\n      dataIndex: \"conf_key\"\r\n    },\r\n    {\r\n      title: \"配置值\",\r\n      dataIndex: \"conf_val\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"更新时间\",\r\n      dataIndex: \"created_at\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\r\n            编辑\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.onDelete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button type=\"danger\" size=\"small\">\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let conf_key = this.input.input.value;\r\n    const res = await configList(1, 20, conf_key);\r\n    this.setState({ data: res.data, count: res.count });\r\n  };\r\n  onDelete = async record => {\r\n    let res = await saveConf({ id: record.id }, \"del\");\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功:\" + res.msg);\r\n      this.getInitialData(this.state.page, this.state.pageSize);\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  onAdd = async () => {\r\n    this.action = \"add\";\r\n    this.setState({\r\n      isEditFormShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.action = \"edit\";\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditFormShow: true\r\n    });\r\n  };\r\n}\r\nexport default Config;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { changeUserBalance } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  let params = JSON.parse(record.params);\r\n\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        let obj = {\r\n          \"data[id]\": record.id,\r\n          \"data[params]\": record.params,\r\n          \"data[status]\": 2\r\n        };\r\n        if (props.action === \"review\") {\r\n          obj[\"data[pay_reason]\"] = value.reason;\r\n          obj[\"data[status]\"] = 1;\r\n        }\r\n        const res = await changeUserBalance(obj);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <span>\r\n        ID:{params.user_id} 资金变动：{params.amount} 复审\r\n        {props.action === \"review\" ? \"备注\" : \"拒绝\"}\r\n      </span>\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        labelAlign=\"left\"\r\n        onSubmit={handleEditSubmit}\r\n      >\r\n        <Form.Item\r\n          style={{ display: props.action === \"review\" ? \"block\" : \"none\" }}\r\n        >\r\n          {getFieldDecorator(\"reason\", {\r\n            initialValue: params.reason\r\n          })(<Input.TextArea autosize={{ minRows: 5, maxRows: 10 }} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            确定\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Button,\r\n  Select\r\n} from \"antd\";\r\nimport { tasksList, saveConf, reviewTask } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\n\r\nclass Tasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await tasksList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.start_time = val[0];\r\n                this.end_time = val[1];\r\n              }}\r\n            ></MyDatePicker>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Select\r\n              placeholder=\"任务状态\"\r\n              style={{ width: 150 }}\r\n              onChange={value => (this.status = value)}\r\n            >\r\n              <Select.Option value=\"0\">待操作</Select.Option>\r\n              <Select.Option value=\"1\">已复审</Select.Option>\r\n              <Select.Option value=\"2\">复审拒绝</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入创建人昵称\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n              size=\"normal\"\r\n            ></LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size=\"normal\">\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState(\r\n                {\r\n                  page: page\r\n                },\r\n                () => {\r\n                  this.onSearch();\r\n                }\r\n              );\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState(\r\n                {\r\n                  pageSize: size\r\n                },\r\n                () => {\r\n                  this.onSearch();\r\n                }\r\n              );\r\n            }\r\n          }}\r\n          scroll={{ x: 2000 }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"review\" ? \"复审\" : \"拒绝\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"任务ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"任务信息\",\r\n      dataIndex: \"params\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"任务来源\",\r\n      dataIndex: \"task_type\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          {parseInt(text) === 0\r\n            ? \"用户列表资金变动\"\r\n            : parseInt(text) === 1\r\n            ? \"代理配置列表资金变动\"\r\n            : parseInt(text) === 2\r\n            ? \"用户重置密码\"\r\n            : \"\"}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"创建人昵称\",\r\n      dataIndex: \"operator_nick\"\r\n    },\r\n    {\r\n      title: \"复审人昵称\",\r\n      dataIndex: \"review_nick\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\"\r\n    },\r\n    {\r\n      title: \"更新时间\",\r\n      dataIndex: \"updated_at\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (text, record, index) => {\r\n        let res;\r\n        switch (text) {\r\n          case 0:\r\n            res = (\r\n              <div>\r\n                <LinkButton size=\"small\" onClick={() => this.review(record)}>\r\n                  复审\r\n                </LinkButton>\r\n                <LinkButton\r\n                  size=\"small\"\r\n                  type=\"danger\"\r\n                  onClick={() => this.refuse(record)}\r\n                >\r\n                  拒绝\r\n                </LinkButton>\r\n              </div>\r\n            );\r\n            break;\r\n          case 1:\r\n            res = <LinkButton size=\"small\">已复审</LinkButton>;\r\n            break;\r\n          case 2:\r\n            res = (\r\n              <LinkButton size=\"small\" type=\"danger\">\r\n                复审拒绝\r\n              </LinkButton>\r\n            );\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        return res;\r\n      }\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      start_time: this.start_time || \"\",\r\n      end_time: this.end_time || \"\",\r\n      // status: this.status || \"\",\r\n      operator_nick: this.input.input.value || \"\"\r\n    };\r\n    if (this.status) {\r\n      value.status = this.status;\r\n    }\r\n    const res = await tasksList(this.state.page, this.state.pageSize, value);\r\n    this.setState({ data: res.data, count: res.count });\r\n  };\r\n  review = async record => {\r\n    if (record.task_type === 2) {\r\n      let value = {\r\n        id: record.id,\r\n        params: record.params,\r\n        status: 1\r\n      };\r\n      const res = await reviewTask(value);\r\n      if (res.status === 0) {\r\n        message.success(\"提交成功\" + res.msg);\r\n        this.onSearch();\r\n      } else {\r\n        message.error(\"出错了：\" + res.msg);\r\n      }\r\n    } else {\r\n      this.action = \"review\";\r\n      this.editDataRecord = record;\r\n      this.setState({ isEditFormShow: true });\r\n    }\r\n  };\r\n  refuse = async record => {\r\n    if (record.task_type === 2) {\r\n      let value = {\r\n        id: record.id,\r\n        params: record.params,\r\n        status: 2\r\n      };\r\n      const res = await reviewTask(value);\r\n      if (res.status === 0) {\r\n        message.success(\"提交成功\" + res.msg);\r\n        this.onSearch();\r\n      } else {\r\n        message.error(\"出错了：\" + res.msg);\r\n      }\r\n    } else {\r\n      this.action = \"refuse\";\r\n      this.editDataRecord = record;\r\n      this.setState({ isEditFormShow: true });\r\n    }\r\n  };\r\n}\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { Modal, Table } from \"antd\";\r\nimport {} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\nconst EditForm = props => {\r\n  const data = props.record;\r\n  function checkQrcode(record) {\r\n    Modal.success({\r\n      title: \"收款码\",\r\n      content: (<div><QRCode value={record.pay_url}></QRCode></div>),\r\n      width: 250\r\n    });\r\n  }\r\n  let initColumns = [\r\n    {\r\n      title: \"账号类型\",\r\n      dataIndex: \"type\",\r\n      render: (text, record, index) => {\r\n        let res;\r\n        switch (text) {\r\n          case 1:\r\n            res = \"微信\";\r\n            break;\r\n          case 2:\r\n            res = \"alipay\";\r\n            break;\r\n          case 3:\r\n            res = \"银行卡\";\r\n            break;\r\n          case 4:\r\n            res = \"花呗\";\r\n            break;\r\n          case 5:\r\n            res = \"信用卡\";\r\n            break;\r\n          default:\r\n            res = \"\";\r\n            break;\r\n        }\r\n        return <span>{res}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"账户名\",\r\n      dataIndex: \"account_name\"\r\n    },\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"account_num\"\r\n    },\r\n    {\r\n      title: \"开户行\",\r\n      dataIndex: \"bank_name\"\r\n    },\r\n    {\r\n      title: \"收款码\",\r\n      dataIndex: \"pay_url\",\r\n      render: (text, record, index) => {\r\n        if (text && text.length > 0) {\r\n          return (\r\n            <LinkButton onClick={() => checkQrcode(record)}>预览</LinkButton>\r\n          );\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: \"状态[收款码审核]\",\r\n      dataIndex: \"status\"\r\n    },\r\n    {\r\n      title: \"绑定时间\",\r\n      dataIndex: \"created_at\"\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"updated_at\"\r\n    }\r\n  ];\r\n  return (\r\n    <Table\r\n      bordered\r\n      rowKey={(record, index) => `${index}`}\r\n      dataSource={data}\r\n      columns={initColumns}\r\n      size=\"small\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message,  Input, Select } from \"antd\";\r\nimport { allAccountList, resetPassword, accountList } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\n\r\nclass AccountList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await allAccountList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Select defaultValue=\"user_id\" style={{ width: 150 }}>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入user_id\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n            />\r\n            {/* <br />\r\n            <br />\r\n            <LinkButton style={{ float: \"right\" }} onClick={this.download} icon=\"download\">\r\n            </LinkButton> */}\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          // scroll={{ x: 1800 }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title=\"绑定收付款账户详情\"\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            width=\"60%\"\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\"\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\"\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\"\r\n    },\r\n    {\r\n      title: \"资金密码操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <LinkButton\r\n          size=\"small\"\r\n          onClick={() => {\r\n            this.resetPassword(record);\r\n          }}\r\n        >\r\n          重置\r\n        </LinkButton>\r\n      )\r\n    },\r\n    {\r\n      title: \"绑定账号\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <LinkButton\r\n          size=\"small\"\r\n          onClick={() => {\r\n            this.checkAccount(record);\r\n          }}\r\n        >\r\n          查看\r\n        </LinkButton>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      user_id: this.input.input.value\r\n    };\r\n    const res = await allAccountList(\r\n      this.state.page,\r\n      this.state.pageSize,\r\n      value\r\n    );\r\n    this.setState({ data: res.data, count: parseInt(res.count) });\r\n  };\r\n  resetPassword = async record => {\r\n    const res = await resetPassword(record.user_id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  checkAccount = async record => {\r\n    const res = await accountList(record.user_id);\r\n    this.editDataRecord = res.data;\r\n    if (res.status !== 0) {\r\n      message.error(res.msg);\r\n    }\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  // download=async()=>{\r\n\r\n  // }\r\n}\r\nexport default AccountList;\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nconst EditForm = props => {\r\n  const data = props.record||[];\r\n  const action = props.action;\r\n  let initColumns = [];\r\n  switch (action) {\r\n    case \"detail\":\r\n      initColumns = [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"user_id\"\r\n        },\r\n        {\r\n          title: \"申请数量\",\r\n          dataIndex: \"\"\r\n        },\r\n        {\r\n          title: \"成交数量\",\r\n          dataIndex: \"\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"\"\r\n        }\r\n      ];\r\n      break;\r\n    case \"check\":\r\n      initColumns = [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n      break;\r\n    case \"operatorRemark\":\r\n      initColumns = [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <Table\r\n      bordered\r\n      rowKey={(record, index) => `${index}`}\r\n      dataSource={data}\r\n      columns={initColumns}\r\n      size=\"small\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Select\r\n} from \"antd\";\r\nimport {\r\n  sellGoldApplyList,\r\n  tradeRemark,\r\n  sellGoldInfoList,\r\n  reviewInfo2,\r\n  remarkInfo2\r\n} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass Tasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false,\r\n    };\r\n    this.filed = \"id\";\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await sellGoldApplyList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.start_time = val[0];\r\n                this.end_time = val[1];\r\n              }}\r\n            ></MyDatePicker>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Select\r\n              defaultValue=\"id\"\r\n              style={{ width: 150 }}\r\n              onChange={value => (this.filed = value)}\r\n            >\r\n              <Select.Option value=\"id\">ID</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"source\">所属代理</Select.Option>\r\n              <Select.Option value=\"group\">所属品牌</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入关键字搜索\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onChange={value => (this.status = value)}\r\n            >\r\n              <Select.Option value=\"\">状态</Select.Option>\r\n              <Select.Option value=\"1\">待初审</Select.Option>\r\n              <Select.Option value=\"2\">初审通过</Select.Option>\r\n              <Select.Option value=\"3\">初审拒绝</Select.Option>\r\n              <Select.Option value=\"4\">复审通过</Select.Option>\r\n              <Select.Option value=\"5\">复审拒绝</Select.Option>\r\n              <Select.Option value=\"6\">已下架</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()}>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: parseInt(this.state.count),\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1800 }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={\r\n              this.action === \"detail\"\r\n                ? \"详情\"\r\n                : this.action === \"check\"\r\n                ? \"审核详情\"\r\n                : \"运营备注详情\"\r\n            }\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\"\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\"\r\n    },\r\n    {\r\n      title: \"兑换单价\",\r\n      dataIndex: \"exchange_price\"\r\n    },\r\n    {\r\n      title: \"上架金币数\",\r\n      dataIndex: \"gold\"\r\n    },\r\n    {\r\n      title: \"上架金币余额\",\r\n      dataIndex: \"last_gold\"\r\n    },\r\n    {\r\n      title: \"最低兑换额\",\r\n      dataIndex: \"min_gold\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (text, record, index) => {\r\n        let res;\r\n        switch (parseInt(text)) {\r\n          case 1:\r\n            res = (\r\n              <span>\r\n                <LinkButton size=\"small\">初审通过</LinkButton>\r\n                <LinkButton size=\"small\">初审拒绝</LinkButton>\r\n              </span>\r\n            );\r\n            break;\r\n          case 2:\r\n            res = (\r\n              <span>\r\n                <LinkButton size=\"small\">复审通过</LinkButton>\r\n                <LinkButton size=\"small\">复审拒绝</LinkButton>\r\n              </span>\r\n            );\r\n            break;\r\n          case 3:\r\n            res = <span>一审拒绝</span>;\r\n            break;\r\n          case 4:\r\n            res = <span>已上架</span>;\r\n            break;\r\n          case 5:\r\n            res = <span>二审拒绝</span>;\r\n            break;\r\n          case 6:\r\n            res = <span>已下架</span>;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        return res;\r\n      }\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"风控\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton size=\"small\" type=\"dashed\">\r\n            风控\r\n          </LinkButton>\r\n          <LinkButton size=\"small\" type=\"dashed\">\r\n            游戏数据\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton size=\"small\" onClick={() => this.edit(record)}>\r\n            编辑\r\n          </LinkButton>\r\n          <LinkButton size=\"small\" onClick={() => this.checkDetail(record, \"detail\")}>\r\n            详情\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            type=\"default\"\r\n            onClick={() => this.checkDetail(record, \"check\")}\r\n          >\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            type=\"default\"\r\n            onClick={() => this.checkDetail(record, \"userRemark\")}\r\n          >\r\n            用户备注\r\n          </LinkButton>\r\n          <LinkButton\r\n            size=\"small\"\r\n            type=\"default\"\r\n            onClick={() => this.checkDetail(record, \"operatorRemark\")}\r\n          >\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      end_time: this.start_time || \"\",\r\n      start_time: this.start_time || \"\",\r\n      status: this.status || \"\",\r\n      [this.filed]: this.input.input.value\r\n    };\r\n    const res = await sellGoldApplyList(\r\n      this.state.page,\r\n      this.state.pageSize,\r\n      value\r\n    );\r\n    this.setState({ data: res.data, count: res.count });\r\n  };\r\n  edit = async record => {\r\n    Modal.info({\r\n      title: \"编辑\",\r\n      okText: \"关闭\",\r\n      okType: \"default\",\r\n      width: \"50%\",\r\n      content: (\r\n        <div>\r\n          <div>\r\n            <span>备注[用户]&nbsp;&nbsp;&nbsp;</span>\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"请输入备注内容，用户查看使用\"\r\n              ref={Input => {\r\n                this.userRemarkInput = Input;\r\n              }}\r\n            />\r\n            <span>&nbsp;&nbsp;&nbsp;</span>\r\n            <LinkButton\r\n              onClick={() => {\r\n                this.editComfirm(record, 1);\r\n              }}\r\n            >\r\n              确定\r\n            </LinkButton>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <span>备注[运营]&nbsp;&nbsp;&nbsp;</span>\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"请输入备注内容，运营人员记录使用\"\r\n              ref={Input => {\r\n                this.operatorRemarkInput = Input;\r\n              }}\r\n            />\r\n            <span>&nbsp;&nbsp;&nbsp;</span>\r\n            <LinkButton\r\n              onClick={() => {\r\n                this.editComfirm(record, 2);\r\n              }}\r\n            >\r\n              确定\r\n            </LinkButton>\r\n          </div>\r\n        </div>\r\n      )\r\n    });\r\n  };\r\n  editComfirm = async (record, remark_type) => {\r\n    let value = {\r\n      id: record.id,\r\n      temarks:\r\n        remark_type === 1\r\n          ? this.userRemarkInput.input.value\r\n          : this.operatorRemarkInput.input.value,\r\n      remark_type: remark_type\r\n    };\r\n    if (remark_type === 2) {\r\n      value.type = 6;\r\n    }\r\n    const res = await tradeRemark(value);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  checkDetail = async (record, action) => {\r\n    if (action === \"userRemark\") {\r\n      Modal.info({\r\n        title: `订单ID为【${record.id}】的用户备注`,\r\n        content: <div>{record.user_remark||'无'}</div>,\r\n        okText:'关闭'\r\n      });\r\n    } else {\r\n      let res;\r\n      switch (action) {\r\n        case \"detail\":\r\n          res = await sellGoldInfoList(1, 100, record.id);\r\n          break;\r\n        case \"check\":\r\n          res = await reviewInfo2(1, 100, record.id);\r\n          break;\r\n        case \"operatorRemark\":\r\n          res = await remarkInfo2(1, 100, record.id);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.editDataRecord = res.data;\r\n      this.action = action;\r\n      this.setState({ isEditFormShow: true });\r\n    }\r\n  };\r\n}\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { changeUserBalance } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  let params = JSON.parse(record.params);\r\n\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        let obj = {\r\n          \"data[id]\": record.id,\r\n          \"data[params]\": record.params,\r\n          \"data[status]\": 2\r\n        };\r\n        if (props.action === \"review\") {\r\n          obj[\"data[pay_reason]\"] = value.reason;\r\n          obj[\"data[status]\"] = 1;\r\n        }\r\n        const res = await changeUserBalance(obj);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <span>\r\n        ID:{params.user_id} 资金变动：{params.amount} 复审\r\n        {props.action === \"review\" ? \"备注\" : \"拒绝\"}\r\n      </span>\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        labelAlign=\"left\"\r\n        onSubmit={handleEditSubmit}\r\n      >\r\n        <Form.Item\r\n          style={{ display: props.action === \"review\" ? \"block\" : \"none\" }}\r\n        >\r\n          {getFieldDecorator(\"reason\", {\r\n            initialValue: params.reason\r\n          })(<Input.TextArea autosize={{ minRows: 5, maxRows: 10 }} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            确定\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input, Select } from \"antd\";\r\nimport { sellGoldOrderList } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\n\r\nclass Tasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await sellGoldOrderList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } \r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.start_time = val[0];\r\n                this.end_time = val[1];\r\n              }}\r\n            ></MyDatePicker>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Select\r\n              placeholder=\"任务状态\"\r\n              style={{ width: 150 }}\r\n              onChange={value => (this.status = value)}\r\n            >\r\n              <Select.Option value=\"0\">待操作</Select.Option>\r\n              <Select.Option value=\"1\">已复审</Select.Option>\r\n              <Select.Option value=\"2\">复审拒绝</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入创建人昵称\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()}>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1800 }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"review\" ? \"复审\" : \"拒绝\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"买家ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"买家昵称\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"卖家ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"卖家昵称\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"兑换单价\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"支付金额\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"兑换金额\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"完成时间\",\r\n      dataIndex: \"\"\r\n    }\r\n  ];\r\n  // onSearch = async () => {\r\n  //   let value = {\r\n  //     end_time: this.start_time || \"\",\r\n  //     start_time: this.start_time || \"\",\r\n  //     status: this.status || \"\",\r\n  //     operator_nick: this.input.input.value || \"\"\r\n  //   };\r\n  //   const res = await tasksList(this.state.page, this.state.pageSize, value);\r\n  //   this.setState({ data: res.data, count: res.count });\r\n  // };\r\n  review = async record => {\r\n    this.action = \"review\";\r\n    this.editDataRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  refuse = async record => {\r\n    this.action = \"refuse\";\r\n    this.editDataRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n}\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\r\nimport { saveActivityConfig } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  const action = props.action;\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        if (action === \"edit\") {\r\n          value.id = record.id;\r\n        }\r\n        const res = await saveActivityConfig(value);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Form\r\n        labelCol={{ span: 6 }}\r\n        labelAlign=\"left\"\r\n        onSubmit={handleEditSubmit}\r\n      >\r\n        <Form.Item label=\"活动名称\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.name\r\n          })(<Input style={{ width: \"40%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"品牌\">\r\n          {getFieldDecorator(\"package_id\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.package_id\r\n          })(\r\n            <Select style={{ width: \"40%\" }}>\r\n              <Select.Option value=\"1\">博臣娱乐</Select.Option>\r\n              <Select.Option value=\"2\">机器人首领</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"is_close\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.is_close\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">关闭</Radio>\r\n              <Radio value=\"2\">开启</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需要绑定电话\">\r\n          {getFieldDecorator(\"need_mobile\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.need_mobile\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">是</Radio>\r\n              <Radio value=\"2\">否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需要绑定银行卡\">\r\n          {getFieldDecorator(\"need_bankcard\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.need_bankcard\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">是</Radio>\r\n              <Radio value=\"2\">否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"排序\">\r\n          {getFieldDecorator(\"order_by\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.order_by\r\n          })(<Input style={{ width: \"40%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"活动内容\">\r\n          {getFieldDecorator(\"info\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.info\r\n          })(\r\n            <Input.TextArea\r\n              style={{ width: \"70%\" }}\r\n              autosize={{ maxRows: 10 }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            确定\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Input, Popconfirm } from \"antd\";\r\nimport {\r\n  activityConfigList,\r\n  delActivityConfig\r\n} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport WrappedEditForm from \"./editForm\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass AccountList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await activityConfigList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.setState({\r\n                  start_time: val[0],\r\n                  end_time: val[1]\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入活动id\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n              size=\"default\"\r\n            ></LinkButton>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton onClick={this.add} size=\"default\">\r\n              添加\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"add\" ? \"添加\" : \"编辑\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"活动名称\",\r\n      dataIndex: \"name\"\r\n    },\r\n    {\r\n      title: \"品牌ID\",\r\n      dataIndex: \"package_id\"\r\n    },\r\n    {\r\n      title: \"活动状态\",\r\n      dataIndex: \"is_close\",\r\n      render: text => <span>{text === \"1\" ? \"关闭\" : \"开启\"}</span>\r\n    },\r\n    {\r\n      title: \"需要绑定电话\",\r\n      dataIndex: \"need_mobile\",\r\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"需要绑定银行卡\",\r\n      dataIndex: \"need_bankcard\",\r\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"活动内容\",\r\n      dataIndex: \"info\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"排序\",\r\n      dataIndex: \"order_by\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            onClick={() => {\r\n              this.edit(record);\r\n            }}\r\n          >\r\n            编辑\r\n          </LinkButton>\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.delete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <LinkButton type=\"danger\" size=\"small\">\r\n              删除\r\n            </LinkButton>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      user_id: this.input.input.value\r\n    };\r\n    const res = await activityConfigList(\r\n      this.state.page,\r\n      this.state.pageSize,\r\n      value\r\n    );\r\n    this.setState({ data: res.data, count: parseInt(res.count) });\r\n  };\r\n  add = async record => {\r\n    this.action = \"add\";\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  edit = async record => {\r\n    this.action = \"edit\";\r\n    this.editDataRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  delete = async record => {\r\n    const res = await delActivityConfig(record.id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n    this.getInitialData(1, 20);\r\n  };\r\n}\r\nexport default AccountList;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, message, Input, Popconfirm, Modal } from \"antd\";\r\nimport { activityList } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass AccountList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await activityList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(\"接口异常,未检索到数据\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.start_time = val[0];\r\n                this.end_time = val[1];\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入活动id\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n              size=\"default\"\r\n            ></LinkButton>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton onClick={this.add} size=\"default\">\r\n              添加\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\"\r\n    },\r\n    {\r\n      title: \"活动Id\",\r\n      dataIndex: \"activity_id\"\r\n    },\r\n    {\r\n      title: \"活动名称\",\r\n      dataIndex: \"activity_name\"\r\n    },\r\n    {\r\n      title: \"品牌Id\",\r\n      dataIndex: \"package_id\"\r\n    },\r\n    {\r\n      title: \"领取日期\",\r\n      dataIndex: \"receive_date\"\r\n    },\r\n    {\r\n      title: \"领取详情\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            onClick={() => {\r\n              this.check(record);\r\n            }}\r\n          >\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: formateDate\r\n    }\r\n  ];\r\n  check=(record)=>{\r\n    Modal.info({\r\n      title:\"领取详情\",\r\n      content:record.receive_info\r\n    })\r\n  }\r\n  onSearch = async () => {\r\n    let value = {\r\n      user_id: this.input.input.value,\r\n      start_time: this.start_time,\r\n      end_time: this.end_time\r\n    };\r\n    const res = await activityList(this.state.page, this.state.pageSize, value);\r\n    if (res.status === 0) {\r\n      this.setState({ data: res.data, count: parseInt(res.count) });\r\n    } else {\r\n      message.error(\"接口异常,未检索到数据\");\r\n    }\r\n  };\r\n}\r\nexport default AccountList;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\r\nimport { saveActivityConfig } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  const action = props.action;\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        if (action === \"edit\") {\r\n          value.id = record.id;\r\n        }\r\n        const res = await saveActivityConfig(value);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Form\r\n        labelCol={{ span: 6 }}\r\n        labelAlign=\"left\"\r\n        onSubmit={handleEditSubmit}\r\n      >\r\n        <Form.Item label=\"活动名称\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.name\r\n          })(<Input style={{ width: \"40%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"品牌\">\r\n          {getFieldDecorator(\"package_id\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.package_id\r\n          })(\r\n            <Select style={{ width: \"40%\" }}>\r\n              <Select.Option value=\"1\">博臣娱乐</Select.Option>\r\n              <Select.Option value=\"2\">机器人首领</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"is_close\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.is_close\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">关闭</Radio>\r\n              <Radio value=\"2\">开启</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需要绑定电话\">\r\n          {getFieldDecorator(\"need_mobile\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.need_mobile\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">是</Radio>\r\n              <Radio value=\"2\">否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需要绑定银行卡\">\r\n          {getFieldDecorator(\"need_bankcard\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.need_bankcard\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">是</Radio>\r\n              <Radio value=\"2\">否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"排序\">\r\n          {getFieldDecorator(\"order_by\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.order_by\r\n          })(<Input style={{ width: \"40%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"活动内容\">\r\n          {getFieldDecorator(\"info\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.info\r\n          })(\r\n            <Input.TextArea\r\n              style={{ width: \"70%\" }}\r\n              autosize={{ maxRows: 10 }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            确定\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Input, Popconfirm } from \"antd\";\r\nimport { giftVoucherList, delActivityConfig } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport WrappedEditForm from \"./editForm\";\r\n\r\nclass AccountList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await giftVoucherList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(\"接口异常,未检索到数据\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.setState({\r\n                  start_time: val[0],\r\n                  end_time: val[1]\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入活动id\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n              size=\"default\"\r\n            ></LinkButton>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton onClick={this.add} size=\"default\">\r\n              添加\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"add\" ? \"添加\" : \"编辑\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"领取人ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"领取人昵称\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"代理ID\",\r\n      dataIndex: \"\",\r\n      render: text => <span>{text === \"1\" ? \"关闭\" : \"开启\"}</span>\r\n    },\r\n    {\r\n      title: \"code\",\r\n      dataIndex: \"\",\r\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"领取金额\",\r\n      dataIndex: \"\",\r\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"领取时间\",\r\n      dataIndex: \"order_by\"\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            onClick={() => {\r\n              this.edit(record);\r\n            }}\r\n          >\r\n            编辑\r\n          </LinkButton>\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.delete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <LinkButton type=\"danger\" size=\"small\">\r\n              删除\r\n            </LinkButton>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      user_id: this.input.input.value\r\n    };\r\n    const res = await giftVoucherList(\r\n      this.state.page,\r\n      this.state.pageSize,\r\n      value\r\n    );\r\n    this.setState({ data: res.data, count: parseInt(res.count) });\r\n  };\r\n  add = async record => {\r\n    this.action = \"add\";\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  edit = async record => {\r\n    this.action = \"edit\";\r\n    this.editDataRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  delete = async record => {\r\n    const res = await delActivityConfig(record.id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n    this.getInitialData(1, 20);\r\n  };\r\n}\r\nexport default AccountList;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data } = this.props.detailRecord;\r\n    console.log(data);\r\n\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey={(record,index)=>`${index}`}\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"check\") {\r\n      return [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    } else if (this.props.action === \"risk\") {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\r\nimport { withDrawReview } from \"../../../api/index\";\r\nclass EditForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      review_status: \"\"\r\n    };\r\n  }\r\n  render() {\r\n    const record = this.props.record;\r\n    return (\r\n      <div>\r\n        <div>订单ID:{record.order_id}</div>\r\n        <div>用户ID:{record.user_id}</div>\r\n        <div>金额:{record.amount}</div>\r\n        <div>\r\n          订单状态:\r\n          <Radio.Group\r\n            onChange={e => {\r\n              this.setState({ review_status: e.target.value });\r\n            }}\r\n            value={this.state.review_status}\r\n          >\r\n            <Radio value={2}>已成功</Radio>\r\n            <Radio value={3}>已失败</Radio>\r\n          </Radio.Group>\r\n          <Button onClick={() => this.orderStatus(record)}>确认</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  orderStatus = async record => {\r\n    const res = await withDrawReview(\r\n      record.order_id,\r\n      record.user_id,\r\n      this.state.review_status\r\n    );\r\n    message.info(res.msg);\r\n  };\r\n}\r\n\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, Icon, Input, Select, Popover } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport {\r\n  withDraw,\r\n  downloadWithdrawList,\r\n  userDetail,\r\n  reviewInfo,\r\n  remarkInfo\r\n} from \"../../../api\";\r\nimport WrappedComponent from \"./details\";\r\nimport EditForm from \"./editForm\";\r\n\r\nclass Withdraw_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: 5,\r\n      filed: \"\",\r\n      inputParam: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\",\r\n      isBindInfoShow: false,\r\n      isEditFormShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await withDraw(page, limit, 1, this.state);\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await withDraw(1, 20, 1, this.state);\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  download = () => {\r\n    downloadWithdrawList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ filed: value })}\r\n            >\r\n              <Select.Option value=\"order_id\">订单id</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"replace_id\">被赠人ID</Select.Option>\r\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\r\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={this.handleChange}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.setState({\r\n                  start_time: val[0],\r\n                  end_time: val[1]\r\n                });\r\n              }}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ order_status: value })}\r\n            >\r\n              <Select.Option value=\"\">订单状态</Select.Option>\r\n              <Select.Option value=\"1\">待审核</Select.Option>\r\n              <Select.Option value=\"2\">处理中</Select.Option>\r\n              <Select.Option value=\"3\">已提交</Select.Option>\r\n              <Select.Option value=\"4\">已成功</Select.Option>\r\n              <Select.Option value=\"5\">已失败</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 2400, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title={\r\n            this.action === \"check\"\r\n              ? \"审核信息\"\r\n              : this.action === \"risk\"\r\n              ? \"资金明细\"\r\n              : \"运营备注\"\r\n          }\r\n          visible={this.state.isDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            detailRecord={this.detailRecord}\r\n            action={this.action}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n            width=\"70%\"\r\n          >\r\n            <EditForm record={this.editRecord} />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"申请费率\",\r\n      dataIndex: \"handling_fee\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"实际费率\",\r\n      dataIndex: \"gold\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"兑换方式\",\r\n      dataIndex: \"order_type\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"被赠人ID\",\r\n      dataIndex: \"replace_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"被赠人昵称\",\r\n      dataIndex: \"replace_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"待审核\";\r\n            break;\r\n          case \"2\":\r\n            word = \"处理中\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已提交\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已成功\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已失败\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 150,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 150,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 200,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <Popover\r\n            content={record.user_remark}\r\n            title={record.user_id + \"用户备注\"}\r\n            trigger=\"click\"\r\n          >\r\n            <LinkButton>用户备注</LinkButton>\r\n          </Popover>\r\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      start_time: startTime,\r\n      end_time: endTime\r\n    });\r\n  };\r\n  getDetail = async (record, action) => {\r\n    this.action = action;\r\n    this.detailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.user_id\r\n    };\r\n    const res =\r\n      action === \"risk\"\r\n        ? await userDetail(1, 20, record.user_id)\r\n        : action === \"check\"\r\n        ? await reviewInfo(1, 20, record.order_id)\r\n        : await remarkInfo(1, 20, record.order_id);\r\n    if (res.status === 0) {\r\n      this.detailRecord.data = res.data;\r\n      this.detailRecord.count = res.count;\r\n    }\r\n    this.setState({ isDetailShow: true });\r\n  };\r\n  edit = record => {\r\n    console.log(123);\r\n    \r\n    this.editRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n}\r\n\r\nexport default Withdraw_list;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Card, message, Input, Button, Form, Radio, Select } from \"antd\";\r\nimport { getConfigList, setGiftConfig } from \"../../../api/index\";\r\n\r\nclass Channel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  getUsers = async () => {\r\n    let reqData = {\r\n      conf_key: \"give_info\",\r\n      get_val: 1\r\n    };\r\n    const res = await getConfigList(reqData);\r\n    if (res.status === 0) {\r\n      this.resData = res.data;\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    return (\r\n      <Card\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              icon=\"reload\"\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Form\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 20 }}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <Form.Item label=\"品牌\">\r\n            {getFieldDecorator(\"package_id\", {})(\r\n              // <Select defaultValue=\"请选择\">\r\n              //   <Select.Option value=\"jack\">Jack</Select.Option>\r\n              //   <Select.Option value=\"lucy\">Lucy</Select.Option>\r\n              // </Select>\r\n              <Radio.Group>\r\n                <Radio value={1}>博臣娱乐</Radio>\r\n                <Radio value={0}>机器人首领</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"开关\">\r\n            {getFieldDecorator(\"is_close\", {\r\n              initialValue: 1\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={0}>开启</Radio>\r\n                <Radio value={1}>关闭</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"赠送区间\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"min_amount\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                },\r\n                {\r\n                  validator: (rule, value, callback) => {\r\n                    if (value < 0) {\r\n                      callback(\"金额不能为负\"); //如果还没填写，则不进行验证\r\n                    }\r\n                    if (!value) {\r\n                      callback();\r\n                    }\r\n                    callback();\r\n                  }\r\n                }\r\n              ]\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"max_amount\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                },\r\n                {\r\n                  validator: (rule, value, callback) => {\r\n                    if (!value) {\r\n                      callback(); //如果还没填写，则不进行一致性验证\r\n                    }\r\n                    if (value < getFieldValue(\"min_amount\")) {\r\n                      callback(\"最大面值小于最小面值\");\r\n                    }\r\n                    if (value < 0) {\r\n                      callback(\"金额不能为负\");\r\n                    }\r\n                    callback();\r\n                  }\r\n                }\r\n              ]\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ offset: 4 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n              disabled\r\n            >\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      console.log(value);\r\n      if (!err) {\r\n        console.log(this.resData);\r\n        const { id, name, conf_val, conf_key } = this.resData;\r\n        let reqData = {\r\n          id,\r\n          name,\r\n          ...value,\r\n          action: \"edit\",\r\n          conf_key,\r\n          give_info: conf_val,\r\n          version: \"V2.0\"\r\n        };\r\n        // reqData.give_info = new_conf_val;\r\n        const res = await setGiftConfig(reqData);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功:\" + res.msg);\r\n          this.getUsers();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\nconst WrappedChannel = Form.create()(Channel);\r\n\r\nexport default withRouter(WrappedChannel);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Input, Select, message, Modal } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n  getAIList,\r\n  reqLoadGold,\r\n  setGameUserNickName,\r\n  changeInternalUserBalance\r\n} from \"../../../api\";\r\n\r\nclass Withdraw_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      minGold: \"\",\r\n      maxGold: \"\"\r\n    };\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getAIList(page, limit, 5);\r\n    this.setState({\r\n      data: result.data.game_user,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  onSearchData = async () => {\r\n    let value = {\r\n      [this.filed]: this.input.input.value\r\n    };\r\n    const result = await getAIList(1, 20, 5, value);\r\n    this.setState({\r\n      data: result.data.game_user,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => (this.filed = value)}\r\n            >\r\n              <Select.Option value=\"game_nick\">昵称</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              ref={Input => (this.input = Input)}\r\n            />\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <LinkButton onClick={this.changeGold}>批量增减金币</LinkButton>\r\n        <LinkButton onClick={this.changeNickname}>批量修改昵称</LinkButton>\r\n        <br />\r\n        <Table\r\n          rowSelection={this.rowSelection()}\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"game_nick\"\r\n    },\r\n    {\r\n      title: \"账户余额\",\r\n      dataIndex: \"game_gold\"\r\n    },\r\n    {\r\n      title: \"实时余额\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.check(record)}>查看</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  rowSelection = () => {\r\n    return {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.selectedRows = selectedRows;\r\n      },\r\n      getCheckboxProps: record => ({\r\n        // disabled: record.name === \"Disabled User\", // Column configuration not to be checked\r\n        // name: record.name\r\n      })\r\n    };\r\n  };\r\n  check = async record => {\r\n    const res = await reqLoadGold(record.id);\r\n    message.info(res.data[0].game_gold);\r\n  };\r\n  changeGold = async () => {\r\n    if (!this.selectedRows || !this.selectedRows[0]) {\r\n      message.error(\"user_id为空，请至少选择1位user_id\");\r\n    } else {\r\n      console.log(this.selectedRows);\r\n      Modal.confirm({\r\n        title: \"添加金额区间\",\r\n        okText: \"提交\",\r\n        okType: \"primary\",\r\n        width: \"30%\",\r\n        onOk: () => {\r\n          let { minGold, maxGold } = this.state;\r\n          if (minGold && maxGold) {\r\n            if (minGold > maxGold) {\r\n              message.error(\"请确认最大值大于最小值\");\r\n            } else {\r\n              this.handleOk(minGold, maxGold);\r\n            }\r\n          } else {\r\n            message.error(\"请输入有效值\");\r\n          }\r\n        },\r\n        content: (\r\n          <div>\r\n            <div>金额区间：</div>\r\n            <Input\r\n              type=\"text\"\r\n              style={{ width: \"40%\" }}\r\n              placeholder=\"￥最小值\"\r\n              // value={this.state.minGold}\r\n              // onChange={e => {\r\n              //   this.setState({ minGold: e.target.value });\r\n              // }}\r\n              onBlur={e => this.setState({ minGold: e.target.value })}\r\n              // ref={Input => (this.minInput = Input)}\r\n            />\r\n            --\r\n            <Input\r\n              type=\"text\"\r\n              style={{ width: \"40%\" }}\r\n              placeholder=\"￥最大值\"\r\n              onBlur={e => this.setState({ maxGold: e.target.value })}\r\n              // ref={Input => (this.maxInput = Input)}\r\n            />\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n  };\r\n  handleOk = async (minGold, maxGold) => {\r\n    let amount = this.randNum(minGold, maxGold);\r\n    for (let i = 0; i < this.selectedRows.length; i++) {\r\n      let user_id = this.selectedRows[i].id;\r\n      const res = await changeInternalUserBalance(user_id, amount);\r\n      message.info(res.msg);\r\n    }\r\n    this.getUsers(1, 20);\r\n  };\r\n  randNum = (min, max) => {\r\n    min = parseInt(min);\r\n    max = parseInt(max);\r\n    var Range = max - min;\r\n    var Rand = Math.random();\r\n    var num = min + Math.round(Rand * Range); //四舍五入\r\n    return num;\r\n  };\r\n  changeNickname = async () => {\r\n    if (this.selectedRows && this.selectedRows[0]) {\r\n      for (let i = 0; i < this.selectedRows.length; i++) {\r\n        let { id } = this.selectedRows[i];\r\n        let game_nick = \"VIP\" + this.randNum(100000, 999999);\r\n        const res = await setGameUserNickName(id, game_nick);\r\n        message.info(res.msg);\r\n      }\r\n      this.getUsers(1, 20);\r\n    } else {\r\n      message.error(\"user_id为空，请至少选择1位user_id\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default Withdraw_list;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data } = this.props.detailRecord;\r\n    console.log(data);\r\n\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey={(record,index)=>`${index}`}\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"check\") {\r\n      return [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    } else if (this.props.action === \"risk\") {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React from \"react\";\r\nimport { Form, Input, Radio, message } from \"antd\";\r\nimport { orderWithDrawReview, withDrawRemark } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\n\r\nclass EditForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const data = this.props.editData;\r\n    let review_status = parseInt(data.review_status);\r\n    let status = parseInt(data.status);\r\n    let orderStatusShow,\r\n      reviewShow,\r\n      confirmButtonShow,\r\n      submitRadio,\r\n      successRadio,\r\n      failRadio,\r\n      submitRadioChecked,\r\n      successRadioChecked,\r\n      failRadioChecked;\r\n    switch (status) {\r\n      case 1:\r\n        orderStatusShow = true;\r\n        confirmButtonShow = true;\r\n        successRadio = true;\r\n        failRadio = true;\r\n        break;\r\n      case 2:\r\n        orderStatusShow = true;\r\n        reviewShow = true;\r\n        submitRadio = true;\r\n        successRadio = true;\r\n        failRadio = true;\r\n        switch (review_status) {\r\n          case 1:\r\n            submitRadio = false;\r\n            break;\r\n          case 2:\r\n            successRadio = false;\r\n            break;\r\n          case 3:\r\n            failRadio = false;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      case 3:\r\n        orderStatusShow = true;\r\n        confirmButtonShow = true;\r\n        submitRadio = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return (\r\n      <Form labelCol={{ span: 4 }} labelAlign=\"left\">\r\n        <Form.Item label=\"订单ID\">\r\n          <Input\r\n            style={{ width: \"60%\" }}\r\n            value={data.order_id}\r\n            readOnly\r\n          ></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"用户ID\">\r\n          <Input style={{ width: \"60%\" }} value={data.user_id} readOnly></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"金额\">\r\n          <Input style={{ width: \"60%\" }} value={data.amount} readOnly></Input>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"订单状态:\"\r\n          style={orderStatusShow ? {} : { display: \"none\" }}\r\n        >\r\n          <Radio.Group\r\n            defaultValue={review_status}\r\n            onChange={e => (this.orderStatus = e.target.value)}\r\n          >\r\n            <Radio\r\n              value={1}\r\n              disabled={submitRadio}\r\n              checked={submitRadioChecked}\r\n            >\r\n              提交第三方\r\n            </Radio>\r\n            <Radio\r\n              value={2}\r\n              disabled={successRadio}\r\n              checked={successRadioChecked}\r\n            >\r\n              已成功\r\n            </Radio>\r\n            <Radio value={3} disabled={failRadio} checked={failRadioChecked}>\r\n              已失败\r\n            </Radio>\r\n          </Radio.Group>\r\n          <LinkButton\r\n            onClick={this.sumbitOrderStatus}\r\n            style={confirmButtonShow ? {} : { display: \"none\" }}\r\n          >\r\n            确认\r\n          </LinkButton>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"复审:\" style={reviewShow ? {} : { display: \"none\" }}>\r\n          <LinkButton\r\n            onClick={() => {\r\n              this.review(1);\r\n            }}\r\n          >\r\n            通过\r\n          </LinkButton>\r\n          <LinkButton\r\n            onClick={() => {\r\n              this.review(2);\r\n            }}\r\n          >\r\n            拒绝\r\n          </LinkButton>\r\n        </Form.Item>\r\n        <Form.Item label=\"备注[用户]\">\r\n          <Input\r\n            style={{ width: \"60%\" }}\r\n            onChange={e => {\r\n              this.remarkUser = e.target.value;\r\n            }}\r\n          ></Input>\r\n          <LinkButton onClick={this.sumbitRemarkUser}>确认</LinkButton>\r\n        </Form.Item>\r\n        <Form.Item label=\"备注[运营]\">\r\n          <Input\r\n            style={{ width: \"60%\" }}\r\n            onChange={e => {\r\n              this.remarkOperator = e.target.value;\r\n            }}\r\n          ></Input>\r\n          <LinkButton onClick={this.sumbitRemarkOperator}>确认</LinkButton>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  sumbitOrderStatus = async () => {\r\n    const data = this.props.editData;\r\n    if (!this.orderStatus) {\r\n      message.error(\"请选择订单状态！\");\r\n    } else {\r\n      let reqData = {\r\n        order_id: data.order_id,\r\n        review_status: this.orderStatus,\r\n        user_id: data.user_id,\r\n        review_type: 1,\r\n        is_pass: 1\r\n      };\r\n      const res = await orderWithDrawReview(reqData);\r\n      if (res.status === 0) {\r\n        message.success(\"操作成功\");\r\n      } else {\r\n        message.error(\"操作失败\");\r\n      }\r\n      this.props.onclose();\r\n    }\r\n  };\r\n  review = async is_pass => {\r\n    const data = this.props.editData;\r\n    let reqData = {\r\n      order_id: data.order_id,\r\n      review_status: data.review_status,\r\n      user_id: data.user_id,\r\n      review_type: 2,\r\n      is_pass: is_pass\r\n    };\r\n    const res = await orderWithDrawReview(reqData);\r\n    if (res.status === 0) {\r\n      message.info(res.msg);\r\n    } else {\r\n      message.error(\"操作失败\");\r\n    }\r\n    this.props.onclose();\r\n  };\r\n  sumbitRemarkUser = async () => {\r\n    console.log(this.remarkUser);\r\n    const data = this.props.editData;\r\n    if (!this.remarkUser) {\r\n      message.error(\"请输入有效内容！\");\r\n    } else {\r\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 1);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n      } else {\r\n        message.error(res.msg);\r\n      }\r\n    }\r\n  };\r\n  sumbitRemarkOperator = async () => {\r\n    console.log(this.remarkOperator);\r\n    const data = this.props.editData;\r\n    if (!this.remarkOperator) {\r\n      message.error(\"请输入有效内容！\");\r\n    } else {\r\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 2);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n      } else {\r\n        message.error(res.msg);\r\n      }\r\n    }\r\n  };\r\n}\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  ConfigProvider,\r\n  DatePicker,\r\n  Popover\r\n} from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\nimport \"moment/locale/zh-cn\";\r\nimport {\r\n  withDraw,\r\n  downloadWithdrawList,\r\n  userDetail,\r\n  reviewInfo,\r\n  remarkInfo,\r\n  auditOrder\r\n} from \"../../../api\";\r\nimport WrappedComponent from \"./details\";\r\nimport WrappedEdit from \"./edit\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nclass Daiti extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: 3,\r\n      filed: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\",\r\n      isBindInfoShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    let data = { inputParam: \"\", ...this.state };\r\n    const result = await withDraw(page, limit, 1, data);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n  };\r\n  onSearchData = async () => {\r\n    let data = { inputParam: this.input.input.value, ...this.state };\r\n    console.log(data);\r\n\r\n    const result = await withDraw(1, 20, 1, data);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n      message.error(\"请检查输入的关键词或网络\");\r\n    }\r\n  };\r\n  download = () => {\r\n    downloadWithdrawList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <ConfigProvider locale={zh_CN}>\r\n              <RangePicker\r\n                // defaultValue={[moment().locale(\"zh-cn\")]}\r\n                // showTime={{ format: \"HH:mm\" }}\r\n                format=\"YYYY-MM-DD\"\r\n                placeholder={[\"开始日期\", \"结束日期\"]}\r\n                onChange={this.dataPickerOnChange}\r\n              />\r\n            </ConfigProvider>\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ filed: value })}\r\n            >\r\n              <Select.Option value=\"order_id\">订单id</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"replace_id\">代提ID</Select.Option>\r\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\r\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              // value={this.state.inputParam}\r\n              // onChange={this.handleChange}\r\n              ref={Input => (this.input = Input)}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ order_status: value })}\r\n            >\r\n              <Select.Option value=\"\">订单状态</Select.Option>\r\n              <Select.Option value=\"1\">待审核</Select.Option>\r\n              <Select.Option value=\"2\">处理中</Select.Option>\r\n              <Select.Option value=\"3\">已提交</Select.Option>\r\n              <Select.Option value=\"4\">已成功</Select.Option>\r\n              <Select.Option value=\"5\">已失败</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 2600, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title={\r\n            this.action === \"check\"\r\n              ? \"审核信息\"\r\n              : this.action === \"risk\"\r\n              ? \"资金明细\"\r\n              : \"运营备注\"\r\n          }\r\n          visible={this.state.isDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            detailRecord={this.detailRecord}\r\n            action={this.action}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditShow: false });\r\n            }}\r\n            footer={null}\r\n            width=\"50%\"\r\n          >\r\n            <WrappedEdit\r\n              editData={this.editData}\r\n              onclose={() => {\r\n                this.setState({ isEditShow: false });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"实际费率\",\r\n      dataIndex: \"platform_rate\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"兑换方式\",\r\n      dataIndex: \"order_type\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"兑换账号\",\r\n      dataIndex: \"pay_account\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"账号名称\",\r\n      dataIndex: \"pay_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"待审核\";\r\n            break;\r\n          case \"2\":\r\n            word = \"处理中\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已提交\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已成功\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已失败\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 150,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"代提ID\",\r\n      dataIndex: \"replace_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 150,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 150,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"风控\",\r\n      dataIndex: \"\",\r\n      width: 180,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"risk\")}>\r\n            风控\r\n          </LinkButton>\r\n          <LinkButton>游戏数据</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <Popover\r\n            content={record.user_remark}\r\n            title={record.user_id + \"用户备注\"}\r\n            trigger=\"click\"\r\n          >\r\n            <LinkButton>用户备注</LinkButton>\r\n          </Popover>\r\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      start_time: startTime,\r\n      end_time: endTime\r\n    });\r\n  };\r\n  getDetail = async (record, action) => {\r\n    this.action = action;\r\n    this.detailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.user_id\r\n    };\r\n    const res =\r\n      action === \"risk\"\r\n        ? await userDetail(1, 20, record.user_id)\r\n        : action === \"check\"\r\n        ? await reviewInfo(1, 20, record.order_id)\r\n        : await remarkInfo(1, 20, record.order_id);\r\n    if (res.status === 0) {\r\n      this.detailRecord.data = res.data;\r\n      this.detailRecord.count = res.count;\r\n    }\r\n    this.setState({ isDetailShow: true });\r\n  };\r\n  edit = async record => {\r\n    let reqData = {\r\n      flag: 1,\r\n      type: 3,\r\n      order_id: record.order_id\r\n    };\r\n    const res = await auditOrder(reqData);\r\n    if (res.status === 0) {\r\n      this.editData = res.data[0];\r\n      this.setState({ isEditShow: true });\r\n    } else {\r\n      message.error(\"操作失败\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default Daiti;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  message,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  Switch,\r\n  Radio,\r\n  Divider\r\n} from \"antd\";\r\nimport { getConfigList, saveWithDrawChannel } from \"../../../api/index\";\r\n\r\nclass Channel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\"\r\n    };\r\n  }\r\n  getUsers = async () => {\r\n    let reqData = {\r\n      conf_key: \"withdraw_channel_info\",\r\n      get_val: 1\r\n    };\r\n    const res = await getConfigList(reqData);\r\n    if (res.status === 0) {\r\n      this.initialData = res.data;\r\n      this.setState({ data: JSON.parse(res.data.conf_val) });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const data = this.state.data;\r\n    return (\r\n      <Card\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              icon=\"reload\"\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Form\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 20 }}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <Form.Item label=\"提款支付宝\">\r\n            {getFieldDecorator(\"alipay[is_close]\", {\r\n              initialValue: data && data.alipay.is_close === 1 ? true : false,\r\n              valuePropName: \"checked\"\r\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\r\n          </Form.Item>\r\n          <Divider></Divider>\r\n          <Form.Item label=\"提款银行卡\">\r\n            {getFieldDecorator(\"bankcard[is_close]\", {\r\n              initialValue: data && data.bankcard.is_close === 1 ? true : false,\r\n              valuePropName: \"checked\"\r\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"古都银行卡状态\">\r\n            {getFieldDecorator(\"bankcard[channel][2][is_close]\", {\r\n              initialValue: data && parseInt(data.bankcard.channel[0].is_close)\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"显示名称\">\r\n            {getFieldDecorator(\"bankcard[channel][2][channel_name]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[0].channel_name\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][2][min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[0].min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][2][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[0].max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"渠道排序\">\r\n            {getFieldDecorator(\"bankcard[channel][2][sort]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[0].sort\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"第三方代付状态\">\r\n            {getFieldDecorator(\"bankcard[channel][3][is_close]\", {\r\n              initialValue: data && parseInt(data.bankcard.channel[1].is_close)\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"显示名称\">\r\n            {getFieldDecorator(\"bankcard[channel][3][channel_name]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[1].channel_name\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][3][min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[1].min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][3][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[1].max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"渠道排序\">\r\n            {getFieldDecorator(\"bankcard[channel][3][sort]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[1].sort\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"onepay状态\">\r\n            {getFieldDecorator(\"bankcard[channel][7][is_close]\", {\r\n              initialValue: data && parseInt(data.bankcard.channel[2].is_close)\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"显示名称\">\r\n            {getFieldDecorator(\"bankcard[channel][7][channel_name]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[2].channel_name\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][7][min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[2].min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][7][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[2].max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"渠道排序\">\r\n            {getFieldDecorator(\"bankcard[channel][7][sort]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[2].sort\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n\r\n          <Divider></Divider>\r\n          <Form.Item label=\"人工兑换\">\r\n            {getFieldDecorator(\"artificial[is_close]\", {\r\n              initialValue:\r\n                data && data.artificial.is_close === 1 ? true : false,\r\n              valuePropName: \"checked\"\r\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"artificial[min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.artificial.min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"artificial[max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.artificial.max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"费率\">\r\n            {getFieldDecorator(\"artificial[rate]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.artificial.rate\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 4 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let { id, name } = this.initialData;\r\n      let obj = {};\r\n      value.bankcard.channel.forEach((item, index) => {\r\n        for (const key in item) {\r\n          obj[`bankcard[channel][${index}][${key}]`] = item[key];\r\n        }\r\n      });\r\n\r\n      obj[\"bankcard[is_close]\"] = value.bankcard.is_close ? \"on\" : \"off\";\r\n      obj[\"alipay[is_close]\"] = value.alipay.is_close ? \"on\" : \"off\";\r\n      for (const key in value.artificial) {\r\n        obj[`artificial[${key}]`] = value.artificial[key];\r\n      }\r\n      if (!err) {\r\n        const res = await saveWithDrawChannel(id, name, obj);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功:\" + res.msg);\r\n          console.log(res);\r\n          this.getUsers();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\nconst WrappedChannel = Form.create()(Channel);\r\n\r\nexport default withRouter(WrappedChannel);\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './not-found.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { Table} from \"antd\";\r\n// import {  Table,Button} from 'element-react';\r\n// import \"element-theme-default\";\r\n\r\nconst DateGameReport = props => {\r\n  let initColumns = () => [\r\n    {\r\n      title: \"游戏\",\r\n      dataIndex: \"game_name\"\r\n    },\r\n    {\r\n      title: \"玩家总赢额\",\r\n      dataIndex: \"win_statement_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"玩家总输额\",\r\n      dataIndex: \"lose_statement_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"玩家总流水\",\r\n      dataIndex: \"statement_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"盈亏比\",\r\n      dataIndex: \"statement_ratio\",\r\n      width: 150\r\n    }\r\n  ];\r\n  return (\r\n    <Table\r\n      bordered\r\n      rowKey={(record, index) => `${index}`}\r\n      dataSource={props.data}\r\n      columns={initColumns()}\r\n      size=\"small\"\r\n      // scroll={{ x: 3000 }}\r\n      // footer={this.footerData}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DateGameReport;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Button, Modal } from \"antd\";\r\n// import {  Table,Button} from 'element-react';\r\n// import \"element-theme-default\";\r\nimport { oneDayGameReport } from \"../../../api/index\";\r\nimport DateGameReport from \"./dateGameReport\";\r\n\r\nclass MoreDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: \"\",\r\n      isGameReportShow: false,\r\n      nextLevelData: \"\"\r\n    };\r\n  }\r\n  render() {\r\n    const { data } = this.props.reportData;\r\n    return (\r\n      <div>\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          scroll={{ x: 2000 }}\r\n          // footer={this.footerData}\r\n        />\r\n        <Modal\r\n          title={this.state.date + \"/游戏数据\"}\r\n          width=\"80%\"\r\n          visible={this.state.isGameReportShow}\r\n          onCancel={() => {\r\n            this.setState({ isGameReportShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <DateGameReport data={this.state.nextLevelData} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"getDateReport\") {\r\n      let tableHeader = [\r\n        {\r\n          title: \"日期\",\r\n          dataIndex: \"date\"\r\n        },\r\n        {\r\n          title: \"新增用户\",\r\n          dataIndex: \"regin_user_number\"\r\n        },\r\n        {\r\n          title: \"活跃用户\",\r\n          dataIndex: \"active_user_number\"\r\n        },\r\n        {\r\n          title: \"官方首充用户\",\r\n          dataIndex: \"first_pay_user_number\"\r\n        },\r\n        {\r\n          title: \"官方首充金额\",\r\n          dataIndex: \"first_pay_money_total\"\r\n        },\r\n        {\r\n          title: \"官方充值用户\",\r\n          dataIndex: \"pay_user_number\"\r\n        },\r\n        {\r\n          title: \"官方充值金额\",\r\n          dataIndex: \"pay_money_total\"\r\n        },\r\n        {\r\n          title: \"人工首充用户\",\r\n          dataIndex: \"first_pay_user_number_res\"\r\n        },\r\n        {\r\n          title: \"人工首充金额\",\r\n          dataIndex: \"first_pay_money_total_res\"\r\n        },\r\n        {\r\n          title: \"人工充值用户\",\r\n          dataIndex: \"pay_user_number_res\"\r\n        },\r\n        {\r\n          title: \"人工充值金额\",\r\n          dataIndex: \"pay_money_total_res\"\r\n        },\r\n        {\r\n          title: \"官方兑换用户\",\r\n          dataIndex: \"exchange_user_number\"\r\n        },\r\n        {\r\n          title: \"官方兑换金额\",\r\n          dataIndex: \"exchange_money_total\"\r\n        },\r\n        {\r\n          title: \"人工兑换用户\",\r\n          dataIndex: \"exchange_user_number_res\"\r\n        },\r\n        {\r\n          title: \"人工兑换金额\",\r\n          dataIndex: \"exchange_money_total_res\"\r\n        },\r\n        {\r\n          title: \"玩家总赢额\",\r\n          dataIndex: \"win_statement_total\"\r\n        },\r\n        {\r\n          title: \"玩家总输额\",\r\n          dataIndex: \"lose_statement_total\"\r\n        },\r\n        {\r\n          title: \"玩家总流水\",\r\n          dataIndex: \"statement_total\"\r\n        },\r\n        {\r\n          title: \"盈亏比\",\r\n          dataIndex: \"statement_ratio\"\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          dataIndex: \"\",\r\n          render: (text, record, index) => (\r\n            <span>\r\n              <Button size=\"small\" onClick={() => this.getGameReport(record)}>\r\n                游戏\r\n              </Button>\r\n            </span>\r\n          )\r\n        }\r\n      ];\r\n      return tableHeader;\r\n    }\r\n  };\r\n  footerData = page => {\r\n    console.log(page);\r\n    return (\r\n      <tr>\r\n        <td>合计</td>\r\n        <td style={{ width: 80 }}>regin_user_number</td>\r\n        <td>regin_user_number</td>\r\n        <td>regin_user_number</td>\r\n        <td>regin_user_number</td>\r\n        <td>regin_user_number</td>\r\n      </tr>\r\n    );\r\n  };\r\n  getGameReport = async record => {\r\n    const res = await oneDayGameReport(\r\n      1,\r\n      20,\r\n      this.props.package_id,\r\n      record.date\r\n    );\r\n    this.props.parse(res);\r\n    this.setState({\r\n      date: record.date,\r\n      isGameReportShow: true,\r\n      nextLevelData: res.data\r\n    });\r\n  };\r\n}\r\n\r\nexport default MoreDetail;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Select } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n  dailyReportInit,\r\n  dailyReport,\r\n  packageList,\r\n  dateReport,\r\n  gameReport\r\n} from \"../../../api/index\";\r\nimport MoreDetail from \"./details\";\r\nimport moment from \"moment\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport DateGameReport from \"./dateGameReport\";\r\n\r\nclass DailyReport extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      packageList: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      reportTable: false,\r\n      isGameReportShow: false\r\n    };\r\n  }\r\n  getInitialData = async () => {\r\n    const res = await packageList();\r\n    // const result = await dailyReportInit(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        // data: result.data,\r\n        packageList: res.data\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData();\r\n  }\r\n  render() {\r\n    const packageNode = this.state.packageList.map(item => {\r\n      return (\r\n        <Select.Option value={item.id} key={item.id}>\r\n          {item.name}\r\n        </Select.Option>\r\n      );\r\n    });\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <MyDatePicker\r\n                handleValue={val => {\r\n                  let diffDays = moment(val[1]).diff(moment(val[0]), \"days\");\r\n                  if (diffDays > 7) {\r\n                    message.error(\"请选择时间范围小于7天\");\r\n                  } else {\r\n                    this.startTime = val[0];\r\n                    this.endTime = val[1];\r\n                  }\r\n                }}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.package_id = value)}\r\n              >\r\n                {packageNode}\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <LinkButton onClick={this.onSearchData} size=\"default\">\r\n                <Icon type=\"search\" />\r\n              </LinkButton>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n          </div>\r\n        }\r\n      >\r\n        <div style={{ marginBottom: 20, backgroundColor: \"#ddd\" }}>\r\n          <span style={{ border: \"1px solid #ddd\" }}>\r\n            <b>默认所选品牌7天的统计数据</b>\r\n          </span>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span style={{ border: \"1px solid #ddd\" }}>\r\n            <b>总流水=玩家赢额+(abs)玩家输额</b>\r\n          </span>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span style={{ border: \"1px solid #ddd\" }}>\r\n            <b>盈亏比=(玩家输额(abs) - 玩家赢额) /(玩家输额(abs) + 玩家赢额)</b>\r\n          </span>\r\n        </div>\r\n        <Table\r\n          bordered\r\n          rowKey=\"package_id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          scroll={{ x: 2500 }}\r\n        />\r\n        <Modal\r\n          title=\"按日期查看\"\r\n          width=\"80%\"\r\n          visible={this.state.reportTable}\r\n          onCancel={() => {\r\n            this.setState({ reportTable: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <MoreDetail\r\n            reportData={this.reportData}\r\n            action={this.action}\r\n            package_id={this.package_id}\r\n            parse={this.parseGameData}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"游戏数据\"\r\n          width=\"80%\"\r\n          visible={this.state.isGameReportShow}\r\n          onCancel={() => {\r\n            this.setState({ isGameReportShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <DateGameReport data={this.state.nextLevelData} />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"品牌\",\r\n      dataIndex: \"package_nick\"\r\n    },\r\n    {\r\n      title: \"新增用户\",\r\n      dataIndex: \"regin_user_number\"\r\n    },\r\n    {\r\n      title: \"活跃用户\",\r\n      dataIndex: \"active_user_number\"\r\n    },\r\n    {\r\n      title: \"官方首充用户\",\r\n      dataIndex: \"first_pay_user_number\"\r\n    },\r\n    {\r\n      title: \"官方首充金额\",\r\n      dataIndex: \"first_pay_money_total\"\r\n    },\r\n    {\r\n      title: \"官方充值用户\",\r\n      dataIndex: \"pay_user_number\"\r\n    },\r\n    {\r\n      title: \"官方充值金额\",\r\n      dataIndex: \"pay_money_total\"\r\n    },\r\n    {\r\n      title: \"人工首充用户\",\r\n      dataIndex: \"first_pay_user_number_res\"\r\n    },\r\n    {\r\n      title: \"人工首充金额\",\r\n      dataIndex: \"first_pay_money_total_res\"\r\n    },\r\n    {\r\n      title: \"人工充值用户\",\r\n      dataIndex: \"pay_user_number_res\"\r\n    },\r\n    {\r\n      title: \"人工充值金额\",\r\n      dataIndex: \"pay_money_total_res\"\r\n    },\r\n    {\r\n      title: \"官方兑换用户\",\r\n      dataIndex: \"exchange_user_number\"\r\n    },\r\n    {\r\n      title: \"官方兑换金额\",\r\n      dataIndex: \"exchange_money_total\"\r\n    },\r\n    {\r\n      title: \"人工兑换用户\",\r\n      dataIndex: \"exchange_user_number_res\"\r\n    },\r\n    {\r\n      title: \"人工兑换金额\",\r\n      dataIndex: \"exchange_money_total_res\"\r\n    },\r\n    {\r\n      title: \"玩家总赢额\",\r\n      dataIndex: \"win_statement_total\"\r\n    },\r\n    {\r\n      title: \"玩家总输额\",\r\n      dataIndex: \"lose_statement_total\"\r\n    },\r\n    {\r\n      title: \"玩家总流水\",\r\n      dataIndex: \"statement_total\"\r\n    },\r\n    {\r\n      title: \"盈亏比\",\r\n      dataIndex: \"statement_ratio\"\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDateReport(record)}>\r\n            日期\r\n          </LinkButton>\r\n          <LinkButton onClick={() => this.getGameReport(record)}>\r\n            游戏\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearchData = async () => {\r\n    if (!this.startTime || !this.package_id) {\r\n      message.info(\"请选择时间日期和品牌\");\r\n      return;\r\n    }\r\n    const res = await dailyReport(\r\n      1,\r\n      20,\r\n      this.package_id,\r\n      this.startTime,\r\n      this.endTime\r\n    );\r\n    const newRes = this.parseData(res);\r\n    this.setState({ data: newRes.data, count: newRes.count });\r\n  };\r\n  parseData = res => {\r\n    console.log(\"res:\", res);\r\n    var length = 0;\r\n    var format_data = [];\r\n    if (res.status === 0 && res.data) {\r\n      //用户  (e.active_user_number = e.login_user_number - e.regin_user_number),\r\n      if (res.data.user) {\r\n        res.data.user\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => ((e.package_id = parseInt(e._id.package_id)), delete e._id)\r\n          );\r\n      }\r\n      //充提交易所\r\n      if (res.data.order) {\r\n        res.data.order\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.first_pay_user_number = e.first_pay_user.length),\r\n              (e.pay_user_number = e.pay_user.length),\r\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\r\n              (e.pay_user_number_res = e.pay_user_res.length),\r\n              (e.exchange_user_number = e.exchange_user.length),\r\n              (e.exchange_user_number_res = e.exchange_user_res.length),\r\n              (e.package_id = parseInt(e._id.package_id)),\r\n              delete e._id\r\n            )\r\n          );\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(\r\n            e,\r\n            res.data.order.find(d => d.package_id === e.package_id)\r\n          )\r\n        );\r\n      }\r\n\r\n      //游戏\r\n      if (res.data.game) {\r\n        res.data.game\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.statement_ratio = (\r\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\r\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\r\n              ).toFixed(4)),\r\n              (e.win_statement_total =\r\n                Math.round(e.win_statement_total * 10000) / 10000),\r\n              (e.lose_statement_total =\r\n                Math.round(e.lose_statement_total * 10000) / 10000),\r\n              (e.statement_total =\r\n                Math.round(\r\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\r\n                    10000\r\n                ) / 10000),\r\n              (e.package_id = parseInt(e._id.package_id)),\r\n              delete e._id\r\n            )\r\n          );\r\n\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(\r\n            e,\r\n            res.data.game.find(d => d.package_id === e.package_id)\r\n          )\r\n        );\r\n      }\r\n\r\n      length = res.data.user.length;\r\n      format_data = res.data.user;\r\n      console.log(\"res.data.user assign后\", res.data.user);\r\n    }\r\n\r\n    return {\r\n      code: res.code,\r\n      msg: res.msg,\r\n      count: length,\r\n      data: format_data\r\n    };\r\n  };\r\n  parseDateData = res => {\r\n    console.log(res);\r\n    var length = 0;\r\n    var format_data = [];\r\n    if (res.status === 0 && res.data) {\r\n      //用户 (e.active_user_number = e.login_user_number - e.regin_user_number),\r\n      if (res.data.user) {\r\n        res.data.user.map(e => ((e.date = e._id.create_time), delete e._id));\r\n      }\r\n      //充提交易所\r\n      if (res.data.order) {\r\n        //res.data.order.filter(e => (e && e._id)).map(e => ((e.exchange_money_total = Math.abs(e.exchange_money_total)), (e.date = e._id.create_time), delete e._id));\r\n        res.data.order\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.first_pay_user_number = e.first_pay_user.length),\r\n              (e.pay_user_number = e.pay_user.length),\r\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\r\n              (e.pay_user_number_res = e.pay_user_res.length),\r\n              (e.exchange_user_number = e.exchange_user.length),\r\n              (e.exchange_user_number_res = e.exchange_user_res.length),\r\n              (e.date = e._id.create_time),\r\n              delete e._id\r\n            )\r\n          );\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(e, res.data.order.find(d => d.date === e.date))\r\n        );\r\n      }\r\n      //游戏\r\n      if (res.data.game) {\r\n        //四舍五入保留四位小数\r\n        res.data.game\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.statement_ratio = (\r\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\r\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\r\n              ).toFixed(4)),\r\n              (e.win_statement_total =\r\n                Math.round(e.win_statement_total * 10000) / 10000),\r\n              (e.lose_statement_total =\r\n                Math.round(e.lose_statement_total * 10000) / 10000),\r\n              (e.statement_total =\r\n                Math.round(\r\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\r\n                    10000\r\n                ) / 10000),\r\n              (e.date = e._id.create_time),\r\n              delete e._id\r\n            )\r\n          );\r\n\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(e, res.data.game.find(d => d.date === e.date))\r\n        );\r\n      }\r\n\r\n      // 排序\r\n      res.data.user.sort(\r\n        (a, b) =>\r\n          parseInt(b.date.replace(/-/g, \"\")) -\r\n          parseInt(a.date.replace(/-/g, \"\"))\r\n      );\r\n      length = res.data.user.length;\r\n      format_data = res.data.user;\r\n      console.log(res.data.user);\r\n    }\r\n    return {\r\n      code: res.code,\r\n      msg: res.msg,\r\n      count: length,\r\n      data: format_data\r\n    };\r\n  };\r\n  parseGameData = res => {\r\n    console.log(res);\r\n    //总流水\r\n    if (res.status === 0 && res.data) {\r\n      res.data.map(\r\n        e => (\r\n          (e.statement_ratio = (\r\n            (Math.abs(e.lose_statement_total) - e.win_statement_total) /\r\n            (e.win_statement_total + Math.abs(e.lose_statement_total))\r\n          ).toFixed(4)),\r\n          (e.win_statement_total =\r\n            Math.round(e.win_statement_total * 10000) / 10000),\r\n          (e.lose_statement_total =\r\n            Math.round(e.lose_statement_total * 10000) / 10000),\r\n          (e.statement_total =\r\n            Math.round(\r\n              (e.win_statement_total + Math.abs(e.lose_statement_total)) * 10000\r\n            ) / 10000)\r\n        )\r\n      );\r\n    }\r\n  };\r\n  getDateReport = async record => {\r\n    const res = await dateReport(\r\n      1,\r\n      20,\r\n      record.package_id,\r\n      this.startTime,\r\n      this.endTime\r\n    );\r\n    const reportData = this.parseDateData(res);\r\n    this.reportData = reportData;\r\n    this.action = \"getDateReport\";\r\n    this.setState({ reportTable: true });\r\n  };\r\n  getGameReport = async record => {\r\n    const res = await gameReport(1, 20, this.package_id, record.date);\r\n    this.parseGameData(res);\r\n    this.setState({\r\n      date: record.date,\r\n      isGameReportShow: true,\r\n      nextLevelData: res.data\r\n    });\r\n  };\r\n}\r\n\r\nexport default DailyReport;\r\n","import React from \"react\";\r\nimport { Form, Input, Select, Button, message, Radio } from \"antd\";\r\nimport { editRule } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const data = props.data;\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        for (const key in value) {\r\n          if (value[key] === undefined) {\r\n            value[key] = \"\";\r\n          }\r\n        }\r\n        const res = await editRule(data.id, value);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Form labelCol={{ span: 4 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\r\n      <Form.Item label=\"父级权限\">\r\n        {getFieldDecorator(\"pid\", {\r\n          rules: [{ required: true, message: \"请选择权限\" }],\r\n          initialValue: data.pid\r\n        })(\r\n          <Select style={{ width: \"60%\" }}>\r\n            <Select.Option value={0}>一级权限</Select.Option>\r\n            {props.packageNode}\r\n          </Select>\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"菜单名\">\r\n        {getFieldDecorator(\"name\", {\r\n          rules: [{ required: true, message: \"请输入菜单名\" }],\r\n          initialValue: data.name.replace(/&nbsp;/g, \"\")\r\n        })(<Input style={{ width: \"60%\" }} placeholder=\"菜单名\" />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"模块名\">\r\n        {getFieldDecorator(\"module\", { initialValue: data.module })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"模块名\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"方法名\">\r\n        {getFieldDecorator(\"action\", { initialValue: data.action })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"方法名\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"模板路径\">\r\n        {getFieldDecorator(\"href\", { initialValue: data.href })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"模板路径\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"路由key\">\r\n        {getFieldDecorator(\"key\", { initialValue: data.router_key })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"路由key\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"icon样式\">\r\n        {getFieldDecorator(\"icon\", { initialValue: data.icon })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"icon样式\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"菜单排序\">\r\n        {getFieldDecorator(\"sort\", {\r\n          rules: [{ required: true, message: \"请输入排序值\" }],\r\n          initialValue: data.sort\r\n        })(<Input style={{ width: \"60%\" }} placeholder=\"菜单排序\" />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"显示状态\">\r\n        {getFieldDecorator(\"status\", {\r\n          initialValue: data.status\r\n        })(\r\n          <Radio.Group>\r\n            <Radio value={1}>显示</Radio>\r\n            <Radio value={0}>不显示</Radio>\r\n          </Radio.Group>\r\n        )}\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Select,\r\n  Button,\r\n  Form\r\n} from \"antd\";\r\nimport { ruleList, addRule, ruleDel } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\n\r\nclass Rule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async () => {\r\n    const res = await ruleList();\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const packageNode = this.state.data.map(item => {\r\n      return (\r\n        <Select.Option value={item.id} key={item.name}>\r\n          {item.name.replace(/&nbsp;/g, \"-\")}\r\n        </Select.Option>\r\n      );\r\n    });\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"pid\", {\r\n                  rules: [{ required: true, message: \"请选择权限\" }],\r\n                  initialValue: \"0\"\r\n                })(\r\n                  <Select style={{ width: 200 }}>\r\n                    <Select.Option value=\"0\">一级权限</Select.Option>\r\n                    {packageNode}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"name\", {\r\n                  rules: [{ required: true, message: \"请输入菜单名\" }]\r\n                })(<Input style={{ width: 120 }} placeholder=\"菜单名\" />)}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"module\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"模块名\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"action\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"方法名\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"href\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"模板路径\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"key\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"路由key\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"icon\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"icon样式\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"sort\", {\r\n                  rules: [{ required: true, message: \"请输入排序值\" }]\r\n                })(<Input style={{ width: 120 }} placeholder=\"菜单排序\" />)}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                 size='default' \r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                >\r\n                  增加\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size='default'>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n        />\r\n        <Modal\r\n          title=\"编辑\"\r\n          visible={this.state.isEditFormShow}\r\n          onCancel={() => {\r\n            this.setState({ isEditFormShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedEditForm\r\n            finished={() => {\r\n              this.getInitialData();\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            packageNode={packageNode}\r\n            data={this.editDataRecord}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"菜单名\",\r\n      dataIndex: \"name\",\r\n      render: (text, record, index) => (\r\n        <span>{record.name.replace(/&nbsp;/g, \"-\")}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"模块名\",\r\n      dataIndex: \"module\"\r\n    },\r\n    {\r\n      title: \"方法名\",\r\n      dataIndex: \"action\"\r\n    },\r\n    {\r\n      title: \"模板路径\",\r\n      dataIndex: \"href\"\r\n    },\r\n    {\r\n      title: \"路由key\",\r\n      dataIndex: \"router_key\"\r\n    },\r\n    {\r\n      title: \"icon样式\",\r\n      dataIndex: \"icon\"\r\n    },\r\n    {\r\n      title: \"显示\",\r\n      dataIndex: \"status\"\r\n    },\r\n    {\r\n      title: \"菜单排序\",\r\n      dataIndex: \"sort\"\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\r\n            编辑\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.onDelete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button type=\"danger\" size=\"small\">\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        for (const key in value) {\r\n          if (value[key] === undefined) {\r\n            value[key] = \"\";\r\n          }\r\n        }\r\n        const res = await addRule(value);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.getInitialData();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  onDelete = async record => {\r\n    let res = await ruleDel(record.id);\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.getInitialData();\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditFormShow: true\r\n    });\r\n  };\r\n}\r\nconst RuleManage = Form.create()(Rule);\r\nexport default RuleManage;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { createHashHistory } from \"history\";\r\nimport { reqUsers } from \"../../api/index\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport LeftNav from \"../../components/left-nav\";\r\nimport Header from \"../../components/header\";\r\nimport Home from \"../home/home\";\r\nimport User from \"../user/user\";\r\nimport Admin_manage_list from \"../admin_manage/admin_manage_list/admin_manage_list\";\r\nimport Role from \"../admin_manage/role/role\";\r\nimport Order_list from \"../charge/order_list/order_list\";\r\nimport Channel_list from \"../charge/channel_list/channel_list\";\r\nimport Bankcard_list from \"../charge/bankcard_list/bankcard_list\";\r\nimport Recharge_order from \"../charge/recharge_order/recharge_order\";\r\nimport Recharge_channel from \"../charge/recharge_channel/recharge_channel\";\r\nimport NoticeList from \"../customer_service/notice_list\";\r\nimport Customer_list from \"../customer_service/customer_list\";\r\nimport Withdraw_list from \"../withdraw/withdraw_list\";\r\nimport WrappedConfig from \"../gameSetting/config\";\r\nimport Tasks from \"../messageCenter/tasks\";\r\nimport AccountList from \"../trade/accountList\";\r\nimport ApplyHistory from \"../trade/applyHistory\";\r\nimport TradeOrder from \"../trade/tradeOrder\";\r\nimport ActivityList from \"../activity/activityList\";\r\nimport ActivityRecieve from \"../activity/recieve\";\r\nimport GiftVoucher from \"../activity/giftVoucher\";\r\nimport GiftList from \"../gift/giftList\";\r\nimport GiftSetting from \"../gift/giftSetting\";\r\nimport AI from \"../AI/robot\";\r\n// import Withdraw_list from \"../withdraw/withdraw_list\";\r\n\r\nimport Daiti_list from \"../withdraw/Daiti_list\";\r\nimport Channel from \"../withdraw/Channel\";\r\nimport NotFound from \"../not-found/not-found\";\r\nimport DailyReport from \"../list/DailyReport\";\r\nimport RuleManage from \"../admin_manage/ruleManage\";\r\nimport { Provider, KeepAlive } from \"react-keep-alive\";\r\nconst { Sider, Content } = Layout;\r\n\r\nconst history = createHashHistory();\r\n/*\r\n后台管理的路由组件\r\n */\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //header和left-nav通过共同父组件传值\r\n  // onRef = ref => {\r\n  //   this.child1 = ref;\r\n  // };\r\n  render() {\r\n    const token = localStorage.token;\r\n    // 如果内存没有存储token ==> 当前没有登陆\r\n    if (!token) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    //如果内存中存储的token超过24小时，需要验证token，如果已经延期更新时间戳，如果未延期，更新token\r\n    const timeStamp = new Date().getTime();\r\n    const tokenTimeStamp = localStorage.tokenTimeStamp;\r\n    let time = timeStamp - tokenTimeStamp;\r\n    if (time > 24 * 3600 * 1000) {\r\n      const res = reqUsers(1, 20);\r\n      if (res.status !== 0) {\r\n        localStorage.removeItem(\"menuList\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"name\");\r\n        localStorage.removeItem(\"tokenTimeStamp\");\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: \"100%\" }}>\r\n        <Sider>\r\n          <LeftNav\r\n            onClick={tabConfig => {\r\n              this.child1.add && this.child1.add(tabConfig);\r\n            }}\r\n          />\r\n        </Sider>\r\n        <Layout>\r\n          <Header onRef={ref => (this.child1 = ref)} history={history}>\r\n            Header\r\n          </Header>\r\n          <Content style={{ margin: 5, backgroundColor: \"#fff\" }}>\r\n            <Provider>\r\n              <div style={{ height: \"100%\" }}>\r\n                <Switch>\r\n                  <Redirect from=\"/\" exact to=\"/home\" />\r\n                  <Route path=\"/home\" exact component={Home} />\r\n                  <Route path=\"/user/user-list\" exact>\r\n                    <KeepAlive name=\"User\">\r\n                      <User />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/customer_service/notice_list\">\r\n                    <KeepAlive name=\"Notice_list\">\r\n                      <NoticeList />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/customer_service/customer_list\"\r\n                    exact\r\n                    component={Customer_list}\r\n                  >\r\n                    <KeepAlive name=\"Customer_list\">\r\n                      <Customer_list></Customer_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/admin_manage/list\"\r\n                    exact\r\n                    component={Admin_manage_list}\r\n                  >\r\n                    <KeepAlive name=\"Admin_manage_list\">\r\n                      <Admin_manage_list></Admin_manage_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/admin_manage/rule\" exact component={RuleManage}>\r\n                    <KeepAlive name=\"RuleManage\">\r\n                      <RuleManage></RuleManage>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/admin_manage/role\" exact component={Role}>\r\n                    <KeepAlive name=\"Role\">\r\n                      <Role></Role>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route path=\"/list/daily-report\" exact>\r\n                    <KeepAlive name=\"DailyReport\">\r\n                      <DailyReport></DailyReport>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route path=\"/gameSetting/config\" exact>\r\n                    <KeepAlive name=\"WrappedConfig\">\r\n                      <WrappedConfig></WrappedConfig>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route path=\"/messageCenter/tasks\" exact>\r\n                    <KeepAlive name=\"Tasks\">\r\n                      <Tasks></Tasks>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route path=\"/trade/accountList\" exact>\r\n                    <KeepAlive name=\"AccountList\">\r\n                      <AccountList></AccountList>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/trade/applyHistory\" exact>\r\n                    <KeepAlive name=\"ApplyHistory\">\r\n                      <ApplyHistory></ApplyHistory>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/trade/tradeOrder\" exact>\r\n                    <KeepAlive name=\"TradeOrder\">\r\n                      <TradeOrder></TradeOrder>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/activity/list\" exact>\r\n                    <KeepAlive name=\"ActivityList\">\r\n                      <ActivityList />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/activity/recieve\" exact>\r\n                    <KeepAlive name=\"ActivityRecieve\">\r\n                      <ActivityRecieve />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/activity/giftVoucher\" exact>\r\n                    <KeepAlive name=\"giftVoucher\">\r\n                      <GiftVoucher />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/charge/order_list\" exact component={Order_list}>\r\n                    <KeepAlive name=\"Order_list\">\r\n                      <Order_list></Order_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/channel-list\"\r\n                    exact\r\n                    component={Channel_list}\r\n                  >\r\n                    <KeepAlive name=\"Channel_list\">\r\n                      <Channel_list></Channel_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/bankcard-list\"\r\n                    exact\r\n                    component={Bankcard_list}\r\n                  >\r\n                    <KeepAlive name=\"Bankcard_list\">\r\n                      <Bankcard_list></Bankcard_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/recharge_order\"\r\n                    exact\r\n                    component={Recharge_order}\r\n                  >\r\n                    <KeepAlive name=\"Recharge_order\">\r\n                      <Recharge_order></Recharge_order>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/recharge_channel\"\r\n                    exact\r\n                    component={Recharge_channel}\r\n                  >\r\n                    <KeepAlive name=\"Recharge_channel\">\r\n                      <Recharge_channel></Recharge_channel>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/withdraw/withdraw_list\"\r\n                    exact\r\n                    component={Withdraw_list}\r\n                  >\r\n                    <KeepAlive name=\"Withdraw_list\">\r\n                      <Withdraw_list></Withdraw_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/withdraw/daiti_list\"\r\n                    exact\r\n                    component={Daiti_list}\r\n                  >\r\n                    <KeepAlive name=\"Daiti_list\">\r\n                      <Daiti_list />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/withdraw/channel\" exact>\r\n                    <KeepAlive name=\"Channel\">\r\n                      <Channel></Channel>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/gift/list\" exact>\r\n                    <KeepAlive name=\"GiftList\">\r\n                      <GiftList></GiftList>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/gift/setting\" exact>\r\n                    <KeepAlive name=\"GiftSetting\">\r\n                      <GiftSetting></GiftSetting>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/AI/robot\" exact>\r\n                    <KeepAlive name=\"AI\">\r\n                      <AI></AI>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route component={NotFound} />\r\n                </Switch>\r\n              </div>\r\n            </Provider>\r\n          </Content>\r\n          {/* <Footer style={{ textAlign: \"center\", color: \"#cccccc\", padding: 5 }}>\r\n            推荐使用谷歌浏览器，可以获得更佳页面操作体验\r\n          </Footer> */}\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","const defaultState = {\r\n  inputValue: \"\"\r\n};\r\nexport default (state = defaultState, action) => {\r\n  // console.log(state, action);\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case \"change_input\":\r\n      newState.inputValue = action.value;\r\n      break;\r\n    case \"resetPassword\":\r\n      newState.inputValue = \"\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer.js\";\r\nconst store = createStore(reducer);\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Login from \"./pages/login/login\";\r\nimport Admin from \"./pages/admin/admin\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\n\r\n//应用的根组件\r\n \r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            {/*只匹配其中一个*/}\r\n            <Route path=\"/login\" component={Login}></Route>\r\n            <Route path=\"/\" component={Admin}></Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_TOKEN, JSON.stringify(user))\r\n    store.set(USER, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_TOKEN) || '{}')\r\n    return store.get(USER) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    localStorage.removeItem(USER)\r\n    store.remove(USER)\r\n  }\r\n}","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\nimport storageUtils from './utils/storageUtils'\r\nimport memoryUtils from './utils/memoryUtils'\r\n\r\n\r\n\r\nimport { Router } from \"react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport {Modal} from 'antd';\r\n\r\n//在react-router4中监听路由变化\r\nconst history = createBrowserHistory()\r\nhistory.listen((location, action) => {\r\n    // location is an object like window.location\r\n    console.log('history',action, location.pathname, location.state)\r\n    //每次变化执行\r\n    Modal.destroyAll();\r\n    //使用 Modal.destroyAll() 可以销毁弹出的确认窗（即 Modal.info、Modal.success、Modal.error、Modal.warning、Modal.confirm）。通常用于路由监听当中，处理路由前进、后退不能销毁确认对话框的问题，而不用各处去使用实例的返回值进行关闭（modal.destroy() 适用于主动关闭，而不是路由这样被动关闭）\r\n    //注意无法销毁<Modal></Modal>创建的模态框\r\n  })\r\n\r\n// 读取local中保存user, 保存到内存中\r\nconst user = storageUtils.getUser()\r\nmemoryUtils.user = user\r\n\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render(<Router history={history}>\r\n    <App/>\r\n  </Router>, document.getElementById('root'))"],"sourceRoot":""}