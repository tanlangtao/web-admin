{"version":3,"sources":["api/ajax.js","utils/storageUtils.js","api/index.js","pages/login/login.jsx","components/left-nav/index.jsx","components/link-button/index.jsx","utils/memoryUtils.js","components/header/index.jsx","pages/home/home.jsx","utils/dateUtils.js","pages/user/user-nick.jsx","pages/user/user.jsx","pages/admin_manage/admin_manage_list/addData.jsx","pages/admin_manage/admin_manage_list/admin_manage_list.jsx","pages/admin_manage/role/addData.jsx","pages/admin_manage/role/role.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","App.js","index.js"],"names":["ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","promise","axios","get","params","defaults","headers","post","transformRequest","ret","it","encodeURIComponent","then","response","catch","error","message","USER","storageUtils","saveUser","user","store","set","getUser","removeUser","localStorage","removeItem","remove","BASE","process","token","reqLogin","username","password","authcode","reqAuthCode","navList","reqUsers","page","limit","setGameUserNickName","id","game_nick","searchData","start","end","param","key","obj","val","reqLoadGold","reqAdminList","searchAdminData","name","roleList","packageList","addUser","formValue","forEach","element","newobj","Object","objectSpread","status","userStatus","group_id","userGroup","source","proxy","user_money","loadGold","pass","repass","confirmPssword","editUser","resetAuthCode","getRoleList","Item","es_form","Login","getMenuList","_callee","result","regenerator_default","a","wrap","_context","prev","next","sent","children","item","title","slice","setItem","JSON","stringify","_this","props","history","replace","stop","handleSubmit","event","preventDefault","form","validateFields","_ref2","asyncToGenerator","mark","_callee2","err","values","_context2","success","msg","console","log","_x","_x2","apply","this","handleClick","_ref3","_callee3","_context3","modal","info","content","react_default","createElement","src","qrurl","alt","_x3","_x4","validatePwd","rule","value","callback","test","_id","react_router","to","getFieldDecorator","className","onSubmit","rules","required","whitespace","min","max","pattern","initialValue","input","prefix","icon","style","color","placeholder","validator","marginTop","onClick","es_button","htmlType","Component","WrapLogin","create","SubMenu","menu","LeftNav","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","getMenuNodes","menuList","path","location","pathname","reduce","pre","find","cItem","indexOf","openKey","push","cpre","ele","react_router_dom","parse","getItem","menuNodes","justifyContent","mode","theme","selectedKeys","defaultOpenKeys","withRouter","LinkButton","assign","memoryUtils","TabPane","Header","onChange","activeKey","onEdit","targetKey","action","add","tabConfig","oldKey","panes","isTabExist","concat","newTabIndex","lastIndex","pane","i","filter","logout","confirm","onOk","assertThisInitialized","closable","clearInterval","intervalId","onRef","tabs","hideAdd","map","tab","forceRender","Home","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","FormItem","NormalLoginForm","WrappedNormalLoginForm","RangePicker","Option","User","count","pageSize","isNickShow","isGoldShow","startTime","endTime","inputParam","initColumns","dataIndex","fixed","width","onCell","record","rowIndex","onDoubleClick","onContextMenu","onMouseEnter","target","cursor","onMouseLeave","sorter","b","game_gold","render","regin_time","login_time","getGoldDetail","moreDetail","getLoadGold","getUsers","_ref","_result$data","game_user","proxy_user","proxy_nick","proxy_pid","changeNickName","refs","getFormValue","index","resetFields","dataPickerOnChange","dateString","onSearchData","_result$data2","_ref4","_callee4","_context4","_x5","_ref5","_callee5","_context5","_x6","handleChange","bind","_this2","_this$state","config_provider","locale","zh_CN","format","es_select","defaultValue","user_Option","extra","card","table","bordered","rowKey","dataSource","columns","pagination","defaultPageSize","showSizeChanger","showQuickJumper","defaultCurrent","total","scroll","x","y","visible","onCancel","user_nick","ref","AddDataForm","checkboxOnChange","checkedList","indeterminate","checkAll","onCheckAllChange","e","list","checked","setFieldsValue","res","isEdit","t0","editDataRecord","refreshPage","cancel","isBan","group","split","Number","_this$props$form","getFieldValue","_this$props","optionList","labelCol","span","labelAlign","label","es_radio","Group","es_checkbox","options","use_balance","display","WrappedAddDataForm","Admin_manage_list","text","wordWrap","wordBreak","align","edit","addData","isAddDataShow","isEditDataShow","_onOk","footer","Role","role_addData","NotFound","row","col","Footer","Sider","Content","Admin","child1","layout","minHeight","components_left_nav","components_header","margin","backgroundColor","from","exact","component","textAlign","padding","App","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.55b8d0db.chunk.js","sourcesContent":["/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\n//设置axios为form-data\r\n\r\nexport default function ajax(url, data = {}, type = \"GET\") {\r\n  // axios.interceptors.request.use((config) => {\r\n  //   if (['/user/login', '/user/register'].indexOf(config.url) === -1) {\r\n  //     const token = localStorage.getItem('token')\r\n  //     if (token) {\r\n  //       config.headers.Authorization = token\r\n  //     }\r\n  //   }\r\n  //   return config\r\n  // })\r\n  return new Promise((resolve, reject) => {\r\n    let promise;\r\n    // 1. 执行异步ajax请求\r\n    if (type === \"GET\") {\r\n      // 发GET请求\r\n      promise = axios.get(url, {\r\n        // 配置对象\r\n        params: data // 指定请求参数\r\n      });\r\n    } else {\r\n      // 发POST请求\r\n      axios.defaults.headers.post[\"Content-Type\"] =\r\n        \"application/x-www-form-urlencoded\";\r\n      axios.defaults.transformRequest = [\r\n        function(data) {\r\n          let ret = \"\";\r\n          for (let it in data) {\r\n            ret +=\r\n              encodeURIComponent(it) + \"=\" + encodeURIComponent(data[it]) + \"&\";\r\n          }\r\n          return ret;\r\n        }\r\n      ];\r\n      promise = axios.post(url, data);\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise\r\n      .then(response => {\r\n        resolve(response.data);\r\n        // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n      })\r\n      .catch(error => {\r\n        // reject(error)\r\n        message.error(\"请求出错了: \" + error.message);\r\n      });\r\n  });\r\n}","/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_TOKEN, JSON.stringify(user))\r\n    store.set(USER, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_TOKEN) || '{}')\r\n    return store.get(USER) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    localStorage.removeItem(USER)\r\n    store.remove(USER)\r\n  }\r\n}","import ajax from \"./ajax\";\r\nimport storageUtils from \"../utils/storageUtils\";\r\n\r\nconst BASE = process.env.REACT_APP_HOST;\r\nconst token = storageUtils.getUser().token;\r\n\r\n// 登陆\r\nexport const reqLogin = (username, password, authcode) =>\r\n  ajax(BASE + \"/login/login\", { username, password, authcode }, \"POST\");\r\n\r\n// 获取authCode\r\nexport const reqAuthCode = (username, password) =>\r\n  ajax(BASE + \"/login/authCode\", { username, password }, \"POST\");\r\n\r\n// 获取菜单\r\nexport const navList = () => {\r\n  const token = storageUtils.getUser().token;\r\n  return ajax(BASE + \"/acl/navList\", { token }, \"POST\");\r\n};\r\n// ajax(BASE + \"/acl/navList\", { token }, \"POST\");\r\n\r\n//user界面\r\nexport const reqUsers = (page, limit) =>\r\n  ajax(BASE + \"/user/index\", { token, page, limit }, \"POST\");\r\nexport const setGameUserNickName = (id, game_nick) =>\r\n  ajax(BASE + \"/user/setGameUserNickName\", { token, id, game_nick }, \"POST\");\r\n// export const changeGold = (params) =>\r\n//   ajax(\r\n//     \"https://operation.0717996.com/admin/user/changeGold\",\r\n//     { token, task_type: 0, params },\r\n//     \"POST\"\r\n//   );\r\nexport const searchData = (page, limit, start, end, param) => {\r\n  let key = param.key;\r\n  let obj = { page, limit, token, start, end };\r\n  obj[key] = param.val ? param.val : \"\";\r\n  return ajax(BASE + \"/user/index\", obj, \"POST\");\r\n};\r\nexport const reqLoadGold = id => {\r\n  return ajax(\r\n    BASE + \"/user/getGameUser\",\r\n    {\r\n      page: 1,\r\n      limit: 10,\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\n//后台管理-账户列表\r\nexport const reqAdminList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/acl/index\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const searchAdminData = name => {\r\n  return ajax(\r\n    BASE + \"/acl/index\",\r\n    {\r\n      page: 1,\r\n      limit: 20,\r\n      token,\r\n      name\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const roleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/roleList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const packageList = () => {\r\n  return ajax(\r\n    BASE + \"/user/packageList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addUser = formValue => {\r\n  let obj = {};\r\n  formValue.packageList.forEach(element => {\r\n    let str = \"group[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    username: formValue.username,\r\n    status: formValue.userStatus,\r\n    group_id: formValue.userGroup,\r\n    source: formValue.proxy ? formValue.proxy : [],\r\n    ...obj,\r\n    user_money: formValue.loadGold,\r\n    pass: formValue.password,\r\n    repass: formValue.confirmPssword,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/addUser\", newobj, \"POST\");\r\n};\r\nexport const editUser = (formValue, id) => {\r\n  let obj = {};\r\n  formValue.packageList.forEach(element => {\r\n    let str = \"group[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    id,\r\n    username: formValue.username,\r\n    status: formValue.userStatus,\r\n    group_id: formValue.userGroup,\r\n    source: formValue.proxy ? formValue.proxy : [],\r\n    ...obj,\r\n    user_money: formValue.loadGold,\r\n    pass: formValue.password ? formValue.password : [],\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/editUser\", newobj, \"POST\");\r\n};\r\nexport const resetAuthCode = id => {\r\n  return ajax(\r\n    BASE + \"/acl/resetAuthCode\",\r\n    {\r\n      id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\n//后台管理-角色管理\r\nexport const getRoleList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/acl/roleList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Icon, Input, Button, Modal, message } from \"antd\";\r\nimport \"./login.less\";\r\nimport { reqLogin, reqAuthCode, navList } from \"../../api\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\n\r\nconst Item = Form.Item; // 不能写在import之前\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n    if (result.status === 0) {\r\n      let { data } = result;\r\n      data.forEach(element => {\r\n        if (element.children) {\r\n          element.children.forEach(item => {\r\n            item.title = item.title.slice(24);\r\n          });\r\n        }\r\n      });\r\n      localStorage.setItem(\"menuList\", JSON.stringify(data));\r\n      // 跳转到管理界面 (不需要再回退回到登陆)\r\n      this.props.history.replace(\"/\");\r\n    }\r\n  };\r\n  handleSubmit = event => {\r\n    // 阻止事件的默认行为\r\n    event.preventDefault();\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // 请求登陆\r\n        const { username, password, authcode } = values;\r\n        const result = await reqLogin(username, password, authcode);\r\n\r\n        if (result.status === 0) {\r\n          // 登陆成功\r\n          message.success(\"登陆成功\");\r\n          const user = result.data;\r\n          storageUtils.saveUser(user); // 保存到local中\r\n          this.getMenuList();\r\n        } else {\r\n          // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"检验失败!\");\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // 请求登陆\r\n        const { username, password } = values;\r\n        const result = await reqAuthCode(username, password);\r\n        console.log(\"请求成功\", result);\r\n        if (result.status === 0 && result.data) {\r\n          // 登陆成功\r\n          Modal.info({\r\n            title: \"首次登录扫码获取验证码\",\r\n            content: (\r\n              <div>\r\n                <img src={result.data.qrurl} alt=\"验证码\" />\r\n              </div>\r\n            )\r\n          });\r\n        } else {\r\n          // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"检验失败!\");\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  };\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    console.log(\"validatePwd()\", rule, value);\r\n    if (!value) {\r\n      callback(\"密码必须输入\");\r\n    } else if (value.length < 4) {\r\n      callback(\"密码长度不能小于4位\");\r\n    } else if (value.length > 12) {\r\n      callback(\"密码长度不能大于12位\");\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback(\"密码必须是英文、数字或下划线组成\");\r\n    } else {\r\n      callback(); // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  };\r\n\r\n  render() {\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const user = storageUtils.getUser();\r\n    if (user && user._id) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form;\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <h1>QGame: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {/*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */}\r\n              {getFieldDecorator(\"username\", {\r\n                // 配置对象: 属性名是特定的一些名称\r\n                // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"用户名必须输入\"\r\n                  },\r\n                  { min: 3, message: \"用户名至少3位\" },\r\n                  { max: 12, message: \"用户名最多12位\" },\r\n                  {\r\n                    pattern: /^[a-zA-Z0-9_]+$/,\r\n                    message: \"用户名必须是英文、数字或下划线组成\"\r\n                  }\r\n                ],\r\n                initialValue: \"ice\" // 初始值\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"用户名\"\r\n                />\r\n              )}\r\n            </Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  {\r\n                    validator: this.validatePwd\r\n                  }\r\n                ],\r\n                initialValue: \"123456\"\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"authcode\", {\r\n                rules: [\r\n                  //{ required: true, whitespace: true, message: '验证码必须输入' },\r\n                  //{ min: 4, message: '验证码至少4位' }\r\n                ],\r\n                initialValue: \"123456\"\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"qrcode\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"验证码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <span style={{ marginTop: 5 }} onClick={this.handleClick}>\r\n              首次登录，手机下载Google Authenticator\r\n              安装，点击此处扫码获取验证码\r\n            </span>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst WrapLogin = Form.create()(Login);\r\nexport default WrapLogin;\r\n/*\r\n1. 高阶函数\r\n    1). 一类特别的函数\r\n        a. 接受函数类型的参数\r\n        b. 返回值是函数\r\n    2). 常见\r\n        a. 定时器: setTimeout()/setInterval()\r\n        b. Promise: Promise(() => {}) then(value => {}, reason => {})\r\n        c. 数组遍历相关的方法: forEach()/filter()/map()/reduce()/find()/findIndex()\r\n        d. 函数对象的bind()\r\n        e. Form.create()() / getFieldDecorator()()\r\n    3). 高阶函数更新动态, 更加具有扩展性\r\n\r\n2. 高阶组件\r\n    1). 本质就是一个函数\r\n    2). 接收一个组件(被包装组件), 返回一个新的组件(包装组件), 包装组件会向被包装组件传入特定属性\r\n    3). 作用: 扩展组件的功能\r\n    4). 高阶组件也是高阶函数: 接收一个组件函数, 返回是一个新的组件函数\r\n */\r\n/*\r\n包装Form组件生成一个新的组件: Form(Login)\r\n新组件会向Form组件传递一个强大的对象属性: form\r\n */\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu, message } from \"antd\";\r\nimport { navList } from \"../../api\";\r\nimport \"./index.less\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n// 左侧导航的组件\r\nclass LeftNav extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { data: [] };\r\n  }\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n\r\n    if (result.status === 0) {\r\n      //登陆成功\r\n      this.setState({\r\n        data: result.data\r\n      });\r\n      console.log(this.state.data);\r\n    } else {\r\n      // 提示错误信息\r\n      message.error(result.msg);\r\n    }\r\n  };\r\n  /*\r\n   获取左侧菜单导航栏\r\n    */\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data\r\n      });\r\n    } else {\r\n      message.error(\"网络问题，请重新登陆\");\r\n    }\r\n  };\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = menuList => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname;\r\n    return menuList.reduce((pre, item) => {\r\n      // 向pre添加<Menu.Item>\r\n      if (item.key) {\r\n        if (!item.children) {\r\n          pre.push(\r\n            <Menu.Item\r\n              key={item.key}\r\n              onClick={() => {\r\n                this.props.onClick(item);\r\n              }}\r\n            >\r\n              <Link to={item.key}>\r\n                {/* <Icon type={item.icon} /> */}\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(\r\n            cItem => path.indexOf(cItem.key) === 0\r\n          );\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key;\r\n          }\r\n          pre.push(\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {item.children.reduce((cpre, ele) => {\r\n                cpre.push(\r\n                  <Menu.Item\r\n                    key={ele.key}\r\n                    onClick={() => {\r\n                      this.props.onClick(ele);\r\n                    }}\r\n                  >\r\n                    <Link to={ele.key}>\r\n                      <span>{ele.title}</span>\r\n                    </Link>\r\n                  </Menu.Item>\r\n                );\r\n                return cpre;\r\n              }, [])}\r\n            </SubMenu>\r\n          );\r\n        }\r\n      }\r\n        return pre;\r\n    }, []);\r\n  };\r\n  // componentDidMount() {\r\n  //   this.getMenuList();\r\n  // }\r\n  render() {\r\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n    const menuNodes = this.getMenuNodes(menuList);\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname;\r\n    // 得到需要打开菜单项的key\r\n    const openKey = this.openKey;\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link\r\n          to=\"/\"\r\n          className=\"left-nav-header\"\r\n          style={{ justifyContent: \"center\" }}\r\n        >\r\n          <h1>QGame后台管理</h1>\r\n        </Link>\r\n\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n          {menuNodes}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default withRouter(LeftNav);\r\n","import React from 'react'\r\nimport './index.less'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {}, // 保存当前登陆的user\r\n}","import React, { Component } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Modal, Tabs } from \"antd\";\r\n\r\nimport LinkButton from \"../link-button\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport \"./index.less\";\r\nconst { TabPane } = Tabs;\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.newTabIndex = 0;\r\n    const panes = [\r\n      {\r\n        title: \"首页\",\r\n        content: \"Content of Tab 1\",\r\n        key: \"1\",\r\n        closable: false,\r\n        path: \"/home\"\r\n      }\r\n    ];\r\n    this.state = {\r\n      activeKey: panes[0].key,\r\n      panes\r\n    };\r\n  }\r\n  onChange = activeKey => {\r\n    this.setState({ activeKey });\r\n  };\r\n\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  };\r\n\r\n  add = tabConfig => {\r\n    // console.log(\"tabConfig\", tabConfig);\r\n    const { panes } = this.state;\r\n    let isTabExist = false;\r\n    let oldKey;\r\n    panes.forEach(item => {\r\n      if (item.title === tabConfig.title) {\r\n        isTabExist = true;\r\n        oldKey = item.key;\r\n      }\r\n    });\r\n    if (isTabExist) {\r\n      this.onChange(oldKey);\r\n    } else {\r\n      const activeKey = `newTab${this.newTabIndex++}`;\r\n      panes.push({\r\n        title: tabConfig.title,\r\n        content: \"Content of new Tab\",\r\n        key: activeKey,\r\n        path: tabConfig.key\r\n      });\r\n      this.onChange(activeKey);\r\n      this.setState({ panes, activeKey });\r\n    }\r\n  };\r\n\r\n  remove = targetKey => {\r\n    let { activeKey } = this.state;\r\n    let lastIndex;\r\n    this.state.panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n    if (panes.length && activeKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        activeKey = panes[lastIndex].key;\r\n      } else {\r\n        activeKey = panes[0].key;\r\n      }\r\n    }\r\n    this.setState({ panes, activeKey });\r\n  };\r\n\r\n  /*\r\n  退出登陆\r\n   */\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: \"确定退出吗?\",\r\n      onOk: () => {\r\n        console.log(\"OK\", this);\r\n        // 删除保存的user数据\r\n        storageUtils.removeUser();\r\n        memoryUtils.user = {};\r\n        localStorage.removeItem('menuList')\r\n        // 跳转到login\r\n        this.props.history.replace(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId);\r\n  }\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this);\r\n    let data = this.state;\r\n    const path = this.props.location.pathname;\r\n    let title;\r\n    if (path !== \"/home\" && path !== \"/\") {\r\n      const menuList=JSON.parse(localStorage.getItem('menuList'))\r\n      menuList.forEach(item => {\r\n        if (!item.children && item.key === path) {\r\n          title = item.title;\r\n        } else if (item.children) {\r\n          item.children.forEach(val => {\r\n            if (val.key === path) {\r\n              title = val.title;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      data.activeKey = \"2\";\r\n      data.panes.push({\r\n        title: title,\r\n        key: \"2\",\r\n        path: path\r\n      });\r\n      this.setState({\r\n        ...data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = memoryUtils.user.username;\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎！{username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          {/* <div className=\"header-bottom-left\">{title}</div> */}\r\n          <Tabs\r\n            onChange={this.onChange}\r\n            activeKey={this.state.activeKey}\r\n            type=\"editable-card\"\r\n            onEdit={this.onEdit}\r\n            hideAdd\r\n          >\r\n            {this.state.panes.map(pane => (\r\n              <TabPane\r\n                tab={<Link to={pane.path}>{pane.title}</Link>}\r\n                key={pane.key}\r\n                closable={pane.closable}\r\n                forceRender\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React, { Component } from \"react\";\r\n// import { Icon} from \"antd\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return <span>欢迎您！</span>;\r\n  }\r\n}\r\n","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time*1000)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, { Component } from 'react';\r\nimport { Form, Icon, Input } from 'antd';\r\n \r\nconst FormItem = Form.Item;\r\nclass NormalLoginForm extends Component {\r\n \r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form className=\"login-form\">\r\n        <FormItem>\r\n          {getFieldDecorator('name', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n            initialValue:this.props.val,\r\n          })(\r\n            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入昵称\" />\r\n          )}\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n \r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n \r\nexport default WrappedNormalLoginForm;","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  DatePicker,\r\n  Icon,\r\n  Select,\r\n  Input,\r\n  ConfigProvider\r\n} from \"antd\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\n// import moment from \"moment\";\r\nimport \"moment/locale/zh-cn\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport LinkButton from \"../../components/link-button/index\";\r\nimport {\r\n  reqUsers,\r\n  setGameUserNickName,\r\n  searchData,\r\n  reqLoadGold\r\n} from \"../../api/index\";\r\nimport WrappedNormalLoginForm from \"././user-nick\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.initColumns();\r\n  }\r\n  state = {\r\n    data: [],\r\n    count: 0,\r\n    pageSize: 20,\r\n    isNickShow: false,\r\n    isGoldShow: false,\r\n    game_nick: \"\",\r\n    startTime: \"\",\r\n    endTime: \"\",\r\n    inputParam: {\r\n      key: \"id\",\r\n      val: \"\"\r\n    }\r\n  };\r\n\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      fixed: \"left\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"game_nick\",\r\n      key: \"game_nick\",\r\n      fixed: \"left\",\r\n      width: 150,\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.game_nick = record.game_nick;\r\n            this.id = record.id;\r\n            this.rowIndex = rowIndex;\r\n            this.setState({\r\n              isNickShow: true\r\n            });\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n\r\n    {\r\n      title: \"账户余额\",\r\n      dataIndex: \"game_gold\",\r\n      key: \"game_gold\",\r\n      sorter: (a, b) => a.game_gold - b.game_gold,\r\n      width: 150,\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.game_gold = record.game_gold;\r\n            this.id = record.id;\r\n            this.rowIndex = rowIndex;\r\n            this.setState({\r\n              isGoldShow: true\r\n            });\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      key: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_nick\",\r\n      key: \"proxy_nick\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"手机\",\r\n      dataIndex: \"phone_number\",\r\n      key: \"phone_number\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"role_name\",\r\n      key: \"role_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"注册时间\",\r\n      dataIndex: \"regin_time\",\r\n      render: formateDate,\r\n      key: \"regin_time\",\r\n      sorter: (a, b) => a.regin_time - b.regin_time,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"登录IP\",\r\n      dataIndex: \"login_ip\",\r\n      key: \"login_ip\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"登陆时间\",\r\n      dataIndex: \"login_time\",\r\n      render: formateDate,\r\n      key: \"login_time\",\r\n      sorter: (a, b) => a.login_time - b.login_time,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getGoldDetail(record)}>\r\n            资金明细\r\n          </LinkButton>\r\n          <LinkButton onClick={() => this.moreDetail(record)}>更多</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"实时余额\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getLoadGold(record)}>查看</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqUsers(page, limit);\r\n    if (result.status === 0) {\r\n      const { game_user, proxy_user } = result.data;\r\n      game_user.forEach(element => {\r\n        proxy_user.forEach(item => {\r\n          if (element.id === item.id) {\r\n            element.proxy_nick = item.proxy_pid;\r\n          }\r\n        });\r\n      });\r\n      this.setState({\r\n        data: game_user,\r\n        count: result.count\r\n      });\r\n    }\r\n  };\r\n  changeNickName = () => {\r\n    let form = this.refs.getFormValue; //通过refs属性可以获得对话框内form对象\r\n    form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        this.setState({ isNickShow: false });\r\n        if (value.name !== this.game_nick) {\r\n          const result = await setGameUserNickName(this.id, value.name);\r\n          if (result.status === 0) {\r\n            message.success(\"修改成功!\");\r\n            // 首先拿到索引, 也可以从参数中传递过来\r\n            let index = this.rowIndex;\r\n            // 然后根据索引修改\r\n            this.state.data[index][`game_nick`] = value.name;\r\n            // 这个时候并不会更新视图, 需要 setState更新 arr\r\n            this.setState({\r\n              data: this.state.data\r\n            });\r\n          }\r\n        }\r\n      }\r\n      form.resetFields();\r\n    });\r\n  };\r\n  // changeGold=()=>{\r\n  //   //注意这里直接复用了user-nick的模态框，所以取input的值时用value.name\r\n  //   let form = this.refs.getFormValue;\r\n  //   form.validateFields(async (err, value) => {\r\n  //     if (!err) {\r\n  //       this.setState({ isGoldShow: false });\r\n  //       if (value.name !== this.game_gold) {\r\n  //         const result = await setGameUserNickName( this.id, value.name);\r\n  //         console.log(result);\r\n  //         if (result.status === 0) {\r\n  //           message.success(\"修改成功!\");\r\n  //           // 首先拿到索引, 也可以从参数中传递过来\r\n  //           let index = this.rowIndex;\r\n  //           // 然后根据索引修改\r\n  //           this.state.data[index][`game_nick`] = value.name;\r\n  //           // 这个时候并不会更新视图, 需要 setState更新 arr\r\n  //           console.log(this.state.data);\r\n  //           this.setState({\r\n  //             data: this.state.data\r\n  //           });\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     form.resetFields();\r\n  //   });\r\n  // }\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      startTime: startTime,\r\n      endTime: endTime\r\n    });\r\n  };\r\n  handleChange(event) {\r\n    let data = Object.assign({}, this.state.inputParam, {\r\n      val: event.target.value\r\n    });\r\n    this.setState({ inputParam: data });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await searchData(\r\n      1,\r\n      this.state.pageSize,\r\n      this.state.startTime,\r\n      this.state.endTime,\r\n      this.state.inputParam\r\n    );\r\n    if (result.status === 0) {\r\n      const { game_user, proxy_user } = result.data;\r\n      game_user.forEach(element => {\r\n        proxy_user.forEach(item => {\r\n          if (element.id === item.id) {\r\n            element.proxy_nick = item.proxy_pid;\r\n          }\r\n        });\r\n      });\r\n      this.setState({\r\n        data: game_user,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"查不到输入的关键字\");\r\n    }\r\n  };\r\n  getLoadGold = async record => {\r\n    const id = record.id;\r\n    const result = await reqLoadGold(id);\r\n    if (result.status === 0) {\r\n      Modal.success({\r\n        title: \"实时余额\",\r\n        content: `用户${record.id}实时余额是 : ${result.data[0].game_gold}`\r\n      });\r\n    }\r\n  };\r\n  getGoldDetail = async record => {\r\n    // const id = record.id;\r\n    // const result = await reqLoadGold(id);\r\n    // Modal.success({\r\n    //   title: \"资金明细\",\r\n    //   content: `用户${record.id}实时余额是 : ${result.data[0].game_gold}`\r\n    // });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    const { data, count } = this.state;\r\n    const title = (\r\n      <span>\r\n        <ConfigProvider locale={zh_CN}>\r\n          <RangePicker\r\n            // defaultValue={[moment().locale(\"zh-cn\")]}\r\n            // showTime={{ format: \"HH:mm\" }}\r\n            format=\"YYYY-MM-DD\"\r\n            placeholder={[\"开始日期\", \"结束日期\"]}\r\n            onChange={this.dataPickerOnChange}\r\n          />\r\n        </ConfigProvider>\r\n        &nbsp; &nbsp;\r\n        <Select\r\n          style={{ width: 200 }}\r\n          placeholder=\"Select a person\"\r\n          defaultValue=\"id\"\r\n          onChange={val => {\r\n            let data = Object.assign({}, this.state.inputParam, { key: val });\r\n            this.setState(\r\n              {\r\n                inputParam: data\r\n              },\r\n              () => {\r\n                console.log(this.state);\r\n              }\r\n            );\r\n          }}\r\n        >\r\n          <Option value=\"id\">user_id</Option>\r\n          <Option value=\"game_nick\">昵称</Option>\r\n          <Option value=\"phone_number\">手机号</Option>\r\n          <Option value=\"role_name\">账号</Option>\r\n          <Option value=\"proxy_nick\">所属代理</Option>\r\n          <Option value=\"package_nick\">所属品牌</Option>\r\n        </Select>\r\n        &nbsp; &nbsp;\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"请输入关键字搜索\"\r\n          style={{ width: 150 }}\r\n          value={this.state.inputParam.val}\r\n          onChange={this.handleChange}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <button onClick={this.onSearchData}>\r\n          <Icon type=\"search\" />\r\n        </button>\r\n      </span>\r\n    );\r\n    const extra = (\r\n      <button onClick={() => this.getUsers(1, 20)}>\r\n        <Icon type=\"reload\" />\r\n      </button>\r\n    );\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            }\r\n          }}\r\n          scroll={{ x: 2000, y: 550 }}\r\n        />\r\n        <Modal\r\n          title=\"修改昵称\"\r\n          visible={this.state.isNickShow}\r\n          onOk={this.changeNickName}\r\n          onCancel={() => {\r\n            this.setState({ isNickShow: false });\r\n          }}\r\n        >\r\n          <WrappedNormalLoginForm ref=\"getFormValue\" val={this.game_nick} />\r\n        </Modal>\r\n        {/* <Modal\r\n          title=\"修改金额\"\r\n          visible={this.state.isGoldShow}\r\n          onOk={this.changeGold}\r\n          onCancel={() => {\r\n            this.setState({ isGoldShow: false });\r\n          }}\r\n        >\r\n          <WrappedNormalLoginForm ref=\"getFormValue\" val={this.game_gold} />\r\n        </Modal> */}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Checkbox,\r\n  Button,\r\n  message\r\n} from \"antd\";\r\nimport { addUser, editUser } from \"../../../api\";\r\n\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBan: 1,\r\n      checkedList: [],\r\n      indeterminate: true,\r\n      checkAll: false\r\n    };\r\n  }\r\n  checkboxOnChange = checkedList => {\r\n    console.log(checkedList);\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate:\r\n        !!checkedList.length &&\r\n        checkedList.length < this.props.packageList.length,\r\n      checkAll: checkedList.length === this.props.packageList.length\r\n    });\r\n  };\r\n  onCheckAllChange = e => {\r\n    let list = this.props.packageList.map(item => {\r\n      return item.value;\r\n    });\r\n    this.setState(\r\n      {\r\n        checkedList: e.target.checked ? list : [],\r\n        indeterminate: false,\r\n        checkAll: e.target.checked\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          packageList: this.state.checkedList\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await addUser(value)\r\n          : await editUser(value, this.props.editDataRecord.id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.isEdit && this.props.editDataRecord.group) {\r\n      let defaultValue = this.props.editDataRecord.group.split(\",\");\r\n      this.props.form.setFieldsValue({\r\n        packageList: defaultValue.map(Number)\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    const Option = this.props.optionList.map(item => (\r\n      <Select.Option value={item.id} key={item.id}>\r\n        {item.name}\r\n      </Select.Option>\r\n    ));\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        onSubmit={this.handleSubmit}\r\n        labelAlign=\"left\"\r\n      >\r\n        <Form.Item label=\"登录名\">\r\n          {getFieldDecorator(\"username\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"登录名必须输入\"\r\n              },\r\n              { min: 3, message: \"用户名至少3位\" },\r\n              { max: 10, message: \"用户名最多10位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"用户名必须是英文、数字或下划线组成\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"将会成为您唯一的登入名\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户状态\">\r\n          {getFieldDecorator(\"userStatus\", {\r\n            initialValue: isEdit ? editDataRecord.status : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>启用</Radio>\r\n              <Radio value={0}>禁用</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户组\">\r\n          {getFieldDecorator(\"userGroup\", {\r\n            rules: [{ required: true, message: \"请选择用户组!\" }],\r\n            initialValue: isEdit && editDataRecord.group_id\r\n          })(\r\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择用户组\">\r\n              {Option}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权品牌\">\r\n          <Checkbox\r\n            indeterminate={this.state.indeterminate}\r\n            onChange={this.onCheckAllChange}\r\n            checked={this.state.checkAll}\r\n          >\r\n            全选\r\n          </Checkbox>\r\n          {getFieldDecorator(\"packageList\", {\r\n            rules: [{ required: true, message: \"请选择授权品牌!\" }]\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.props.packageList}\r\n              // value={this.state.checkedList}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权代理\">\r\n          {getFieldDecorator(\"proxy\", {\r\n            rules: [\r\n              {\r\n                whitespace: true,\r\n                message: \"多个代理请用英文逗号分隔\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.proxy : \"\"\r\n          })(\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"多个代理请用英文逗号分隔\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"携带金额\">\r\n          {getFieldDecorator(\"loadGold\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              },\r\n              {\r\n                pattern: /^\\d+(\\.\\d+)?$/,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.use_balance\r\n          })(<Input style={{ width: \"60%\" }} placeholder=\"请输入数字\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true,\r\n                message: \"密码不能为空\"\r\n              },\r\n              { min: 6, message: \"密码至少6位\" },\r\n              { max: 16, message: \"密码最多16位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"密码必须是英文、数字或下划线组成\"\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"确认密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"confirmPssword\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"密码(选填)\"\r\n          style={!isEdit ? { display: \"none\" } : {}}\r\n        >\r\n          {getFieldDecorator(\"editPassword\", {\r\n            rules: [\r\n              {\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符，重置密码时使用\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\nimport WrappedAddDataForm from \"./addData\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n  reqAdminList,\r\n  searchAdminData,\r\n  roleList,\r\n  packageList,\r\n  resetAuthCode\r\n} from \"../../../api/index\";\r\n\r\nclass Admin_manage_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      fixed: \"left\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"用户名\",\r\n      dataIndex: \"name\",\r\n      fixed: \"left\",\r\n      width: 150,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"角色\",\r\n      dataIndex: \"role_name\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"授权品牌\",\r\n      dataIndex: \"group\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"授权代理\",\r\n      dataIndex: \"proxy\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"可使用金额\",\r\n      dataIndex: \"use_balance\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 180,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"更新时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 180,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      //   width: 80,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 1 ? \"启用\" : \"禁用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      width: 200,\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n          <LinkButton onClick={() => this.resetAuthCode(record)}>\r\n            AuthCode重置\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqAdminList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await searchAdminData(this.state.inputParam);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: 1\r\n      });\r\n    }\r\n  };\r\n  addData = async () => {\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isAddDataShow: true\r\n      });\r\n    }\r\n  };\r\n  edit = async record => {\r\n    console.log(record);\r\n    this.editDataRecord = record;\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isEditDataShow: true\r\n      });\r\n    }\r\n  };\r\n  resetAuthCode = record => {\r\n    Modal.confirm({\r\n      title: \"信息\",\r\n      content: \"真的要重置么?\",\r\n      async onOk() {\r\n        const res = await resetAuthCode(record.id);\r\n        if (res.status === 0) {\r\n          message.success(res.msg);\r\n        } else {\r\n          message.success(res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入用户名\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.onSearchData}>\r\n              <Icon type=\"search\" />\r\n            </button>\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加账户\r\n            </button>\r\n          </span>\r\n        }\r\n        extra={\r\n          <button onClick={() => this.getUsers(1, 20)}>\r\n            <Icon type=\"reload\" />\r\n          </button>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            }\r\n          }}\r\n          scroll={{ x: 1500, y: 550 }}\r\n        />\r\n        <Modal\r\n          title=\"添加用户\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            optionList={this.optionList}\r\n            packageList={this.packageList}\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={() => this.getUsers(1, 20)}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit=\"true\"\r\n              optionList={this.optionList}\r\n              packageList={this.packageList}\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin_manage_list;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Checkbox,\r\n  Button,\r\n  message\r\n} from \"antd\";\r\nimport { addUser, editUser } from \"../../../api\";\r\n\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBan: 1,\r\n      checkedList: [],\r\n      indeterminate: true,\r\n      checkAll: false\r\n    };\r\n  }\r\n  checkboxOnChange = checkedList => {\r\n    console.log(checkedList);\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate:\r\n        !!checkedList.length &&\r\n        checkedList.length < this.props.packageList.length,\r\n      checkAll: checkedList.length === this.props.packageList.length\r\n    });\r\n  };\r\n  onCheckAllChange = e => {\r\n    let list = this.props.packageList.map(item => {\r\n      return item.value;\r\n    });\r\n    this.setState(\r\n      {\r\n        checkedList: e.target.checked ? list : [],\r\n        indeterminate: false,\r\n        checkAll: e.target.checked\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          packageList: this.state.checkedList\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await addUser(value)\r\n          : await editUser(value, this.props.editDataRecord.id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.isEdit && this.props.editDataRecord.group) {\r\n      let defaultValue = this.props.editDataRecord.group.split(\",\");\r\n      this.props.form.setFieldsValue({\r\n        packageList: defaultValue.map(Number)\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    const Option = this.props.optionList.map(item => (\r\n      <Select.Option value={item.id} key={item.id}>\r\n        {item.name}\r\n      </Select.Option>\r\n    ));\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        onSubmit={this.handleSubmit}\r\n        labelAlign=\"left\"\r\n      >\r\n        <Form.Item label=\"登录名\">\r\n          {getFieldDecorator(\"username\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"登录名必须输入\"\r\n              },\r\n              { min: 3, message: \"用户名至少3位\" },\r\n              { max: 10, message: \"用户名最多10位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"用户名必须是英文、数字或下划线组成\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"将会成为您唯一的登入名\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户状态\">\r\n          {getFieldDecorator(\"userStatus\", {\r\n            initialValue: isEdit ? editDataRecord.status : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>启用</Radio>\r\n              <Radio value={0}>禁用</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户组\">\r\n          {getFieldDecorator(\"userGroup\", {\r\n            rules: [{ required: true, message: \"请选择用户组!\" }],\r\n            initialValue: isEdit && editDataRecord.group_id\r\n          })(\r\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择用户组\">\r\n              {Option}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权品牌\">\r\n          <Checkbox\r\n            indeterminate={this.state.indeterminate}\r\n            onChange={this.onCheckAllChange}\r\n            checked={this.state.checkAll}\r\n          >\r\n            全选\r\n          </Checkbox>\r\n          {getFieldDecorator(\"packageList\", {\r\n            rules: [{ required: true, message: \"请选择授权品牌!\" }]\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.props.packageList}\r\n              // value={this.state.checkedList}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权代理\">\r\n          {getFieldDecorator(\"proxy\", {\r\n            rules: [\r\n              {\r\n                whitespace: true,\r\n                message: \"多个代理请用英文逗号分隔\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.proxy : \"\"\r\n          })(\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"多个代理请用英文逗号分隔\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"携带金额\">\r\n          {getFieldDecorator(\"loadGold\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              },\r\n              {\r\n                pattern: /^\\d+(\\.\\d+)?$/,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.use_balance\r\n          })(<Input style={{ width: \"60%\" }} placeholder=\"请输入数字\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true,\r\n                message: \"密码不能为空\"\r\n              },\r\n              { min: 6, message: \"密码至少6位\" },\r\n              { max: 16, message: \"密码最多16位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"密码必须是英文、数字或下划线组成\"\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"确认密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"confirmPssword\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"密码(选填)\"\r\n          style={!isEdit ? { display: \"none\" } : {}}\r\n        >\r\n          {getFieldDecorator(\"editPassword\", {\r\n            rules: [\r\n              {\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符，重置密码时使用\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport WrappedAddDataForm from \"./addData\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n    getRoleList,\r\n  searchAdminData,\r\n  roleList,\r\n  packageList,\r\n  resetAuthCode\r\n} from \"../../../api/index\";\r\n\r\nclass Role extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"角色名\",\r\n      dataIndex: \"name\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"描述\",\r\n      dataIndex: \"description\",\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 1 ? \"已启用\" : \"禁用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await getRoleList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await searchAdminData(this.state.inputParam);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: 1\r\n      });\r\n    }\r\n  };\r\n  addData = async () => {\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isAddDataShow: true\r\n      });\r\n    }\r\n  };\r\n  edit = async record => {\r\n    console.log(record);\r\n    this.editDataRecord = record;\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isEditDataShow: true\r\n      });\r\n    }\r\n  };\r\n  resetAuthCode = record => {\r\n    Modal.confirm({\r\n      title: \"信息\",\r\n      content: \"真的要重置么?\",\r\n      async onOk() {\r\n        const res = await resetAuthCode(record.id);\r\n        if (res.status === 0) {\r\n          message.success(res.msg);\r\n        } else {\r\n          message.success(res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入用户名\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={this.handleChange}\r\n              required\r\n            />\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.onSearchData}>\r\n              <Icon type=\"search\" />\r\n            </button>\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加账户\r\n            </button>\r\n          </span>\r\n        }\r\n        extra={\r\n          <button onClick={() => this.getUsers(1, 20)}>\r\n            <Icon type=\"reload\" />\r\n          </button>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            }\r\n          }}\r\n        //   scroll={{ x: 1500, y: 550 }}\r\n        />\r\n        <Modal\r\n          title=\"添加用户\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            optionList={this.optionList}\r\n            packageList={this.packageList}\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={() => this.getUsers(1, 20)}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit=\"true\"\r\n              optionList={this.optionList}\r\n              packageList={this.packageList}\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Role;\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './not-found.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport LeftNav from \"../../components/left-nav\";\r\nimport Header from \"../../components/header\";\r\nimport Home from \"../home/home\";\r\nimport User from \"../user/user\";\r\nimport Admin_manage_list from \"../admin_manage/admin_manage_list/admin_manage_list\";\r\nimport Role from \"../admin_manage/role/role\";\r\nimport NotFound from \"../not-found/not-found\";\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\n/*\r\n后台管理的路由组件\r\n */\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  onRef = ref => {\r\n    this.child1 = ref;\r\n  };\r\n  render() {\r\n    const user = storageUtils.getUser();\r\n    // 如果内存没有存储user ==> 当前没有登陆\r\n    if (!user || !user.id) {\r\n      // 自动跳转到登陆(在render()中)\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: \"100%\" }}>\r\n        <Sider>\r\n          <LeftNav\r\n            onClick={tabConfig => {\r\n              this.child1.add && this.child1.add(tabConfig);\r\n            }}\r\n          />\r\n        </Sider>\r\n        <Layout>\r\n          <Header onRef={this.onRef}>Header</Header>\r\n          <Content style={{ margin: 20, backgroundColor: \"#fff\" }}>\r\n            <Switch>\r\n              <Redirect from=\"/\" exact to=\"/home\" />\r\n              <Route path=\"/home\" exact component={Home} />\r\n              <Route path=\"/user/user-list\" exact component={User} />\r\n              <Route\r\n                path=\"/admin_manage/list\"\r\n                exact\r\n                component={Admin_manage_list}\r\n              />\r\n              <Route\r\n              path=\"/admin_manage/role\"\r\n              exact\r\n              component={Role}\r\n            />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\", color: \"#cccccc\", padding: 5 }}>\r\n            推荐使用谷歌浏览器，可以获得更佳页面操作体验\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\n/*\r\n应用的根组件\r\n */\r\nexport default class App extends Component {\r\n\r\n\r\n  render () {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch> {/*只匹配其中一个*/}\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// import 'antd/dist/antd.css'\r\n\r\nimport App from './App'\r\nimport storageUtils from './utils/storageUtils'\r\nimport memoryUtils from './utils/memoryUtils'\r\n\r\n// 读取local中保存user, 保存到内存中\r\nconst user = storageUtils.getUser()\r\nmemoryUtils.user = user\r\n\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}