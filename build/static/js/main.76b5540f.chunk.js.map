{"version":3,"sources":["api/ajax.js","utils/storageUtils.js","api/index.js","pages/login/login.jsx","components/left-nav/index.jsx","components/link-button/index.jsx","utils/memoryUtils.js","components/header/index.jsx","pages/home/home.jsx","utils/dateUtils.js","pages/user/user-nick.jsx","pages/user/user.jsx","pages/admin_manage/admin_manage_list/addData.jsx","pages/admin_manage/admin_manage_list/admin_manage_list.jsx","pages/admin_manage/role/addData.jsx","pages/admin_manage/role/role.jsx","pages/charge/order_list/order_list.jsx","pages/charge/channel_list/addorEdit.jsx","pages/charge/channel_list/channel_list.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","App.js","index.js"],"names":["ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","promise","axios","get","params","defaults","headers","post","transformRequest","ret","it","encodeURIComponent","then","response","catch","error","message","USER","storageUtils","saveUser","user","store","set","getUser","removeUser","localStorage","removeItem","remove","BASE","process","token","reqLogin","username","password","authcode","reqAuthCode","navList","reqUsers","page","limit","setGameUserNickName","id","game_nick","changeGold","record","value","obj","str","gold","desc","proxy_user_id","package_id","Object","objectSpread","task_type","searchData","start","end","param","key","val","reqLoadGold","reqAdminList","searchAdminData","name","roleList","packageList","addUser","formValue","forEach","element","newobj","status","userStatus","group_id","userGroup","source","proxy","user_money","loadGold","pass","repass","confirmPssword","editUser","resetAuthCode","getRoleList","addRole","rules","editRole","role_name","role_id","reqOrder_list","start_time","end_time","order_status","inputParam","paramKey","order_id","user_id","time_type","downloadList","console","log","window","open","getChannelList","addChannel","action","editPayChannel","Item","es_form","Login","getMenuList","_callee","result","regenerator_default","a","wrap","_context","prev","next","sent","children","item","title","slice","setItem","JSON","stringify","_this","props","history","replace","stop","handleSubmit","event","preventDefault","form","validateFields","_ref2","asyncToGenerator","mark","_callee2","err","values","_context2","success","msg","_x","_x2","apply","this","handleClick","_ref3","_callee3","_context3","modal","info","content","react_default","createElement","src","qrurl","alt","_x3","_x4","validatePwd","rule","callback","test","_id","react_router","to","getFieldDecorator","className","onSubmit","required","whitespace","min","max","pattern","initialValue","input","prefix","icon","style","color","placeholder","validator","marginTop","onClick","es_button","htmlType","Component","WrapLogin","create","SubMenu","menu","LeftNav","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","getMenuNodes","menuList","path","location","pathname","reduce","pre","find","cItem","indexOf","openKey","push","cpre","ele","react_router_dom","state","parse","getItem","menuNodes","justifyContent","mode","theme","selectedKeys","defaultOpenKeys","withRouter","LinkButton","assign","memoryUtils","TabPane","Header","onChange","activeKey","onEdit","targetKey","add","tabConfig","oldKey","panes","isTabExist","concat","newTabIndex","lastIndex","pane","i","filter","logout","confirm","onOk","assertThisInitialized","closable","clearInterval","intervalId","onRef","tabs","hideAdd","map","tab","forceRender","Home","formateDate","time","timeStamp","parseInt","moment","format","FormItem","NormalLoginForm","_this$props","isNickModal","goldRecord","display","label","game_gold","TextArea","autosize","minRows","maxRows","WrappedNormalLoginForm","RangePicker","Option","User","count","pageSize","isNickShow","isGoldShow","startTime","endTime","initColumns","dataIndex","fixed","width","onCell","rowIndex","onDoubleClick","onContextMenu","onMouseEnter","target","cursor","onMouseLeave","sorter","b","render","regin_time","login_time","getGoldDetail","moreDetail","getLoadGold","getUsers","_ref","_result$data","game_user","proxy_user","proxy_nick","proxy_pid","changeNickName","refs","getFormValue","index","resetFields","res","_x5","_x6","dataPickerOnChange","date","dateString","onSearchData","_callee4","_result$data2","_context4","_ref5","_callee5","_context5","_x7","_ref6","_callee6","_context6","_x8","handleChange","bind","_this2","_this$state","config_provider","locale","zh_CN","es_select","defaultValue","user_Option","extra","card","table","bordered","rowKey","dataSource","columns","pagination","defaultPageSize","showSizeChanger","showQuickJumper","defaultCurrent","total","onShowSizeChange","current","size","scroll","x","y","visible","onCancel","user_nick","ref","AddDataForm","checkboxOnChange","checkedList","indeterminate","checkAll","onCheckAllChange","e","list","checked","setFieldsValue","isEdit","t0","editDataRecord","refreshPage","cancel","isBan","group","split","Number","_this$props$form","getFieldValue","optionList","labelCol","span","labelAlign","es_radio","Group","es_checkbox","options","use_balance","WrappedAddDataForm","Admin_manage_list","text","wordWrap","wordBreak","align","edit","addData","isAddDataShow","_ref4","isEditDataShow","_onOk","footer","TreeNode","getTreeNodes","onSelect","node","expandedKeys","isLeaf","expanded","k","eventKey","onCheck","checkedKeys","onExpand","defaultCheckedKeys","treeData","tree","checkable","description","Role","role_addData","Order_list","download","word","replace_id","amount","arrival_amount","created_at","arrival_at","order_list_RangePicker","float","wrapperCol","channel_id","nick_name","pay_type","min_amount","max_amount","span_amount","seed","rate","sort","Channel_list","addorEdit","NotFound","row","col","Sider","Footer","Content","Admin","child1","layout","minHeight","components_left_nav","components_header","margin","backgroundColor","from","exact","component","App","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.76b5540f.chunk.js","sourcesContent":["/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\n//设置axios为form-data\r\n\r\nexport default function ajax(url, data = {}, type = \"GET\") {\r\n  // axios.interceptors.request.use((config) => {\r\n  //   if (['/user/login', '/user/register'].indexOf(config.url) === -1) {\r\n  //     const token = localStorage.getItem('token')\r\n  //     if (token) {\r\n  //       config.headers.Authorization = token\r\n  //     }\r\n  //   }\r\n  //   return config\r\n  // })\r\n  return new Promise((resolve, reject) => {\r\n    let promise;\r\n    // 1. 执行异步ajax请求\r\n    if (type === \"GET\") {\r\n      // 发GET请求\r\n      promise = axios.get(url, {\r\n        // 配置对象\r\n        params: data // 指定请求参数\r\n      });\r\n    } else {\r\n      // 发POST请求\r\n      axios.defaults.headers.post[\"Content-Type\"] =\r\n        \"application/x-www-form-urlencoded\";\r\n      axios.defaults.transformRequest = [\r\n        function(data) {\r\n          let ret = \"\";\r\n          for (let it in data) {\r\n            ret +=\r\n              encodeURIComponent(it) + \"=\" + encodeURIComponent(data[it]) + \"&\";\r\n          }\r\n          return ret;\r\n        }\r\n      ];\r\n      promise = axios.post(url, data);\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise\r\n      .then(response => {\r\n        resolve(response.data);\r\n        // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n      })\r\n      .catch(error => {\r\n        // reject(error)\r\n        message.error(\"请求出错了: \" + error.message);\r\n      });\r\n  });\r\n}","/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_TOKEN, JSON.stringify(user))\r\n    store.set(USER, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_TOKEN) || '{}')\r\n    return store.get(USER) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    localStorage.removeItem(USER)\r\n    store.remove(USER)\r\n  }\r\n}","import ajax from \"./ajax\";\r\nimport storageUtils from \"../utils/storageUtils\";\r\n\r\nconst BASE = process.env.REACT_APP_HOST;\r\nconst token = storageUtils.getUser().token;\r\n\r\n// 登陆\r\nexport const reqLogin = (username, password, authcode) =>\r\n  ajax(BASE + \"/login/login\", { username, password, authcode }, \"POST\");\r\n\r\n// 获取authCode\r\nexport const reqAuthCode = (username, password) =>\r\n  ajax(BASE + \"/login/authCode\", { username, password }, \"POST\");\r\n\r\n// 获取菜单\r\nexport const navList = () => {\r\n  const token = storageUtils.getUser().token;\r\n  return ajax(BASE + \"/acl/navList\", { token }, \"POST\");\r\n};\r\n// ajax(BASE + \"/acl/navList\", { token }, \"POST\");\r\n\r\n//user界面\r\nexport const reqUsers = (page, limit) =>\r\n  ajax(BASE + \"/user/index\", { token, page, limit }, \"POST\");\r\nexport const setGameUserNickName = (id, game_nick) =>\r\n  ajax(BASE + \"/user/setGameUserNickName\", { token, id, game_nick }, \"POST\");\r\nexport const changeGold = (record, value) => {\r\n  let obj = {};\r\n  let str = \"params[user_id]\";\r\n  obj[str] = record.id;\r\n  str = \"params[amount]\";\r\n  obj[str] = value.gold;\r\n  str = \"params[reason]\";\r\n  obj[str] = value.desc;\r\n  str = \"params[user_name]\";\r\n  obj[str] = record.game_nick;\r\n  str = \"params[proxy_user_id]\";\r\n  obj[str] = record.proxy_user_id;\r\n  str = \"params[package_id]\";\r\n  obj[str] = record.package_id;\r\n  return ajax(\r\n    BASE + \"/user/changeGold\",\r\n    { token, task_type: 0, ...obj },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const searchData = (page, limit, start, end, param) => {\r\n  let key = param.key;\r\n  let obj = { page, limit, token, start, end };\r\n  obj[key] = param.val ? param.val : \"\";\r\n  return ajax(BASE + \"/user/index\", obj, \"POST\");\r\n};\r\nexport const reqLoadGold = id => {\r\n  return ajax(\r\n    BASE + \"/user/getGameUser\",\r\n    {\r\n      page: 1,\r\n      limit: 10,\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\n//后台管理-账户列表\r\nexport const reqAdminList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/acl/index\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const searchAdminData = name => {\r\n  return ajax(\r\n    BASE + \"/acl/index\",\r\n    {\r\n      page: 1,\r\n      limit: 20,\r\n      token,\r\n      name\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const roleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/roleList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const packageList = () => {\r\n  return ajax(\r\n    BASE + \"/user/packageList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addUser = formValue => {\r\n  let obj = {};\r\n  formValue.packageList.forEach(element => {\r\n    let str = \"group[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    username: formValue.username,\r\n    status: formValue.userStatus,\r\n    group_id: formValue.userGroup,\r\n    source: formValue.proxy ? formValue.proxy : [],\r\n    ...obj,\r\n    user_money: formValue.loadGold,\r\n    pass: formValue.password,\r\n    repass: formValue.confirmPssword,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/addUser\", newobj, \"POST\");\r\n};\r\nexport const editUser = (formValue, id) => {\r\n  let obj = {};\r\n  formValue.packageList.forEach(element => {\r\n    let str = \"group[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    id,\r\n    username: formValue.username,\r\n    status: formValue.userStatus,\r\n    group_id: formValue.userGroup,\r\n    source: formValue.proxy ? formValue.proxy : [],\r\n    ...obj,\r\n    user_money: formValue.loadGold,\r\n    pass: formValue.password ? formValue.password : [],\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/editUser\", newobj, \"POST\");\r\n};\r\nexport const resetAuthCode = id => {\r\n  return ajax(\r\n    BASE + \"/acl/resetAuthCode\",\r\n    {\r\n      id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\n//后台管理-角色管理\r\nexport const getRoleList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/acl/roleList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const getRuleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/ruleList\",\r\n    {\r\n      page: 1,\r\n      limit: 10,\r\n      token,\r\n      flag: 1\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const addRole = (name, rules, desc) => {\r\n  let obj = {};\r\n  rules.forEach(element => {\r\n    let str = \"rules[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    name,\r\n    ...obj,\r\n    desc,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/addRole\", newobj, \"POST\");\r\n};\r\nexport const editRole = (name, rules, desc, id) => {\r\n  let obj = {};\r\n  rules.forEach(element => {\r\n    let str = \"rules[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    role_name: name,\r\n    role_id: id,\r\n    ...obj,\r\n    desc,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/editRole\", newobj, \"POST\");\r\n};\r\n\r\n//充值-充值订单\r\nexport const reqOrder_list = (page, limit, searchData) => {\r\n  if (searchData) {\r\n    let {\r\n      start_time,\r\n      end_time,\r\n      order_status,\r\n      type,\r\n      inputParam,\r\n      paramKey,\r\n      order_id,\r\n      user_id\r\n    } = searchData;\r\n    //处理输入关键字和选择关键字，组合成传输参数\r\n    let obj = {};\r\n    if (paramKey === \"1\" || paramKey === \"2\") {\r\n      obj.time_type = paramKey;\r\n    } else {\r\n      let str = paramKey;\r\n      obj[str] = inputParam;\r\n    }\r\n    return ajax(\r\n      BASE + \"/order/recharge\",\r\n      {\r\n        page,\r\n        limit,\r\n        token,\r\n        start_time,\r\n        end_time,\r\n        order_status,\r\n        type,\r\n        order_id,\r\n        user_id,\r\n        ...obj\r\n      },\r\n      \"POST\"\r\n    );\r\n  } else {\r\n    return ajax(\r\n      BASE + \"/order/recharge\",\r\n      {\r\n        page,\r\n        limit,\r\n        token\r\n      },\r\n      \"POST\"\r\n    );\r\n  }\r\n};\r\nexport const downloadList = searchData => {\r\n  let {\r\n    start_time,\r\n    end_time,\r\n    order_status,\r\n    type,\r\n    inputParam,\r\n    paramKey\r\n  } = searchData;\r\n  if (!paramKey || paramKey === \"\") {\r\n    paramKey = 0;\r\n  }\r\n  let params =\r\n    \"token=\" +\r\n    token +\r\n    \"&filed=\" +\r\n    paramKey +\r\n    \"&keyword=\" +\r\n    inputParam +\r\n    \"&start_time=\" +\r\n    start_time +\r\n    \"&end_time=\" +\r\n    end_time +\r\n    \"&order_status=\" +\r\n    order_status +\r\n    \"&type=\" +\r\n    type;\r\n  let url = BASE + \"/order/recharge/?export=2&\" + params;\r\n  if (paramKey) {\r\n    switch (paramKey) {\r\n      case \"user_id\":\r\n        url = url + \"&user_id=\" + inputParam;\r\n        break;\r\n      case \"order_id\":\r\n        url = url + \"&order_id=\" + inputParam;\r\n        break;\r\n      case \"create_time\":\r\n        url = url + \"&time_type=1\";\r\n        break;\r\n      case \"arrival_time\":\r\n        url = url + \"&time_type=2\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  console.log(url);\r\n  window.open(url);\r\n};\r\nexport const getChannelList = (page, limit, name) => {\r\n  return ajax(\r\n    BASE + \"/order/channelList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      name: name ? name : \"\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addChannel = value => {\r\n  console.log(value);\r\n  return ajax(\r\n    BASE + \"/order/addChannel\",\r\n    {\r\n      ...value,\r\n      token,\r\n      action: \"add\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const editPayChannel = (value,id) => {\r\n  console.log(value);\r\n  return ajax(\r\n    BASE + \"/order/editPayChannel\",\r\n    {\r\n      ...value,\r\n      token,\r\n      id,\r\n      action: \"edit\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Icon, Input, Button, Modal, message } from \"antd\";\r\nimport \"./login.less\";\r\nimport { reqLogin, reqAuthCode, navList } from \"../../api\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\n\r\nconst Item = Form.Item; // 不能写在import之前\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n    if (result.status === 0) {\r\n      let { data } = result;\r\n      data.forEach(element => {\r\n        if (element.children) {\r\n          element.children.forEach(item => {\r\n            item.title = item.title.slice(24);\r\n          });\r\n        }\r\n      });\r\n      localStorage.setItem(\"menuList\", JSON.stringify(data));\r\n      // 跳转到管理界面 (不需要再回退回到登陆)\r\n      this.props.history.replace(\"/\");\r\n    }\r\n  };\r\n  handleSubmit = event => {\r\n    // 阻止事件的默认行为\r\n    event.preventDefault();\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // 请求登陆\r\n        const { username, password, authcode } = values;\r\n        const result = await reqLogin(username, password, authcode);\r\n\r\n        if (result.status === 0) {\r\n          // 登陆成功\r\n          message.success(\"登陆成功\");\r\n          const user = result.data;\r\n          storageUtils.saveUser(user); // 保存到local中\r\n          this.getMenuList();\r\n        } else {\r\n          // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"检验失败!\");\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // 请求登陆\r\n        const { username, password } = values;\r\n        const result = await reqAuthCode(username, password);\r\n        console.log(\"请求成功\", result);\r\n        if (result.status === 0 && result.data) {\r\n          // 登陆成功\r\n          Modal.info({\r\n            title: \"首次登录扫码获取验证码\",\r\n            content: (\r\n              <div>\r\n                <img src={result.data.qrurl} alt=\"验证码\" />\r\n              </div>\r\n            )\r\n          });\r\n        } else {\r\n          // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"检验失败!\");\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  };\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    console.log(\"validatePwd()\", rule, value);\r\n    if (!value) {\r\n      callback(\"密码必须输入\");\r\n    } else if (value.length < 4) {\r\n      callback(\"密码长度不能小于4位\");\r\n    } else if (value.length > 12) {\r\n      callback(\"密码长度不能大于12位\");\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback(\"密码必须是英文、数字或下划线组成\");\r\n    } else {\r\n      callback(); // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  };\r\n\r\n  render() {\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const user = storageUtils.getUser();\r\n    if (user && user._id) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form;\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <h1>QGame: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {/*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */}\r\n              {getFieldDecorator(\"username\", {\r\n                // 配置对象: 属性名是特定的一些名称\r\n                // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"用户名必须输入\"\r\n                  },\r\n                  { min: 3, message: \"用户名至少3位\" },\r\n                  { max: 12, message: \"用户名最多12位\" },\r\n                  {\r\n                    pattern: /^[a-zA-Z0-9_]+$/,\r\n                    message: \"用户名必须是英文、数字或下划线组成\"\r\n                  }\r\n                ],\r\n                initialValue: \"ice\" // 初始值\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"用户名\"\r\n                />\r\n              )}\r\n            </Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  {\r\n                    validator: this.validatePwd\r\n                  }\r\n                ],\r\n                initialValue: \"123456\"\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"authcode\", {\r\n                rules: [\r\n                  //{ required: true, whitespace: true, message: '验证码必须输入' },\r\n                  //{ min: 4, message: '验证码至少4位' }\r\n                ],\r\n                initialValue: \"123456\"\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"qrcode\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"验证码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <span style={{ marginTop: 5 }} onClick={this.handleClick}>\r\n              首次登录，手机下载Google Authenticator\r\n              安装，点击此处扫码获取验证码\r\n            </span>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst WrapLogin = Form.create()(Login);\r\nexport default WrapLogin;\r\n/*\r\n1. 高阶函数\r\n    1). 一类特别的函数\r\n        a. 接受函数类型的参数\r\n        b. 返回值是函数\r\n    2). 常见\r\n        a. 定时器: setTimeout()/setInterval()\r\n        b. Promise: Promise(() => {}) then(value => {}, reason => {})\r\n        c. 数组遍历相关的方法: forEach()/filter()/map()/reduce()/find()/findIndex()\r\n        d. 函数对象的bind()\r\n        e. Form.create()() / getFieldDecorator()()\r\n    3). 高阶函数更新动态, 更加具有扩展性\r\n\r\n2. 高阶组件\r\n    1). 本质就是一个函数\r\n    2). 接收一个组件(被包装组件), 返回一个新的组件(包装组件), 包装组件会向被包装组件传入特定属性\r\n    3). 作用: 扩展组件的功能\r\n    4). 高阶组件也是高阶函数: 接收一个组件函数, 返回是一个新的组件函数\r\n */\r\n/*\r\n包装Form组件生成一个新的组件: Form(Login)\r\n新组件会向Form组件传递一个强大的对象属性: form\r\n */\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu, message } from \"antd\";\r\nimport { navList } from \"../../api\";\r\nimport \"./index.less\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n// 左侧导航的组件\r\nclass LeftNav extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { data: [] };\r\n  }\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n\r\n    if (result.status === 0) {\r\n      //登陆成功\r\n      this.setState({\r\n        data: result.data\r\n      });\r\n    } else {\r\n      // 提示错误信息\r\n      message.error(result.msg);\r\n    }\r\n  };\r\n  /*\r\n   获取左侧菜单导航栏\r\n    */\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data\r\n      });\r\n    } else {\r\n      message.error(\"网络问题，请重新登陆\");\r\n    }\r\n  };\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = menuList => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname;\r\n    return menuList.reduce((pre, item) => {\r\n      // 向pre添加<Menu.Item>\r\n      if (item.key) {\r\n        //按需渲染侧边栏，必须已经在后台-权限管理中设置了路由key才能渲染\r\n        if (!item.children) {\r\n          pre.push(\r\n            <Menu.Item\r\n              key={item.key}\r\n              onClick={() => {\r\n                this.props.onClick(item);\r\n              }}\r\n            >\r\n              <Link to={item.key}>\r\n                {/* <Icon type={item.icon} /> */}\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(\r\n            cItem => path.indexOf(cItem.key) === 0\r\n          );\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key;\r\n          }\r\n          pre.push(\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {item.children.reduce((cpre, ele) => {\r\n                cpre.push(\r\n                  <Menu.Item\r\n                    key={ele.key}\r\n                    onClick={() => {\r\n                      this.props.onClick(ele);\r\n                    }}\r\n                  >\r\n                    <Link to={ele.key}>\r\n                      <span>{ele.title}</span>\r\n                    </Link>\r\n                  </Menu.Item>\r\n                );\r\n                return cpre;\r\n              }, [])}\r\n            </SubMenu>\r\n          );\r\n        }\r\n      }\r\n      return pre;\r\n    }, []);\r\n  };\r\n  // componentDidMount() {\r\n  //   this.getMenuList();\r\n  // }\r\n  render() {\r\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n    const menuNodes = this.getMenuNodes(menuList);\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname;\r\n    // 得到需要打开菜单项的key\r\n    const openKey = this.openKey;\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link\r\n          to=\"/\"\r\n          className=\"left-nav-header\"\r\n          style={{ justifyContent: \"center\" }}\r\n        >\r\n          <h1>QGame后台管理</h1>\r\n        </Link>\r\n\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n          {menuNodes}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default withRouter(LeftNav);\r\n","import React from 'react'\r\nimport './index.less'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {}, // 保存当前登陆的user\r\n}","import React, { Component } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Modal, Tabs } from \"antd\";\r\n\r\nimport LinkButton from \"../link-button\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport \"./index.less\";\r\nconst { TabPane } = Tabs;\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.newTabIndex = 0;\r\n    const panes = [\r\n      {\r\n        title: \"首页\",\r\n        content: \"Content of Tab 1\",\r\n        key: \"1\",\r\n        closable: false,\r\n        path: \"/home\"\r\n      }\r\n    ];\r\n    this.state = {\r\n      activeKey: panes[0].key,\r\n      panes\r\n    };\r\n  }\r\n  onChange = activeKey => {\r\n    this.setState({ activeKey });\r\n  };\r\n\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  };\r\n\r\n  add = tabConfig => {\r\n    // console.log(\"tabConfig\", tabConfig);\r\n    const { panes } = this.state;\r\n    let isTabExist = false;\r\n    let oldKey;\r\n    panes.forEach(item => {\r\n      if (item.title === tabConfig.title) {\r\n        isTabExist = true;\r\n        oldKey = item.key;\r\n      }\r\n    });\r\n    if (isTabExist) {\r\n      this.onChange(oldKey);\r\n    } else {\r\n      const activeKey = `newTab${this.newTabIndex++}`;\r\n      panes.push({\r\n        title: tabConfig.title,\r\n        content: \"Content of new Tab\",\r\n        key: activeKey,\r\n        path: tabConfig.key\r\n      });\r\n      this.onChange(activeKey);\r\n      this.setState({ panes, activeKey });\r\n    }\r\n  };\r\n\r\n  remove = targetKey => {\r\n    let { activeKey } = this.state;\r\n    let lastIndex;\r\n    this.state.panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n    if (panes.length && activeKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        activeKey = panes[lastIndex].key;\r\n      } else {\r\n        activeKey = panes[0].key;\r\n      }\r\n    }\r\n    this.setState({ panes, activeKey });\r\n  };\r\n\r\n  /*\r\n  退出登陆\r\n   */\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: \"确定退出吗?\",\r\n      onOk: () => {\r\n        console.log(\"OK\", this);\r\n        // 删除保存的user数据\r\n        storageUtils.removeUser();\r\n        memoryUtils.user = {};\r\n        localStorage.removeItem('menuList')\r\n        // 跳转到login\r\n        this.props.history.replace(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId);\r\n  }\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this);\r\n    let data = this.state;\r\n    const path = this.props.location.pathname;\r\n    let title;\r\n    if (path !== \"/home\" && path !== \"/\") {\r\n      const menuList=JSON.parse(localStorage.getItem('menuList'))\r\n      menuList.forEach(item => {\r\n        if (!item.children && item.key === path) {\r\n          title = item.title;\r\n        } else if (item.children) {\r\n          item.children.forEach(val => {\r\n            if (val.key === path) {\r\n              title = val.title;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      data.activeKey = \"2\";\r\n      data.panes.push({\r\n        title: title,\r\n        key: \"2\",\r\n        path: path\r\n      });\r\n      this.setState({\r\n        ...data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = memoryUtils.user.username;\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎！{username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          {/* <div className=\"header-bottom-left\">{title}</div> */}\r\n          <Tabs\r\n            onChange={this.onChange}\r\n            activeKey={this.state.activeKey}\r\n            type=\"editable-card\"\r\n            onEdit={this.onEdit}\r\n            hideAdd\r\n          >\r\n            {this.state.panes.map(pane => (\r\n              <TabPane\r\n                tab={<Link to={pane.path}>{pane.title}</Link>}\r\n                key={pane.key}\r\n                closable={pane.closable}\r\n                forceRender\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React, { Component } from \"react\";\r\n// import { Icon} from \"antd\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return <span>欢迎您！</span>;\r\n  }\r\n}\r\n","import moment from \"moment\";\r\nimport { parse } from \"@babel/parser\";\r\n/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return \"\";\r\n  let timeStamp = parseInt(time);\r\n  if (timeStamp === 0) return \"\";\r\n  return moment(timeStamp * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\r\n  // let date = new Date(time * 1000);\r\n  // return (\r\n  //   date.getFullYear() +\r\n  //   \"-\" +\r\n  //   (date.getMonth() + 1) +\r\n  //   \"-\" +\r\n  //   date.getDate() +\r\n  //   \" \" +\r\n  //   date.getHours() +\r\n  //   \":\" +\r\n  //   date.getMinutes() +\r\n  //   \":\" +\r\n  //   date.getSeconds()\r\n  // );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nclass NormalLoginForm extends Component {\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { isNickModal, goldRecord } = this.props;\r\n    return (\r\n      <Form className=\"login-form\">\r\n        <FormItem style={isNickModal ? {} : { display: \"none\" }}>\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: isNickModal,\r\n                message: \"Please input your username!\"\r\n              }\r\n            ],\r\n            initialValue: this.props.val\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"请输入昵称\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n        <FormItem label=\"金额\" style={isNickModal ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"gold\", {\r\n            rules: [\r\n              {\r\n                required: !isNickModal,\r\n                whitespace: true,\r\n                pattern: /^\\d+(\\.\\d+)?$/,\r\n                message: \"必须为数字，减少时金额为负\"\r\n              }\r\n            ],\r\n            initialValue: isNickModal ? \"\" : goldRecord.game_gold\r\n          })(<Input placeholder=\"必须为数字，减少时金额为负\" />)}\r\n        </FormItem>\r\n        <FormItem label=\"备注\" style={isNickModal ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"desc\", {\r\n            rules: [\r\n              { max: 400, message: \"最多400字\" },\r\n              {\r\n                required: !isNickModal\r\n              }\r\n            ]\r\n          })(\r\n            <Input.TextArea\r\n              placeholder=\"请输入文字\"\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n            />\r\n          )}\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n\r\nexport default WrappedNormalLoginForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  DatePicker,\r\n  Icon,\r\n  Select,\r\n  Input,\r\n  ConfigProvider\r\n} from \"antd\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\n// import moment from \"moment\";\r\nimport \"moment/locale/zh-cn\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport LinkButton from \"../../components/link-button/index\";\r\nimport {\r\n  reqUsers,\r\n  setGameUserNickName,\r\n  changeGold,\r\n  searchData,\r\n  reqLoadGold\r\n} from \"../../api/index\";\r\nimport WrappedNormalLoginForm from \"././user-nick\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.initColumns();\r\n  }\r\n  state = {\r\n    data: [],\r\n    count: 0,\r\n    pageSize: 20,\r\n    isNickShow: false,\r\n    isGoldShow: false,\r\n    game_nick: \"\",\r\n    startTime: \"\",\r\n    endTime: \"\",\r\n    inputParam: {\r\n      key: \"id\",\r\n      val: \"\"\r\n    }\r\n  };\r\n\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      fixed: \"left\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"game_nick\",\r\n      key: \"game_nick\",\r\n      fixed: \"left\",\r\n      width: 150,\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.game_nick = record.game_nick;\r\n            this.id = record.id;\r\n            this.rowIndex = rowIndex;\r\n            this.setState({\r\n              isNickShow: true\r\n            });\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n\r\n    {\r\n      title: \"账户余额\",\r\n      dataIndex: \"game_gold\",\r\n      key: \"game_gold\",\r\n      sorter: (a, b) => a.game_gold - b.game_gold,\r\n      width: 150,\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.goldRecord = record;\r\n            this.setState({\r\n              isGoldShow: true\r\n            });\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      key: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_nick\",\r\n      key: \"proxy_nick\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"手机\",\r\n      dataIndex: \"phone_number\",\r\n      key: \"phone_number\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"role_name\",\r\n      key: \"role_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"注册时间\",\r\n      dataIndex: \"regin_time\",\r\n      render: formateDate,\r\n      key: \"regin_time\",\r\n      sorter: (a, b) => a.regin_time - b.regin_time,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"登录IP\",\r\n      dataIndex: \"login_ip\",\r\n      key: \"login_ip\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"登陆时间\",\r\n      dataIndex: \"login_time\",\r\n      render: formateDate,\r\n      sorter: (a, b) => a.login_time - b.login_time,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getGoldDetail(record)}>\r\n            资金明细\r\n          </LinkButton>\r\n          <LinkButton onClick={() => this.moreDetail(record)}>更多</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"实时余额\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getLoadGold(record)}>查看</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqUsers(page, limit);\r\n    if (result.status === 0) {\r\n      const { game_user, proxy_user } = result.data;\r\n      game_user.forEach(element => {\r\n        proxy_user.forEach(item => {\r\n          if (element.id === item.id) {\r\n            element.proxy_nick = item.proxy_pid;\r\n          }\r\n        });\r\n      });\r\n      this.setState({\r\n        data: game_user,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(result.msg);\r\n    }\r\n  };\r\n  changeNickName = () => {\r\n    let form = this.refs.getFormValue; //通过refs属性可以获得对话框内form对象\r\n    form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        this.setState({ isNickShow: false });\r\n        if (value.name !== this.game_nick) {\r\n          const result = await setGameUserNickName(this.id, value.name);\r\n          if (result.status === 0) {\r\n            message.success(\"修改成功!\");\r\n            // 首先拿到索引, 也可以从参数中传递过来\r\n            let index = this.rowIndex;\r\n            // 然后根据索引修改\r\n            this.state.data[index][`game_nick`] = value.name;\r\n            // 这个时候并不会更新视图, 需要 setState更新 arr\r\n            this.setState({\r\n              data: this.state.data\r\n            });\r\n          }\r\n        }\r\n      }\r\n      form.resetFields();\r\n    });\r\n  };\r\n  changeGold = () => {\r\n    //注意这里直接复用了user-nick的模态框，所以取input的值时用value.name\r\n    let form = this.refs.getFormValue;\r\n    let goldRecord = this.goldRecord;\r\n    form.validateFields(async (err, value) => {\r\n      const res = await changeGold(goldRecord, value);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n        this.setState({ isGoldShow: false });\r\n      } else {\r\n        message.error(res.msg);\r\n      }\r\n      form.resetFields();\r\n    });\r\n  };\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      startTime: startTime,\r\n      endTime: endTime\r\n    });\r\n  };\r\n  handleChange(event) {\r\n    let data = Object.assign({}, this.state.inputParam, {\r\n      val: event.target.value\r\n    });\r\n    this.setState({ inputParam: data });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await searchData(\r\n      1,\r\n      this.state.pageSize,\r\n      this.state.startTime,\r\n      this.state.endTime,\r\n      this.state.inputParam\r\n    );\r\n    if (result.status === 0) {\r\n      const { game_user, proxy_user } = result.data;\r\n      game_user.forEach(element => {\r\n        proxy_user.forEach(item => {\r\n          if (element.id === item.id) {\r\n            element.proxy_nick = item.proxy_pid;\r\n          }\r\n        });\r\n      });\r\n      this.setState({\r\n        data: game_user,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"查不到输入的关键字\");\r\n    }\r\n  };\r\n  getLoadGold = async record => {\r\n    const id = record.id;\r\n    const result = await reqLoadGold(id);\r\n    if (result.status === 0) {\r\n      Modal.success({\r\n        title: \"实时余额\",\r\n        content: `用户${record.id}实时余额是 : ${result.data[0].game_gold}`\r\n      });\r\n    }\r\n  };\r\n  getGoldDetail = async record => {\r\n    // const id = record.id;\r\n    // const result = await reqLoadGold(id);\r\n    // Modal.success({\r\n    //   title: \"资金明细\",\r\n    //   content: `用户${record.id}实时余额是 : ${result.data[0].game_gold}`\r\n    // });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    const { data, count } = this.state;\r\n    const title = (\r\n      <span>\r\n        <ConfigProvider locale={zh_CN}>\r\n          <RangePicker\r\n            // defaultValue={[moment().locale(\"zh-cn\")]}\r\n            // showTime={{ format: \"HH:mm\" }}\r\n            format=\"YYYY-MM-DD\"\r\n            placeholder={[\"开始日期\", \"结束日期\"]}\r\n            onChange={this.dataPickerOnChange}\r\n          />\r\n        </ConfigProvider>\r\n        &nbsp; &nbsp;\r\n        <Select\r\n          style={{ width: 200 }}\r\n          placeholder=\"Select a person\"\r\n          defaultValue=\"id\"\r\n          onChange={val => {\r\n            let data = Object.assign({}, this.state.inputParam, { key: val });\r\n            this.setState(\r\n              {\r\n                inputParam: data\r\n              },\r\n              () => {\r\n                console.log(this.state);\r\n              }\r\n            );\r\n          }}\r\n        >\r\n          <Option value=\"id\">user_id</Option>\r\n          <Option value=\"game_nick\">昵称</Option>\r\n          <Option value=\"phone_number\">手机号</Option>\r\n          <Option value=\"role_name\">账号</Option>\r\n          <Option value=\"proxy_nick\">所属代理</Option>\r\n          <Option value=\"package_nick\">所属品牌</Option>\r\n        </Select>\r\n        &nbsp; &nbsp;\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"请输入关键字搜索\"\r\n          style={{ width: 150 }}\r\n          value={this.state.inputParam.val}\r\n          onChange={this.handleChange}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <button onClick={this.onSearchData}>\r\n          <Icon type=\"search\" />\r\n        </button>\r\n      </span>\r\n    );\r\n    const extra = (\r\n      <button onClick={() => this.getUsers(1, 20)}>\r\n        <Icon type=\"reload\" />\r\n      </button>\r\n    );\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 2000, y: 600 }}\r\n        />\r\n        <Modal\r\n          title=\"修改昵称\"\r\n          visible={this.state.isNickShow}\r\n          onOk={this.changeNickName}\r\n          onCancel={() => {\r\n            this.setState({ isNickShow: false });\r\n          }}\r\n        >\r\n          <WrappedNormalLoginForm\r\n            ref=\"getFormValue\"\r\n            val={this.game_nick}\r\n            isNickModal\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"修改金额\"\r\n          visible={this.state.isGoldShow}\r\n          onOk={this.changeGold}\r\n          onCancel={() => {\r\n            this.setState({ isGoldShow: false });\r\n          }}\r\n        >\r\n          <WrappedNormalLoginForm\r\n            ref=\"getFormValue\"\r\n            goldRecord={this.goldRecord}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Checkbox,\r\n  Button,\r\n  message\r\n} from \"antd\";\r\nimport { addUser, editUser } from \"../../../api\";\r\n\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBan: 1,\r\n      checkedList: [],\r\n      indeterminate: true,\r\n      checkAll: false\r\n    };\r\n  }\r\n  checkboxOnChange = checkedList => {\r\n    console.log(checkedList);\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate:\r\n        !!checkedList.length &&\r\n        checkedList.length < this.props.packageList.length,\r\n      checkAll: checkedList.length === this.props.packageList.length\r\n    });\r\n  };\r\n  onCheckAllChange = e => {\r\n    let list = this.props.packageList.map(item => {\r\n      return item.value;\r\n    });\r\n    this.setState(\r\n      {\r\n        checkedList: e.target.checked ? list : [],\r\n        indeterminate: false,\r\n        checkAll: e.target.checked\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          packageList: this.state.checkedList\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await addUser(value)\r\n          : await editUser(value, this.props.editDataRecord.id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.isEdit && this.props.editDataRecord.group) {\r\n      let defaultValue = this.props.editDataRecord.group.split(\",\");\r\n      this.props.form.setFieldsValue({\r\n        packageList: defaultValue.map(Number)\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    const Option = this.props.optionList.map(item => (\r\n      <Select.Option value={item.id} key={item.id}>\r\n        {item.name}\r\n      </Select.Option>\r\n    ));\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        onSubmit={this.handleSubmit}\r\n        labelAlign=\"left\"\r\n      >\r\n        <Form.Item label=\"登录名\">\r\n          {getFieldDecorator(\"username\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"登录名必须输入\"\r\n              },\r\n              { min: 3, message: \"用户名至少3位\" },\r\n              { max: 10, message: \"用户名最多10位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"用户名必须是英文、数字或下划线组成\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"将会成为您唯一的登入名\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户状态\">\r\n          {getFieldDecorator(\"userStatus\", {\r\n            initialValue: isEdit ? editDataRecord.status : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>启用</Radio>\r\n              <Radio value={0}>禁用</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户组\">\r\n          {getFieldDecorator(\"userGroup\", {\r\n            rules: [{ required: true, message: \"请选择用户组!\" }],\r\n            initialValue: isEdit && editDataRecord.group_id\r\n          })(\r\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择用户组\">\r\n              {Option}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权品牌\">\r\n          <Checkbox\r\n            indeterminate={this.state.indeterminate}\r\n            onChange={this.onCheckAllChange}\r\n            checked={this.state.checkAll}\r\n          >\r\n            全选\r\n          </Checkbox>\r\n          {getFieldDecorator(\"packageList\", {\r\n            rules: [{ required: true, message: \"请选择授权品牌!\" }]\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.props.packageList}\r\n              // value={this.state.checkedList}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权代理\">\r\n          {getFieldDecorator(\"proxy\", {\r\n            rules: [\r\n              {\r\n                whitespace: true,\r\n                message: \"多个代理请用英文逗号分隔\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.proxy : \"\"\r\n          })(\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"多个代理请用英文逗号分隔\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"携带金额\">\r\n          {getFieldDecorator(\"loadGold\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              },\r\n              {\r\n                pattern: /^\\d+(\\.\\d+)?$/,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.use_balance\r\n          })(<Input style={{ width: \"60%\" }} placeholder=\"请输入数字\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true,\r\n                message: \"密码不能为空\"\r\n              },\r\n              { min: 6, message: \"密码至少6位\" },\r\n              { max: 16, message: \"密码最多16位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"密码必须是英文、数字或下划线组成\"\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"确认密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"confirmPssword\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"密码(选填)\"\r\n          style={!isEdit ? { display: \"none\" } : {}}\r\n        >\r\n          {getFieldDecorator(\"editPassword\", {\r\n            rules: [\r\n              {\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符，重置密码时使用\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\nimport WrappedAddDataForm from \"./addData\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n  reqAdminList,\r\n  searchAdminData,\r\n  roleList,\r\n  packageList,\r\n  resetAuthCode\r\n} from \"../../../api/index\";\r\n\r\nclass Admin_manage_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      fixed: \"left\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"用户名\",\r\n      dataIndex: \"name\",\r\n      fixed: \"left\",\r\n      width: 150,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"角色\",\r\n      dataIndex: \"role_name\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"授权品牌\",\r\n      dataIndex: \"group\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"授权代理\",\r\n      dataIndex: \"proxy\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"可使用金额\",\r\n      dataIndex: \"use_balance\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 180,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"更新时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 180,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      //   width: 80,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 1 ? \"启用\" : \"禁用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      width: 200,\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n          <LinkButton onClick={() => this.resetAuthCode(record)}>\r\n            AuthCode重置\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqAdminList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await searchAdminData(this.state.inputParam);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: 1\r\n      });\r\n    }\r\n  };\r\n  addData = async () => {\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isAddDataShow: true\r\n      });\r\n    }\r\n  };\r\n  edit = async record => {\r\n    console.log(record);\r\n    this.editDataRecord = record;\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isEditDataShow: true\r\n      });\r\n    }\r\n  };\r\n  resetAuthCode = record => {\r\n    Modal.confirm({\r\n      title: \"信息\",\r\n      content: \"真的要重置么?\",\r\n      async onOk() {\r\n        const res = await resetAuthCode(record.id);\r\n        if (res.status === 0) {\r\n          message.success(res.msg);\r\n        } else {\r\n          message.success(res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入用户名\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={this.handleChange}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.onSearchData}>\r\n              <Icon type=\"search\" />\r\n            </button>\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加账户\r\n            </button>\r\n          </span>\r\n        }\r\n        extra={\r\n          <button onClick={() => this.getUsers(1, 20)}>\r\n            <Icon type=\"reload\" />\r\n          </button>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1500, y: 600 }}\r\n        />\r\n        <Modal\r\n          title=\"添加用户\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            optionList={this.optionList}\r\n            packageList={this.packageList}\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={() => this.getUsers(1, 20)}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit=\"true\"\r\n              optionList={this.optionList}\r\n              packageList={this.packageList}\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin_manage_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Tree } from \"antd\";\r\nimport { addRole, editRole } from \"../../../api\";\r\n\r\nconst { TreeNode } = Tree;\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandedKeys: [],\r\n      selectedKeys: [],\r\n      checkedKeys: this.props.isEdit\r\n        ? this.props.editDataRecord.rules.split(\",\")\r\n        : [],\r\n      defaultCheckedKeys: []\r\n    };\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n    const treeData = this.getTreeNodes(menuList);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        onSubmit={this.handleSubmit}\r\n        labelAlign=\"left\"\r\n      >\r\n        <Form.Item label=\"角色名\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"角色名必须输入\"\r\n              },\r\n              { min: 3, message: \"用户名至少3位\" }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"分配权限\">\r\n          <br />\r\n          <Tree\r\n            checkable\r\n            defaultCheckedKeys={isEdit ? editDataRecord.rules.split(\",\") : []}\r\n            expandedKeys={this.state.expandedKeys}\r\n            selectedKeys={this.state.selectedKeys}\r\n            onSelect={this.onSelect}\r\n            onCheck={this.onCheck}\r\n            onExpand={this.onExpand}\r\n          >\r\n            {treeData}\r\n          </Tree>\r\n        </Form.Item>\r\n        <Form.Item label=\"描述\">\r\n          {getFieldDecorator(\"desc\", {\r\n            rules: [{ max: 400, message: \"最多400字\" }],\r\n            initialValue: isEdit ? editDataRecord.description : \"\"\r\n          })(\r\n            <Input.TextArea\r\n              placeholder=\"请输入文字\"\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  getTreeNodes = menuList => {\r\n    return menuList.map(item => {\r\n      if (!item.children) {\r\n        return <TreeNode key={item.id} title={item.title} />;\r\n      } else {\r\n        return (\r\n          <TreeNode key={item.id} title={item.title}>\r\n            {this.getTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n    });\r\n  };\r\n  onSelect = (selectedKeys, info) => {\r\n    const { node } = info;\r\n    const { expandedKeys } = this.state;\r\n    if (node.props.isLeaf) {\r\n      this.setState({ selectedKeys });\r\n    } else {\r\n      this.setState({\r\n        expandedKeys: node.props.expanded\r\n          ? expandedKeys.filter(k => k !== node.props.eventKey)\r\n          : expandedKeys.concat(node.props.eventKey)\r\n      });\r\n    }\r\n  };\r\n  onCheck = (checkedKeys, info) => {\r\n    // console.log(\"onCheck\", checkedKeys, info);\r\n    this.setState({\r\n      checkedKeys: checkedKeys.map(Number)\r\n    });\r\n  };\r\n  onExpand = (expandedKeys, info) => {\r\n    this.setState({ expandedKeys });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        let { name, desc } = value;\r\n        let rules = this.state.checkedKeys;\r\n        let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n        const res = !this.props.isEdit\r\n          ? await addRole(name, rules, desc)\r\n          : await editRole(name, rules, desc, id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n          this.setState({\r\n            checkedKeys: []\r\n          });\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport WrappedAddDataForm from \"./addData\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getRoleList, getRuleList } from \"../../../api/index\";\r\n\r\nclass Role extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"角色名\",\r\n      dataIndex: \"name\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"描述\",\r\n      dataIndex: \"description\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 1 ? \"已启用\" : \"禁用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  getUsers = async (page, limit) => {\r\n    const result = await getRoleList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  addData = async () => {\r\n    //getRuleList的请求/acl/ruleList返回的不是树状结构的数据，所以使用缓存在本地navlist返回的menulist\r\n    // const res = await getRuleList();\r\n    // if (res.status === 0) {\r\n    //   this.ruleList = res.data;\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n    // }\r\n  };\r\n  edit = async record => {\r\n    // console.log(record);\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <button onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加账户\r\n            </button>\r\n          </span>\r\n        }\r\n        extra={\r\n          <button onClick={() => this.getUsers(1, 20)}>\r\n            <Icon type=\"reload\" />\r\n          </button>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n            // scroll={{ x: 1500, y: 550 }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={() => this.getUsers(1, 20)}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit=\"true\"\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Role;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  ConfigProvider,\r\n  DatePicker,\r\n  Button\r\n} from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\n// import ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\nimport \"moment/locale/zh-cn\";\r\nimport { reqOrder_list, downloadList } from \"../../../api/index\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nclass Order_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: \"\",\r\n      paramKey: \"\",\r\n      inputParam: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\"\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqOrder_list(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await reqOrder_list(1, 20, this.state);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n  };\r\n  download = () => {\r\n    downloadList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <ConfigProvider locale={zh_CN}>\r\n                <RangePicker\r\n                  // defaultValue={[moment().locale(\"zh-cn\")]}\r\n                  // showTime={{ format: \"HH:mm\" }}\r\n                  format=\"YYYY-MM-DD\"\r\n                  placeholder={[\"开始日期\", \"结束日期\"]}\r\n                  onChange={this.dataPickerOnChange}\r\n                />\r\n              </ConfigProvider>\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => this.setState({ paramKey: value })}\r\n              >\r\n                <Select.Option value=\"order_id\">订单id</Select.Option>\r\n                <Select.Option value=\"user_id\">user_id</Select.Option>\r\n                <Select.Option value=\"1\">创建时间</Select.Option>\r\n                <Select.Option value=\"2\">到账时间</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"请输入关键字\"\r\n                style={{ width: 150 }}\r\n                value={this.state.inputParam}\r\n                onChange={this.handleChange}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 200 }}\r\n                onSelect={value => this.setState({ order_status: value })}\r\n              >\r\n                <Select.Option value=\"\">订单状态</Select.Option>\r\n                <Select.Option value=\"0\">全部</Select.Option>\r\n                <Select.Option value=\"1\">未支付</Select.Option>\r\n                <Select.Option value=\"4\">已撤销</Select.Option>\r\n                <Select.Option value=\"5\">已支付</Select.Option>\r\n                <Select.Option value=\"6\">已完成</Select.Option>\r\n                <Select.Option value=\"7\">补单初审通过</Select.Option>\r\n                <Select.Option value=\"8\">补单初审拒绝</Select.Option>\r\n                <Select.Option value=\"9\">补单复审通过</Select.Option>\r\n                <Select.Option value=\"10\">补单复审拒绝</Select.Option>\r\n                <Select.Option value=\"11\">充值失败</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => this.setState({ type: value })}\r\n              >\r\n                <Select.Option value=\"\">订单类型</Select.Option>\r\n                <Select.Option value=\"0\">全部</Select.Option>\r\n                <Select.Option value=\"1\">alipay</Select.Option>\r\n                <Select.Option value=\"2\">银行卡转账</Select.Option>\r\n                <Select.Option value=\"3\">人工代充</Select.Option>\r\n                <Select.Option value=\"4\">人工代提</Select.Option>\r\n                <Select.Option value=\"6\">微信支付</Select.Option>\r\n                <Select.Option value=\"7\">银联支付</Select.Option>\r\n                <Select.Option value=\"8\">网银支付</Select.Option>\r\n                <Select.Option value=\"9\">快捷支付</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <button onClick={this.onSearchData}>\r\n                <Icon type=\"search\" />\r\n                订单查询\r\n              </button>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n            <div style={{ marginTop: 10 }}>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"user_id\"\r\n                style={{ width: 150 }}\r\n                value={this.state.user_id}\r\n                onChange={e => this.setState({ user_id: e.target.value })}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"订单Id\"\r\n                style={{ width: 300 }}\r\n                value={this.state.order_id}\r\n                onChange={e => this.setState({ order_id: e.target.value })}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <button onClick={this.onSearchData}>\r\n                <Icon type=\"search\" />\r\n                玩家掉单查询\r\n              </button>\r\n            </div>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <Button style={{ float: \"right\" }} onClick={() => this.getUsers(1, 20)} icon=\"reload\" />\r\n            <br />\r\n            <br />\r\n            <Button onClick={this.download} icon=\"download\">\r\n              下载列表\r\n            </Button>\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 1900, y: 600 }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"支付渠道\",\r\n      dataIndex: \"channel_type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"0\":\r\n            word = record.replace_id;\r\n            break;\r\n          case \"5\":\r\n            word = \"充提UC\";\r\n            break;\r\n          case \"12\":\r\n            word = \"onePay\";\r\n            break;\r\n          case \"11\":\r\n            word = \"古都\";\r\n            break;\r\n          case [\"10\", \"13\", \"14\", \"15\", \"16\"]:\r\n            word = \"聚鑫\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"支付类型\",\r\n      dataIndex: \"type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"alipay\";\r\n            break;\r\n          case \"2\":\r\n            word = \"银行卡转账\";\r\n            break;\r\n          case \"3\":\r\n            word = \"人工代充\";\r\n            break;\r\n          case \"4\":\r\n            word = \"人工代提\";\r\n            break;\r\n          case \"5\":\r\n            word = \"被赠送\";\r\n            break;\r\n          case \"6\":\r\n            word = \"微信支付\";\r\n            break;\r\n          case \"7\":\r\n            word = \"银联支付\";\r\n            break;\r\n          case \"8\":\r\n            word = \"网银支付\";\r\n            break;\r\n          case \"9\":\r\n            word = \"快捷支付\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"订单状态\",\r\n      dataIndex: \"status\",\r\n      width: 130,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"未支付\";\r\n            break;\r\n          case \"2\":\r\n            word = \"已过期\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已分配\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已撤销\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已支付\";\r\n            break;\r\n          case \"6\":\r\n            word = \"已完成\";\r\n            break;\r\n          case \"7\":\r\n            word = \"补单初审通过\";\r\n            break;\r\n          case \"8\":\r\n            word = \"初审拒绝\";\r\n            break;\r\n          case \"9\":\r\n            word = \"补单复审通过\";\r\n            break;\r\n          case \"10\":\r\n            word = \"复审拒绝\";\r\n            break;\r\n          case \"11\":\r\n            word = \"充值失败\";\r\n            break;\r\n          case \"12\":\r\n            word = \"客服拒绝\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 200,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"备注\",\r\n      dataIndex: \"remark\"\r\n    }\r\n  ];\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      start_time: startTime,\r\n      end_time: endTime\r\n    });\r\n  };\r\n}\r\n\r\nexport default Order_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\r\nimport { addChannel, editPayChannel } from \"../../../api\";\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 7 }}\r\n        wrapperCol={{ span: 17 }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form.Item label=\"支付名称\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"所属渠道ID\">\r\n          {getFieldDecorator(\"channel_id\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.channel_id : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付名称\">\r\n          {getFieldDecorator(\"nick_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>开启</Radio>\r\n              <Radio value={0}>关闭</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付方式\">\r\n          {getFieldDecorator(\"pay_type\", {\r\n            rules: [{ required: true, message: \"请选择支付方式!\" }],\r\n            initialValue: isEdit && editDataRecord.pay_type\r\n          })(\r\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择支付方式\">\r\n              <Select.Option value=\"7\">支付宝H5</Select.Option>\r\n              <Select.Option value=\"8\">支付宝扫码</Select.Option>\r\n              <Select.Option value=\"2\">快捷支付</Select.Option>\r\n              <Select.Option value=\"4\">微信H5</Select.Option>\r\n              <Select.Option value=\"5\">微信扫码</Select.Option>\r\n              <Select.Option value=\"1\">网银支付</Select.Option>\r\n              <Select.Option value=\"13\">银联扫码</Select.Option>\r\n              <Select.Option value=\"17\">转账银行卡</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付限额最小面值\">\r\n          {getFieldDecorator(\"min_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.min_amount : \"\"\r\n          })(<Input style={{ width: \"30%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付限额最大面值\">\r\n          {getFieldDecorator(\"max_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.max_amount : \"\"\r\n          })(<Input style={{ width: \"30%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"固定面值\">\r\n          {getFieldDecorator(\"span_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.span_amount\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"单笔间隔\">\r\n          {getFieldDecorator(\"seed\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.seed\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"玩家承担费率%\">\r\n          {getFieldDecorator(\"rate\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.rate\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"显示排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            initialValue: isEdit ? editDataRecord.sort : \"0\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await addChannel(value)\r\n          : await editPayChannel(value,id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getChannelList, getRuleList } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Channel_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getChannelList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  onSearchData = async () => {\r\n    const res = await getChannelList(1, 20, this.state.inputParam);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    // console.log(record);\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  refreshPage=()=>{\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  }\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入支付名称\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={e => this.setState({ inputParam: e.target.value })}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.onSearchData}>\r\n              <Icon type=\"search\" />\r\n            </button>\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </button>\r\n          </span>\r\n        }\r\n        extra={\r\n          <button\r\n            onClick={this.refreshPage}\r\n          >\r\n            <Icon type=\"reload\" />\r\n          </button>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1900, y: 600 }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"支付名称\",\r\n      dataIndex: \"name\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"渠道昵称\",\r\n      dataIndex: \"nick_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"单笔-最小限额\",\r\n      dataIndex: \"min_amount\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"单笔-最大限额\",\r\n      dataIndex: \"max_amount\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"单笔间隔\",\r\n      dataIndex: \"seed\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"玩家承担的费率%\",\r\n      dataIndex: \"rate\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"固定面值\",\r\n      dataIndex: \"span_amount\",\r\n      width: 250\r\n    },\r\n    {\r\n      title: \"支付方式\",\r\n      dataIndex: \"pay_type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"7\":\r\n            word = \"支付宝H5\";\r\n            break;\r\n          case \"8\":\r\n            word = \"支付宝扫码\";\r\n            break;\r\n          case \"2\":\r\n            word = \"快捷支付\";\r\n            break;\r\n          case \"4\":\r\n            word = \"微信H5\";\r\n            break;\r\n          case \"5\":\r\n            word = \"微信扫码\";\r\n            break;\r\n          case \"1\":\r\n            word = \"网银支付\";\r\n            break;\r\n          case \"13\":\r\n            word = \"银联扫码\";\r\n            break;\r\n          case \"17\":\r\n            word = \"转账银行卡\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 80,\r\n      render: (text, record, index) => {\r\n        return <span>{text === \"1\" ? \"开启\" : \"关闭\"}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"显示顺序\",\r\n      width: 100,\r\n      dataIndex: \"sort\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Channel_list;\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './not-found.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport LeftNav from \"../../components/left-nav\";\r\nimport Header from \"../../components/header\";\r\nimport Home from \"../home/home\";\r\nimport User from \"../user/user\";\r\nimport Admin_manage_list from \"../admin_manage/admin_manage_list/admin_manage_list\";\r\nimport Role from \"../admin_manage/role/role\";\r\nimport Order_list from \"../charge/order_list/order_list\";\r\nimport Channel_list from \"../charge/channel_list/channel_list\";\r\nimport NotFound from \"../not-found/not-found\";\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\n\r\n/*\r\n后台管理的路由组件\r\n */\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  onRef = ref => {\r\n    this.child1 = ref;\r\n  };\r\n  render() {\r\n    const user = storageUtils.getUser();\r\n    // 如果内存没有存储user ==> 当前没有登陆\r\n    if (!user || !user.id) {\r\n      // 自动跳转到登陆(在render()中)\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: \"100%\" }}>\r\n        <Sider>\r\n          <LeftNav\r\n            onClick={tabConfig => {\r\n              this.child1.add && this.child1.add(tabConfig);\r\n            }}\r\n          />\r\n        </Sider>\r\n        <Layout>\r\n          <Header onRef={this.onRef}>Header</Header>\r\n          <Content style={{ margin: 5, backgroundColor: \"#fff\" }}>\r\n            <Switch>\r\n              <Redirect from=\"/\" exact to=\"/home\" />\r\n              <Route path=\"/home\" exact component={Home} />\r\n              <Route path=\"/user/user-list\" exact component={User} />\r\n              <Route\r\n                path=\"/admin_manage/list\"\r\n                exact\r\n                component={Admin_manage_list}\r\n              />\r\n              <Route path=\"/admin_manage/role\" exact component={Role} />\r\n              <Route path=\"/charge/order_list\" exact component={Order_list} />\r\n              <Route path=\"/charge/channel-list\" exact component={Channel_list} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Content>\r\n          {/* <Footer style={{ textAlign: \"center\", color: \"#cccccc\", padding: 5 }}>\r\n            推荐使用谷歌浏览器，可以获得更佳页面操作体验\r\n          </Footer> */}\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\n/*\r\n应用的根组件\r\n */\r\nexport default class App extends Component {\r\n\r\n\r\n  render () {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch> {/*只匹配其中一个*/}\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// import 'antd/dist/antd.css'\r\n\r\nimport App from './App'\r\nimport storageUtils from './utils/storageUtils'\r\nimport memoryUtils from './utils/memoryUtils'\r\n\r\n// 读取local中保存user, 保存到内存中\r\nconst user = storageUtils.getUser()\r\nmemoryUtils.user = user\r\n\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}