{"version":3,"sources":["api/ajax.js","api/index.js","pages/login/login.jsx","components/left-nav/index.jsx","components/link-button/index.jsx","utils/memoryUtils.js","utils/storageUtils.js","components/header/index.jsx","pages/home/home.jsx","utils/dateUtils.js","pages/user/user-nick.jsx","pages/user/gold_details.jsx","components/MyDatePicker.jsx","pages/user/user.jsx","pages/admin_manage/admin_manage_list/addData.jsx","pages/admin_manage/admin_manage_list/admin_manage_list.jsx","pages/admin_manage/role/addData.jsx","pages/admin_manage/role/role.jsx","pages/charge/order_list/editData.jsx","pages/charge/order_list/order_list.jsx","pages/charge/channel_list/addorEdit.jsx","pages/charge/channel_list/channel_list.jsx","pages/charge/bankcard_list/addorEdit.jsx","pages/charge/bankcard_list/bankcard_list.jsx","pages/charge/recharge_order/recharge_order.jsx","pages/charge/recharge_channel/recharge_channel.jsx","pages/customer_service/notice_list/addorEdit.jsx","pages/customer_service/notice_list/index.jsx","pages/customer_service/customer_list/addorEdit.jsx","pages/customer_service/customer_list/index.jsx","pages/withdraw/withdraw_list/details.jsx","pages/withdraw/withdraw_list/index.jsx","components/myComponents.jsx","pages/gameSetting/config/edit.jsx","pages/gameSetting/config/index.jsx","pages/messageCenter/tasks/edit.jsx","pages/messageCenter/tasks/index.jsx","pages/trade/accountList/edit.jsx","pages/trade/accountList/index.jsx","pages/trade/applyHistory/edit.jsx","pages/trade/applyHistory/index.jsx","pages/trade/tradeOrder/edit.jsx","pages/trade/tradeOrder/index.jsx","pages/activity/activityList/editForm.jsx","pages/activity/activityList/index.jsx","pages/activity/giftVoucher/editForm.jsx","pages/activity/giftVoucher/index.jsx","pages/gift/giftList/details.jsx","pages/gift/giftList/editForm.jsx","pages/gift/giftList/index.jsx","pages/gift/giftSetting/index.jsx","pages/AI/robot/index.jsx","pages/withdraw/Daiti_list/details.jsx","pages/withdraw/Daiti_list/edit.jsx","pages/withdraw/Daiti_list/index.jsx","pages/withdraw/Channel/index.jsx","pages/not-found/not-found.jsx","pages/list/DailyReport/dateGameReport.jsx","pages/list/DailyReport/details.jsx","pages/list/DailyReport/index.jsx","pages/admin_manage/ruleManage/edit.jsx","pages/admin_manage/ruleManage/index.jsx","pages/admin/admin.jsx","store/reducer.js","store/index.js","App.js","index.js"],"names":["ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","promise","axios","get","params","defaults","headers","post","transformRequest","ret","it","encodeURIComponent","then","response","catch","error","message","BASE","process","token","localStorage","setToken","reqLogin","username","password","authcode","reqAuthCode","navList","getAuthCode","editPass","reqUsers","page","limit","start","end","inputKey","inputValue","_ajax","Object","defineProperty","setGameUserNickName","id","game_nick","changeGold","record","value","obj","str","gold","desc","proxy_user_id","package_id","objectSpread","task_type","reqLoadGold","userDetail","bindInfo","user_id","saveUserBlack","action","createTask","resetpwd","params[id]","params[account_pass]","reqAdminList","searchAdminData","name","roleList","packageList","addUser","formValue","forEach","element","newobj","status","userStatus","group_id","userGroup","source","proxy","use_money","loadGold","pass","repass","confirmPssword","editUser","resetAuthCode","ruleList","addRule","editRule","rule_id","console","log","ruleDel","getRoleList","addRole","rules","editRole","role_name","role_id","getList","addNotice","formData","updateNotice","delNotice","customerList","saveCustomerService","dailyReportInit","dailyReport","dateReport","group_by","gameReport","oneDayGameReport","date","configList","conf_key","saveConf","tasksList","changeUserBalance","allAccountList","resetPassword","accountList","sellGoldApplyList","tradeRemark","sellGoldInfoList","reviewInfo2","remarkInfo2","sellGoldOrderList","activityConfigList","saveActivityConfig","delActivityConfig","giftVoucherList","reqOrder_list","start_time","end_time","order_status","reqLostOrder_list","order_id","orderReview","review_type","orderReviewEdit","downloadList","searchData","inputParam","paramKey","window","open","getChannelList","addChannel","editPayChannel","bankList","saveBankCard","deleteBankCard","rechargeOrder","getChannel","getChannelInfo","channel_id","editChannelInfo","pay_code","withDraw","flag","filed","time_type","reviewInfo","remarkInfo","downloadWithdrawList","withDrawRemark","temarks","remark_type","getConfigList","get_val","saveWithDrawChannel","alipay[name]","alipay[withdraw_type]","bankcard[name]","bankcard[withdraw_type]","withDrawReview","review_status","is_pass","getAIList","changeInternalUserBalance","amount","Item","es_form","Login","getMenuList","_callee","result","regenerator_default","a","wrap","_context","prev","next","sent","children","item","title","slice","menuList","JSON","stringify","_this","props","history","replace","stop","handleSubmit","event","preventDefault","form","validateFields","_ref2","asyncToGenerator","mark","_callee2","err","values","_context2","success","tokenTimeStamp","Date","getTime","msg","_x","_x2","apply","this","handleClick","_ref3","_callee3","_context3","modal","info","content","react_default","createElement","src","qrurl","alt","_x3","_x4","validatePwd","rule","callback","test","react_router","to","getFieldDecorator","className","onSubmit","required","whitespace","min","max","pattern","input","prefix","icon","style","color","placeholder","validator","marginTop","onClick","es_button","htmlType","Component","WrapLogin","create","SubMenu","menu","LeftNav","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","getMenuNodes","path","location","pathname","reduce","pre","find","currentValue","indexOf","key","openKey","push","openMenu","cpre","ele","react_router_dom","state","_this2","parse","getItem","menuNodes","justifyContent","mode","theme","selectedKeys","onOpenChange","openKeys","withRouter","LinkButton","assign","size","marginRight","USER","storageUtils","store","TabPane","Header","onChange","activeKey","onEdit","targetKey","add","tabConfig","oldKey","panes","isTabExist","concat","newTabIndex","remove","lastIndex","pane","i","filter","logout","confirm","onOk","assertThisInitialized","removeItem","authCode","res","lib_default","width","resetPWD","isEditFormShow","handleEditSubmit","closable","clearInterval","intervalId","onRef","val","_this$props$form","getFieldValue","dropdown","overlay","trigger","tabs","hideAdd","map","tab","forceRender","visible","onCancel","footer","labelCol","span","labelAlign","label","WrappedHeader","Home","typing","timer","setTimeout","clearTimeout","fontSize","formateDate","time","timeStamp","parseInt","moment","format","FormItem","NormalLoginForm","isNickModal","display","initialValue","TextArea","autosize","minRows","maxRows","WrappedNormalLoginForm","GoldDetail","initColumns","isBindInfo","dataIndex","sorter","b","total_balance","GoldDetailRecord","table","bordered","rowKey","dataSource","columns","RangePicker","MyDatePicker","config_provider","locale","zh_CN","showTime","dateString","handleValue","Option","User","fixed","onCell","rowIndex","isNickShow","onDoubleClick","onContextMenu","onMouseEnter","target","cursor","onMouseLeave","game_gold","goldRecord","isGoldShow","render","regin_time","login_time","getGoldDetail","getMoreDetail","getLoadGold","getUsers","_ref","_result$data","game_user","proxy_user","startTime","endTime","proxy_nick","proxy_pid","count","changeNickName","refs","getFormValue","index","resetFields","loading","_x5","_x6","_ref4","_callee4","_context4","_x7","_ref5","_callee5","_context5","moreModal","destroy","t0","isGoldDetailShow","_x8","_x9","_ref6","_callee6","isAdd","_context6","_x10","_x11","resetPwd","isResetPwdShow","resetPwdId","handleResetpwd","_callee7","_context7","okText","popconfirm","onConfirm","cancelText","pageSize","isBindInfoShow","_this$state","es_select","defaultValue","user_Option","ref","Input","extra","reload","card","pagination","defaultPageSize","showSizeChanger","showQuickJumper","showTotal","total","range","defaultCurrent","onShowSizeChange","current","scroll","x","y","user_nick","gold_details","e","AddDataForm","checkboxOnChange","checkedList","indeterminate","checkAll","onCheckAllChange","list","checked","setFieldsValue","isEdit","editDataRecord","refreshPage","cancel","isBan","group","split","Number","_this$props","optionList","es_radio","Group","es_checkbox","options","use_balance","WrappedAddDataForm","Admin_manage_list","text","wordWrap","wordBreak","align","edit","onSearchData","addData","isAddDataShow","isEditDataShow","_onOk","handleChange","bind","TreeNode","getTreeNodes","onSelect","node","expandedKeys","isLeaf","expanded","k","eventKey","onCheck","checkedKeys","onExpand","defaultCheckedKeys","treeData","tree","checkable","description","Role","role_addData","Diaodan","handleRecieveSubmit","Order_list","isQueryShow","download","word","replace_id","arrival_amount","created_at","arrival_at","isEditShow","editUser_id","editMount","editType","editRefused","float","editData","wrapperCol","nick_name","pay_type","min_amount","max_amount","span_amount","seed","rate","sort","Channel_list","addorEdit","card_name","bank_name","card_num","offset","Bankcard_list","delete","bankcard_list_addorEdit","Recharge_order","Recharge_channel","expandedRowRender","indent","childData","onExpandRow","keys","expandedRowKeys","recordId","handleEditData","expandRowByClick","getPackageList","arr","_id","$oid","package_ids","is_open","words","date_picker","Notice_list","onDelete","join","popover","overlayStyle","textOverflow","whiteSpace","overflow","notice_list_addorEdit","Customer_list","handleReset","create_time","customer_list_addorEdit","detailRecord","Withdraw_list","getDetail","user_remark","dataPickerOnChange","t1","isDetailShow","details","React","lineNumbers","json","CodeEditor","_Component","inherits","createClass","conf_val","react_codemirror2","editor","WrappedEditForm","finished","myComponents_CodeEditor","Config","getInitialData","onSearch","onAdd","data[id]","data[params]","data[status]","reason","Tasks","review","refuse","operator_nick","tasks_edit","EditForm","pay_url","checkQrcode","AccountList","checkAccount","accountList_edit","checkDetail","okType","userRemarkInput","editComfirm","operatorRemarkInput","abrupt","applyHistory_edit","tradeOrder_edit","is_close","need_mobile","need_bankcard","order_by","editForm","giftVoucher_editForm","orderStatus","editRecord","giftList_details","giftList_editForm","Channel","initialData","WrappedChannel","check","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","minGold","maxGold","handleOk","onBlur","randNum","Range","Rand","Math","random","round","changeNickname","submitRemark","margin","userRemark","operatorRemark","Daiti","Daiti_list_RangePicker","Daiti_list_details","edit_AddDataForm","_this$initialData","bankcard","channel","alipay","artificial","valuePropName","es_switch","checkedChildren","unCheckedChildren","divider","channel_name","NotFound","row","col","DateGameReport","MoreDetail","getGameReport","footerData","isGameReportShow","nextLevelData","reportData","dateGameReport","DailyReport","getDateReport","newRes","parseData","format_data","user","order","first_pay_user_number","first_pay_user","pay_user_number","pay_user","first_pay_user_number_res","first_pay_user_res","pay_user_number_res","pay_user_res","exchange_user_number","exchange_user","exchange_user_number_res","exchange_user_res","d","game","statement_ratio","abs","lose_statement_total","win_statement_total","toFixed","statement_total","code","parseDateData","parseGameData","reportTable","packageNode","diff","marginBottom","backgroundColor","border","DailyReport_details","pid","module","href","router_key","Rule","layout","ruleManage_edit","RuleManage","Sider","Content","createHashHistory","Admin","minHeight","components_left_nav","child1","components_header","Provider","height","from","exact","component","KeepAlive","user_User","notice_list","customer_list","admin_manage_list","ruleManage","role","list_DailyReport","config","tasks","trade_accountList","applyHistory","tradeOrder","activityList","giftVoucher","order_list","channel_list","bankcard_list","recharge_order","recharge_channel","withdraw_list","Daiti_list","withdraw_Channel","giftList","giftSetting","robot","defaultState","createStore","newState","App","es","createBrowserHistory","listen","destroyAll","ReactDOM","App_App","document","getElementById"],"mappings":"ydAgBe,SAASA,EAAKC,GAA8B,IAAzBC,EAAyBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,GAAIG,EAAcH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,MAUlD,OAAO,IAAII,QAAQ,SAACC,EAASC,GAC3B,IAAIC,EAES,QAATJ,EAEFI,EAAUC,IAAMC,IAAIX,EAAK,CAEvBY,OAAQX,KAIVS,IAAMG,SAASC,QAAQC,KAAK,gBAC1B,oCACFL,IAAMG,SAASG,iBAAmB,CAChC,SAASf,GACP,IAAIgB,EAAM,GACV,IAAK,IAAIC,KAAMjB,EACbgB,GACEE,mBAAmBD,GAAM,IAAMC,mBAAmBlB,EAAKiB,IAAO,IAElE,OAAOD,IAGXR,EAAUC,IAAMK,KAAKf,EAAKC,IAG5BQ,EACGW,KAAK,SAAAC,GACJd,EAAQc,EAASpB,QAGlBqB,MAAM,SAAAC,GAELC,EAAA,EAAQD,MAAM,mCAAYA,EAAMC,aCtDxC,IAAMC,EAAOC,oCAETC,EAAQC,aAAaD,OAAS,GAErBE,EAAW,WACtBF,EAAQC,aAAaD,OAIVG,EAAW,SAACC,EAAUC,EAAUC,GAArB,OACtBlC,EAAK0B,EAAO,eAAgB,CAAEM,WAAUC,WAAUC,YAAY,SAGnDC,EAAc,SAACH,EAAUC,GAAX,OACzBjC,EAAK0B,EAAO,kBAAmB,CAAEM,WAAUC,YAAY,SAG5CG,EAAU,WACrB,IAAMR,EAAQC,aAAaD,MAC3B,OAAO5B,EAAK0B,EAAO,eAAgB,CAAEE,SAAS,SAGnCS,EAAc,kBACzBrC,EAAK0B,EAAO,qBAAsB,CAAEE,SAAS,SAElCU,EAAW,SAAAL,GAAQ,OAC9BjC,EAAK0B,EAAO,gBAAiB,CAAEE,QAAOK,YAAY,SAEvCM,EAAW,SAACC,EAAMC,EAAOC,EAAOC,EAAKC,EAAUC,GAAe,IAAAC,EACzE,OAAO9C,EACL0B,EAAO,eADEoB,EAAA,CAEPN,OAAMC,QAAOC,QAAOC,OAFbI,OAAAC,EAAA,EAAAD,CAAAD,EAEmBF,EAAWC,GAF9BE,OAAAC,EAAA,EAAAD,CAAAD,EAAA,QAE0ClB,GAF1CkB,GAGT,SAISG,EAAsB,SAACC,EAAIC,GAAL,OACjCnD,EAAK0B,EAAO,4BAA6B,CAAEE,QAAOsB,KAAIC,aAAa,SACxDC,EAAa,SAACC,EAAQC,GACjC,IAAIC,EAAM,GACNC,EAAM,kBAYV,OAXAD,EAAIC,GAAOH,EAAOH,GAElBK,EADAC,EAAM,kBACKF,EAAMG,KAEjBF,EADAC,EAAM,kBACKF,EAAMI,KAEjBH,EADAC,EAAM,qBACKH,EAAOF,UAElBI,EADAC,EAAM,yBACKH,EAAOM,cAElBJ,EADAC,EAAM,sBACKH,EAAOO,WACX5D,EACL0B,EAAO,mBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAEPnB,QAAOkC,UAAW,GAAMP,GAC1B,SAGSQ,EAAc,SAAAb,GACzB,OAAOlD,EACL0B,EAAO,oBACP,CACEc,KAAM,EACNC,MAAO,GACPb,QACAsB,MAEF,SAGSc,EAAa,SAACxB,EAAMC,EAAOS,GACtC,OAAOlD,EACL0B,EAAO,mBACP,CACEc,OACAC,QACAb,QACAsB,MAEF,SAGSe,EAAW,SAACzB,EAAMC,EAAOS,GACpC,OAAOlD,EACL0B,EAAO,iBACP,CACEc,OACAC,QACAb,QACAsC,QAAShB,GAEX,SAGSiB,EAAgB,SAACD,EAASE,GACrC,OAAOpE,EACL0B,EAAO,uBACP,CACEE,QACAtB,KAAM,EACN4D,UACAE,UAEF,SAGSC,EAAa,SAACH,EAASI,GAClC,OAAOtE,EACL0B,EAAO,oBACP,CACEE,QACAkC,UAAW,EACXS,aAAcL,EACdM,uBAAwBF,GAE1B,SAISG,EAAe,SAACjC,EAAMC,GACjC,OAAOzC,EACL0B,EAAO,aACP,CACEc,OACAC,QACAb,SAEF,SAGS8C,EAAkB,SAAAC,GAC7B,OAAO3E,EACL0B,EAAO,aACP,CACEc,KAAM,EACNC,MAAO,GACPb,QACA+C,QAEF,SAISC,EAAW,WACtB,OAAO5E,EACL0B,EAAO,gBACP,CACEE,SAEF,SAGSiD,EAAc,WACzB,OAAO7E,EACL0B,EAAO,oBACP,CACEE,SAEF,SAGSkD,EAAU,SAAAC,GACrB,IAAIxB,EAAM,GACVwB,EAAUF,YAAYG,QAAQ,SAAAC,GAE5B1B,EADU,SAAW0B,EAAU,KACpBA,IAEb,IAAIC,EAAMnC,OAAAc,EAAA,EAAAd,CAAA,CACRf,SAAU+C,EAAU/C,SACpBmD,OAAQJ,EAAUK,WAClBC,SAAUN,EAAUO,UACpBC,OAAQR,EAAUS,MAAQT,EAAUS,MAAQ,IACzCjC,EALK,CAMRkC,UAAWV,EAAUW,SACrBC,KAAMZ,EAAU9C,SAChB2D,OAAQb,EAAUc,eAClBjE,UAEF,OAAO5B,EAAK0B,EAAO,eAAgBwD,EAAQ,SAEhCY,EAAW,SAACf,EAAW7B,GAClC,IAAIK,EAAM,GACVwB,EAAUF,YAAYG,QAAQ,SAAAC,GAE5B1B,EADU,SAAW0B,EAAU,KACpBA,IAEb,IAAIC,EAAMnC,OAAAc,EAAA,EAAAd,CAAA,CACRG,KACAlB,SAAU+C,EAAU/C,SACpBmD,OAAQJ,EAAUK,WAClBC,SAAUN,EAAUO,UACpBC,OAAQR,EAAUS,MAAQT,EAAUS,MAAQ,IACzCjC,EANK,CAORkC,UAAWV,EAAUW,SACrBC,KAAMZ,EAAU9C,SAAW8C,EAAU9C,SAAW,GAChDL,UAEF,OAAO5B,EAAK0B,EAAO,gBAAiBwD,EAAQ,SAEjCa,EAAgB,SAAA7C,GAC3B,OAAOlD,EACL0B,EAAO,qBACP,CACEwB,KACAtB,SAEF,SAISoE,EAAW,WACtB,OAAOhG,EACL0B,EAAO,gBACP,CACEE,SAEF,SAGSqE,EAAU,SAAA3C,GACrB,OAAOtD,EACL0B,EAAO,eADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,UAEF,SAGSsE,EAAW,SAACC,EAAS7C,GAGhC,OAFA8C,QAAQC,IAAI/C,GAELtD,EAAK0B,EAAO,gBAARqB,OAAAc,EAAA,EAAAd,CAAA,GAA8BO,EAA9B,CAAqC6C,UAASvE,UAAS,SAEvD0E,GAAU,SAAApD,GACrB,OAAOlD,EACL0B,EAAO,eACP,CACEwB,KACAtB,SAEF,SAIS2E,GAAc,SAAC/D,EAAMC,GAChC,OAAOzC,EACL0B,EAAO,gBACP,CACEc,OACAC,QACAb,SAEF,SAgBS4E,GAAU,SAAC7B,EAAM8B,EAAO/C,GACnC,IAAIH,EAAM,GACVkD,EAAMzB,QAAQ,SAAAC,GAEZ1B,EADU,SAAW0B,EAAU,KACpBA,IAEb,IAAIC,EAAMnC,OAAAc,EAAA,EAAAd,CAAA,CACR4B,QACGpB,EAFK,CAGRG,OACA9B,UAEF,OAAO5B,EAAK0B,EAAO,eAAgBwD,EAAQ,SAEhCwB,GAAW,SAAC/B,EAAM8B,EAAO/C,EAAMR,GAC1C,IAAIK,EAAM,GACVkD,EAAMzB,QAAQ,SAAAC,GAEZ1B,EADU,SAAW0B,EAAU,KACpBA,IAEb,IAAIC,EAAMnC,OAAAc,EAAA,EAAAd,CAAA,CACR4D,UAAWhC,EACXiC,QAAS1D,GACNK,EAHK,CAIRG,OACA9B,UAEF,OAAO5B,EAAK0B,EAAO,gBAAiBwD,EAAQ,SAGjC2B,GAAU,SAACrE,EAAMC,GAC5B,OAAOzC,EACL0B,EAAO,kBACP,CACEc,OACAC,QACAb,SAEF,SAGSkF,GAAY,SAAAC,GACvB,OAAO/G,EACL0B,EAAO,oBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPnB,SACGmF,GAEL,SAGSC,GAAe,SAACD,EAAU7D,GACrC,OAAOlD,EACL0B,EAAO,uBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPnB,QACAsB,MACG6D,GAEL,SAGSE,GAAY,SAAA/D,GACvB,OAAOlD,EACL0B,EAAO,oBACP,CACEE,QACAsB,MAEF,SAISgE,GAAe,SAAC1E,EAAMC,EAAOyB,GACxC,OAAOlE,EACL0B,EAAO,yBACP,CACEc,OACAC,QACAb,QACAsC,QAASA,GAAoB,IAE/B,SAGSiD,GAAsB,SAACJ,EAAU3C,EAAQF,GAIpD,OAHIA,IACF6C,EAAS7C,QAAUA,GAEdlE,EACL0B,EAAO,gCADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPnB,SACGmF,EAJI,CAKP3C,WAEF,SAISgD,GAAkB,SAAC5E,EAAMC,GACpC,OAAOzC,EACL0B,EAAO,sBACP,CACEc,OACAC,QACAb,SAEF,SAGSyF,GAAc,SAAC7E,EAAMC,EAAOmB,GAAqC,IAAzBlB,EAAyBvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,GAAIwC,EAAaxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACrE,OAAOH,EACL0B,EAAO,sBACP,CACEc,OACAC,QACAb,QACAgC,aACAlB,QACAC,OAEF,SAGS2E,GAAa,SAAC9E,EAAMC,EAAOmB,GAAqC,IAAzBlB,EAAyBvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,GAAIwC,EAAaxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACpE,OAAOH,EACL0B,EAAO,qBACP,CACEc,OACAC,QACAb,QACAgC,aACAlB,QACAC,MACA4E,SAAU,QAEZ,SAGSC,GAAa,SAAChF,EAAMC,EAAOmB,GAAqC,IAAzBlB,EAAyBvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,GAAIwC,EAAaxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACpE,OAAOH,EACL0B,EAAO,qBACP,CACEc,OACAC,QACAb,QACAgC,aACAlB,QACAC,MACA4E,SAAU,WAEZ,SAGSE,GAAmB,SAACjF,EAAMC,EAAOmB,EAAY8D,GACxD,OAAO1H,EACL0B,EAAO,qBACP,CACEc,OACAC,QACAb,QACAgC,aACA8D,OACAH,SAAU,WAEZ,SAISI,GAAa,SAACnF,EAAMC,EAAOmF,GACtC,OAAO5H,EACL0B,EAAO,eACP,CACEc,OACAC,QACAb,QACAgG,SAAUA,GAAsB,IAElC,SAGSC,GAAW,SAACvE,EAAOc,GAC9B,OAAOpE,EACL0B,EAAO,mBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIPc,SACAxC,UAEF,SAISkG,GAAY,SAACtF,EAAMC,EAAOa,GACrC,OAAOtD,EACL0B,EAAO,mBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAISmG,GAAoB,SAAAzE,GAC/B,OAAOtD,EACL0B,EAAO,2BADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,UAEF,SAISoG,GAAiB,SAACxF,EAAMC,EAAOa,GAC1C,OAAOtD,EACL0B,EAAO,wBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAGSqG,GAAgB,SAAA/D,GAC3B,OAAOlE,EACL0B,EAAO,uBACP,CACEwC,UACAtC,SAEF,SAGSsG,GAAc,SAAAhE,GACzB,OAAOlE,EAAK0B,EAAO,qBAAsB,CAAEwC,UAAStC,SAAS,SAIlDuG,GAAoB,SAAC3F,EAAMC,EAAOa,GAC7C,OAAOtD,EACL0B,EAAO,2BADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAGSwG,GAAc,SAAA9E,GACzB,OAAOtD,EACL0B,EAAO,qBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,UAEF,SAGSyG,GAAmB,SAAC7F,EAAMC,EAAOyB,GAC5C,OAAOlE,EACL0B,EAAO,0BACP,CACEc,OACAC,QACAyB,UACAtC,SAEF,SAGS0G,GAAc,SAAC9F,EAAMC,EAAOS,GACvC,OAAOlD,EACL0B,EAAO,oBACP,CACEc,OACAC,QACAS,KACA5C,KAAM,EACNsB,SAEF,SAGS2G,GAAc,SAAC/F,EAAMC,EAAOS,GACvC,OAAOlD,EACL0B,EAAO,oBACP,CACEc,OACAC,QACAS,KACA5C,KAAM,EACNsB,SAEF,SAIS4G,GAAoB,SAAChG,EAAMC,EAAOa,GAC7C,OAAOtD,EACL0B,EAAO,2BADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAIS6G,GAAqB,SAACjG,EAAMC,EAAOa,GAC9C,OAAOtD,EACL0B,EAAO,+BADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAGS8G,GAAqB,SAAApF,GAChC,OAAOtD,EACL0B,EAAO,+BADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,UAEF,SAGS+G,GAAoB,SAAAzF,GAC/B,OAAOlD,EACL0B,EAAO,8BACP,CACEwB,KACAtB,SAEF,SAKSgH,GAAkB,SAACpG,EAAMC,EAAOa,GAC3C,OAAOtD,EACL0B,EAAO,4BADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAKSiH,GAAgB,SAC3BrG,EACAC,EACAqG,EACAC,EACAC,EACA1I,EACAsC,EACAC,GAMA,MAJiB,MAAbD,GAAiC,MAAbA,IACtBC,EAAaD,EACbA,EAAW,aAEN5C,EACL0B,EAAO,kBADEqB,OAAAC,EAAA,EAAAD,CAAA,CAEP+F,aAAYC,WAAUC,eAAc1I,OAAMsB,SAAQgB,EAAWC,GAC/D,SAGSoG,GAAoB,SAACzG,EAAMC,EAAOyB,EAASgF,GACtD,OAAOlJ,EACL0B,EAAO,kBACP,CAAEc,OAAMC,QAAOyG,WAAUhF,UAAStC,SAClC,SAGSuH,GAAc,SAACjF,EAASgF,GACnC,OAAOlJ,EACL0B,EAAO,qBACP,CAAEwC,UAASgF,WAAU/D,OAAQ,EAAGiE,YAAa,EAAGxH,SAChD,SAGSyH,GAAkB,SAACnF,EAASgF,EAAU5I,GACjD,OAAON,EACL0B,EAAO,qBACP,CAAEwC,UAASgF,WAAU/D,OAAQ,EAAGiE,YAAa,EAAGxH,QAAOtB,QACvD,SAGSgJ,GAAe,SAAAC,GAAc,IAEtCT,EAMES,EANFT,WACAC,EAKEQ,EALFR,SACAC,EAIEO,EAJFP,aACA1I,EAGEiJ,EAHFjJ,KACAkJ,EAEED,EAFFC,WACAC,EACEF,EADFE,SAEGA,GAAyB,KAAbA,IACfA,EAAW,GAEb,IAeIxJ,EAAMyB,EAAO,8BAdf,SACAE,EACA,UACA6H,EACA,YACAD,EACA,eACAV,EACA,aACAC,EACA,iBACAC,EACA,SACA1I,GAEF,GAAImJ,EACF,OAAQA,GACN,IAAK,UACHxJ,EAAMA,EAAM,YAAcuJ,EAC1B,MACF,IAAK,WACHvJ,EAAMA,EAAM,aAAeuJ,EAC3B,MACF,IAAK,cACHvJ,GAAY,eACZ,MACF,IAAK,eACHA,GAAY,eAMlByJ,OAAOC,KAAK1J,IAED2J,GAAiB,SAACpH,EAAMC,EAAOkC,GAC1C,OAAO3E,EACL0B,EAAO,qBACP,CACEc,OACAC,QACAb,QACA+C,KAAMA,GAAc,IAEtB,SAGSkF,GAAa,SAAAvG,GACxB,OAAOtD,EACL0B,EAAO,oBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,QACAwC,OAAQ,QAEV,SAGS0F,GAAiB,SAACxG,EAAOJ,GACpC,OAAOlD,EACL0B,EAAO,wBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,QACAsB,KACAkB,OAAQ,SAEV,SAIS2F,GAAW,SAACvH,EAAMC,GAC7B,OAAOzC,EACL0B,EAAO,kBACP,CACEc,OACAC,QACAb,SAEF,SAISoI,GAAe,SAACT,EAAYrG,GAIvC,OAHIA,IACFqG,EAAWrG,GAAKA,GAEXlD,EACL0B,EAAO,sBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJwG,EAHI,CAIPnF,OAAQlB,EAAK,OAAS,MACtBtB,UAEF,SAGSqI,GAAiB,SAAA/G,GAC5B,OAAOlD,EACL0B,EAAO,sBACP,CACEwB,KACAkB,OAAQ,MACRxC,SAEF,SAISsI,GAAgB,SAC3B1H,EACAC,EACAqG,EACAC,EACAC,EACApG,EACAC,GAEA,OAAO7C,EACL0B,EAAO,uBADEqB,OAAAC,EAAA,EAAAD,CAAA,CAGPP,OACAC,QACAb,QACAtB,KAAM,GACNwI,aACAC,WACAC,gBACCpG,EAAWC,GAEd,SAISsH,GAAa,SAAC3H,EAAMC,GAC/B,OAAOzC,EACL0B,EAAO,oBACP,CACEc,OACAC,QACAb,SAEF,SAGSwI,GAAiB,SAAAC,GAC5B,OAAOrK,EACL0B,EAAO,wBACP,CACEc,KAAM,EACNC,MAAO,GACPb,QACAyI,cAEF,SAISC,GAAkB,SAACpH,EAAIqH,GAClC,OAAOvK,EACL0B,EAAO,yBACP,CACEwB,KACAtB,QACA2I,YAEF,SAISC,GAAW,SAAChI,EAAMC,EAAOgI,EAAMlB,GAC1C,GAAIA,EAAY,KAEZT,EAMES,EANFT,WACAC,EAKEQ,EALFR,SACAC,EAIEO,EAJFP,aACA1I,EAGEiJ,EAHFjJ,KACAkJ,EAEED,EAFFC,WACAkB,EACEnB,EADFmB,MAGEnH,EAAM,GAQV,MAPc,gBAAVmH,GAAqC,iBAAVA,EAC7BnH,EAAImH,GAASlB,EACM,gBAAVkB,EACTnH,EAAIoH,UAAY,EACG,iBAAVD,IACTnH,EAAIoH,UAAY,GAEX3K,EACL0B,EAAO,kBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,QACAb,QACAkH,aACAC,WACAC,eACA1I,QACGiD,EAVI,CAWPkH,SAEF,QAGF,OAAOzK,EACL0B,EAAO,kBACP,CACEc,OACAC,QACAb,QACA6I,QAEF,SAIOG,GAAa,SAACpI,EAAMC,EAAOS,GACtC,OAAOlD,EACL0B,EAAO,oBACP,CACEc,OACAC,QACAb,QACAsB,KACA5C,KAAM,GAER,SAGSuK,GAAa,SAACrI,EAAMC,EAAOS,GACtC,OAAOlD,EACL0B,EAAO,oBACP,CACEc,OACAC,QACAb,QACAsB,KACA5C,KAAM,GAER,SAGSwK,GAAuB,SAAAvB,GAAc,IAE9CT,EAMES,EANFT,WACAC,EAKEQ,EALFR,SACAC,EAIEO,EAJFP,aACA1I,EAGEiJ,EAHFjJ,KACAkJ,EAEED,EAFFC,WACAkB,EACEnB,EADFmB,MAiBEzK,EAAMyB,EAAO,qCAdf,SACAE,EACA,UACA8I,EACA,YACAlB,EACA,eACAV,EACA,aACAC,EACA,iBACAC,EACA,SACA1I,GAEF,GAAIoK,EACF,OAAQA,GACN,IAAK,UACHzK,EAAMA,EAAM,YAAcuJ,EAC1B,MACF,IAAK,WACHvJ,EAAMA,EAAM,aAAeuJ,EAC3B,MACF,IAAK,cACHvJ,GAAY,eACZ,MACF,IAAK,eACHA,GAAY,eACZ,MACF,IAAK,aACHA,EAAMA,EAAM,eAAiBuJ,EAMnCE,OAAOC,KAAK1J,IAED8K,GAAiB,SAAC7H,EAAI8H,EAASC,GAC1C,OAAOjL,EACL0B,EAAO,wBACP,CACEE,QACAsB,KACA8H,UACAC,cACA3K,KAAM,GAER,SAIS4K,GAAgB,WAC3B,OAAOlL,EACL0B,EAAO,eACP,CACEkG,SAAU,wBACVuD,QAAS,EACTvJ,SAEF,SAGSwJ,GAAsB,SAAClI,EAAIyB,EAAMrB,GAC5C,OAAOtD,EACL0B,EAAO,8BADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPG,KACAyB,QACGrB,EALI,CAMP+H,eAAgB,qBAChBC,wBAAyB,EACzBC,iBAAkB,qBAClBC,0BAA2B,EAC3B5D,SAAU,wBACVxD,OAAQ,OACRxC,UAEF,SAIS6J,GAAiB,SAACvC,EAAUhF,EAASwH,GAChD,OAAO1L,EACL0B,EAAO,kBACP,CACEE,QACAsH,WACAwC,gBACAxH,UACAkF,YAAa,EACbuC,QAAS,GAEX,SAISC,GAAY,SAACpJ,EAAMC,EAAOmB,EAAYN,GACjD,OAAOtD,EACL0B,EAAO,cADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,QACAmB,cACGN,EANI,CAOP1B,UAEF,SAGSiK,GAA4B,SAAC3H,EAAS4H,GACjD,OAAO9L,EACL0B,EAAO,kCACP,CACEwC,UACA4H,SACAlK,SAEF,SCpiCEmK,GAAOC,EAAA,EAAKD,KAKZE,8MACJC,iCAAc,SAAAC,IAAA,IAAAC,EAAAlM,EAAA,OAAAmM,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACStK,IADT,OAEU,KADhBgK,EADMI,EAAAG,MAEDxH,UACHjF,EAASkM,EAATlM,MACD8E,QAAQ,SAAAC,GACPA,EAAQ2H,UACV3H,EAAQ2H,SAAS5H,QAAQ,SAAA6H,GACvBA,EAAKC,MAAQD,EAAKC,MAAMC,MAAM,QAIpClL,aAAamL,SAAWC,KAAKC,UAAUhN,GAEvCiN,EAAKC,MAAMC,QAAQC,QAAQ,MAbjB,wBAAAd,EAAAe,SAAApB,QAkBdqB,aAAe,SAAAC,GAEbA,EAAMC,iBAGNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAKC,GAAZ,IAAAlM,EAAAC,EAAAC,EAAAkK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UAExBuB,EAFwB,CAAAE,EAAAzB,KAAA,eAInB1K,EAAiCkM,EAAjClM,SAAUC,EAAuBiM,EAAvBjM,SAAUC,EAAagM,EAAbhM,SAJDiM,EAAAzB,KAAA,EAKN3K,EAASC,EAAUC,EAAUC,GALvB,OAOL,KAFhBkK,EALqB+B,EAAAxB,MAOhBxH,QAET1D,EAAA,EAAQ2M,QAAQ,4BAChBvM,aAAaD,MAAQwK,EAAOlM,KAAK0B,MACjCC,aAAa8C,KAAOyH,EAAOlM,KAAKyE,KAChC9C,aAAawM,gBAAiB,IAAIC,MAAOC,UACzCzM,IACAqL,EAAKjB,eAILzK,EAAA,EAAQD,MAAM4K,EAAOoC,KAlBIL,EAAAzB,KAAA,eAqB3BtG,QAAQC,IAAI,6BArBe,wBAAA8H,EAAAZ,SAAAS,MAA/B,gBAAAS,EAAAC,GAAA,OAAAb,EAAAc,MAAAC,KAAAzO,YAAA,OA0BF0O,YAAc,WACZ1B,EAAKC,MAAMO,KAAKC,eAAhB,eAAAkB,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA+B,SAAAgB,EAAOd,EAAKC,GAAZ,IAAAlM,EAAAC,EAAAmK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,UAExBuB,EAFwB,CAAAe,EAAAtC,KAAA,eAInB1K,EAAuBkM,EAAvBlM,SAAUC,EAAaiM,EAAbjM,SAJS+M,EAAAtC,KAAA,EAKNvK,EAAYH,EAAUC,GALhB,OAOL,KAFhBmK,EALqB4C,EAAArC,MAOhBxH,QAAgBiH,EAAOlM,KAEhC+O,EAAA,EAAMC,KAAK,CACTpC,MAAO,qEACPqC,QACEC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,OAAKC,IAAKlD,EAAOlM,KAAKqP,MAAOC,IAAI,0BAOvC/N,EAAA,EAAQD,MAAM4K,EAAOoC,KApBIQ,EAAAtC,KAAA,eAuB3BtG,QAAQC,IAAI,6BAvBe,wBAAA2I,EAAAzB,SAAAwB,MAA/B,gBAAAU,EAAAC,GAAA,OAAAZ,EAAAH,MAAAC,KAAAzO,YAAA,OA2CFwP,YAAc,SAACC,EAAMtM,EAAOuM,GAC1BzJ,QAAQC,IAAI,gBAAiBuJ,EAAMtM,GAC9BA,EAEMA,EAAMlD,OAAS,EACxByP,EAAS,2DACAvM,EAAMlD,OAAS,GACxByP,EAAS,4DACC,kBAAkBC,KAAKxM,GAGjCuM,IAFAA,EAAS,oGANTA,EAAS,iHAgBX,GADchO,aAAaD,MAEzB,OAAOwN,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAUC,GAAG,MAGtB,IACQC,EADKrB,KAAKxB,MAAMO,KAChBsC,kBAER,OACEb,EAAA9C,EAAA+C,cAAA,OAAKa,UAAU,SACbd,EAAA9C,EAAA+C,cAAA,UAAQa,UAAU,gBAChBd,EAAA9C,EAAA+C,cAAA,0DAEFD,EAAA9C,EAAA+C,cAAA,WAASa,UAAU,iBACjBd,EAAA9C,EAAA+C,cAAA,sCACAD,EAAA9C,EAAA+C,cAAArD,EAAA,GAAMmE,SAAUvB,KAAKpB,aAAc0C,UAAU,cAC3Cd,EAAA9C,EAAA+C,cAACtD,GAAD,KAQGkE,EAAkB,WAAY,CAG7BxJ,MAAO,CACL,CACE2J,UAAU,EACVC,YAAY,EACZ5O,QAAS,8CAEX,CAAE6O,IAAK,EAAG7O,QAAS,yCACnB,CAAE8O,IAAK,GAAI9O,QAAS,0CACpB,CACE+O,QAAS,kBACT/O,QAAS,4GAbdwO,CAiBCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEC,OACEtB,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,OAAOsQ,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,yBAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,WAAY,CAC7BxJ,MAAO,CACL,CACEsK,UAAWnC,KAAKe,eAHrBM,CAOCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEC,OACEtB,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,OAAOsQ,MAAO,CAAEC,MAAO,qBAEpCvQ,KAAK,WACLwQ,YAAY,mBAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,WAAY,CAC7BxJ,MAAO,IADRwJ,CAMCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEC,OACEtB,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,SAASsQ,MAAO,CAAEC,MAAO,qBAEtCvQ,KAAK,WACLwQ,YAAY,yBAIlB1B,EAAA9C,EAAA+C,cAAA,QAAMuB,MAAO,CAAEI,UAAW,GAAKC,QAASrC,KAAKC,aAA7C,mKAIAO,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE5Q,KAAK,UACL6Q,SAAS,SACTjB,UAAU,qBAHZ,2BAvMMkB,aAsNLC,GADGrF,EAAA,EAAKsF,QAALtF,CAAcC,kDC1N1BsF,WAAUC,GAAA,EAAKD,SAEfE,eACJ,SAAAA,IAAc,IAAAtE,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA6C,IACZtE,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA0O,GAAAI,KAAAjD,QAGF1C,YAJcnJ,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAIA,SAAA5B,IAAA,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACStK,IADT,OAGU,KAFhBgK,EADMI,EAAAG,MAGDxH,OAETgI,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,OAIfuB,EAAA,EAAQD,MAAM4K,EAAOoC,KAVX,wBAAAhC,EAAAe,SAAApB,MAJAgB,EAoBdjB,YApBcnJ,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAoBA,SAAAC,IAAA,IAAA5B,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACStK,IADT,OAEU,KADhBgK,EADM+B,EAAAxB,MAEDxH,OACTgI,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,OAGfuB,EAAA,EAAQD,MAAM,gEAPJ,wBAAA2M,EAAAZ,SAAAS,MApBAb,EAmCd4E,aAAe,SAAA/E,GAEb,IAAMgF,EAAO7E,EAAKC,MAAM6E,SAASC,SACjC,OAAOlF,EAASmF,OAAO,SAACC,EAAKvF,GAIpBA,EAAKD,UAiBMC,EAAKD,SAASyF,KAC1B,SAAAC,GAAY,OAAuC,IAAnCN,EAAKO,QAAQD,EAAaE,SAI1CrF,EAAKsF,QAAU5F,EAAK2F,KAGtBJ,EAAIM,KACFtD,EAAA9C,EAAA+C,cAACkC,GAAD,CACEiB,IAAK3F,EAAK2F,IACV1F,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA,YAAOxC,EAAKC,QAGhBmE,QAAS,WACP9D,EAAKwF,SAAW9F,EAAK2F,MAItB3F,EAAKD,SAASuF,OAAO,SAACS,EAAMC,GAa3B,OAZAD,EAAKF,KACHtD,EAAA9C,EAAA+C,cAAAmC,GAAA,EAAMzF,KAAN,CACEyG,IAAKK,EAAIL,IACTvB,QAAS,WACP9D,EAAKC,MAAM6D,QAAQ4B,KAGrBzD,EAAA9C,EAAA+C,cAACyD,EAAA,EAAD,CAAM9C,GAAI6C,EAAIL,KACZpD,EAAA9C,EAAA+C,cAAA,YAAOwD,EAAI/F,UAIV8F,GACN,OAnDPR,EAAIM,KACFtD,EAAA9C,EAAA+C,cAAAmC,GAAA,EAAMzF,KAAN,CACEyG,IAAK3F,EAAK2F,IACVvB,QAAS,WACP9D,EAAKC,MAAM6D,QAAQpE,GACnBM,EAAKwF,SAAW9F,EAAK2F,MAGvBpD,EAAA9C,EAAA+C,cAACyD,EAAA,EAAD,CAAM9C,GAAInD,EAAK2F,KAEbpD,EAAA9C,EAAA+C,cAAA,YAAOxC,EAAKC,UA8CtB,OAAOsF,GACN,KAlGHjF,EAAK4F,MAAQ,CAAE7S,KAAM,GAAIuS,QAAS,IAFtBtF,mFAuGZyB,KAAKkD,SAAS,CAACW,QAAQ7D,KAAK6D,2CAErB,IAAAO,EAAApE,KACD5B,EAAWC,KAAKgG,MAAMpR,aAAaqR,QAAQ,aAC3CC,EAAYvE,KAAKmD,aAAa/E,GAEhCgF,EAAOpD,KAAKxB,MAAM6E,SAASC,SAI/B,OACE9C,EAAA9C,EAAA+C,cAAA,OAAKa,UAAU,YACbd,EAAA9C,EAAA+C,cAACyD,EAAA,EAAD,CACE9C,GAAG,IACHE,UAAU,kBACVU,MAAO,CAAEwC,eAAgB,WAEzBhE,EAAA9C,EAAA+C,cAAA,4CAEFD,EAAA9C,EAAA+C,cAAAmC,GAAA,GACE6B,KAAK,SACLC,MAAM,OACNC,aAAc,CAACvB,GAEfwB,aAAc,SAAAhB,GACZpM,QAAQC,IAAImM,GACRA,EAAI,IAAMA,EAAI,KAAOA,EAAI,GAC3BQ,EAAKlB,SAAS,CAAEW,QAASD,EAAI,KAE7BQ,EAAKlB,SAAS,CAAEW,QAAS,QAG7BgB,SAAU,CAAC7E,KAAKmE,MAAMN,UAErBU,WA1IW/B,aAsJPsC,eAAWjC,mDC5JX,SAASkC,GAAWvG,GACjC,OACEgC,EAAA9C,EAAA+C,cAAA6B,EAAA,EAAAnO,OAAA6Q,OAAA,CACEtT,KAAK,UACLuT,KAAK,QACLjD,MAAO,CAAEkD,YAAa,KAClB1G,ICLK,yBCCT2G,GAAO,WACEC,GAAA,WAcX,OAAOC,KAAMrT,IAAImT,KAAS,yBCEtBG,yBAIFC,eACJ,SAAAA,EAAY/G,GAAO,IAAAD,EAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAuF,IACjBhH,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAoR,GAAAtC,KAAAjD,KAAMxB,KAiBRgH,SAAW,SAAAC,GACTlH,EAAK2E,SAAS,CAAEuC,eAnBClH,EAsBnBmH,OAAS,SAACC,EAAWnQ,GACnB+I,EAAK/I,GAAQmQ,IAvBIpH,EA0BnBqH,IAAM,SAAAC,GAAa,IAIbC,EAFIC,EAAUxH,EAAK4F,MAAf4B,MACJC,GAAa,EAQjB,GANAD,EAAM3P,QAAQ,SAAA6H,GACRA,EAAKC,QAAU2H,EAAU3H,QAC3B8H,GAAa,EACbF,EAAS7H,EAAK2F,OAGdoC,EACFzH,EAAKiH,SAASM,OACT,CACL,IAAML,EAAS,SAAAQ,OAAY1H,EAAK2H,eAChCH,EAAMjC,KAAK,CACT5F,MAAO2H,EAAU3H,MACjBqC,QAAS,qBACTqD,IAAK6B,EACLrC,KAAMyC,EAAUjC,MAElBrF,EAAKiH,SAASC,GACdlH,EAAK2E,SAAS,CAAE6C,QAAON,gBAhDRlH,EAoDnB4H,OAAS,SAAAR,GAAa,IAEhBS,EADEX,EAAclH,EAAK4F,MAAnBsB,UAENlH,EAAK4F,MAAM4B,MAAM3P,QAAQ,SAACiQ,EAAMC,GAC1BD,EAAKzC,MAAQ+B,IACfS,EAAYE,EAAI,KAGpB,IAAMP,EAAQxH,EAAK4F,MAAM4B,MAAMQ,OAAO,SAAAF,GAAI,OAAIA,EAAKzC,MAAQ+B,IACvDI,EAAMvU,QAAUiU,IAAcE,IAC5BS,GAAa,GACfX,EAAYM,EAAMK,GAAWxC,IAE7BrF,EAAKC,MAAMC,QAAQqF,KAAKiC,EAAMK,GAAWhD,OAEzCqC,EAAYM,EAAM,GAAGnC,KAGzBrF,EAAK2E,SAAS,CAAE6C,QAAON,eAtENlH,EA0EnBiI,OAAS,WAEPnG,EAAA,EAAMoG,QAAQ,CACZlG,QAAS,kCACTmG,KAAM,WACJlP,QAAQC,IAAI,KAAZtD,OAAAwS,GAAA,EAAAxS,CAAAoK,IAKAtL,aAAa2T,WAAW,YACxB3T,aAAa2T,WAAW,SACxB3T,aAAa2T,WAAW,QACxB3T,aAAa2T,WAAW,kBAExBrI,EAAKC,MAAMC,QAAQC,QAAQ,cAzFdH,EAwPnBsI,SAxPmB1S,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAwPR,SAAA5B,IAAA,IAAAuJ,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSrK,IADT,OAEU,KADbqT,EADGlJ,EAAAG,MAEDxH,OACN8J,EAAA,EAAMC,KAAK,CACTpC,MAAO,6CACPqC,QAASC,EAAA9C,EAAA+C,cAACsG,GAAArJ,EAAD,CAAQhJ,MAAOoS,EAAIxV,KAAKqP,QACjCqG,MAAO,MAGTnU,EAAA,EAAQD,MAAMkU,EAAIlH,KATX,wBAAAhC,EAAAe,SAAApB,MAxPQgB,EAoQnB0I,SAAW,WACT1I,EAAK2E,SAAS,CAAEgE,gBAAgB,KArQf3I,EAuQnB4I,iBAAmB,SAAAtI,GACjBA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAK3K,GAAZ,IAAAoS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACxBuB,EADwB,CAAAE,EAAAzB,KAAA,eAAAyB,EAAAzB,KAAA,EAETpK,EAASgB,EAAMhB,UAFN,OAGR,KADboT,EAFqBvH,EAAAxB,MAGnBxH,OACN1D,EAAA,EAAQ2M,QAAQsH,EAAIlH,KAEpB/M,EAAA,EAAQD,MAAMkU,EAAIlH,KANO,wBAAAL,EAAAZ,SAAAS,MAA/B,gBAAAS,EAAAC,GAAA,OAAAb,EAAAc,MAAAC,KAAAzO,YAAA,KAvQAgN,EAAK2H,YAAc,EACnB,IAAMH,EAAQ,CACZ,CACE7H,MAAO,eACPqC,QAAS,mBACTqD,IAAK,IACLwD,UAAU,EACVhE,KAAM,UATO,OAYjB7E,EAAK4F,MAAQ,CACXsB,UAAWM,EAAM,GAAGnC,IACpBmC,QACAmB,gBAAgB,GAfD3I,sFAgGjB8I,cAAcrH,KAAKsH,wDAGnBtH,KAAKxB,MAAM+I,OAASvH,KAAKxB,MAAM+I,MAAMvH,MACrC,IAEI9B,EAFA5M,EAAO0O,KAAKmE,MACVf,EAAOpD,KAAKxB,MAAM6E,SAASC,SAEpB,UAATF,GAA6B,MAATA,IACL/E,KAAKgG,MAAMpR,aAAaqR,QAAQ,aACxClO,QAAQ,SAAA6H,GACVA,EAAKD,UAAYC,EAAK2F,MAAQR,EAExBnF,EAAKD,UACdC,EAAKD,SAAS5H,QAAQ,SAAAoR,GAChBA,EAAI5D,MAAQR,IACdlF,EAAQsJ,EAAItJ,SAJhBA,EAAQD,EAAKC,QASjB5M,EAAKmU,UAAY,IACjBnU,EAAKyU,MAAMjC,KAAK,CACd5F,MAAOA,EACP0F,IAAK,IACLR,KAAMA,IAERpD,KAAKkD,SAAL/O,OAAAc,EAAA,EAAAd,CAAA,GACK7C,sCAKA,IAAA8S,EAAApE,KACD5M,EAAWH,aAAaqR,QAAQ,QAD/BmD,EAEsCzH,KAAKxB,MAAMO,KAAhDsC,EAFDoG,EAECpG,kBAAmBqG,EAFpBD,EAEoBC,cAC3B,OACElH,EAAA9C,EAAA+C,cAAA,OAAKa,UAAU,UACbd,EAAA9C,EAAA+C,cAAA,OAAKa,UAAU,cACbd,EAAA9C,EAAA+C,cAAAkH,GAAA,GACEC,QACEpH,EAAA9C,EAAA+C,cAAAmC,GAAA,OACEpC,EAAA9C,EAAA+C,cAAAmC,GAAA,EAAMzF,KAAN,CAAWyG,IAAI,KACbpD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,OAAO2Q,QAASrC,KAAK6G,UAAlC,mCAIFrG,EAAA9C,EAAA+C,cAAAmC,GAAA,EAAMzF,KAAN,CAAWyG,IAAI,KACbpD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,OAAO2Q,QAASrC,KAAKiH,UAAlC,8BAMNY,QAAS,CAAC,UAEVrH,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,QACV0B,EADH,IACaoN,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,WAG1B8O,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKwG,OAAQvB,KAAK,WAAvC,iBAIFzE,EAAA9C,EAAA+C,cAAA,OAAKa,UAAU,iBAEbd,EAAA9C,EAAA+C,cAAAqH,GAAA,GACEtC,SAAUxF,KAAKwF,SACfC,UAAWzF,KAAKmE,MAAMsB,UACtB/T,KAAK,gBACLgU,OAAQ1F,KAAK0F,OACbqC,SAAO,GAEN/H,KAAKmE,MAAM4B,MAAMiC,IAAI,SAAA3B,GAAI,OACxB7F,EAAA9C,EAAA+C,cAAC6E,GAAD,CACE2C,IAAKzH,EAAA9C,EAAA+C,cAACyD,EAAA,EAAD,CAAM9C,GAAIiF,EAAKjD,MAAOiD,EAAKnI,OAChC0F,IAAKyC,EAAKzC,IACVwD,SAAUf,EAAKe,SACfc,aAAW,QAKlBlI,KAAKmE,MAAM+C,gBACV1G,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACNiK,QAASnI,KAAKmE,MAAM+C,eACpBkB,SAAU,WACRhE,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCmB,OAAQ,MAER7H,EAAA9C,EAAA+C,cAAArD,EAAA,GACEkL,SAAU,CAAEC,KAAM,GAClBC,WAAW,OACXjH,SAAUvB,KAAKmH,kBAEf3G,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,sBACdpH,EAAkB,WAAY,CAC7BxJ,MAAO,CACL,CAAE2J,UAAU,EAAM3O,QAAS,wCAC3B,CAAE4O,YAAY,GACd,CAAEC,IAAK,EAAG7O,QAAS,mCACnB,CAAE8O,IAAK,GAAI9O,QAAS,sCALvBwO,CAYCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAEgF,MAAO,OAChBtV,KAAK,WACLwQ,YAAY,kCAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,SAAU,CAC3BxJ,MAAO,CACL,CAAE2J,UAAU,GACZ,CACEW,UAAW,SAACnB,EAAMtM,EAAOuM,GAClBvM,GACHuM,IAEEvM,IAAUgT,EAAc,YAC1BzG,IAEAA,EAAS,kDAXlBI,CAiBCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAEgF,MAAO,OAChBtV,KAAK,WACLwQ,YAAY,kCAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU6Q,SAAS,UAAhC,2BA/OKC,aAsRfkG,GAAgBtL,EAAA,EAAKsF,QAALtF,CAAcmI,IACrBT,eAAW4D,IC7SLC,eACnB,SAAAA,EAAYnK,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA2I,IACjBpK,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAwU,GAAA1F,KAAAjD,KAAMxB,KAQRoK,OAAS,WACHrK,EAAK+H,GAAK/H,EAAK3J,IAAIpD,OACrB+M,EAAK2E,SACH,CACE4D,IAAKvI,EAAK3J,IAAIuJ,MAAM,EAAGI,EAAK+H,KAAO,MAErC,WACE/H,EAAKsK,MAAQC,WAAW,kBAAMvK,EAAKqK,UAAU,QAIjDrK,EAAK2E,SAAS,CACZ4D,IAAKvI,EAAK3J,MAEZmU,aAAaxK,EAAKsK,SArBpBtK,EAAK4F,MAAQ,CACX2C,IAAK,IAEPvI,EAAK+H,EAAI,EACT/H,EAAKsK,MAAQ,EACbtK,EAAK3J,IAAM,0EAPM2J,sFA2BjByB,KAAKkD,SAAW,SAACiB,EAAOlD,iDAKxBjB,KAAK4I,0CAGL,OAAOpI,EAAA9C,EAAA+C,cAAA,QAAMuB,MAAO,CAAEgH,SAAU,SAAWhJ,KAAKmE,MAAM2C,YApCxBtE,oGCK3B,SAASyG,GAAYC,GAC1B,IAAKA,EAAM,MAAO,GAClB,IAAIC,EAAYC,SAASF,GACzB,OAAkB,IAAdC,EAAwB,GACrBE,KAAmB,IAAZF,GAAkBG,OAAO,uBCTzC,IAAMC,GAAWnM,EAAA,EAAKD,KAChBqM,oLACK,IACCnI,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBACAoI,EAAgBzJ,KAAKxB,MAArBiL,YACR,OACEjJ,EAAA9C,EAAA+C,cAAArD,EAAA,GAAMkE,UAAU,cACdd,EAAA9C,EAAA+C,cAAC8I,GAAD,CAAUvH,MAAOyH,EAAc,GAAK,CAAEC,QAAS,SAC5CrI,EAAkB,OAAQ,CACzBxJ,MAAO,CACL,CACE2J,SAAUiI,EACV5W,QAAS,gCAGb8W,aAAc3J,KAAKxB,MAAMgJ,KAP1BnG,CASCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEC,OAAQtB,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,OAAOsQ,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,qCAIlB1B,EAAA9C,EAAA+C,cAAC8I,GAAD,CAAUd,MAAM,eAAKzG,MAAOyH,EAAc,CAAEC,QAAS,QAAW,IAC7DrI,EAAkB,OAAQ,CACzBxJ,MAAO,CACL,CACE2J,UAAWiI,EACXhI,YAAY,EACZG,QAAS,gBACT/O,QAAS,oFANdwO,CASEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOK,YAAY,qFAExB1B,EAAA9C,EAAA+C,cAAC8I,GAAD,CAAUd,MAAM,eAAKzG,MAAOyH,EAAc,CAAEC,QAAS,QAAW,IAC7DrI,EAAkB,OAAQ,CACzBxJ,MAAO,CACL,CAAE8J,IAAK,IAAK9O,QAAS,yBACrB,CACE2O,UAAWiI,KAJhBpI,CAQCb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO+H,SAAP,CACE1H,YAAY,iCACZ2H,SAAU,CAAEC,QAAS,EAAGC,QAAS,eA7CjBvH,aAwDfwH,GAFgB5M,EAAA,EAAKsF,QAALtF,CAAcoM,ICoD9BS,eA3Gb,SAAAA,EAAYzL,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAiK,IACjB1L,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA8V,GAAAhH,KAAAjD,KAAMxB,KAeR0L,YAAc,WACZ,OAAI3L,EAAKC,MAAM2L,WACN,CACL,CACEjM,MAAO,iCACPkM,UAAW,kBAEb,CACElM,MAAO,6CACPkM,UAAW,kBAGb,CACElM,MAAO,iCACPkM,UAAW,aAEb,CACElM,MAAO,2BACPkM,UAAW,aAEb,CACElM,MAAO,2BACPkM,UAAW,YAEb,CACElM,MAAO,6CACPkM,UAAW,gBAEb,CACElM,MAAO,iCACPkM,UAAW,WAEb,CACElM,MAAO,iCACPkM,UAAW,gBAEb,CACElM,MAAO,qBACPkM,UAAW,eAEb,CACElM,MAAO,2BACPkM,UAAW,aAEb,CACElM,MAAO,eACPkM,UAAW,WAIR,CACL,CACElM,MAAO,UACPkM,UAAW,MAEb,CACElM,MAAO,2BACPkM,UAAW,oBAGb,CACElM,MAAO,mCACPkM,UAAW,iBAEb,CACElM,MAAO,2BACPkM,UAAW,YAEXC,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE6M,cAAgBD,EAAEC,gBAExC,CACErM,MAAO,eACPkM,UAAW,OAEb,CACElM,MAAO,mCACPkM,UAAW,uBAEb,CACElM,MAAO,eACPkM,UAAW,cAEb,CACElM,MAAO,2BACPkM,UAAW,iBAlGjB7L,EAAK4F,MAAQ,GAFI5F,wEAIV,IACCjN,EAAS0O,KAAKxB,MAAMgM,iBAApBlZ,KACR,OACEkP,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAO,MACPC,WAAYtZ,EACZuZ,QAAS7K,KAAKkK,cACdjF,KAAK,iBAbYzC,uECGjBsI,6BACO,SAASC,GAAavM,GACnC,OACEgC,EAAA9C,EAAA+C,cAAAuK,GAAA,GAAgBC,OAAQC,MACtB1K,EAAA9C,EAAA+C,cAACqK,GAAD3W,OAAA6Q,OAAA,CAEEhD,MAAO,CAACgF,MAAM,KACdmE,SAAU,CAAE7B,OAAQ,SACpBA,OAAO,sBACPpH,YAAa,CAAC,2BAAQ,4BACtBsD,SAAU,SAAClU,EAAM8Z,GACf5M,EAAM6M,YAAYD,KAIhB5M,SCSJ8M,eACaC,eACnB,SAAAA,EAAY/M,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAuL,IACjBhN,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAoX,GAAAtI,KAAAjD,KAAMxB,KAoBR0L,YAAc,iBAAM,CAClB,CACEhM,MAAO,UACPkM,UAAW,KACXxG,IAAK,KACL4H,MAAO,OACPxE,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,YACXxG,IAAK,YACL4H,MAAO,OACPxE,MAAO,IACPyE,OAAQ,SAAChX,EAAQiX,GACf,MAAO,CACLrJ,QAAS,SAAAxD,GACPN,EAAKhK,UAAYE,EAAOF,UACxBgK,EAAKjK,GAAKG,EAAOH,GACjBiK,EAAKmN,SAAWA,EAChBnN,EAAK2E,SAAS,CACZyI,YAAY,KAGhBC,cAAe,SAAA/M,KACfgN,cAAe,SAAAhN,KACfiN,aAAc,SAAAjN,GACZA,EAAMkN,OAAO/J,MAAMgK,OAAS,WAE9BC,aAAc,SAAApN,QAKpB,CACEX,MAAO,2BACPkM,UAAW,YACXxG,IAAK,YACLyG,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAEwO,UAAY5B,EAAE4B,WAClClF,MAAO,IACPyE,OAAQ,SAAChX,EAAQiX,GACf,MAAO,CACLrJ,QAAS,SAAAxD,GACPN,EAAK4N,WAAa1X,EAClB8J,EAAK2E,SAAS,CACZkJ,YAAY,KAGhBR,cAAe,SAAA/M,KACfgN,cAAe,SAAAhN,KACfiN,aAAc,SAAAjN,GACZA,EAAMkN,OAAO/J,MAAMgK,OAAS,WAE9BC,aAAc,SAAApN,QAIpB,CACEX,MAAO,2BACPkM,UAAW,eACXxG,IAAK,eACLoD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,aACXxG,IAAK,aACLoD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,eACXxG,IAAK,eACLoD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,YACXxG,IAAK,YACLoD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,aACXiC,OAAQpD,GACRrF,IAAK,aACLyG,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE4O,WAAahC,EAAEgC,YACnCtF,MAAO,KAET,CACE9I,MAAO,iBACPkM,UAAW,WACXxG,IAAK,WACLoD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,aACXiC,OAAQpD,GACRoB,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE6O,WAAajC,EAAEiC,YACnCvF,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,GACXiC,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKiO,cAAc/X,IAASwQ,KAAK,SAA5D,4BAGAzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKkO,cAAchY,IAASwQ,KAAK,SAA5D,mBAMN,CACE/G,MAAO,2BACP8I,MAAO,IACPqF,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQ5C,QAAS,kBAAM9D,EAAKmO,YAAYjY,KAAzD,qBA9IW8J,EAsJnBoO,SAtJmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAsJR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAAqP,EAAAC,EAAAC,EAAA,OAAAtP,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYnK,EACnBC,EACAC,EACA0K,EAAK4F,MAAM6I,UACXzO,EAAK4F,MAAM8I,QACX1O,EAAKvK,SACLuK,EAAKtK,YAPE,OASa,KARhBuJ,EADGI,EAAAG,MASExH,QAAcsW,EACWrP,EAAOlM,KAAjCwb,EADeD,EACfC,UAAWC,EADIF,EACJE,WACnBD,EAAU1W,QAAQ,SAAAC,GAChB0W,EAAW3W,QAAQ,SAAA6H,GACb5H,EAAQ/B,KAAO2J,EAAK3J,KACtB+B,EAAQ6W,WAAajP,EAAKkP,eAIhC5O,EAAK2E,SAAS,CACZ5R,KAAMwb,EACNM,MAAO5P,EAAO4P,SAGhBva,EAAA,EAAQD,MAAM4K,EAAOoC,KAvBd,wBAAAhC,EAAAe,SAAApB,MAtJQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAgLnB8O,eAAiB,WACf,IAAItO,EAAOR,EAAK+O,KAAKC,aACrBxO,EAAKC,eAAL,eAAAC,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAAoB,SAAAC,EAAOC,EAAK3K,GAAZ,IAAA8Y,EAAA,OAAA/P,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACbuB,EADa,CAAAE,EAAAzB,KAAA,WAEhBS,EAAK2E,SAAS,CAAEyI,YAAY,IACxBjX,EAAMqB,OAASwI,EAAKhK,UAHR,CAAAgL,EAAAzB,KAAA,eAAAyB,EAAAzB,KAAA,EAIOzJ,EAAoBkK,EAAKjK,GAAII,EAAMqB,MAJ1C,OAKQ,IALRwJ,EAAAxB,KAKHxH,SACT1D,EAAA,EAAQ2M,QAAQ,6BAEZgO,EAAQjP,EAAKmN,SAEjBnN,EAAK4F,MAAM7S,KAAKkc,GAAhB,UAAsC9Y,EAAMqB,KAE5CwI,EAAK2E,SAAS,CACZ5R,KAAMiN,EAAK4F,MAAM7S,QAbP,OAkBlByN,EAAK0O,cAlBa,wBAAAlO,EAAAZ,SAAAS,MAApB,gBAAAyB,EAAAC,GAAA,OAAA7B,EAAAc,MAAAC,KAAAzO,YAAA,KAlLiBgN,EAuMnB/J,WAAa,WACX+J,EAAK2E,SAAS,CAAEwK,SAAS,IAEzB,IAAI3O,EAAOR,EAAK+O,KAAKC,aACjBpB,EAAa5N,EAAK4N,WACtBpN,EAAKC,eAAL,eAAAkB,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAAoB,SAAAgB,EAAOd,EAAK3K,GAAZ,IAAAoS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACAtJ,EAAW2X,EAAYzX,GADvB,OAEC,KADboS,EADY1G,EAAArC,MAEVxH,QACN1D,EAAA,EAAQ2M,QAAQsH,EAAIlH,KACpBrB,EAAK2E,SAAS,CAAEkJ,YAAY,EAAOsB,SAAS,MAE5CnP,EAAK2E,SAAS,CAAEwK,SAAS,IACzB7a,EAAA,EAAQD,MAAMkU,EAAIlH,MAEpBb,EAAK0O,cATa,wBAAArN,EAAAzB,SAAAwB,MAApB,gBAAAwN,EAAAC,GAAA,OAAA1N,EAAAH,MAAAC,KAAAzO,YAAA,KA5MiBgN,EA8NnBmO,YA9NmB,eAAAmB,EAAA1Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA8NL,SAAA2O,EAAMrZ,GAAN,IAAAH,EAAAkJ,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,cACNxJ,EAAKG,EAAOH,GADNyZ,EAAAjQ,KAAA,EAES3I,EAAYb,GAFrB,OAGU,KADhBkJ,EAFMuQ,EAAAhQ,MAGDxH,QACT8J,EAAA,EAAMb,QAAQ,CACZtB,MAAO,2BACPqC,QAAO,eAAA0F,OAAOxR,EAAOH,GAAd,qCAAA2R,OAA2BzI,EAAOlM,KAAK,GAAG4a,aANzC,wBAAA6B,EAAApP,SAAAmP,MA9NK,gBAAAE,GAAA,OAAAH,EAAA9N,MAAAC,KAAAzO,YAAA,GAAAgN,EAwOnBiO,cAxOmB,eAAAyB,EAAA9Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAwOH,SAAA+O,EAAOzZ,EAAQ0V,GAAf,IAAArD,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAwQ,GAAA,cAAAA,EAAAtQ,KAAAsQ,EAAArQ,MAAA,UACdS,EAAK6P,UAAUC,UACf9P,EAAK4L,WAAaA,EAClB5L,EAAKiM,iBAAmB,CACtBlZ,KAAM,GACN8b,MAAO,EACP9Y,GAAIG,EAAOH,IAEA6V,EARC,CAAAgE,EAAArQ,KAAA,eAAAqQ,EAAArQ,KAAA,EASJ1I,EAAW,EAAG,GAAIX,EAAOH,IATrB,OAAA6Z,EAAAG,GAAAH,EAAApQ,KAAAoQ,EAAArQ,KAAA,uBAAAqQ,EAAArQ,KAAA,GAUJzI,EAAS,EAAG,GAAIZ,EAAOH,IAVnB,QAAA6Z,EAAAG,GAAAH,EAAApQ,KAAA,QAWK,KAHb+I,EARQqH,EAAAG,IAWN/X,SACNgI,EAAKiM,iBAAiBlZ,KAAOwV,EAAIxV,KACjCiN,EAAKiM,iBAAiB4C,MAAQtG,EAAIsG,OAEpC7O,EAAK2E,SAAS,CAAEqL,kBAAkB,IAfpB,yBAAAJ,EAAAxP,SAAAuP,MAxOG,gBAAAM,EAAAC,GAAA,OAAAR,EAAAlO,MAAAC,KAAAzO,YAAA,GAAAgN,EAyPnBhJ,cAzPmB,eAAAmZ,EAAAva,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAyPH,SAAAwP,EAAOla,EAAQma,GAAf,IAAApZ,EAAAsR,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAkR,GAAA,cAAAA,EAAAhR,KAAAgR,EAAA/Q,MAAA,cACVtI,EAASoZ,EAAQ,MAAQ,SADfC,EAAA/Q,KAAA,EAEIvI,EAAcd,EAAOH,GAAIkB,GAF7B,OAGK,KADbsR,EAFQ+H,EAAA9Q,MAGNxH,OACN1D,EAAA,EAAQ2M,QAAQ,kCAEhB3M,EAAA,EAAQ2M,QAAQ,4BAAUsH,EAAIlH,KANlB,wBAAAiP,EAAAlQ,SAAAgQ,MAzPG,gBAAAG,EAAAC,GAAA,OAAAL,EAAA3O,MAAAC,KAAAzO,YAAA,GAAAgN,EAkQnByQ,SAAW,SAAAva,GACT8J,EAAK6P,UAAUC,UACf9P,EAAK2E,SAAS,CAAE+L,gBAAgB,IAChC1Q,EAAK2Q,WAAaza,EAAOH,IArQRiK,EAuQnB4Q,eAvQmBhb,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAuQF,SAAAiQ,IAAA,IAAAtI,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA0R,GAAA,cAAAA,EAAAxR,KAAAwR,EAAAvR,MAAA,cAAAuR,EAAAvR,KAAA,EACGrI,EAAW8I,EAAK2Q,WAAY3Q,EAAK4F,MAAMzO,UAD1C,OAEI,KADboR,EADSuI,EAAAtR,MAEPxH,QACN1D,EAAA,EAAQ2M,QAAQ,kCAChBjB,EAAK2E,SAAS,CAAExN,SAAU,GAAIuZ,gBAAgB,KAE9Cpc,EAAA,EAAQ2M,QAAQ,4BAAUsH,EAAIlH,KANjB,wBAAAyP,EAAA1Q,SAAAyQ,MAvQE7Q,EAgRnBkO,cAAgB,SAAAhY,GACd8J,EAAK6P,UAAY/N,EAAA,EAAMC,KAAK,CAC1BpC,MAAO,eACPoR,OAAQ,eACRtI,MAAM,MACNzG,QACEC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,kBAAM9D,EAAKiO,cAAc/X,GAAQ,IAC1CwQ,KAAK,SAFP,wCAMAzE,EAAA9C,EAAA+C,cAAA8O,GAAA,GACErR,MAAM,uCACNsR,UAAW,kBAAMjR,EAAKhJ,cAAcd,GAAQ,IAC5C2T,SAAU,kBAAM7J,EAAKhJ,cAAcd,GAAQ,IAC3C6a,OAAO,eACPG,WAAW,gBAEXjP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,yCAEFzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKyQ,SAASva,IAASwQ,KAAK,SAAvD,gCApSN1G,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACV/D,YAAY,EACZS,YAAY,EACZmC,kBAAkB,EAClBoB,gBAAgB,EAChBV,gBAAgB,EAChBvZ,SAAU,GACVnB,UAAW,GACXyY,UAAW,GACXC,QAAS,GACTS,SAAS,GAEXnP,EAAKvK,SAAW,KAChBuK,EAAKtK,WAAa,GAlBDsK,4EAwNNM,GACX,IAAIvN,EAAO6C,OAAO6Q,OAAO,GAAIhF,KAAKmE,MAAMvJ,WAAY,CAClD4M,IAAK3I,EAAMkN,OAAOrX,QAEpBsL,KAAKkD,SAAS,CAAEtI,WAAYtJ,gDAkF5B0O,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KAAA4P,EACiB5P,KAAKmE,MAArB7S,EADDse,EACCte,KAAM8b,EADPwC,EACOxC,MACRlP,EACJsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsK,GAAD,CACEM,YAAa,SAAA7D,GACXpD,EAAKlB,SAAS,CACZ8J,UAAWxF,EAAI,GACfyF,QAASzF,EAAI,QALrB,YAUEhH,EAAA9C,EAAA+C,cAAAoP,GAAA,GACE7N,MAAO,CAAEgF,MAAO,KAChB9E,YAAY,kBACZ4N,aAAa,KACbtK,SAAU,SAAAgC,GACRpD,EAAKpQ,SAAWwT,IAGlBhH,EAAA9C,EAAA+C,cAACsP,GAAD,CAAQrb,MAAM,MAAd,WACA8L,EAAA9C,EAAA+C,cAACsP,GAAD,CAAQrb,MAAM,aAAd,gBACA8L,EAAA9C,EAAA+C,cAACsP,GAAD,CAAQrb,MAAM,gBAAd,sBACA8L,EAAA9C,EAAA+C,cAACsP,GAAD,CAAQrb,MAAM,aAAd,gBACA8L,EAAA9C,EAAA+C,cAACsP,GAAD,CAAQrb,MAAM,cAAd,4BACA8L,EAAA9C,EAAA+C,cAACsP,GAAD,CAAQrb,MAAM,gBAAd,6BAvBJ,YA0BE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLwQ,YAAY,mDACZF,MAAO,CAAEgF,MAAO,KAChBgJ,IAAK,SAAAC,GAAK,OAAK7L,EAAKvC,MAAQoO,KA9BhC,YAiCEzP,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP+B,EAAKnQ,WAAamQ,EAAKvC,MAAMA,MAAMnN,MACnC0P,EAAKuI,SAAS,EAAGvI,EAAKD,MAAMuL,WAE9BzK,KAAK,WAELzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIXwe,EACJ1P,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACPvH,OAAOuI,SAAS8M,UAElBlL,KAAK,WAELzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,YAGf,OACE8O,EAAA9C,EAAA+C,cAAA2P,GAAA,GAAMlS,MAAOA,EAAOgS,MAAOA,GACzB1P,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAO,MACPC,WAAYtZ,EACZuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiB,GACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAOtD,EACP5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKuI,SAAS/Y,EAAM8b,IAEtBmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKuI,SAASmE,EAAS7L,KAG3B8L,OAAQ,CAAEC,EAAG,KAAMC,EAAG,UAExBzQ,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMwH,WACpBjF,KAAM1G,KAAKqN,eACXjF,SAAU,WACRhE,EAAKlB,SAAS,CAAEyI,YAAY,MAG9BnL,EAAA9C,EAAA+C,cAACyQ,GAAD,CACElB,IAAI,eACJxI,IAAKxH,KAAKzL,UACVkV,aAAW,KAGfjJ,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMiI,WAEpBhE,SAAU,WACRhE,EAAKlB,SAAS,CAAEkJ,YAAY,KAE9B/D,OAAQ,CACN7H,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEsB,IAAI,OACJvB,QAAS,WACP+B,EAAKlB,SAAS,CAAEkJ,YAAY,MAHhC,gBAQA5L,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEsB,IAAI,SACJlS,KAAK,UACLgc,QAAS1N,KAAKmE,MAAMuJ,QACpBrL,QAASrC,KAAKxL,YAJhB,kBAUFgM,EAAA9C,EAAA+C,cAACyQ,GAAD,CACElB,IAAI,eACJ7D,WAAYnM,KAAKmM,cAGrB3L,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAO8B,KAAKmK,WAAa,uCAAW,2BACpChC,QAASnI,KAAKmE,MAAMoK,iBACpBnG,SAAU,WACRhE,EAAKlB,SAAS,CAAEqL,kBAAkB,KAEpClG,OAAQ,KACRrB,MAAM,OAENxG,EAAA9C,EAAA+C,cAAC0Q,GAAD,CACE3G,iBAAkBxK,KAAKwK,iBACvBL,WAAYnK,KAAKmK,cAGrB3J,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAM8K,eACpBvI,KAAM1G,KAAKmP,eACX/G,SAAU,WACRhE,EAAKlB,SAAS,CAAE+L,gBAAgB,MAGlCzO,EAAA9C,EAAA+C,cAAA,wCACAD,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnN,MAAOsL,KAAKmE,MAAMzO,SAClB8P,SAAU,SAAA4L,GAAC,OAAIhN,EAAKlB,SAAS,CAAExN,SAAU0b,EAAErF,OAAOrX,oBAxc5B8N,gDChB5B6O,eACJ,SAAAA,EAAY7S,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAqR,IACjB9S,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAkd,GAAApO,KAAAjD,KAAMxB,KAQR8S,iBAAmB,SAAAC,GACjB/Z,QAAQC,IAAI8Z,GACZhT,EAAK2E,SAAS,CACZqO,cACAC,gBACID,EAAY/f,QACd+f,EAAY/f,OAAS+M,EAAKC,MAAMvI,YAAYzE,OAC9CigB,SAAUF,EAAY/f,SAAW+M,EAAKC,MAAMvI,YAAYzE,UAhBzC+M,EAmBnBmT,iBAAmB,SAAAN,GACjB,IAAIO,EAAOpT,EAAKC,MAAMvI,YAAY+R,IAAI,SAAA/J,GACpC,OAAOA,EAAKvJ,QAEd6J,EAAK2E,SACH,CACEqO,YAAaH,EAAErF,OAAO6F,QAAUD,EAAO,GACvCH,eAAe,EACfC,SAAUL,EAAErF,OAAO6F,SAErB,WACErT,EAAKC,MAAMO,KAAK8S,eAAe,CAC7B5b,YAAasI,EAAK4F,MAAMoN,iBA/BbhT,EAqCnBK,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAA4N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA+B,SAAA5B,EAAO8B,EAAK3K,GAAZ,IAAAoS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACxBuB,EADwB,CAAAzB,EAAAE,KAAA,YAEdS,EAAKC,MAAMsT,OAFG,CAAAlU,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGjB5H,EAAQxB,GAHS,OAAAkJ,EAAA0Q,GAAA1Q,EAAAG,KAAAH,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,EAIjB5G,EAASxC,EAAO6J,EAAKC,MAAMuT,eAAezd,IAJzB,OAAAsJ,EAAA0Q,GAAA1Q,EAAAG,KAAA,QAKR,KAHb+I,EAFqBlJ,EAAA0Q,IAKnB/X,QACN1D,EAAA,EAAQ2M,QAAQ,4BAChBjB,EAAKC,MAAMwT,cACXzT,EAAKC,MAAMyT,SACX1T,EAAKC,MAAMO,KAAK0O,eAEhB5a,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAXFhC,EAAAE,KAAA,iBAc3BjL,EAAA,EAAQD,MAAM,4BAda,yBAAAgL,EAAAe,SAAApB,MAA/B,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,KArCAgN,EAAK4F,MAAQ,CACX+N,MAAO,EACPX,YAAa,GACbC,eAAe,EACfC,UAAU,GANKlT,mFA0DjB,GAAIyB,KAAKxB,MAAMsT,QAAU9R,KAAKxB,MAAMuT,eAAeI,MAAO,CACxD,IAAIrC,EAAe9P,KAAKxB,MAAMuT,eAAeI,MAAMC,MAAM,KACzDpS,KAAKxB,MAAMO,KAAK8S,eAAe,CAC7B5b,YAAa6Z,EAAa9H,IAAIqK,4CAI3B,IAAAjO,EAAApE,KAAAyH,EACsCzH,KAAKxB,MAAMO,KAAhDsC,EADDoG,EACCpG,kBAAmBqG,EADpBD,EACoBC,cADpB4K,EAE4BtS,KAAKxB,MAAhCuT,EAFDO,EAECP,eAAgBD,EAFjBQ,EAEiBR,OAClBxG,EAAStL,KAAKxB,MAAM+T,WAAWvK,IAAI,SAAA/J,GAAI,OAC3CuC,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAOuJ,EAAK3J,GAAIsP,IAAK3F,EAAK3J,IACtC2J,EAAKlI,QAGV,OACEyK,EAAA9C,EAAA+C,cAAArD,EAAA,GACEkL,SAAU,CAAEC,KAAM,GAClBhH,SAAUvB,KAAKpB,aACf4J,WAAW,QAEXhI,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,sBACdpH,EAAkB,WAAY,CAC7BxJ,MAAO,CACL,CACE2J,UAAU,EACVC,YAAY,EACZ5O,QAAS,8CAEX,CAAE6O,IAAK,EAAG7O,QAAS,yCACnB,CAAE8O,IAAK,GAAI9O,QAAS,0CACpB,CACE+O,QAAS,kBACT/O,QAAS,2GAGb8W,aAAcmI,EAASC,EAAehc,KAAO,IAd9CsL,CAgBCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEC,OAAQtB,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,OAAOsQ,MAAO,CAAEC,MAAO,qBAC1CD,MAAO,CAAEgF,MAAO,OAChB9E,YAAY,yEAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,aAAc,CAC/BsI,aAAcmI,EAASC,EAAexb,OAAS,GADhD8K,CAGCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,gBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,mBAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,sBACdpH,EAAkB,YAAa,CAC9BxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,0CACnC8W,aAAcmI,GAAUC,EAAetb,UAFxC4K,CAICb,EAAA9C,EAAA+C,cAAAoP,GAAA,GAAQ7N,MAAO,CAAEgF,MAAO,QAAU9E,YAAY,kCAC3CoJ,KAIP9K,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACfjI,EAAA9C,EAAA+C,cAAAiS,GAAA,GACElB,cAAexR,KAAKmE,MAAMqN,cAC1BhM,SAAUxF,KAAK0R,iBACfE,QAAS5R,KAAKmE,MAAMsN,UAHtB,gBAOCpQ,EAAkB,cAAe,CAChCxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,iDADpCwO,CAGCb,EAAA9C,EAAA+C,cAAAiS,GAAA,EAAUD,MAAV,CACEE,QAAS3S,KAAKxB,MAAMvI,YAEpBuP,SAAU,SAAA+L,GAAW,OAAInN,EAAKkN,iBAAiBC,QAIrD/Q,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,QAAS,CAC1BxJ,MAAO,CACL,CACE4J,YAAY,EACZ5O,QAAS,6EAGb8W,aAAcmI,EAASC,EAAenb,MAAQ,IAP/CyK,CASCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAEgF,MAAO,OAChB9E,YAAY,+EAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,WAAY,CAC7BxJ,MAAO,CACL,CACE2J,UAAU,EACVC,YAAY,EACZ5O,QAAS,8CAEX,CACE+O,QAAS,gBACT/O,QAAS,+CAGb8W,aAAcmI,GAAUC,EAAea,aAZxCvR,CAaEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,OAAS9E,YAAY,qCAEjD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,eAAKzG,MAAO8P,EAAS,CAAEpI,QAAS,QAAW,IACzDrI,EAAkB,WAAY,CAC7BxJ,MAAO,CACL,CACE2J,UAAUsQ,EACVrQ,YAAY,EACZ5O,QAAS,wCAEX,CAAE6O,IAAK,EAAG7O,QAAS,mCACnB,CAAE8O,IAAK,GAAI9O,QAAS,oCACpB,CACE+O,QAAS,kBACT/O,QAAS,sGAXdwO,CAeCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,WACLsQ,MAAO,CAAEgF,MAAO,OAChB9E,YAAY,kCAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,2BAAOzG,MAAO8P,EAAS,CAAEpI,QAAS,QAAW,IAC3DrI,EAAkB,iBAAkB,CACnCxJ,MAAO,CACL,CACE2J,UAAUsQ,EACVrQ,YAAY,GAEd,CACEU,UAAW,SAACnB,EAAMtM,EAAOuM,GAClBvM,GACHuM,IAEEvM,IAAUgT,EAAc,YAC1BzG,IAEAA,EAAS,kDAdlBI,CAoBCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,WACLsQ,MAAO,CAAEgF,MAAO,OAChB9E,YAAY,kCAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEsL,MAAM,6BACNzG,MAAQ8P,EAA+B,GAAtB,CAAEpI,QAAS,SAE3BrI,EAAkB,eAAgB,CACjCxJ,MAAO,CACL,CACE4J,YAAY,GAEd,CACEU,UAAW,SAACnB,EAAMtM,EAAOuM,GAClBvM,GACHuM,IAEEvM,IAAUgT,EAAc,YAC1BzG,IAEAA,EAAS,kDAblBI,CAmBCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,WACLsQ,MAAO,CAAEgF,MAAO,OAChB9E,YAAY,kFAKlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE5Q,KAAK,UACL6Q,SAAS,SACTjB,UAAU,qBAHZ,yBAjQgBkB,aA+QXqQ,GAFYzV,EAAA,EAAKsF,QAALtF,CAAciU,ICpB1ByB,eAzPb,SAAAA,EAAYtU,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA8S,IACjBvU,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA2e,GAAA7P,KAAAjD,KAAMxB,KAWR0L,YAAc,iBAAM,CAClB,CACEhM,MAAO,UACPkM,UAAW,MAEb,CACElM,MAAO,qBACPkM,UAAW,OACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEgR,SAAU,aAAcC,UAAW,cAC9CF,KAIP,CACE7U,MAAO,eACPkM,UAAW,aAEb,CACElM,MAAO,2BACPkM,UAAW,SAEb,CACElM,MAAO,2BACPkM,UAAW,SAEb,CACElM,MAAO,iCACPkM,UAAW,eAEb,CACElM,MAAO,2BACPkM,UAAW,aACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEgR,SAAU,aAAcC,UAAW,cAC9CF,KAIP,CACE7U,MAAO,2BACPkM,UAAW,aACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEgR,SAAU,aAAcC,UAAW,cAC9CF,KAIP,CACE7U,MAAO,eACPkM,UAAW,SACX8I,MAAO,SACP7G,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YAAgB,IAATsS,EAAa,eAAO,kBAG/B,CACE7U,MAAO,eACPkM,UAAW,SACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4U,KAAK1e,KAArC,gBACA+L,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKpH,cAAc1C,KAA9C,6BA1EW8J,EAkFnBoO,SAlFmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAkFR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYjI,EAAajC,EAAMC,GAD/B,OAEa,KADhB2J,EADGI,EAAAG,MAEExH,OACTgI,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAO5P,EAAO4P,QAGhBva,EAAA,EAAQD,MAAM,4BARP,wBAAAgL,EAAAe,SAAApB,MAlFQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAgGnB6U,aAhGmBjf,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAgGJ,SAAAC,IAAA,IAAA5B,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACQhI,EAAgByI,EAAK4F,MAAMvJ,YADnC,OACP4C,EADO+B,EAAAxB,KAGXQ,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAO,IALE,wBAAA7N,EAAAZ,SAAAS,MAhGIb,EAyGnB8U,QAzGmBlf,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAyGT,SAAAgB,IAAA,IAAA2G,EAAAtJ,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACU9H,IADV,cACF8Q,EADE1G,EAAArC,KAAAqC,EAAAtC,KAAA,EAEa7H,IAFb,OAEFuH,EAFE4C,EAAArC,KAGW,IAAf+I,EAAIvQ,QAAkC,IAAlBiH,EAAOjH,SAC7BgI,EAAKgU,WAAazL,EAAIxV,KACtBiN,EAAKtI,YAAcuH,EAAOlM,KAAK0W,IAAI,SAAA/J,GACjC,MAAO,CAAEwK,MAAOxK,EAAKlI,KAAMrB,MAAOuJ,EAAK3J,MAEzCiK,EAAK2E,SAAS,CACZoQ,eAAe,KATX,wBAAAlT,EAAAzB,SAAAwB,MAzGS5B,EAsHnB4U,KAtHmB,eAAAtF,EAAA1Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAsHZ,SAAA2O,EAAMrZ,GAAN,IAAAqS,EAAAtJ,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,cACLtG,QAAQC,IAAIhD,GACZ8J,EAAKwT,eAAiBtd,EAFjBsZ,EAAAjQ,KAAA,EAGa9H,IAHb,cAGC8Q,EAHDiH,EAAAhQ,KAAAgQ,EAAAjQ,KAAA,EAIgB7H,IAJhB,OAICuH,EAJDuQ,EAAAhQ,KAKc,IAAf+I,EAAIvQ,QAAkC,IAAlBiH,EAAOjH,SAC7BgI,EAAKgU,WAAazL,EAAIxV,KACtBiN,EAAKtI,YAAcuH,EAAOlM,KAAK0W,IAAI,SAAA/J,GACjC,MAAO,CAAEwK,MAAOxK,EAAKlI,KAAMrB,MAAOuJ,EAAK3J,MAEzCiK,EAAK2E,SAAS,CACZqQ,gBAAgB,KAXf,wBAAAxF,EAAApP,SAAAmP,MAtHY,gBAAAjN,GAAA,OAAAgN,EAAA9N,MAAAC,KAAAzO,YAAA,GAAAgN,EAqInBpH,cAAgB,SAAA1C,GACd4L,EAAA,EAAMoG,QAAQ,CACZvI,MAAO,eACPqC,QAAS,wCACHmG,KAHM,eAAA8M,EAAArf,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAAA,SAAA+O,IAAA,IAAApH,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAwQ,GAAA,cAAAA,EAAAtQ,KAAAsQ,EAAArQ,MAAA,cAAAqQ,EAAArQ,KAAA,EAIQ3G,EAAc1C,EAAOH,IAJ7B,QAIJwS,EAJIqH,EAAApQ,MAKFxH,OACN1D,EAAA,EAAQ2M,QAAQsH,EAAIlH,KANZ,wBAAAuO,EAAAxP,SAAAuP,MAAA,yBAAAsF,EAAAzT,MAAAC,KAAAzO,YAAA,MApIdgN,EAAKkV,aAAelV,EAAKkV,aAAaC,KAAlBvf,OAAAwS,GAAA,EAAAxS,CAAAoK,IACpBA,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACV4D,eAAe,EACfC,gBAAgB,GAElBhV,EAAK2L,cAVY3L,4EA6FNM,GACXmB,KAAKkD,SAAS,CAAEtI,WAAYiE,EAAMkN,OAAOrX,oDAsDzCsL,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLwQ,YAAY,uCACZF,MAAO,CAAEgF,MAAO,KAChBtS,MAAOsL,KAAKmE,MAAMvJ,WAClB4K,SAAUxF,KAAKyT,eANnB,YASEjT,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKoT,aAAcnO,KAAK,WAC3CzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,YAVf,YAaE8O,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKqT,QAASpO,KAAK,WACtCzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aADb,6BAMJwe,MACE1P,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMvH,OAAOuI,SAAS8M,UAAUlL,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIf8O,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAO,KACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiBtQ,KAAKmE,MAAMuL,SAC5Ba,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAU,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACVE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKuI,SAAS/Y,EAAM8b,IAEtBmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKuI,SAASmE,EAAS7L,OAI7BzE,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMmP,cAEpBlL,SAAU,WACRhE,EAAKlB,SAAS,CAAEoQ,eAAe,KAEjCjL,OAAQ,MAER7H,EAAA9C,EAAA+C,cAAC4S,GAAD,CACEd,WAAYvS,KAAKuS,WACjBtc,YAAa+J,KAAK/J,YAClBgc,OAAQ,kBACN7N,EAAKlB,SAAS,CACZoQ,eAAe,KAGnBtB,YAAa,kBAAM5N,EAAKuI,SAAS,EAAG,QAGvC3M,KAAKmE,MAAMoP,gBACV/S,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMoP,eAEpBnL,SAAU,WACRhE,EAAKlB,SAAS,CAAEqQ,gBAAgB,KAElClL,OAAQ,MAER7H,EAAA9C,EAAA+C,cAAC4S,GAAD,CACEvB,OAAO,OACPS,WAAYvS,KAAKuS,WACjBtc,YAAa+J,KAAK/J,YAClB8b,eAAgB/R,KAAK+R,eACrBE,OAAQ,kBACN7N,EAAKlB,SAAS,CACZqQ,gBAAgB,KAGpBvB,YAAa,kBAAM5N,EAAKuI,SAAS,EAAG,gBAjPlBnK,gCCTxBmR,iBACFtC,eACJ,SAAAA,EAAY7S,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAqR,IACjB9S,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAkd,GAAApO,KAAAjD,KAAMxB,KA4FRoV,aAAe,SAAAxV,GACb,OAAOA,EAAS4J,IAAI,SAAA/J,GAClB,OAAKA,EAAKD,SAINwC,EAAA9C,EAAA+C,cAACkT,GAAD,CAAU/P,IAAK3F,EAAK3J,GAAI4J,MAAOD,EAAKC,MAAMQ,QAAQ,UAAW,KAC1DH,EAAKqV,aAAa3V,EAAKD,WAJrBwC,EAAA9C,EAAA+C,cAACkT,GAAD,CAAU/P,IAAK3F,EAAK3J,GAAI4J,MAAOD,EAAKC,MAAMQ,QAAQ,UAAW,SAhGvDH,EA0GnBsV,SAAW,SAAClP,EAAcrE,GAAS,IACzBwT,EAASxT,EAATwT,KACAC,EAAiBxV,EAAK4F,MAAtB4P,aACJD,EAAKtV,MAAMwV,OACbzV,EAAK2E,SAAS,CAAEyB,iBAEhBpG,EAAK2E,SAAS,CACZ6Q,aAAcD,EAAKtV,MAAMyV,SACrBF,EAAaxN,OAAO,SAAA2N,GAAC,OAAIA,IAAMJ,EAAKtV,MAAM2V,WAC1CJ,EAAa9N,OAAO6N,EAAKtV,MAAM2V,aAnHtB5V,EAuHnB6V,QAAU,SAACC,EAAa/T,GAEtB/B,EAAK2E,SAAS,CACZmR,YAAaA,EAAYrM,IAAIqK,WA1Hd9T,EA6HnB+V,SAAW,SAACP,EAAczT,GACxB/B,EAAK2E,SAAS,CAAE6Q,kBA9HCxV,EAiInBK,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAA4N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA+B,SAAA5B,EAAO8B,EAAK3K,GAAZ,IAAAqB,EAAAjB,EAAA+C,EAAAvD,EAAAwS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACxBuB,EADwB,CAAAzB,EAAAE,KAAA,YAErB/H,EAAerB,EAAfqB,KAAMjB,EAASJ,EAATI,KACR+C,EAAQ0G,EAAK4F,MAAMkQ,YACnB/f,EAAKiK,EAAKC,MAAMuT,eAAiBxT,EAAKC,MAAMuT,eAAezd,GAAK,GACvDiK,EAAKC,MAAMsT,OALG,CAAAlU,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAMjBlG,GAAQ7B,EAAM8B,EAAO/C,GANJ,OAAA8I,EAAA0Q,GAAA1Q,EAAAG,KAAAH,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAOjBhG,GAAS/B,EAAM8B,EAAO/C,EAAMR,GAPX,QAAAsJ,EAAA0Q,GAAA1Q,EAAAG,KAAA,QAQR,KAHb+I,EALqBlJ,EAAA0Q,IAQnB/X,QACN1D,EAAA,EAAQ2M,QAAQ,4BAChBjB,EAAKC,MAAMwT,cACXzT,EAAKC,MAAMyT,SACX1T,EAAKC,MAAMO,KAAK0O,cAChBlP,EAAK2E,SAAS,CACZmR,YAAa,MAGfxhB,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAjBFhC,EAAAE,KAAA,iBAoB3BjL,EAAA,EAAQD,MAAM,4BApBa,yBAAAgL,EAAAe,SAAApB,MAA/B,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,KAjIAgN,EAAK4F,MAAQ,CACX4P,aAAc,GACdpP,aAAc,GACd0P,YAAa9V,EAAKC,MAAMsT,OACpBvT,EAAKC,MAAMuT,eAAela,MAAMua,MAAM,KACtC,GACJmC,mBAAoB,IARLhW,sFAwBjByB,KAAKkD,SAAW,SAACiB,EAAOlD,sCAKxB,IAAM7C,EAAWC,KAAKgG,MAAMpR,aAAaqR,QAAQ,aAC3CkQ,EAAWxU,KAAK4T,aAAaxV,GAC3BiD,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBAHDiR,EAI4BtS,KAAKxB,MAAhCuT,EAJDO,EAICP,eAAgBD,EAJjBQ,EAIiBR,OACxB,OACEtR,EAAA9C,EAAA+C,cAAArD,EAAA,GACEkL,SAAU,CAAEC,KAAM,GAClBhH,SAAUvB,KAAKpB,aACf4J,WAAW,QAEXhI,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,sBACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,8CAEX,CAAE6O,IAAK,EAAG7O,QAAS,0CAErB8W,aAAcmI,EAASC,EAAehc,KAAO,IAR9CsL,CAUCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEC,OAAQtB,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,OAAOsQ,MAAO,CAAEC,MAAO,qBAC1CD,MAAO,CAAEgF,MAAO,WAItBxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACfjI,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAAgU,GAAA,GACEC,WAAS,EACTH,mBAAoBzC,EAASC,EAAela,MAAMua,MAAM,KAAO,GAC/D2B,aAAc/T,KAAKmE,MAAM4P,aACzBpP,aAAc3E,KAAKmE,MAAMQ,aACzBkP,SAAU7T,KAAK6T,SACfO,QAASpU,KAAKoU,QACdE,SAAUtU,KAAKsU,UAEdE,IAGLhU,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CAAC,CAAE8J,IAAK,IAAK9O,QAAS,0BAC7B8W,aAAcmI,EAASC,EAAe4C,YAAc,IAFrDtT,CAICb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO+H,SAAP,CACE1H,YAAY,iCACZ2H,SAAU,CAAEC,QAAS,EAAGC,QAAS,OAIvCvJ,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE5Q,KAAK,UACL6Q,SAAS,SACTjB,UAAU,qBAHZ,yBAnFgBkB,aAgKXqQ,GAFYzV,EAAA,EAAKsF,QAALtF,CAAciU,ICS1BuD,eArKb,SAAAA,EAAYpW,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA4U,IACjBrW,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAygB,GAAA3R,KAAAjD,KAAMxB,KAUR0L,YAAc,iBAAM,CAClB,CACEhM,MAAO,UACPkM,UAAW,KACXpD,MAAO,IAET,CACE9I,MAAO,qBACPkM,UAAW,OACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEgR,SAAU,aAAcC,UAAW,cAC9CF,KAIP,CACE7U,MAAO,eACPkM,UAAW,eAEb,CACElM,MAAO,eACPkM,UAAW,SACX8I,MAAO,SACP7G,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YAAgB,IAATsS,EAAa,qBAAQ,kBAGhC,CACE7U,MAAO,eACPkM,UAAW,SACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4U,KAAK1e,KAArC,qBA3CW8J,EAgDnBoO,SAhDmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAgDR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYnG,GAAY/D,EAAMC,GAD9B,OAEa,KADhB2J,EADGI,EAAAG,MAEExH,OACTgI,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAO5P,EAAO4P,QAGhBva,EAAA,EAAQD,MAAM,4BARP,wBAAAgL,EAAAe,SAAApB,MAhDQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EA2DnB8U,QA3DmBlf,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA2DT,SAAAC,IAAA,OAAA3B,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAKRS,EAAK2E,SAAS,CACZoQ,eAAe,IANT,wBAAA/T,EAAAZ,SAAAS,MA3DSb,EAqEnB4U,KArEmB,eAAAjT,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAqEZ,SAAAgB,EAAM1L,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OAELS,EAAKwT,eAAiBtd,EACtB8J,EAAK2E,SAAS,CACZqQ,gBAAgB,IAJb,wBAAAnT,EAAAzB,SAAAwB,MArEY,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACV4D,eAAe,EACfC,gBAAgB,GAElBhV,EAAK2L,cATY3L,mFA6EjByB,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKqT,QAASpO,KAAK,WACtCzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aADb,6BAMJwe,MACE1P,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMvH,OAAOuI,SAAS8M,UAAUlL,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIf8O,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAO,KACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdmG,WAAY,CACVC,gBAAiBtQ,KAAKmE,MAAMuL,SAC5Ba,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAU,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACVE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKuI,SAAS/Y,EAAM8b,GACpBtL,EAAKlB,SAAS,CACZwM,SAAUA,KAGdmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKuI,SAASmE,EAAS7L,OAK7BzE,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMmP,cAEpBlL,SAAU,WACRhE,EAAKlB,SAAS,CAAEoQ,eAAe,KAEjCjL,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACoU,GAAD,CACE5C,OAAQ,kBACN7N,EAAKlB,SAAS,CACZoQ,eAAe,KAGnBtB,YAAa,kBAAM5N,EAAKuI,SAAS,EAAG,QAGvC3M,KAAKmE,MAAMoP,gBACV/S,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMoP,eAEpBnL,SAAU,WACRhE,EAAKlB,SAAS,CAAEqQ,gBAAgB,KAElClL,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACoU,GAAD,CACE/C,OAAO,OACPC,eAAgB/R,KAAK+R,eACrBE,OAAQ,kBACN7N,EAAKlB,SAAS,CACZqQ,gBAAgB,KAGpBvB,YAAa,kBAAM5N,EAAKuI,SAAS,EAAG,gBA7J/BnK,aCyGJsS,eAzGb,SAAAA,EAAYtW,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA8U,IACjBvW,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA2gB,GAAA7R,KAAAjD,KAAMxB,KAyCR0L,YAAc,WACZ,MAAO,CACL,CACEhM,MAAO,iBACPkM,UAAW,YAEb,CACElM,MAAO,UACPkM,UAAW,WAEb,CACElM,MAAO,eACPkM,UAAW,UAEb,CACElM,MAAO,2BACPkM,UAAW,aACXiC,OAAQpD,IAEV,CACE/K,MAAO,eACPkM,UAAW,SACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,MAAa,MAATuF,GAAyB,MAATA,GAAyB,MAATA,EAEhCvS,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ2C,KAAK,QAAQ5C,QAAS,kBAAM9D,EAAKwW,oBAAoBtgB,KAA7D,6CAKF,MAxES8J,EA8EnB0B,YA9EmB9L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA8EL,SAAA5B,IAAA,IAAAuJ,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMzD,GAChB,EACA,GACAkE,EAAK4F,MAAM7O,QACXiJ,EAAK4F,MAAM7J,UALD,OAOO,KANbwM,EADMlJ,EAAAG,MAOJxH,OACNgI,EAAK2E,SAAS,CACZ5R,KAAMwV,EAAIxV,OAGZuB,EAAA,EAAQD,MAAMkU,EAAIlH,KAZR,wBAAAhC,EAAAe,SAAApB,MA9EKgB,EA6FnBwW,oBA7FmB,eAAA9V,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA6FG,SAAAC,EAAM3K,GAAN,IAAAa,EAAAgF,EAAAwM,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACdxI,EAAsBb,EAAtBa,QAASgF,EAAa7F,EAAb6F,SADKiF,EAAAzB,KAAA,EAEFvD,GAAYjF,EAASgF,GAFnB,OAGD,KADbwM,EAFcvH,EAAAxB,MAGZxH,OACN1D,EAAA,EAAQ2M,QAAQsH,EAAIlH,KAEpB/M,EAAA,EAAQD,MAAMkU,EAAIlH,KAEpBrB,EAAK0B,cARe,wBAAAV,EAAAZ,SAAAS,MA7FH,gBAAAS,GAAA,OAAAZ,EAAAc,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACX7S,KAAM,GACNgE,QAAS,GACTgF,SAAU,IALKiE,wEAQV,IAAA6F,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLwQ,YAAY,UACZF,MAAO,CAAEgF,MAAO,KAChBtS,MAAOsL,KAAKmE,MAAM7O,QAClBkQ,SAAU,SAAA4L,GAAC,OAAIhN,EAAKlB,SAAS,CAAE5N,QAAS8b,EAAErF,OAAOrX,WANrD,YASE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLwQ,YAAY,iBACZF,MAAO,CAAEgF,MAAO,KAChBtS,MAAOsL,KAAKmE,MAAM7J,SAClBkL,SAAU,SAAA4L,GAAC,OAAIhN,EAAKlB,SAAS,CAAE5I,SAAU8W,EAAErF,OAAOrX,WAdtD,YAiBE8L,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQD,QAASrC,KAAKC,aACpBO,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,YAEb8O,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,kBAtCOzC,aCkcPwS,eAzbb,SAAAA,EAAYxW,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAgV,IACjBzW,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA6gB,GAAA/R,KAAAjD,KAAMxB,KAmBRmO,SApBmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAoBR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY7D,GACnBrG,EACAC,EACA0K,EAAK4F,MAAMjK,WACXqE,EAAK4F,MAAMhK,SACXoE,EAAKnE,aACLmE,EAAK7M,KACL6M,EAAKvK,SACLuK,EAAKtK,YATE,OACHuJ,EADGI,EAAAG,KAWTQ,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAOhE,SAAS5L,EAAO4P,SAbhB,wBAAAxP,EAAAe,SAAApB,MApBQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAoCnB6U,aApCmBjf,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAoCJ,SAAAC,IAAA,OAAA3B,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACbS,EAAK2E,SAAS,CAAE+R,aAAa,IADhB,wBAAA1V,EAAAZ,SAAAS,MApCIb,EAuCnB2W,SAAW,WACTxa,GAAa6D,EAAK4F,QAxCD5F,EAwNnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,iBACPkM,UAAW,WACXpD,MAAO,KAET,CACE9I,MAAO,UACPkM,UAAW,UACXpD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,YACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,eACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,gBACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,eACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,IAAI2H,EACJ,OAAQpC,GACN,IAAK,IACHoC,EAAO1gB,EAAO2gB,WACd,MACF,IAAK,IACHD,EAAO,iBACP,MACF,IAAK,KACHA,EAAO,SACP,MACF,IAAK,KACHA,EAAO,eACP,MACF,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAC5BA,EAAO,eACP,MACF,QACEA,EAAO,GAGX,OAAO3U,EAAA9C,EAAA+C,cAAA,YAAO0U,KAGlB,CACEjX,MAAO,2BACPkM,UAAW,OACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,IAAI2H,EACJ,OAAQpC,GACN,IAAK,IACHoC,EAAO,SACP,MACF,IAAK,IACHA,EAAO,iCACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,QACEA,EAAO,GAGX,OAAO3U,EAAA9C,EAAA+C,cAAA,YAAO0U,KAGlB,CACEjX,MAAO,2BACPkM,UAAW,SACXpD,MAAO,IACPqD,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAER,OAASoN,EAAEpN,SAEjC,CACEgB,MAAO,2BACPkM,UAAW,iBACXpD,MAAO,IACPqD,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE2X,eAAiB/K,EAAE+K,iBAEzC,CACEnX,MAAO,2BACPkM,UAAW,SACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,IAAI2H,EACJ,OAAQpC,GACN,IAAK,IACHoC,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,uCACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,uCACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,QACEA,EAAO,GAGX,OAAO3U,EAAA9C,EAAA+C,cAAA,YAAO0U,KAGlB,CACEjX,MAAO,2BACPkM,UAAW,aACXpD,MAAO,IACPqF,OAAQpD,GACRoB,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE4X,WAAahL,EAAEgL,aAErC,CACEpX,MAAO,2BACPkM,UAAW,aACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,MAAa,MAATuF,GAAiBA,EAEP9J,GAAY8J,GADjB,IAGX1I,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE6X,WAAajL,EAAEiL,aAErC,CACErX,MAAO,eACPkM,UAAW,GACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,MAAsB,MAAlB/Y,EAAO8B,OAEPiK,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQ5C,QAAS,kBAAM9D,EAAK4U,KAAK1e,KAAlD,qBAKF,IAIN,CACEyJ,MAAO,eACPkM,UAAW,YA1ZI7L,EA6ZnB4U,KAAO,SAAA1e,GACL8J,EAAK2E,SAAS,CACZsS,YAAY,EACZC,YAAahhB,EAAOa,QACpBogB,UAAWjhB,EAAOyI,SAEpBqB,EAAKjJ,QAAUb,EAAOa,QACtBiJ,EAAKjE,SAAW7F,EAAO6F,SACvBiE,EAAKoX,SAAWlhB,EAAO/C,MAraN6M,EAuanBqX,YAvamBzhB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAuaL,SAAAgB,IAAA,IAAA2G,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACMrD,GAChB8D,EAAKjJ,QACLiJ,EAAKjE,SACLiE,EAAKoX,UAJK,OAMO,KALb7O,EADM1G,EAAArC,MAMJxH,QACN1D,EAAA,EAAQ2M,QAAQsH,EAAIlH,KACpBrB,EAAK2E,SAAS,CACZsS,YAAY,IAEdjX,EAAKoO,SAAS,EAAGpO,EAAKmR,WAEtB7c,EAAA,EAAQD,MAAMkU,EAAIlH,KAbR,wBAAAQ,EAAAzB,SAAAwB,MAraZ5B,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACVxV,WAAY,GACZC,SAAU,GACVC,aAAc,GACd1I,KAAM,GACN4D,QAAS,GACTgF,SAAU,GACV2a,aAAa,EACbO,YAAY,GAEdjX,EAAKvK,SAAW,GAChBuK,EAAKtK,WAAa,GAClBsK,EAAKnE,aAAe,GACpBmE,EAAK7M,KAAO,GAlBK6M,mFA2CjByB,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAoP,GAAA,GACE3N,YAAY,qBACZF,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAK0P,EAAKpQ,SAAWU,IAEpC8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,YAArB,kBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,WAArB,WACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,6BATJ,YAYE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLwQ,YAAY,uCACZF,MAAO,CAAEgF,MAAO,KAChBgJ,IAAK,SAAAC,GAAK,OAAK7L,EAAKvC,MAAQoO,KAhBhC,YAmBEzP,EAAA9C,EAAA+C,cAACsK,GAAD,CACEM,YAAa,SAAA7D,GACXpD,EAAKlB,SAAS,CACZhJ,WAAYsN,EAAI,GAChBrN,SAAUqN,EAAI,QAvBtB,YA4BEhH,EAAA9C,EAAA+C,cAAAoP,GAAA,GACEC,aAAa,GACb9N,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAK0P,EAAKhK,aAAe1F,IAExC8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,IAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,gBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,wCACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,wCACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,wCACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,MAArB,wCACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,MAArB,6BA3CJ,YA8CE8L,EAAA9C,EAAA+C,cAAAoP,GAAA,GACEC,aAAa,GACb9N,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAK0P,EAAK1S,KAAOgD,IAEhC8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,IAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,gBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,UACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,kCACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,6BA5DJ,YA+DE8L,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP+B,EAAKnQ,WAAamQ,EAAKvC,MAAMA,MAAMnN,MACnC0P,EAAKuI,SAAS,EAAGvI,EAAKD,MAAMuL,WAE9BzK,KAAK,WAELzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,YAtEf,aA0EA8O,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEI,UAAW,KACvB5B,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKoT,aAAcnO,KAAK,WAC3CzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,WADb,0CAONwe,MACE1P,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAE6T,MAAO,SAChBxT,QAAS,kBAAMvH,OAAOuI,SAAS8M,UAC/BpO,KAAK,SACLkD,KAAK,YAEPzE,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,UACLjD,MAAO,CAAE6T,MAAO,SAChBxT,QAASrC,KAAKkV,SACdnT,KAAK,eAKXvB,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRzF,KAAK,QACL0F,OAAO,KACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdmG,WAAY,CACVC,gBAAiBtQ,KAAKmE,MAAMuL,SAC5Ba,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACX9b,GAAQ8b,IACVtL,EAAKlB,SAAS,CACZwM,SAAUA,IAEZtL,EAAKuI,SAAS/Y,EAAM8b,KAGxBmB,iBAAkB,SAACC,EAAS7L,GACtBA,GACFb,EAAKuI,SAASmE,EAAS7L,KAI7B8L,OAAQ,CAAEC,EAAG,KAAMC,EAAG,UAExBzQ,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,uCACNiK,QAASnI,KAAKmE,MAAM8Q,YACpB7M,SAAU,WACRhE,EAAKlB,SAAS,CAAE+R,aAAa,KAE/B5M,OAAQ,KACRrB,MAAM,OAENxG,EAAA9C,EAAA+C,cAACqV,GAAD,OAEFtV,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACNiK,QAASnI,KAAKmE,MAAMqR,WACpBpN,SAAU,WACRhE,EAAKlB,SAAS,CAAEsS,YAAY,KAE9BnN,OAAQ,KACRrB,MAAM,OAENxG,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,kCAAWT,KAAKmE,MAAMsR,aACtBjV,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAA,gCAAST,KAAKmE,MAAMuR,WACpBlV,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAA,wDACSD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,WAAb,gBAAmC,IAC1C8O,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU2Q,QAASrC,KAAK4V,aAArC,2BAhNWpT,aCTnB6O,eACJ,SAAAA,EAAY7S,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAqR,IACjB9S,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAkd,GAAApO,KAAAjD,KAAMxB,KA0KRI,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAA4N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA+B,SAAA5B,EAAO8B,EAAK3K,GAAZ,IAAAJ,EAAAwS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACzBxJ,EAAKiK,EAAKC,MAAMuT,eAAiBxT,EAAKC,MAAMuT,eAAezd,GAAK,GAC/D+K,EAFwB,CAAAzB,EAAAE,KAAA,YAGdS,EAAKC,MAAMsT,OAHG,CAAAlU,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAIjB7C,GAAWvG,GAJM,OAAAkJ,EAAA0Q,GAAA1Q,EAAAG,KAAAH,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,GAKjB5C,GAAexG,EAAMJ,GALJ,QAAAsJ,EAAA0Q,GAAA1Q,EAAAG,KAAA,QAMR,KAHb+I,EAHqBlJ,EAAA0Q,IAMnB/X,QACN1D,EAAA,EAAQ2M,QAAQ,4BAChBjB,EAAKC,MAAMwT,cACXzT,EAAKC,MAAMyT,SACX1T,EAAKC,MAAMO,KAAK0O,eAEhB5a,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAZFhC,EAAAE,KAAA,iBAe3BjL,EAAA,EAAQD,MAAM,4BAfa,yBAAAgL,EAAAe,SAAApB,MAA/B,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,KA3KAgN,EAAK4F,MAAQ,GAFI5F,sFAiBjByB,KAAKkD,SAAW,SAACiB,EAAOlD,sCAIjB,IACCI,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBADDiR,EAE4BtS,KAAKxB,MAAhCuT,EAFDO,EAECP,eAAgBD,EAFjBQ,EAEiBR,OACxB,OACEtR,EAAA9C,EAAA+C,cAAArD,EAAA,GACEkL,SAAU,CAAEC,KAAM,GAClBwN,WAAY,CAAExN,KAAM,IACpBhH,SAAUvB,KAAKpB,cAEf4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAASC,EAAehc,KAAO,IAP9CsL,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,8BACdpH,EAAkB,aAAc,CAC/BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAASC,EAAetW,WAAa,IAPpD4F,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,YAAa,CAC9BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAASC,EAAeiE,UAAY,IAPnD3U,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,SAAU,CAC3BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAAS1I,SAAS2I,EAAexb,QAAU,GAP1D8K,CASCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,gBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,mBAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,WAAY,CAC7BxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,gDACnC8W,aAAcmI,GAAUC,EAAekE,UAFxC5U,CAICb,EAAA9C,EAAA+C,cAAAoP,GAAA,GAAQ7N,MAAO,CAAEgF,MAAO,QAAU9E,YAAY,wCAC5C1B,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,wBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,kCACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,kBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,MAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,MAArB,qCAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,oDACdpH,EAAkB,aAAc,CAC/BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAASC,EAAemE,WAAa,IAPpD7U,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,oDACdpH,EAAkB,aAAc,CAC/BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAASC,EAAeoE,WAAa,IAPpD9U,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,cAAe,CAChCxJ,MAAO,CACL,CACE2J,UAAU,EACVC,YAAY,EACZ5O,QAAS,+CAGb8W,aAAcmI,GAAUC,EAAeqE,aARxC/U,CASEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CACL,CACE2J,UAAU,EACVC,YAAY,EACZ5O,QAAS,+CAGb8W,aAAcmI,GAAUC,EAAesE,MARxChV,CASEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,yCACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,GAAUC,EAAeuE,MAPxCjV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,OAAQ,CACzBsI,aAAcmI,EAASC,EAAewE,KAAO,KAD9ClV,CAEEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAG5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE5Q,KAAK,UACL6Q,SAAS,SACTjB,UAAU,qBAHZ,yBAjKgBkB,aAqMXqQ,GAFYzV,EAAA,EAAKsF,QAALtF,CAAciU,ICmF1BmF,eAlRb,SAAAA,EAAYhY,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAwW,IACjBjY,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAqiB,GAAAvT,KAAAjD,KAAMxB,KAWRmO,SAZmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAYR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY9C,GAAepH,EAAMC,GADjC,OAEa,KADhB2J,EADGI,EAAAG,MAEExH,OACTgI,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAO5P,EAAO4P,QAGhBva,EAAA,EAAQD,MAAM,4BARP,wBAAAgL,EAAAe,SAAApB,MAZQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAuBnB6U,aAvBmBjf,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAuBJ,SAAAC,IAAA,IAAA0H,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACK9C,GAAe,EAAG,GAAIuD,EAAK4F,MAAMvJ,YADtC,OAEM,KADbkM,EADOvH,EAAAxB,MAELxH,OACNgI,EAAK2E,SAAS,CACZ5R,KAAMwV,EAAIxV,KACV8b,MAAOhE,SAAStC,EAAIsG,SAGtBva,EAAA,EAAQD,MAAM,4BARH,wBAAA2M,EAAAZ,SAAAS,MAvBIb,EAkCnB8U,QAAU,WACR9U,EAAK2E,SAAS,CACZoQ,eAAe,KApCA/U,EAuCnB4U,KAvCmB,eAAAjT,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAuCZ,SAAAgB,EAAM1L,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACLS,EAAKwT,eAAiBtd,EACtB8J,EAAK2E,SAAS,CACZqQ,gBAAgB,IAHb,wBAAAnT,EAAAzB,SAAAwB,MAvCY,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EA6CnByT,YAAY,WACVzT,EAAK2E,SAAS,CACZ5R,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACV9U,WAAY,GACZ0Y,eAAe,EACfC,gBAAgB,IAElBhV,EAAKoO,SAAS,EAAG,KAtDApO,EA8JnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,KACPkM,UAAW,KACXpD,MAAO,IAET,CACE9I,MAAO,2BACPkM,UAAW,OACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,YACXpD,MAAO,KAET,CACE9I,MAAO,wCACPkM,UAAW,aACXpD,MAAO,KAET,CACE9I,MAAO,wCACPkM,UAAW,aACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,OACXpD,MAAO,KAET,CACE9I,MAAO,8CACPkM,UAAW,OACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,cACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,WACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,IAAI2H,EACJ,OAAQpC,GACN,IAAK,IACHoC,EAAO,uBACP,MACF,IAAK,IACHA,EAAO,iCACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,iBACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,IAAK,KACHA,EAAO,iCACP,MACF,QACEA,EAAO,GAGX,OAAO3U,EAAA9C,EAAA+C,cAAA,YAAO0U,KAGlB,CACEjX,MAAO,eACPkM,UAAW,SACXpD,MAAO,GACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,OAAOhN,EAAA9C,EAAA+C,cAAA,YAAgB,MAATsS,EAAe,eAAO,kBAGxC,CACE7U,MAAO,2BACP8I,MAAO,IACPoD,UAAW,QAEb,CACElM,MAAO,2BACPkM,UAAW,aACXpD,MAAO,IACPqF,OAAQpD,IAEV,CACE/K,MAAO,2BACPkM,UAAW,aACXpD,MAAO,IACPqF,OAAQpD,IAEV,CACE/K,MAAO,eACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4U,KAAK1e,KAArC,qBAzQN8J,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACV9U,WAAY,GACZ0Y,eAAe,EACfC,gBAAgB,GAElBhV,EAAK2L,cAVY3L,mFAyDjByB,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLwQ,YAAY,6CACZF,MAAO,CAAEgF,MAAO,KAChBtS,MAAOsL,KAAKmE,MAAMvJ,WAClB4K,SAAU,SAAA4L,GAAC,OAAIhN,EAAKlB,SAAS,CAAEtI,WAAYwW,EAAErF,OAAOrX,WANxD,YASE8L,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKoT,cACxB5S,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,YAVf,YAaE8O,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKqT,SACxB7S,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aADb,iBAMJwe,MACE1P,EAAA9C,EAAA+C,cAACsE,GAAD,CACA1C,QAAS,kBAAMvH,OAAOuI,SAAS8M,WAE7B3P,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIf8O,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAO,KACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiBtQ,KAAKmE,MAAMuL,SAC5Ba,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAU,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACVE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKuI,SAAS/Y,EAAM8b,GACpBtL,EAAKlB,SAAS,CACZwM,SAAUA,KAGdmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKuI,SAASmE,EAAS7L,KAG3B8L,OAAQ,CAAEC,EAAG,KAAMC,EAAG,UAExBzQ,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMmP,cAEpBlL,SAAU,WACRhE,EAAKlB,SAAS,CAAEoQ,eAAe,KAEjCjL,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACgW,GAAD,CACExE,OAAQ,kBACN7N,EAAKlB,SAAS,CACZoQ,eAAe,KAGnBtB,YAAahS,KAAKgS,eAGrBhS,KAAKmE,MAAMoP,gBACV/S,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMoP,eAEpBnL,SAAU,WACRhE,EAAKlB,SAAS,CAAEqQ,gBAAgB,KAElClL,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACgW,GAAD,CACE3E,QAAM,EACNC,eAAgB/R,KAAK+R,eACrBE,OAAQ,kBACN7N,EAAKlB,SAAS,CACZqQ,gBAAgB,KAGpBvB,YAAa,kBAAM5N,EAAKuI,SAAS,EAAG,gBAxJvBnK,aCHrB6O,eACJ,SAAAA,EAAY7S,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAqR,IACjB9S,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAkd,GAAApO,KAAAjD,KAAMxB,KA+HRI,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAA4N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA+B,SAAA5B,EAAO8B,EAAK3K,GAAZ,IAAAJ,EAAAwS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACzBxJ,EAAKiK,EAAKC,MAAMuT,eAAiBxT,EAAKC,MAAMuT,eAAezd,GAAK,GAC/D+K,EAFwB,CAAAzB,EAAAE,KAAA,YAGdS,EAAKC,MAAMsT,OAHG,CAAAlU,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAIjB1C,GAAa1G,GAJI,OAAAkJ,EAAA0Q,GAAA1Q,EAAAG,KAAAH,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,GAKjB1C,GAAa1G,EAAOJ,GALH,QAAAsJ,EAAA0Q,GAAA1Q,EAAAG,KAAA,QAMR,KAHb+I,EAHqBlJ,EAAA0Q,IAMnB/X,QACN1D,EAAA,EAAQ2M,QAAQ,4BAAUsH,EAAIlH,KAC9BrB,EAAKC,MAAMwT,cACXzT,EAAKC,MAAMyT,SACX1T,EAAKC,MAAMO,KAAK0O,eAEhB5a,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAZFhC,EAAAE,KAAA,iBAe3BjL,EAAA,EAAQD,MAAM,4BAfa,yBAAAgL,EAAAe,SAAApB,MAA/B,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,KAhIAgN,EAAK4F,MAAQ,GAFI5F,sFAiBjByB,KAAKkD,SAAW,SAACiB,EAAOlD,sCAIjB,IACCI,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBADDiR,EAE4BtS,KAAKxB,MAAhCuT,EAFDO,EAECP,eAAgBD,EAFjBQ,EAEiBR,OACxB,OACEtR,EAAA9C,EAAA+C,cAAArD,EAAA,GACEkL,SAAU,CAAEC,KAAM,GAClBwN,WAAY,CAAExN,KAAM,IACpBhH,SAAUvB,KAAKpB,cAEf4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,sBACdpH,EAAkB,YAAa,CAC9BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAASC,EAAe2E,UAAY,IAPnDrV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,YAAa,CAC9BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAASC,EAAe4E,UAAY,IAPnDtV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,WAAY,CAC7BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,wCAEX,CACE6O,IAAK,GACLC,IAAK,GACL9O,QAAS,0DAGb8W,aAAcmI,EAASC,EAAe6E,SAAW,IAZlDvV,CAaEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAAS1I,SAAS2I,EAAergB,MAAQ,GAPxD2P,CASCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,sBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,yBAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,SAAU,CAC3BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAAS1I,SAAS2I,EAAexb,QAAU,GAP1D8K,CASCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,gBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,sBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,mBAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,eAAgB,GAAlCA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOK,YAAY,uCAASF,MAAO,CAAEgF,MAAO,WAGhDxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,iBAAkB,GAApCA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOK,YAAY,uCAASF,MAAO,CAAEgF,MAAO,WAGhDxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,uBACdpH,EAAkB,SAAU,GAA5BA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOK,YAAY,uCAASF,MAAO,CAAEgF,MAAO,WAGhDxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAW4Y,WAAY,CAAEc,OAAQ,KAC/BrW,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE5Q,KAAK,UACL6Q,SAAS,SACTjB,UAAU,qBAHZ,yBAtHgBkB,aA0JXqQ,GAFYzV,EAAA,EAAKsF,QAALtF,CAAciU,IC+D1ByF,eApNb,SAAAA,EAAYtY,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA8W,IACjBvY,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA2iB,GAAA7T,KAAAjD,KAAMxB,KAWRmO,SAZmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAYR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY3C,GAASvH,EAAMC,GAD3B,OAEa,KADhB2J,EADGI,EAAAG,MAEExH,OACTgI,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAO5P,EAAO4P,QAGhBva,EAAA,EAAQD,MAAM,4BAAU4K,EAAOoC,KARxB,wBAAAhC,EAAAe,SAAApB,MAZQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAuBnB8U,QAAU,WACR9U,EAAK2E,SAAS,CACZoQ,eAAe,KAzBA/U,EA4BnB4U,KA5BmB,eAAAlU,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA4BZ,SAAAC,EAAM3K,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAELS,EAAKwT,eAAiBtd,EACtB8J,EAAK2E,SAAS,CACZqQ,gBAAgB,IAJb,wBAAAhU,EAAAZ,SAAAS,MA5BY,gBAAAyB,GAAA,OAAA5B,EAAAc,MAAAC,KAAAzO,YAAA,GAAAgN,EAmCnBwY,OAnCmB,eAAA7W,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAmCV,SAAAgB,EAAM1L,GAAN,IAAA+I,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACczC,GAAe5G,EAAOH,IADpC,OAEe,KADhBkJ,EADC4C,EAAArC,MAEIxH,QACT1D,EAAA,EAAQ2M,QAAQhC,EAAOoC,KACvBrB,EAAKyT,YAAY,EAAG,KAEpBnf,EAAA,EAAQD,MAAM,4BAAU4K,EAAOoC,KAN1B,wBAAAQ,EAAAzB,SAAAwB,MAnCU,gBAAAW,GAAA,OAAAZ,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EA4CnByT,YAAc,WACZzT,EAAK2E,SAAS,CACZ5R,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACV9U,WAAY,GACZ0Y,eAAe,EACfC,gBAAgB,IAElBhV,EAAKoO,SAAS,EAAG,KArDApO,EA+InB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,KACPkM,UAAW,KACXpD,MAAO,IAET,CACE9I,MAAO,iCACPkM,UAAW,OACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YAAgB,MAATsS,EAAe,qBAAQ,wBAGlC,CACE7U,MAAO,2BACPkM,UAAW,WACXpD,MAAO,KAET,CACE9I,MAAO,iCACPkM,UAAW,YACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEgR,SAAU,aAAcC,UAAW,cAC9CF,KAIP,CACE7U,MAAO,2BACPkM,UAAW,YACXpD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,SACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YAAgB,MAATsS,EAAe,eAAgB,MAATA,EAAe,qBAAQ,kBAGxD,CACE7U,MAAO,2BACPkM,UAAW,aACXpD,MAAO,IACPqF,OAAQpD,IAEV,CACE/K,MAAO,eACPkM,UAAW,GACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4U,KAAK1e,KAArC,gBACA+L,EAAA9C,EAAA+C,cAAA8O,GAAA,GACErR,MAAM,uCACNsR,UAAW,kBAAMjR,EAAKwY,OAAOtiB,IAC7B6a,OAAO,eACPG,WAAW,gBAEXjP,EAAA9C,EAAA+C,cAACsE,GAAD,2BA1MRxG,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACV9U,WAAY,GACZ0Y,eAAe,EACfC,gBAAgB,GAElBhV,EAAK2L,cAVY3L,mFAwDjByB,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKqT,SACxB7S,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aADb,iBAMJwe,MACE1P,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMvH,OAAOuI,SAAS8M,WACzC3P,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIf8O,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAO,KACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiBtQ,KAAKmE,MAAMuL,SAC5Ba,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAU,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACVE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKuI,SAAS/Y,EAAM8b,GACpBtL,EAAKlB,SAAS,CACZwM,SAAUA,KAGdmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKuI,SAASmE,EAAS7L,KAG3B8L,OAAQ,CAAEC,EAAG,IAAMC,EAAG,UAExBzQ,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMmP,cAEpBlL,SAAU,WACRhE,EAAKlB,SAAS,CAAEoQ,eAAe,KAEjCjL,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACuW,GAAD,CACE/E,OAAQ,kBACN7N,EAAKlB,SAAS,CACZoQ,eAAe,KAGnBtB,YAAahS,KAAKgS,eAGrBhS,KAAKmE,MAAMoP,gBACV/S,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMoP,eAEpBnL,SAAU,WACRhE,EAAKlB,SAAS,CAAEqQ,gBAAgB,KAElClL,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACuW,GAAD,CACElF,QAAM,EACNC,eAAgB/R,KAAK+R,eACrBE,OAAQ,kBACN7N,EAAKlB,SAAS,CACZqQ,gBAAgB,KAGpBvB,YAAa,kBAAM5N,EAAKuI,SAAS,EAAG,gBAzItBnK,aCoQbyU,eAjQb,SAAAA,EAAYzY,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAiX,IACjB1Y,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA8iB,GAAAhU,KAAAjD,KAAMxB,KAkBRmO,SAnBmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAmBR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYxC,GACnB1H,EACAC,EACA0K,EAAK4F,MAAMjK,WACXqE,EAAK4F,MAAMhK,SACXoE,EAAKnE,aACLmE,EAAKvK,SACLuK,EAAKtK,YARE,OACHuJ,EADGI,EAAAG,KAUTQ,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAOhE,SAAS5L,EAAO4P,SAZhB,wBAAAxP,EAAAe,SAAApB,MAnBQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAqCnB2W,SAAW,WACTxa,GAAa6D,EAAK4F,QAtCD5F,EAqJnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,iBACPkM,UAAW,WACXpD,MAAO,KAET,CACE9I,MAAO,UACPkM,UAAW,UACXpD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,YACXpD,MAAO,KAET,CACE9I,MAAO,iBACPkM,UAAW,aACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,eACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,SACXpD,MAAO,IACPqD,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAER,OAASoN,EAAEpN,SAEjC,CACEgB,MAAO,2BACPkM,UAAW,iBACXpD,MAAO,IACPqD,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE2X,eAAiB/K,EAAE+K,iBAEzC,CACEnX,MAAO,2BACPkM,UAAW,SACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,IAAI2H,EACJ,OAAQpC,GACN,IAAK,IACHoC,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,uCACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,uCACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,QACEA,EAAO,GAGX,OAAO3U,EAAA9C,EAAA+C,cAAA,YAAO0U,KAGlB,CACEjX,MAAO,2BACPkM,UAAW,aACXpD,MAAO,IACPqF,OAAQpD,GACRoB,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE4X,WAAahL,EAAEgL,aAErC,CACEpX,MAAO,2BACPkM,UAAW,aACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,MAAa,MAATuF,GAAiBA,EAEP9J,GAAY8J,GADjB,IAGX1I,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE6X,WAAajL,EAAEiL,eA1PrChX,EAAKkV,aAAelV,EAAKkV,aAAaC,KAAlBvf,OAAAwS,GAAA,EAAAxS,CAAAoK,IACpBA,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACVxV,WAAY,GACZC,SAAU,GACVzI,KAAM,KACNmJ,SAAU,GACVD,WAAY,GACZtF,QAAS,GACTgF,SAAU,IAEZiE,EAAKvK,SAAW,GAChBuK,EAAKtK,WAAa,GAClBsK,EAAKnE,aAAe,GAjBHmE,4EAkCNM,GACXmB,KAAKkD,SAAS,CAAEtI,WAAYiE,EAAMkN,OAAOrX,oDAMzCsL,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsK,GAAD,CACEM,YAAa,SAAA7D,GACXpD,EAAKlB,SAAS,CACZhJ,WAAYsN,EAAI,GAChBrN,SAAUqN,EAAI,QALtB,YAUEhH,EAAA9C,EAAA+C,cAAAoP,GAAA,GACE3N,YAAY,qBACZF,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAK0P,EAAKpQ,SAAWU,IAEpC8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,YAArB,kBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,WAArB,YAhBJ,YAmBE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLwQ,YAAY,uCACZF,MAAO,CAAEgF,MAAO,KAChBgJ,IAAK,SAAAC,GAAK,OAAK7L,EAAKvC,MAAQoO,KAvBhC,YA0BEzP,EAAA9C,EAAA+C,cAAAoP,GAAA,GACEC,aAAa,GACb9N,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAK0P,EAAKhK,aAAe1F,IAExC8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,IAArB,gBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,MAArB,6BAvCJ,YA0CE8L,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP+B,EAAKnQ,WAAamQ,EAAKvC,MAAMA,MAAMnN,MACnC0P,EAAKuI,SAAS,EAAGvI,EAAKD,MAAMuL,YAG9BlP,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,YAhDf,cAsDJwe,MACE1P,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEN,MAAO,CAAE6T,MAAO,SAChBxT,QAAS,kBAAMvH,OAAOuI,SAAS8M,UAC/BpO,KAAK,WAEPvB,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQD,QAASrC,KAAKkV,SAAUnT,KAAK,YAArC,8BAMJvB,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRzF,KAAK,QACL0F,OAAO,KACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdmG,WAAY,CACVC,gBAAiBtQ,KAAKmE,MAAMuL,SAC5Ba,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACX9b,GAAQ8b,IACVtL,EAAKlB,SAAS,CACZwM,SAAUA,IAEZtL,EAAKuI,SAAS/Y,EAAM8b,KAGxBmB,iBAAkB,SAACC,EAAS7L,GACtBA,GACFb,EAAKuI,SAASmE,EAAS7L,KAI7B8L,OAAQ,CAAEC,EAAG,KAAMC,EAAG,kBAjJHzO,aCgMd0U,eA5Lb,SAAAA,EAAY1Y,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAkX,IACjB3Y,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA+iB,GAAAjU,KAAAjD,KAAMxB,KAaRmO,SAdmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAcR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYvC,GAAW3H,EAAMC,GAD7B,OAEa,KADhB2J,EADGI,EAAAG,MAEExH,OACTgI,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAOhE,SAAS5L,EAAO4P,SAGzBva,EAAA,EAAQD,MAAM,4BARP,wBAAAgL,EAAAe,SAAApB,MAdQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EA6FnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,KACPkM,UAAW,MAEb,CACElM,MAAO,qBACPkM,UAAW,QAEb,CACElM,MAAO,qBACPkM,UAAW,eAxGI7L,EA2GnB4Y,kBAAoB,SAAC1iB,EAAQ+Y,EAAO4J,EAAQnD,GAC1C,IAAMpJ,EAAU,CACd,CACE3M,MAAO,uCACPkM,UAAW,WACXpD,MAAO,KAET,CACE9I,MAAO,uCACPkM,UAAW,eACXpD,MAAO,KAET,CACE9I,MAAO,WACPkM,UAAW,WACXpD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,SACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQD,QAAS,kBAAM9D,EAAK4U,KAAK1e,KAAjC,2BAIN,OACE+L,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEI,QAASA,EACTD,WAAYrM,EAAK4F,MAAMkT,UACvBhH,YAAY,KAxIC9R,EA4InB+Y,YA5ImB,eAAArY,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA4IL,SAAAC,EAAO6U,EAAUxf,GAAjB,IAAA8iB,EAAA/Z,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACRyZ,EAAO,IACPtD,EAFQ,CAAA1U,EAAAzB,KAAA,gBAGVyZ,EAAKzT,KAAKrP,EAAOH,IACjBiK,EAAK2E,SAAS,CACZsU,gBAAiBD,IALThY,EAAAzB,KAAA,EAOWtC,GAAe/G,EAAOH,IAPjC,OAQY,KADhBkJ,EAPI+B,EAAAxB,MAQCxH,QACTiH,EAAOlM,KAAK8E,QAAQ,SAACC,EAASmX,GAC5BnX,EAAQuN,IAAM4J,IAEhBjP,EAAK2E,SAAS,CACZmU,UAAW7Z,EAAOlM,SAGpBuB,EAAA,EAAQD,MAAM,4BACd2L,EAAK2E,SAAS,CACZmU,UAAW,MAlBL9X,EAAAzB,KAAA,iBAsBVS,EAAK2E,SAAS,CACZsU,gBAAiB,KAvBT,yBAAAjY,EAAAZ,SAAAS,MA5IK,gBAAAyB,EAAAC,GAAA,OAAA7B,EAAAc,MAAAC,KAAAzO,YAAA,GAAAgN,EAuKnB4U,KAAO,SAAA1e,GACL+C,QAAQC,IAAIhD,EAAOkH,UACnB4C,EAAK2E,SAAS,CACZuU,SAAUhjB,EAAOH,GACjBsG,WAAYnG,EAAOkH,SACnB4X,gBAAgB,KA5KDhV,EA+KnBmZ,eA/KmBvjB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA+KF,SAAAgB,IAAA,IAAA3C,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACMpC,GAAgB6C,EAAK4F,MAAMsT,SAAUlZ,EAAK4F,MAAMvJ,YADtD,OAEO,KADhB4C,EADS4C,EAAArC,MAEJxH,QACT1D,EAAA,EAAQ2M,QAAQhC,EAAOoC,KACvBrB,EAAK2E,SAAS,CACZqQ,gBAAgB,EAChBiE,gBAAgB,MAGlB3kB,EAAA,EAAQD,MAAM,4BATD,wBAAAwN,EAAAzB,SAAAwB,MA7Kf5B,EAAK4F,MAAQ,CACX7S,KAAM,GACN+lB,UAAW,GACXG,gBAAiB,GACjBpK,MAAO,EACPsC,SAAU,GACV9U,WAAY,GACZ2Y,gBAAgB,EAChBkE,SAAU,IAEZlZ,EAAK2L,cAZY3L,mFA0BjByB,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACEF,MACE1P,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEN,MAAO,CAAE6T,MAAO,SAChBxT,QAAS,kBAAMvH,OAAOuI,SAAS8M,UAC/BpO,KAAK,aAKXvB,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRzF,KAAK,SACL0F,OAAO,KACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdiN,kBAAmBnX,KAAKmX,kBACxBQ,kBAAgB,EAChBrD,SAAUtU,KAAKsX,YACfE,gBAAiBxX,KAAKmE,MAAMqT,gBAC5BnH,WAAY,CACVC,gBAAiBtQ,KAAKmE,MAAMuL,SAC5Ba,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAU,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACVE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACX9b,GAAQ8b,IACVtL,EAAKlB,SAAS,CACZwM,SAAUA,IAEZtL,EAAKuI,SAAS/Y,EAAM8b,KAGxBmB,iBAAkB,SAACC,EAAS7L,GACtBA,GACFb,EAAKuI,SAASmE,EAAS7L,OAK/BzE,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACNiK,QAASnI,KAAKmE,MAAMoP,eACpB7M,KAAM1G,KAAK0X,eACXtP,SAAU,WACRhE,EAAKlB,SAAS,CAAEqQ,gBAAgB,MAGlC/S,EAAA9C,EAAA+C,cAAA,yBACAD,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLgD,MAAOsL,KAAKmE,MAAMvJ,WAClB4K,SAAU,SAAA3G,GAAK,OACbuF,EAAKlB,SAAS,CAAEtI,WAAYiE,EAAMkN,OAAOrX,oBAvFxB8N,+BCCzB6O,eACJ,SAAAA,EAAY7S,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAqR,IACjB9S,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAkd,GAAApO,KAAAjD,KAAMxB,KAQRoZ,eATmBzjB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KASF,SAAA5B,IAAA,IAAAuJ,EAAA+Q,EAAA,OAAApa,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACC7H,IADD,OAEI,KADf6Q,EADWlJ,EAAAG,MAEPxH,SACFshB,EAAM,GACV/Q,EAAIxV,KAAK8E,QAAQ,SAAAC,GACfwhB,EAAI/T,KAAK,CAAE2E,MAAOpS,EAAQN,KAAMrB,MAAO2B,EAAQ/B,OAEjDiK,EAAK2E,SAAS,CACZyP,QAASkF,KARE,wBAAAja,EAAAe,SAAApB,MATEgB,EA0JnBK,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAK3K,GAAZ,IAAAJ,EAAAwS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UAC7BtG,QAAQC,IAAI/C,GACRJ,EAAKiK,EAAKC,MAAMuT,eAChBxT,EAAKC,MAAMuT,eAAe+F,IAAIC,KAC9B,GACC1Y,EALwB,CAAAE,EAAAzB,KAAA,YAM3BpJ,EAAMuB,YAAYG,QAAQ,SAAA6H,GAExBvJ,EADU,SAAWuJ,EAAO,KACfA,IAEfvJ,EAAMwF,WAAaxF,EAAMwF,WAAWoP,OAAO,uBAC3C5U,EAAMyF,SAAWzF,EAAMyF,SAASmP,OAAO,8BAChC5U,EAAMuB,YACAsI,EAAKC,MAAMsT,OAbG,CAAAvS,EAAAzB,KAAA,gBAAAyB,EAAAzB,KAAA,GAcjB5F,GAAUxD,GAdO,QAAA6K,EAAA+O,GAAA/O,EAAAxB,KAAAwB,EAAAzB,KAAA,wBAAAyB,EAAAzB,KAAA,GAejB1F,GAAa1D,EAAOJ,GAfH,QAAAiL,EAAA+O,GAAA/O,EAAAxB,KAAA,QAgBR,KAHb+I,EAbqBvH,EAAA+O,IAgBnB/X,QACN1D,EAAA,EAAQ2M,QAAQ,4BAChBjB,EAAKC,MAAMwT,cACXzT,EAAKC,MAAMyT,SACX1T,EAAKC,MAAMO,KAAK0O,eAEhB5a,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAtBFL,EAAAzB,KAAA,iBAyB3BjL,EAAA,EAAQD,MAAM,4BAzBa,yBAAA2M,EAAAZ,SAAAS,MAA/B,gBAAAS,EAAAC,GAAA,OAAAb,EAAAc,MAAAC,KAAAzO,YAAA,KA5JiBgN,EAyLnB+S,iBAAmB,SAAAC,GACjBhT,EAAK2E,SAAS,CACZqO,YAAaA,KAzLfhT,EAAK4F,MAAQ,CACXwO,QAAS,GACTpB,YAAahT,EAAKC,MAAMsT,OACpBvT,EAAKC,MAAMuT,eAAeiG,YAC1B,IANWzZ,mFAsBjByB,KAAK4X,kDASE,IAAAxT,EAAApE,KACCqB,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBADDiR,EAE4BtS,KAAKxB,MAAhCuT,EAFDO,EAECP,eAAgBD,EAFjBQ,EAEiBR,OACxB,OACEtR,EAAA9C,EAAA+C,cAAArD,EAAA,GAAMkL,SAAU,CAAEC,KAAM,GAAKhH,SAAUvB,KAAKpB,cAC1C4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,UAAW,CAC5BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAAS1I,SAAS2I,EAAekG,SAAW,GAP3D5W,CASCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,gBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,mBAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,QAAS,CAC1BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAASC,EAAe7T,MAAQ,IAP/CmD,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,cAAe,CAChCxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,oCACnC8W,aAAcmI,GAAUC,EAAeiG,aAFxC3W,CAICb,EAAA9C,EAAA+C,cAAAiS,GAAA,EAAUD,MAAV,CACEE,QAAS3S,KAAKmE,MAAMwO,QAEpBnN,SAAU,SAAA+L,GAAW,OAAInN,EAAKkN,iBAAiBC,QAIrD/Q,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CACL,CACE2J,UAAU,IAGdmI,aAAcmI,EAAS1I,SAAS2I,EAAergB,MAAQ,GANxD2P,CAQCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,gBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,mBAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,kCACdpH,EAAkB,YAAa,CAC9BxJ,MAAO,CACL,CACE2J,UAAU,IAGdmI,aAAcmI,EAAS1I,SAAS2I,EAAergB,MAAQ,GANxD2P,CAQCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,UACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,aAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAcmI,GAAUC,EAAewE,MAFxClV,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,QAAS,CAC1BxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAcmI,EAASC,EAAemG,MAAQ,IAF/C7W,CAICb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO+H,SAAP,CACEC,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjC/H,MAAO,CAAEgF,MAAO,WAItBxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,aAAc,CAC/BxJ,MAAO,CACL,CACE2J,UAAU,IAGdmI,aAAcmI,GAAUzI,KAAmC,IAA5B0I,EAAe7X,aAN/CmH,CAOEb,EAAA9C,EAAA+C,cAAA0X,GAAA,GAAYhN,UAAQ,EAAC7B,OAAQ,0BAElC9I,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,WAAY,CAC7BxJ,MAAO,CACL,CACE2J,UAAU,IAGdmI,aAAcmI,GAAUzI,KAAiC,IAA1B0I,EAAe5X,WAN/CkH,CAOEb,EAAA9C,EAAA+C,cAAA0X,GAAA,GAAYhN,UAAQ,EAAC7B,OAAQ,0BAElC9I,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE5Q,KAAK,UACL6Q,SAAS,SACTjB,UAAU,qBAHZ,yBAhJgBkB,aAmMXqQ,GAFYzV,EAAA,EAAKsF,QAALtF,CAAciU,ICwD1B+G,eApPb,SAAAA,EAAY5Z,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAoY,IACjB7Z,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAikB,GAAAnV,KAAAjD,KAAMxB,KAURmO,SAXmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAWR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY7F,GAAQrE,EAAMC,GAD1B,OAEa,KADhB2J,EADGI,EAAAG,MAEExH,OACTgI,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAO5P,EAAO4P,QAGhBva,EAAA,EAAQD,MAAM,4BARP,wBAAAgL,EAAAe,SAAApB,MAXQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAiCnB8U,QAAU,WACR9U,EAAK2E,SAAS,CACZoQ,eAAe,KAnCA/U,EAsCnB4U,KAtCmB,eAAAlU,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAsCZ,SAAAC,EAAM3K,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACLS,EAAKwT,eAAiBtd,EACtB8J,EAAK2E,SAAS,CACZqQ,gBAAgB,IAHb,wBAAAhU,EAAAZ,SAAAS,MAtCY,gBAAAyB,GAAA,OAAA5B,EAAAc,MAAAC,KAAAzO,YAAA,GAAAgN,EA4CnB8Z,SA5CmB,eAAAnY,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA4CR,SAAAgB,EAAM1L,GAAN,IAAAqS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACOzF,GAAU5D,EAAOqjB,IAAIC,MAD5B,OAEU,KADfjR,EADK1G,EAAArC,MAEDxH,QACN1D,EAAA,EAAQ2M,QAAQ,4BAChBjB,EAAKyT,eAELnf,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KANpB,wBAAAQ,EAAAzB,SAAAwB,MA5CQ,gBAAAW,GAAA,OAAAZ,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EAqDnByT,YAAc,WACZzT,EAAK2E,SAAS,CACZ5R,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACV9U,WAAY,GACZ0Y,eAAe,EACfC,gBAAgB,IAElBhV,EAAKoO,SAAS,EAAG,KA9DApO,EAqJnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,eACPkM,UAAW,SAEb,CACElM,MAAO,eACPkM,UAAW,cACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OAAkB+L,EAAA9C,EAAA+C,cAAA,YAAOsS,EAAKuF,KAAK,QAE7C,CACEpa,MAAO,eACPkM,UAAW,iBAEb,CACElM,MAAO,2BACPkM,UAAW,OACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAAA,YAAgB,MAATsS,GAAyB,IAATA,EAAa,eAAO,kBAG/C,CACE7U,MAAO,iCACPkM,UAAW,YACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OAAkB+L,EAAA9C,EAAA+C,cAAA,YAAgB,MAATsS,EAAe,SAAM,YAExD,CACE7U,MAAO,2BACPkM,UAAW,QACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAAA8X,GAAA,GAAShY,QAASwS,EAAMlL,QAAQ,QAAQ2Q,aAAc,CAAExR,MAAO,QAC7DxG,EAAA9C,EAAA+C,cAAA,OACEuB,MAAO,CACLgF,MAAO,QACPyR,aAAc,WACdC,WAAY,SACZC,SAAU,WAGX5F,KAIPtH,OAAQ,SAAChX,EAAQiX,GACf,MAAO,CACLrJ,QAAS,SAAAxD,KACT+M,cAAe,SAAA/M,KACfgN,cAAe,SAAAhN,KACfiN,aAAc,SAAAjN,GACZA,EAAMkN,OAAO/J,MAAMgK,OAAS,WAE9BC,aAAc,SAAApN,QAIpB,CACEX,MAAO,2BACPkM,UAAW,aACXiC,OAAQpD,IAEV,CACE/K,MAAO,2BACPkM,UAAW,WACXiC,OAAQpD,IAEV,CACE/K,MAAO,2BACPkM,UAAW,cACXiC,OAAQpD,IAEV,CACE/K,MAAO,eACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU2Q,QAAS,kBAAM9D,EAAK4U,KAAK1e,IAASwQ,KAAK,SAA9D,gBADF,eAKEzE,EAAA9C,EAAA+C,cAAA8O,GAAA,GACErR,MAAM,wCACNsR,UAAW,kBAAMjR,EAAK8Z,SAAS5jB,IAC/B6a,OAAO,eACPG,WAAW,gBAEXjP,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,SAASuT,KAAK,SAA3B,sBAxOR1G,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACV9U,WAAY,GACZ0Y,eAAe,EACfC,gBAAgB,GARDhV,mFAiEjByB,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKqT,QAASpO,KAAK,WAAxC,iBAGJiL,MACE1P,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMvH,OAAOuI,SAAS8M,UAAUlL,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIf8O,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAAlW,GAAM,OAAIA,EAAOqjB,IAAIC,MAC7BnN,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiBtQ,KAAKmE,MAAMuL,SAC5Ba,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAU,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACVE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKuI,SAAS/Y,EAAM8b,GACpBtL,EAAKlB,SAAS,CACZwM,SAAUA,KAGdmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKuI,SAASmE,EAAS7L,KAG3B8L,OAAQ,CAAEC,EAAG,OAEfxQ,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMmP,cAEpBlL,SAAU,WACRhE,EAAKlB,SAAS,CAAEoQ,eAAe,KAEjCjL,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACmY,GAAD,CACE3G,OAAQ,kBACN7N,EAAKlB,SAAS,CACZoQ,eAAe,KAGnBtB,YAAahS,KAAKgS,eAGrBhS,KAAKmE,MAAMoP,gBACV/S,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMoP,eAEpBnL,SAAU,WACRhE,EAAKlB,SAAS,CAAEqQ,gBAAgB,KAElClL,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACmY,GAAD,CACE9G,QAAM,EACNC,eAAgB/R,KAAK+R,eACrBE,OAAQ,kBACN7N,EAAKlB,SAAS,CACZqQ,gBAAgB,KAGpBvB,YAAa,kBAAM5N,EAAKuI,SAAS,EAAG,gBA/IxBnK,aCHpB6O,eACJ,SAAAA,EAAY7S,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAqR,IACjB9S,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAkd,GAAApO,KAAAjD,KAAMxB,KAQRoZ,eATmBzjB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KASF,SAAA5B,IAAA,IAAAuJ,EAAA+Q,EAAA,OAAApa,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACC7H,IADD,OAEI,KADf6Q,EADWlJ,EAAAG,MAEPxH,SACFshB,EAAM,GACV/Q,EAAIxV,KAAK8E,QAAQ,SAAAC,GACfwhB,EAAI/T,KAAK,CAAE2E,MAAOpS,EAAQN,KAAMrB,MAAO2B,EAAQ/B,OAEjDiK,EAAK2E,SAAS,CACZyP,QAASkF,KARE,wBAAAja,EAAAe,SAAApB,MATEgB,EAgGnBK,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAK3K,GAAZ,IAAAJ,EAAAwS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACzBxJ,EAAKiK,EAAKC,MAAMuT,eAChBxT,EAAKC,MAAMuT,eAAezc,QAC1B,GACC+J,EAJwB,CAAAE,EAAAzB,KAAA,YAK3BpJ,EAAMsjB,YAAY5hB,QAAQ,SAAA6H,GAExBvJ,EADU,SAAWuJ,EAAO,KACfA,WAERvJ,EAAMsjB,YACAzZ,EAAKC,MAAMsT,OAVG,CAAAvS,EAAAzB,KAAA,gBAAAyB,EAAAzB,KAAA,EAWjBvF,GAAoB7D,EAAO,OAXV,OAAA6K,EAAA+O,GAAA/O,EAAAxB,KAAAwB,EAAAzB,KAAA,wBAAAyB,EAAAzB,KAAA,GAYjBvF,GAAoB7D,EAAO,OAAQJ,GAZlB,QAAAiL,EAAA+O,GAAA/O,EAAAxB,KAAA,QAaR,KAHb+I,EAVqBvH,EAAA+O,IAanB/X,QACN1D,EAAA,EAAQ2M,QAAQ,4BAChBjB,EAAKC,MAAMwT,cACXzT,EAAKC,MAAMyT,SACX1T,EAAKC,MAAMO,KAAK0O,eAEhB5a,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAnBFL,EAAAzB,KAAA,iBAsB3BjL,EAAA,EAAQD,MAAM,4BAtBa,yBAAA2M,EAAAZ,SAAAS,MAA/B,gBAAAS,EAAAC,GAAA,OAAAb,EAAAc,MAAAC,KAAAzO,YAAA,KAlGiBgN,EA4HnB+S,iBAAmB,SAAAC,GACjBhT,EAAK2E,SAAS,CACZqO,YAAaA,KA5HfhT,EAAK4F,MAAQ,CACXwO,QAAS,GACTpB,YAAahT,EAAKC,MAAMsT,OACpBvT,EAAKC,MAAMuT,eAAeiG,YAAY5F,MAAM,KAAKpK,IAAIqK,QACrD,IANW9T,mFAsBjByB,KAAK4X,kDAEE,IAAAxT,EAAApE,KACCqB,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBADDiR,EAE4BtS,KAAKxB,MAAhCuT,EAFDO,EAECP,eAAgBD,EAFjBQ,EAEiBR,OACxB,OACEtR,EAAA9C,EAAA+C,cAAArD,EAAA,GAAMkL,SAAU,CAAEC,KAAM,GAAKhH,SAAUvB,KAAKpB,cAC1C4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,UAAW,CAC5BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAAS1I,SAAS2I,EAAezc,SAAW,IAP3D+L,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,YAAa,CAC9BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcmI,EAASC,EAAeiE,UAAY,IAPnD3U,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,cAAe,CAChCxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,oCACnC8W,aACEmI,GAAUC,EAAeiG,YAAY5F,MAAM,KAAKpK,IAAIqK,SAHvDhR,CAKCb,EAAA9C,EAAA+C,cAAAiS,GAAA,EAAUD,MAAV,CACEE,QAAS3S,KAAKmE,MAAMwO,QACpBnN,SAAU,SAAA+L,GAAW,OAAInN,EAAKkN,iBAAiBC,QAIrD/Q,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,SAAU,CAC3BxJ,MAAO,CACL,CACE2J,UAAU,IAGdmI,aAAcmI,EAAS1I,SAAS2I,EAAexb,QAAU,GAN1D8K,CAQCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,UACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,aAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAcmI,GAAUC,EAAewE,MAFxClV,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE5Q,KAAK,UACL6Q,SAAS,SACTjB,UAAU,qBAHZ,yBAtFgBkB,aAsIXqQ,GAFYzV,EAAA,EAAKsF,QAALtF,CAAciU,ICqG1BwH,eArOb,SAAAA,EAAYra,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA6Y,IACjBta,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA0kB,GAAA5V,KAAAjD,KAAMxB,KAURmO,SAXmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAWR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYxF,GAAa1E,EAAMC,GAD/B,OAEa,KADhB2J,EADGI,EAAAG,MAEExH,OACTgI,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAO5P,EAAO4P,QAGhBva,EAAA,EAAQD,MAAM,4BARP,wBAAAgL,EAAAe,SAAApB,MAXQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAsBnB6U,aAtBmBjf,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAsBJ,SAAAC,IAAA,IAAA0H,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACKxF,GAAa,EAAG,GAAIiG,EAAKsD,MAAMA,MAAMnN,OAD1C,OAEM,KADboS,EADOvH,EAAAxB,MAELxH,QACNgI,EAAK2E,SAAS,CACZ5R,KAAMwV,EAAIxV,KACV8b,MAAOhE,SAAStC,EAAIsG,SALX,wBAAA7N,EAAAZ,SAAAS,MAtBIb,EA+BnB8U,QAAU,WACR9U,EAAK2E,SAAS,CACZoQ,eAAe,KAjCA/U,EAoCnB4U,KApCmB,eAAAjT,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAoCZ,SAAAgB,EAAM1L,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACLS,EAAKwT,eAAiBtd,EACtB8J,EAAK2E,SAAS,CACZqQ,gBAAgB,IAHb,wBAAAnT,EAAAzB,SAAAwB,MApCY,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EA0CnB8Z,SA1CmB,eAAAxK,EAAA1Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA0CR,SAAA2O,EAAMrZ,GAAN,IAAAa,EAAAwR,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,cACLxI,EAAUb,EAAOa,QADZyY,EAAAjQ,KAAA,EAEOvF,GAAoB,CAAEjD,WAAW,OAFxC,OAGU,KADfwR,EAFKiH,EAAAhQ,MAGDxH,QACN1D,EAAA,EAAQ2M,QAAQ,4BAChBjB,EAAKyT,eAELnf,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAPpB,wBAAAmO,EAAApP,SAAAmP,MA1CQ,gBAAAhN,GAAA,OAAA+M,EAAA9N,MAAAC,KAAAzO,YAAA,GAAAgN,EAoDnByT,YAAc,WACZzT,EAAK2E,SAAS,CACZ5R,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACV4D,eAAe,EACfC,gBAAgB,IAElBhV,EAAKoO,SAAS,EAAG,IACjBpO,EAAKsD,MAAMiX,eA7DMva,EAiKnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,eACPkM,UAAW,UACXpD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,YACXpD,MAAO,KAET,CACE9I,MAAO,iBACPkM,UAAW,cACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,SACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,GAAP,OAA4B,IAATse,EAAa,SAAM,WAEhD,CACE7U,MAAO,eACPkM,UAAW,OACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,cACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAAA,YAAOwI,GAAYxU,EAAOskB,YAAc,QAG5C,CACE7a,MAAO,2BACPkM,UAAW,cACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAAA,YAAOwI,GAAYxU,EAAOskB,YAAc,QAG5C,CACE7a,MAAO,eACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU2Q,QAAS,kBAAM9D,EAAK4U,KAAK1e,IAASwQ,KAAK,SAA9D,gBADF,eAKEzE,EAAA9C,EAAA+C,cAAA8O,GAAA,GACErR,MAAM,wCACNsR,UAAW,kBAAMjR,EAAK8Z,SAAS5jB,IAC/B6a,OAAO,eACPG,WAAW,gBAEXjP,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,SAASuT,KAAK,SAA3B,sBAzNR1G,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACV4D,eAAe,EACfC,gBAAgB,GAElBhV,EAAK2L,cATY3L,mFAgEjByB,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLwQ,YAAY,6CACZF,MAAO,CAAEgF,MAAO,KAChBgJ,IAAK,SAAAnO,GAAK,OAAKuC,EAAKvC,MAAQA,KALhC,YAQErB,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKoT,aAAcnO,KAAK,WAC3CzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,YATf,YAYE8O,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKqT,QAASpO,KAAK,WACtCzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aADb,iBAMJwe,MACE1P,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMvH,OAAOuI,SAAS8M,UAAUlL,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIf8O,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAO,UACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiBtQ,KAAKmE,MAAMuL,SAC5Ba,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKuI,SAAS/Y,EAAM8b,GACpBtL,EAAKlB,SAAS,CACZwM,SAAUA,KAGdmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKuI,SAASmE,EAAS7L,KAG3B8L,OAAQ,CAAEC,EAAG,KAAMC,EAAG,UAExBzQ,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACNiK,QAASnI,KAAKmE,MAAMmP,cACpBlL,SAAU,WACRhE,EAAKlB,SAAS,CAAEoQ,eAAe,KAEjCjL,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACuY,GAAD,CACE/G,OAAQ,kBACN7N,EAAKlB,SAAS,CACZoQ,eAAe,KAGnBtB,YAAahS,KAAKgS,eAGrBhS,KAAKmE,MAAMoP,gBACV/S,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACNiK,QAASnI,KAAKmE,MAAMoP,eAEpBnL,SAAU,WACRhE,EAAKlB,SAAS,CAAEqQ,gBAAgB,KAElClL,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACuY,GAAD,CACElH,QAAM,EACNC,eAAgB/R,KAAK+R,eACrBE,OAAQ,kBACN7N,EAAKlB,SAAS,CACZqQ,gBAAgB,KAGpBvB,YAAa,kBAAM5N,EAAKuI,SAAS,EAAG,gBA3JtBnK,aC8EbyH,eAzFb,SAAAA,EAAYzL,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAiK,IACjB1L,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA8V,GAAAhH,KAAAjD,KAAMxB,KAiBR0L,YAAc,WACZ,MAA0B,UAAtB3L,EAAKC,MAAMhJ,OACN,CACL,CACE0I,MAAO,qBACPkM,UAAW,eAEb,CACElM,MAAO,2BACPkM,UAAW,YACXiC,OAAQpD,KAGmB,SAAtB1K,EAAKC,MAAMhJ,OACb,CACL,CACE0I,MAAO,UACPkM,UAAW,MAEb,CACElM,MAAO,2BACPkM,UAAW,oBAGb,CACElM,MAAO,mCACPkM,UAAW,iBAEb,CACElM,MAAO,2BACPkM,UAAW,YAEXC,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE6M,cAAgBD,EAAEC,gBAExC,CACErM,MAAO,eACPkM,UAAW,OAEb,CACElM,MAAO,mCACPkM,UAAW,uBAEb,CACElM,MAAO,eACPkM,UAAW,cAEb,CACElM,MAAO,2BACPkM,UAAW,gBAIR,CACL,CACElM,MAAO,qBACPkM,UAAW,eAEb,CACElM,MAAO,eACPkM,UAAW,WAEb,CACElM,MAAO,2BACPkM,UAAW,aACXiC,OAAQpD,MAhFd1K,EAAK4F,MAAQ,GAFI5F,wEAIV,IACCjN,EAAS0O,KAAKxB,MAAMya,aAApB3nB,KAGR,OAFAkG,QAAQC,IAAInG,GAGVkP,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAO+Y,GAAR,SAAAvH,OAAmBuH,IAC3B5C,WAAYtZ,EACZuZ,QAAS7K,KAAKkK,cACdjF,KAAK,iBAfYzC,aCqXV0W,eA/Vb,SAAAA,EAAY1a,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAkZ,IACjB3a,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA+kB,GAAAjW,KAAAjD,KAAMxB,KAkBRmO,SAnBmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAmBR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYlC,GAAShI,EAAMC,EAAO,GADlC,OACH2J,EADGI,EAAAG,KAETQ,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAOhE,SAAS5L,EAAO4P,SAJhB,wBAAAxP,EAAAe,SAAApB,MAnBQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EA6BnB6U,aA7BmBjf,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA6BJ,SAAAC,IAAA,IAAA5B,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACQlC,GAAS,EAAG,GAAI,EAAG2C,EAAK4F,OADhC,OACP3G,EADO+B,EAAAxB,KAEbQ,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAOhE,SAAS5L,EAAO4P,SAJZ,wBAAA7N,EAAAZ,SAAAS,MA7BIb,EAoCnB2W,SAAW,WACThZ,GAAqBqC,EAAK4F,QArCT5F,EAwKnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,iBACPkM,UAAW,WACXpD,MAAO,KAET,CACE9I,MAAO,UACPkM,UAAW,UACXpD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,YACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,SACXpD,MAAO,IACPqD,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAER,OAASoN,EAAEpN,SAEjC,CACEgB,MAAO,2BACPkM,UAAW,eACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,OACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,iBACXpD,MAAO,IACPqD,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE2X,eAAiB/K,EAAE+K,iBAEzC,CACEnX,MAAO,2BACPkM,UAAW,aACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,cACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,WACXpD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,SACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,IAAI2H,EACJ,OAAQpC,GACN,IAAK,IACHoC,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,QACEA,EAAO,GAGX,OAAO3U,EAAA9C,EAAA+C,cAAA,YAAO0U,KAGlB,CACEjX,MAAO,2BACPkM,UAAW,eACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,gBACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,aACXpD,MAAO,IACPqF,OAAQpD,GACRoB,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE4X,WAAahL,EAAEgL,aAErC,CACEpX,MAAO,2BACPkM,UAAW,aACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,MAAa,MAATuF,GAAiBA,EAEP9J,GAAY8J,GADjB,IAGX1I,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE6X,WAAajL,EAAEiL,aAErC,CACErX,MAAO,eACPkM,UAAW,GACXpD,MAAO,IACPqF,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4a,UAAU1kB,EAAQ,UAAlD,gBAGA+L,EAAA9C,EAAA+C,cAACsE,GAAD,oCAIN,CACE7G,MAAO,2BACPkM,UAAW,GACXpD,MAAO,IACPqF,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4a,UAAU1kB,EAAQ,WAAlD,mBAMN,CACEyJ,MAAO,2BACPkM,UAAW,GACXiC,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA8X,GAAA,GACEhY,QAAS9L,EAAO2kB,YAChBlb,MAAOzJ,EAAOa,QAAU,2BACxBuS,QAAQ,SAERrH,EAAA9C,EAAA+C,cAACsE,GAAD,kCAEFvE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4a,UAAU1kB,EAAQ,oBAAlD,iCA3TW8J,EAkUnB8a,mBAAqB,SAACvgB,EAAMsS,GAC1B,IAAI4B,EAAY5B,EAAW,GAAK,YAC5B6B,EAAU7B,EAAW,GAAK,YAC9B7M,EAAK2E,SAAS,CACZhJ,WAAY8S,EACZ7S,SAAU8S,KAvUK1O,EA0UnB4a,UA1UmB,eAAAjZ,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA0UP,SAAAgB,EAAO1L,EAAQe,GAAf,IAAAsR,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,UACVS,EAAK/I,OAASA,EACd+I,EAAK0a,aAAe,CAClB3nB,KAAM,GACN8b,MAAO,EACP9Y,GAAIG,EAAOa,SAGA,SAAXE,EARQ,CAAA4K,EAAAtC,KAAA,eAAAsC,EAAAtC,KAAA,EASE1I,EAAW,EAAG,GAAIX,EAAOa,SAT3B,OAAA8K,EAAAkO,GAAAlO,EAAArC,KAAAqC,EAAAtC,KAAA,mBAUO,UAAXtI,EAVI,CAAA4K,EAAAtC,KAAA,gBAAAsC,EAAAtC,KAAA,GAWE9B,GAAW,EAAG,GAAIvH,EAAO6F,UAX3B,QAAA8F,EAAAkZ,GAAAlZ,EAAArC,KAAAqC,EAAAtC,KAAA,wBAAAsC,EAAAtC,KAAA,GAYE7B,GAAW,EAAG,GAAIxH,EAAO6F,UAZ3B,QAAA8F,EAAAkZ,GAAAlZ,EAAArC,KAAA,QAAAqC,EAAAkO,GAAAlO,EAAAkZ,GAAA,QAaS,KANbxS,EAPI1G,EAAAkO,IAaF/X,SACNgI,EAAK0a,aAAa3nB,KAAOwV,EAAIxV,KAC7BiN,EAAK0a,aAAa7L,MAAQtG,EAAIsG,OAEhC7O,EAAK2E,SAAS,CAAEqW,cAAc,IAjBpB,yBAAAnZ,EAAAzB,SAAAwB,MA1UO,gBAAAU,EAAAC,GAAA,OAAAZ,EAAAH,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAKkV,aAAelV,EAAKkV,aAAaC,KAAlBvf,OAAAwS,GAAA,EAAAxS,CAAAoK,IACpBA,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACVxV,WAAY,GACZC,SAAU,GACVC,aAAc,GACd1I,KAAM,GACNoK,MAAO,GACPlB,WAAY,GACZtF,QAAS,GACTgF,SAAU,GACVqV,gBAAgB,GAElBpR,EAAK2L,cAjBY3L,4EA0BNM,GACXmB,KAAKkD,SAAS,CAAEtI,WAAYiE,EAAMkN,OAAOrX,oDAazCsL,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAoP,GAAA,GACE3N,YAAY,qBACZF,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAI0P,EAAKlB,SAAS,CAAEpH,MAAOpH,MAE1C8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,YAArB,kBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,WAArB,WACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,eAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,gBAArB,6BATJ,YAYE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLwQ,YAAY,uCACZF,MAAO,CAAEgF,MAAO,KAChBtS,MAAOsL,KAAKmE,MAAMvJ,WAClB4K,SAAUxF,KAAKyT,eAjBnB,YAoBEjT,EAAA9C,EAAA+C,cAACsK,GAAD,CACEM,YAAa,SAAA7D,GACXpD,EAAKlB,SAAS,CACZhJ,WAAYsN,EAAI,GAChBrN,SAAUqN,EAAI,QAxBtB,YA6BEhH,EAAA9C,EAAA+C,cAAAoP,GAAA,GACEC,aAAa,GACb9N,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAI0P,EAAKlB,SAAS,CAAE9I,aAAc1F,MAEjD8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,IAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,uBAvCJ,YA0CE8L,EAAA9C,EAAA+C,cAAAoP,GAAA,GACEC,aAAa,GACb9N,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAI0P,EAAKlB,SAAS,CAAExR,KAAMgD,MAEzC8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,IAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,UACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,SAjDJ,YAoDE8L,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKoT,aAAcnO,KAAK,WAC3CzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIjBwe,MACE1P,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAE6T,MAAO,SAChBxT,QAAS,WACPvH,OAAOuI,SAAS8M,UAElBpO,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRzF,KAAK,QACL0F,OAAO,KACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdmG,WAAY,CACVC,gBAAiBtQ,KAAKmE,MAAMuL,SAC5Ba,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACX9b,GAAQ8b,IACVtL,EAAKlB,SAAS,CACZwM,SAAUA,IAEZtL,EAAKuI,SAAS/Y,EAAM8b,KAGxBmB,iBAAkB,SAACC,EAAS7L,GACtBA,GACFb,EAAKuI,SAASmE,EAAS7L,KAI7B8L,OAAQ,CAAEC,EAAG,KAAMC,EAAG,UAExBzQ,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MACkB,UAAhB8B,KAAKxK,OACD,2BACgB,SAAhBwK,KAAKxK,OACL,2BACA,2BAEN2S,QAASnI,KAAKmE,MAAMoV,aACpBnR,SAAU,WACRhE,EAAKlB,SAAS,CAAEqW,cAAc,KAEhClR,OAAQ,KACRrB,MAAM,OAENxG,EAAA9C,EAAA+C,cAAC+Y,GAAD,CACEP,aAAcjZ,KAAKiZ,aACnBzjB,OAAQwK,KAAKxK,kBAnKGgN,0CCGtBmQ,8CAlB0B8G,IAAMjX,UAkBtB,CACdkX,aAAa,EACbjV,KAAM,CAAE1O,KAAM,aAAc4jB,MAAM,GAClCjV,MAAO,aAEIkV,GAAb,SAAAC,GACE,SAAAD,EAAYpb,GAAO,IAAA4F,EAAA,OAAAjQ,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA4Z,IACjBxV,EAAAjQ,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAylB,GAAA3W,KAAAjD,KAAMxB,KACD2F,MAAQ,GAFIC,EADrB,OAAAjQ,OAAA2lB,EAAA,EAAA3lB,CAAAylB,EAAAC,GAAA1lB,OAAA4lB,EAAA,EAAA5lB,CAAAylB,EAAA,EAAAhW,IAAA,SAAAlP,MAAA,WAMI,IAAMslB,EAAW3b,KAAKC,UAAU,CAACD,KAAKgG,MAAMrE,KAAKxB,MAAMwb,WAAY,KAAM,GAEjExU,EAAaxF,KAAKxB,MAAlBgH,SACR,OACEhF,EAAA9C,EAAA+C,cAAA,OAAKa,UAAU,eACbd,EAAA9C,EAAA+C,cAACwZ,GAAA,aAAD,CAEEvlB,MAAOslB,EACPxU,SAAU,SAAC0U,EAAQ5oB,EAAMoD,GAEvB,OAAO8Q,EAASnH,KAAKC,UAAUD,KAAKgG,MAAM3P,GAAO,MAEnDie,QAASA,UAlBnBiH,EAAA,CAAgCpX,aCoCjB2X,GAFS/c,EAAA,EAAKsF,QAALtF,CA/DP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACF5M,EAAS+J,EAAM/J,OA2BrB,OACE+L,EAAA9C,EAAA+C,cAAArD,EAAA,GAAMkL,SAAU,CAAEC,KAAM,GAAKC,WAAW,OAAOjH,SApB1B,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAA4N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAK3K,GAAZ,IAAAoS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACxBtG,QAAQC,IAAI/C,GACP2K,EAFmB,CAAAzB,EAAAE,KAAA,cAGD,SAAjBU,EAAMhJ,SACRd,EAAMJ,GAAKG,EAAOH,IAJEsJ,EAAAE,KAAA,EAMJ7E,GAASvE,EAAO8J,EAAMhJ,QANlB,OAOH,KADbsR,EANgBlJ,EAAAG,MAOdxH,QACN1D,EAAA,EAAQ2M,QAAQ,4BAChBhB,EAAM4b,WACN5b,EAAMO,KAAK0O,eAEX5a,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAZP,wBAAAhC,EAAAe,SAAApB,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,MAmBEiP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,sBACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,yCACnC8W,aAA+B,QAAjBnL,EAAMhJ,OAAmB,GAAKgJ,EAAM/J,OAAOsB,MAF1DsL,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,mBACdpH,EAAkB,WAAY,CAC7BxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,sCACnC8W,aAA+B,QAAjBnL,EAAMhJ,OAAmB,GAAKgJ,EAAM/J,OAAOuE,UAF1DqI,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,mBACdpH,EAAkB,WAAY,CAC7BxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,uCADpCwO,CAGkB,QAAjB7C,EAAMhJ,OACJgL,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,SAEvBxG,EAAA9C,EAAA+C,cAAC4Z,GAAD,CAAYL,SAAUxb,EAAM/J,OAAOulB,aAIzCxZ,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU6Q,SAAS,UAAhC,oBC0IO+X,eApLb,SAAAA,EAAY9b,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAsa,IACjB/b,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAmmB,GAAArX,KAAAjD,KAAMxB,KASR+b,eAVmB,eAAA3N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAUF,SAAA5B,EAAO3J,EAAMC,GAAb,IAAAiT,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACG/E,GAAWnF,EAAMC,GADpB,OAEI,KADbiT,EADSlJ,EAAAG,MAEPxH,OACNgI,EAAK2E,SAAS,CACZ5R,KAAMwV,EAAIxV,KACV8b,MAAOtG,EAAIsG,QAGbva,EAAA,EAAQD,MAAMkU,EAAIlH,KARL,wBAAAhC,EAAAe,SAAApB,MAVE,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EA0GnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,KACPkM,UAAW,MAEb,CACElM,MAAO,qBACPkM,UAAW,QAEb,CACElM,MAAO,kBACPkM,UAAW,YAEb,CACElM,MAAO,qBACPkM,UAAW,WACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,aACXiC,OAAQpD,IAEV,CACE/K,MAAO,eACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU2Q,QAAS,kBAAM9D,EAAK4U,KAAK1e,IAASwQ,KAAK,SAA9D,gBADF,eAKEzE,EAAA9C,EAAA+C,cAAA8O,GAAA,GACErR,MAAM,wCACNsR,UAAW,kBAAMjR,EAAK8Z,SAAS5jB,IAC/B6a,OAAO,eACPG,WAAW,gBAEXjP,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,SAASuT,KAAK,SAA3B,sBAhJS1G,EAwJnBic,SAxJmBrmB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAwJR,SAAAC,IAAA,IAAApG,EAAA8N,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACL9E,EAAWuF,EAAKsD,MAAMA,MAAMnN,MADvB6K,EAAAzB,KAAA,EAES/E,GAAW,EAAG,GAAIC,GAF3B,OAEH8N,EAFGvH,EAAAxB,KAGTQ,EAAK2E,SAAS,CAAE5R,KAAMwV,EAAIxV,KAAM8b,MAAOtG,EAAIsG,QAHlC,wBAAA7N,EAAAZ,SAAAS,MAxJQb,EA6JnB8Z,SA7JmB,eAAAnY,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA6JR,SAAAgB,EAAM1L,GAAN,IAAAqS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACO7E,GAAS,CAAE3E,GAAIG,EAAOH,IAAM,OADnC,OAEU,KADfwS,EADK1G,EAAArC,MAEDxH,QACN1D,EAAA,EAAQ2M,QAAQ,4BAAUsH,EAAIlH,KAC9BrB,EAAKgc,eAAehc,EAAK4F,MAAMvQ,KAAM2K,EAAK4F,MAAMuL,WAEhD7c,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KANpB,wBAAAQ,EAAAzB,SAAAwB,MA7JQ,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EAsKnBkc,MAtKmBtmB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAsKX,SAAA2O,IAAA,OAAArQ,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,OACNS,EAAK/I,OAAS,MACd+I,EAAK2E,SAAS,CACZgE,gBAAgB,IAHZ,wBAAA6G,EAAApP,SAAAmP,MAtKWvP,EA4KnB4U,KA5KmB,eAAAlF,EAAA9Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA4KZ,SAAA+O,EAAMzZ,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAwQ,GAAA,cAAAA,EAAAtQ,KAAAsQ,EAAArQ,MAAA,OACLS,EAAK/I,OAAS,OACd+I,EAAKwT,eAAiBtd,EACtB8J,EAAK2E,SAAS,CACZgE,gBAAgB,IAJb,wBAAAiH,EAAAxP,SAAAuP,MA5KY,gBAAApN,GAAA,OAAAmN,EAAAlO,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPxZ,KAAM,EACN8b,SAAU,GACVxI,gBAAgB,GAPD3I,mFAsBjByB,KAAKua,eAAe,EAAG,qCAEhB,IAAAnW,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAEgF,MAAO,KAChB9E,YAAY,oCACZ8N,IAAK,SAAAC,GACH7L,EAAKvC,MAAQoO,KALnB,eASEzP,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,UACLvT,KAAK,UACL2Q,QAASrC,KAAKwa,SACdzY,KAAK,WAbT,eAgBEvB,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYrT,KAAK,UAAU2Q,QAASrC,KAAKya,MAAOxV,KAAK,WAArD,iBAKJiL,MACE1P,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMvH,OAAOuI,SAAS8M,UAAUlL,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIf8O,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiB,GACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKlB,SAAS,CACZtP,KAAMA,IAERwQ,EAAKmW,eAAe3mB,EAAM8b,IAE5BmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKlB,SAAS,CACZwM,SAAUzK,IAEZb,EAAKmW,eAAezJ,EAAS7L,OAKlCjF,KAAKmE,MAAM+C,gBACV1G,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAuB,QAAhB8B,KAAKxK,OAAmB,2BAAS,2BACxC2S,QAASnI,KAAKmE,MAAM+C,eACpBkB,SAAU,WACRhE,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCmB,OAAQ,KACRrB,MAAM,OAENxG,EAAA9C,EAAA+C,cAAC0S,GAAD,CACEiH,SAAU,WACRhW,EAAKmW,eAAenW,EAAKD,MAAMvQ,KAAMwQ,EAAKD,MAAMuL,UAChDtL,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCzS,OAAQuL,KAAK+R,eACbvc,OAAQwK,KAAKxK,kBApGNgN,aC+CN2X,GAFS/c,EAAA,EAAKsF,QAALtF,CA1DP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACF5M,EAAS+J,EAAM/J,OACjBxC,EAASoM,KAAKgG,MAAM5P,EAAOxC,QA0B/B,OACEuO,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,kBACMxO,EAAOqD,QADb,kCAC4BrD,EAAOiL,OADnC,gBAEoB,WAAjBsB,EAAMhJ,OAAsB,eAAO,gBAEtCgL,EAAA9C,EAAA+C,cAAArD,EAAA,GACEkL,SAAU,CAAEC,KAAM,GAClBC,WAAW,OACXjH,SAjCiB,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAA4N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAK3K,GAAZ,IAAAC,EAAAmS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBuB,EADmB,CAAAzB,EAAAE,KAAA,eAElBnJ,EAAM,CACR+lB,WAAYjmB,EAAOH,GACnBqmB,eAAgBlmB,EAAOxC,OACvB2oB,eAAgB,GAEG,WAAjBpc,EAAMhJ,SACRb,EAAI,oBAAsBD,EAAMmmB,OAChClmB,EAAI,gBAAkB,GATFiJ,EAAAE,KAAA,EAWJ3E,GAAkBxE,GAXd,OAYH,KADbmS,EAXgBlJ,EAAAG,MAYdxH,QACN1D,EAAA,EAAQ2M,QAAQ,2BAASsH,EAAIlH,KAC7BpB,EAAM4b,WACN5b,EAAMO,KAAK0O,eAEX5a,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAjBP,wBAAAhC,EAAAe,SAAApB,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,MAiCIiP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAE0H,QAA0B,WAAjBlL,EAAMhJ,OAAsB,QAAU,SAEvD6L,EAAkB,SAAU,CAC3BsI,aAAc1X,EAAO4oB,QADtBxZ,CAEEb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO+H,SAAP,CAAgBC,SAAU,CAAEC,QAAS,EAAGC,QAAS,QAGtDvJ,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU6Q,SAAS,UAAhC,qBCiLKuY,eAnNb,SAAAA,EAAYtc,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA8a,IACjBvc,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA2mB,GAAA7X,KAAAjD,KAAMxB,KASR+b,eAVmB,eAAA3N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAUF,SAAA5B,EAAO3J,EAAMC,GAAb,IAAAiT,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACG5E,GAAUtF,EAAMC,GADnB,OAEI,KADbiT,EADSlJ,EAAAG,MAEPxH,OACNgI,EAAK2E,SAAS,CACZ5R,KAAMwV,EAAIxV,KACV8b,MAAOtG,EAAIsG,QAGbva,EAAA,EAAQD,MAAMkU,EAAIlH,KARL,wBAAAhC,EAAAe,SAAApB,MAVE,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAqHnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,iBACPkM,UAAW,MAEb,CACElM,MAAO,2BACPkM,UAAW,SACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEgR,SAAU,aAAcC,UAAW,cAC9CF,KAIP,CACE7U,MAAO,2BACPkM,UAAW,YACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YAAgB,IAATsS,EAAa,mDAAa,kEAGrC,CACE7U,MAAO,iCACPkM,UAAW,gBACXpD,MAAO,KAET,CACE9I,MAAO,iCACPkM,UAAW,eAEb,CACElM,MAAO,2BACPkM,UAAW,cAEb,CACElM,MAAO,2BACPkM,UAAW,cAEb,CACElM,MAAO,eACPkM,UAAW,SACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,IAAI1G,EACJ,OAAQiM,GACN,KAAK,EACHjM,EACEtG,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQ5C,QAAS,kBAAI9D,EAAKwc,OAAOtmB,KAAlD,gBAGA+L,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQvT,KAAK,SAAS2Q,QAAS,kBAAI9D,EAAKyc,OAAOvmB,KAAhE,iBAKJ,MACF,KAAK,EACHqS,EAAMtG,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,sBACN,MACF,KAAK,EACH6B,EACEtG,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQvT,KAAK,UAA9B,4BAQN,OAAOoV,MA1LMvI,EA8LnBic,SA9LmBrmB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA8LR,SAAAC,IAAA,IAAA1K,EAAAoS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACLpJ,EAAQ,CACVyF,SAAUoE,EAAKrE,YAAc,GAC7BA,WAAYqE,EAAKrE,YAAc,GAC/B3D,OAAQgI,EAAKhI,QAAU,GACvB0kB,cAAe1c,EAAKsD,MAAMA,MAAMnN,OAAS,IALlC6K,EAAAzB,KAAA,EAOS5E,GAAUqF,EAAK4F,MAAMvQ,KAAM2K,EAAK4F,MAAMuL,SAAUhb,GAPzD,OAOHoS,EAPGvH,EAAAxB,KAQTQ,EAAK2E,SAAS,CAAE5R,KAAMwV,EAAIxV,KAAM8b,MAAOtG,EAAIsG,QARlC,wBAAA7N,EAAAZ,SAAAS,MA9LQb,EAwMnBwc,OAxMmB,eAAA7a,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAwMZ,SAAAgB,EAAO1L,GAAP,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACNS,EAAK/I,OAAO,SACZ+I,EAAKwT,eAAetd,EACpB8J,EAAK2E,SAAS,CAAEgE,gBAAgB,IAH1B,wBAAA9G,EAAAzB,SAAAwB,MAxMY,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EA6MnByc,OA7MmB,eAAAnN,EAAA1Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA6MZ,SAAA2O,EAAMrZ,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,OACLS,EAAK/I,OAAO,SACZ+I,EAAKwT,eAAetd,EACpB8J,EAAK2E,SAAS,CAAEgE,gBAAgB,IAH3B,wBAAA6G,EAAApP,SAAAmP,MA7MY,gBAAAhN,GAAA,OAAA+M,EAAA9N,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPxZ,KAAM,EACN8b,SAAU,GACVxI,gBAAgB,GAPD3I,mFAsBjByB,KAAKua,eAAe,EAAG,qCAEhB,IAAAnW,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsK,GAAD,CACEM,YAAa,SAAA7D,GACXpD,EAAKlK,WAAasN,EAAI,GACtBpD,EAAKjK,SAAWqN,EAAI,MAJ1B,eAQEhH,EAAA9C,EAAA+C,cAAAoP,GAAA,GACE3N,YAAY,2BACZF,MAAO,CAAEgF,MAAO,KAChBxB,SAAU,SAAA9Q,GAAK,OAAK0P,EAAK7N,OAAS7B,IAElC8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,6BAfJ,eAkBE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAEgF,MAAO,KAChB9E,YAAY,mDACZ8N,IAAK,SAAAC,GACH7L,EAAKvC,MAAQoO,KAtBnB,eA0BEzP,EAAA9C,EAAA+C,cAACsE,GAAD,CACErT,KAAK,UACL2Q,QAASrC,KAAKwa,SACdzY,KAAK,YAIXmO,MACE1P,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMvH,OAAOuI,SAAS8M,WACzC3P,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIf8O,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiB,GACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKlB,SAAS,CACZtP,KAAMA,IAERwQ,EAAKmW,eAAe3mB,EAAM8b,IAE5BmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKlB,SAAS,CACZwM,SAAUzK,IAEZb,EAAKmW,eAAezJ,EAAS7L,KAGjC8L,OAAQ,CAAEC,EAAG,QAEdhR,KAAKmE,MAAM+C,gBACV1G,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAuB,WAAhB8B,KAAKxK,OAAsB,eAAO,eACzC2S,QAASnI,KAAKmE,MAAM+C,eACpBkB,SAAU,WACRhE,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCmB,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACya,GAAD,CACEd,SAAU,WACRhW,EAAKmW,eAAenW,EAAKD,MAAMvQ,KAAMwQ,EAAKD,MAAMuL,UAChDtL,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCzS,OAAQuL,KAAK+R,eACbvc,OAAQwK,KAAKxK,kBA/GPgN,aC0EL2Y,GArFE,SAAA3c,GACf,IAAMlN,EAAOkN,EAAM/J,OAQnB,IAAIyV,EAAc,CAChB,CACEhM,MAAO,2BACPkM,UAAW,OACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,IAAI1G,EACJ,OAAQiM,GACN,KAAK,EACHjM,EAAM,eACN,MACF,KAAK,EACHA,EAAM,SACN,MACF,KAAK,EACHA,EAAM,qBACN,MACF,KAAK,EACHA,EAAM,eACN,MACF,KAAK,EACHA,EAAM,qBACN,MACF,QACEA,EAAM,GAGV,OAAOtG,EAAA9C,EAAA+C,cAAA,YAAOqG,KAGlB,CACE5I,MAAO,qBACPkM,UAAW,gBAEb,CACElM,MAAO,eACPkM,UAAW,eAEb,CACElM,MAAO,qBACPkM,UAAW,aAEb,CACElM,MAAO,qBACPkM,UAAW,UACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,GAAIuF,GAAQA,EAAKvhB,OAAS,EACxB,OACEgP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAtD/B,SAAqB5N,GACnB4L,EAAA,EAAMb,QAAQ,CACZtB,MAAO,qBACPqC,QAAUC,EAAA9C,EAAA+C,cAAA,WAAKD,EAAA9C,EAAA+C,cAACsG,GAAArJ,EAAD,CAAQhJ,MAAOD,EAAO2mB,WACrCpU,MAAO,MAkD0BqU,CAAY5mB,KAAvC,kBAKR,CACEyJ,MAAO,+CACPkM,UAAW,UAEb,CACElM,MAAO,2BACPkM,UAAW,cAEb,CACElM,MAAO,2BACPkM,UAAW,eAGf,OACE5J,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAYtZ,EACZuZ,QAASX,EACTjF,KAAK,WC+GIqW,eA9Lb,SAAAA,EAAY9c,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAsb,IACjB/c,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAmnB,GAAArY,KAAAjD,KAAMxB,KASR+b,eAVmB,eAAA3N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAUF,SAAA5B,EAAO3J,EAAMC,GAAb,IAAAiT,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACG1E,GAAexF,EAAMC,GADxB,OAEI,KADbiT,EADSlJ,EAAAG,MAEPxH,OACNgI,EAAK2E,SAAS,CACZ5R,KAAMwV,EAAIxV,KACV8b,MAAOhE,SAAStC,EAAIsG,SAGtBva,EAAA,EAAQD,MAAMkU,EAAIlH,KARL,wBAAAhC,EAAAe,SAAApB,MAVE,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAiHnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,UACPkM,UAAW,WAEb,CACElM,MAAO,eACPkM,UAAW,aAEb,CACElM,MAAO,2BACPkM,UAAW,gBAEb,CACElM,MAAO,2BACPkM,UAAW,iBAEb,CACElM,MAAO,uCACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL5C,QAAS,WACP9D,EAAKlF,cAAc5E,KAHvB,kBAUJ,CACEyJ,MAAO,2BACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL5C,QAAS,WACP9D,EAAKgd,aAAa9mB,KAHtB,oBApJa8J,EA+JnBic,SA/JmBrmB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA+JR,SAAAC,IAAA,IAAA1K,EAAAoS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACLpJ,EAAQ,CACVY,QAASiJ,EAAKsD,MAAMA,MAAMnN,OAFnB6K,EAAAzB,KAAA,EAIS1E,GAChBmF,EAAK4F,MAAMvQ,KACX2K,EAAK4F,MAAMuL,SACXhb,GAPO,OAIHoS,EAJGvH,EAAAxB,KASTQ,EAAK2E,SAAS,CAAE5R,KAAMwV,EAAIxV,KAAM8b,MAAOhE,SAAStC,EAAIsG,SAT3C,wBAAA7N,EAAAZ,SAAAS,MA/JQb,EA0KnBlF,cA1KmB,eAAA6G,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA0KH,SAAAgB,EAAM1L,GAAN,IAAAqS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACIzE,GAAc5E,EAAOa,SADzB,OAEK,KADbwR,EADQ1G,EAAArC,MAENxH,OACN1D,EAAA,EAAQ2M,QAAQsH,EAAIlH,KAEpB/M,EAAA,EAAQD,MAAMkU,EAAIlH,KALN,wBAAAQ,EAAAzB,SAAAwB,MA1KG,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EAkLnBgd,aAlLmB,eAAA1N,EAAA1Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAkLJ,SAAA2O,EAAMrZ,GAAN,IAAAqS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,cAAAiQ,EAAAjQ,KAAA,EACKxE,GAAY7E,EAAOa,SADxB,OACPwR,EADOiH,EAAAhQ,KAEbQ,EAAKwT,eAAiBjL,EAAIxV,KACP,IAAfwV,EAAIvQ,QACN1D,EAAA,EAAQD,MAAMkU,EAAIlH,KAEpBrB,EAAK2E,SAAS,CAAEgE,gBAAgB,IANnB,wBAAA6G,EAAApP,SAAAmP,MAlLI,gBAAAhN,GAAA,OAAA+M,EAAA9N,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPxZ,KAAM,EACN8b,SAAU,GACVxI,gBAAgB,GAPD3I,mFAsBjByB,KAAKua,eAAe,EAAG,qCAEhB,IAAAnW,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAoP,GAAA,GAAQC,aAAa,UAAU9N,MAAO,CAAEgF,MAAO,MAC7CxG,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,WAArB,YAFJ,eAKE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAEgF,MAAO,KAChB9E,YAAY,4BACZ8N,IAAK,SAAAC,GACH7L,EAAKvC,MAAQoO,KATnB,eAaEzP,EAAA9C,EAAA+C,cAACsE,GAAD,CACErT,KAAK,UACL2Q,QAASrC,KAAKwa,SACdzY,KAAK,YAIXmO,MACE1P,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAE6T,MAAO,SAChBxT,QAAS,kBAAMvH,OAAOuI,SAAS8M,UAC/BpO,KAAK,aASXvB,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiB,GACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKlB,SAAS,CACZtP,KAAMA,IAERwQ,EAAKmW,eAAe3mB,EAAM8b,IAE5BmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKlB,SAAS,CACZwM,SAAUzK,IAEZb,EAAKmW,eAAezJ,EAAS7L,OAKlCjF,KAAKmE,MAAM+C,gBACV1G,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,yDACNiK,QAASnI,KAAKmE,MAAM+C,eACpBkB,SAAU,WACRhE,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCF,MAAM,MACNqB,OAAQ,MAER7H,EAAA9C,EAAA+C,cAAC+a,GAAD,CACEpB,SAAU,WACRhW,EAAKmW,eAAenW,EAAKD,MAAMvQ,KAAMwQ,EAAKD,MAAMuL,UAChDtL,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCzS,OAAQuL,KAAK+R,eACbvc,OAAQwK,KAAKxK,kBA3GDgN,aCkEX2Y,GArEE,SAAA3c,GACf,IAAMlN,EAAOkN,EAAM/J,QAAQ,GAEvByV,EAAc,GAClB,OAFe1L,EAAMhJ,QAGnB,IAAK,SACH0U,EAAc,CACZ,CACEhM,MAAO,UACPkM,UAAW,WAEb,CACElM,MAAO,2BACPkM,UAAW,IAEb,CACElM,MAAO,2BACPkM,UAAW,IAEb,CACElM,MAAO,2BACPkM,UAAW,KAGf,MACF,IAAK,QACHF,EAAc,CACZ,CACEhM,MAAO,qBACPkM,UAAW,eAEb,CACElM,MAAO,2BACPkM,UAAW,YACXiC,OAAQpD,KAGZ,MACF,IAAK,iBACHiB,EAAc,CACZ,CACEhM,MAAO,qBACPkM,UAAW,eAEb,CACElM,MAAO,eACPkM,UAAW,WAEb,CACElM,MAAO,2BACPkM,UAAW,aACXiC,OAAQpD,KAOhB,OACEzI,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAYtZ,EACZuZ,QAASX,EACTjF,KAAK,WCiWI6V,eA9Yb,SAAAA,EAAYtc,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA8a,IACjBvc,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA2mB,GAAA7X,KAAAjD,KAAMxB,KAUR+b,eAXmB,eAAA3N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAWF,SAAA5B,EAAO3J,EAAMC,GAAb,IAAAiT,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGvE,GAAkB3F,EAAMC,GAD3B,OAEI,KADbiT,EADSlJ,EAAAG,MAEPxH,OACNgI,EAAK2E,SAAS,CACZ5R,KAAMwV,EAAIxV,KACV8b,MAAOtG,EAAIsG,QAGbva,EAAA,EAAQD,MAAMkU,EAAIlH,KARL,wBAAAhC,EAAAe,SAAApB,MAXE,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EA2InB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,KACPkM,UAAW,MAEb,CACElM,MAAO,UACPkM,UAAW,WAEb,CACElM,MAAO,eACPkM,UAAW,YACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,gBAEb,CACElM,MAAO,2BACPkM,UAAW,iBAEb,CACElM,MAAO,2BACPkM,UAAW,kBAEb,CACElM,MAAO,iCACPkM,UAAW,QAEb,CACElM,MAAO,uCACPkM,UAAW,aAEb,CACElM,MAAO,iCACPkM,UAAW,YAEb,CACElM,MAAO,eACPkM,UAAW,SACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,IAAI1G,EACJ,OAAQsC,SAAS2J,IACf,KAAK,EACHjM,EACEtG,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,4BACAzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,6BAGJ,MACF,KAAK,EACH6B,EACEtG,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,4BACAzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,6BAGJ,MACF,KAAK,EACH6B,EAAMtG,EAAA9C,EAAA+C,cAAA,wCACN,MACF,KAAK,EACHqG,EAAMtG,EAAA9C,EAAA+C,cAAA,kCACN,MACF,KAAK,EACHqG,EAAMtG,EAAA9C,EAAA+C,cAAA,wCACN,MACF,KAAK,EACHqG,EAAMtG,EAAA9C,EAAA+C,cAAA,kCAKV,OAAOqG,IAGX,CACE5I,MAAO,2BACPkM,UAAW,aACXiC,OAAQpD,IAEV,CACE/K,MAAO,eACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQvT,KAAK,UAA9B,gBAGA8O,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQvT,KAAK,UAA9B,+BAMN,CACEwM,MAAO,eACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQ5C,QAAS,kBAAM9D,EAAK4U,KAAK1e,KAAlD,gBAGA+L,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQ5C,QAAS,kBAAM9D,EAAKkd,YAAYhnB,EAAQ,YAAjE,mBAMN,CACEyJ,MAAO,2BACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACLvT,KAAK,UACL2Q,QAAS,kBAAM9D,EAAKkd,YAAYhnB,EAAQ,WAH1C,mBAUN,CACEyJ,MAAO,2BACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACLvT,KAAK,UACL2Q,QAAS,kBAAM9D,EAAKkd,YAAYhnB,EAAQ,gBAH1C,4BAOA+L,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACLvT,KAAK,UACL2Q,QAAS,kBAAM9D,EAAKkd,YAAYhnB,EAAQ,oBAH1C,iCArRW8J,EAgSnBic,SAhSmBrmB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAgSR,SAAAC,IAAA,IAAA1K,EAAAoS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACLpJ,EADKP,OAAAC,EAAA,EAAAD,CAAA,CAEPgG,SAAUoE,EAAKrE,YAAc,GAC7BA,WAAYqE,EAAKrE,YAAc,GAC/B3D,OAAQgI,EAAKhI,QAAU,IACtBgI,EAAKzC,MAAQyC,EAAKsD,MAAMA,MAAMnN,OALxB6K,EAAAzB,KAAA,EAOSvE,GAChBgF,EAAK4F,MAAMvQ,KACX2K,EAAK4F,MAAMuL,SACXhb,GAVO,OAOHoS,EAPGvH,EAAAxB,KAYTQ,EAAK2E,SAAS,CAAE5R,KAAMwV,EAAIxV,KAAM8b,MAAOtG,EAAIsG,QAZlC,wBAAA7N,EAAAZ,SAAAS,MAhSQb,EA8SnB4U,KA9SmB,eAAAjT,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA8SZ,SAAAgB,EAAM1L,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACLuC,EAAA,EAAMC,KAAK,CACTpC,MAAO,eACPoR,OAAQ,eACRoM,OAAQ,UACR1U,MAAO,MACPzG,QACEC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,sDACAD,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAEgF,MAAO,OAChB9E,YAAY,uFACZ8N,IAAK,SAAAC,GACH1R,EAAKod,gBAAkB1L,KAG3BzP,EAAA9C,EAAA+C,cAAA,4BACAD,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP9D,EAAKqd,YAAYnnB,EAAQ,KAF7B,iBAQF+L,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,sDACAD,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAEgF,MAAO,OAChB9E,YAAY,mGACZ8N,IAAK,SAAAC,GACH1R,EAAKsd,oBAAsB5L,KAG/BzP,EAAA9C,EAAA+C,cAAA,4BACAD,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP9D,EAAKqd,YAAYnnB,EAAQ,KAF7B,oBArCH,wBAAA2L,EAAAzB,SAAAwB,MA9SY,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EA+VnBqd,YA/VmB,eAAA/N,EAAA1Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA+VL,SAAA2O,EAAOrZ,EAAQ4H,GAAf,IAAA3H,EAAAoS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,cACRpJ,EAAQ,CACVJ,GAAIG,EAAOH,GACX8H,QACkB,IAAhBC,EACIkC,EAAKod,gBAAgB9Z,MAAMnN,MAC3B6J,EAAKsd,oBAAoBha,MAAMnN,MACrC2H,YAAaA,GAEK,IAAhBA,IACF3H,EAAMhD,KAAO,GAVHqc,EAAAjQ,KAAA,EAYMtE,GAAY9E,GAZlB,OAaO,KADboS,EAZMiH,EAAAhQ,MAaJxH,OACN1D,EAAA,EAAQ2M,QAAQsH,EAAIlH,KAEpB/M,EAAA,EAAQD,MAAMkU,EAAIlH,KAhBR,wBAAAmO,EAAApP,SAAAmP,MA/VK,gBAAAhN,EAAA6M,GAAA,OAAAE,EAAA9N,MAAAC,KAAAzO,YAAA,GAAAgN,EAkXnBkd,YAlXmB,eAAAxN,EAAA9Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAkXL,SAAA+O,EAAOzZ,EAAQe,GAAf,IAAAsR,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAwQ,GAAA,cAAAA,EAAAtQ,KAAAsQ,EAAArQ,MAAA,UACG,eAAXtI,EADQ,CAAA2Y,EAAArQ,KAAA,QAEVuC,EAAA,EAAMC,KAAK,CACTpC,MAAK,6BAAA+H,OAAWxR,EAAOH,GAAlB,wCACLiM,QAASC,EAAA9C,EAAA+C,cAAA,WAAMhM,EAAO2kB,aAAa,UACnC9J,OAAO,iBALCnB,EAAArQ,KAAA,gBAAAqQ,EAAAG,GASF9Y,EATE2Y,EAAArQ,KAUH,WAVGqQ,EAAAG,GAAA,EAaH,UAbGH,EAAAG,GAAA,GAgBH,mBAhBGH,EAAAG,GAAA,0BAAAH,EAAArQ,KAAA,EAWMrE,GAAiB,EAAG,IAAKhF,EAAOH,IAXtC,cAWNwS,EAXMqH,EAAApQ,KAAAoQ,EAAA2N,OAAA,2BAAA3N,EAAArQ,KAAA,GAcMpE,GAAY,EAAG,IAAKjF,EAAOH,IAdjC,eAcNwS,EAdMqH,EAAApQ,KAAAoQ,EAAA2N,OAAA,2BAAA3N,EAAArQ,KAAA,GAiBMnE,GAAY,EAAG,IAAKlF,EAAOH,IAjBjC,eAiBNwS,EAjBMqH,EAAApQ,KAAAoQ,EAAA2N,OAAA,2BAAA3N,EAAA2N,OAAA,oBAsBVvd,EAAKwT,eAAiBjL,EAAIxV,KAC1BiN,EAAK/I,OAASA,EACd+I,EAAK2E,SAAS,CAAEgE,gBAAgB,IAxBtB,yBAAAiH,EAAAxP,SAAAuP,MAlXK,gBAAAN,EAAAI,GAAA,OAAAC,EAAAlO,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPxZ,KAAM,EACN8b,SAAU,GACVxI,gBAAgB,GAElB3I,EAAKzC,MAAQ,KATIyC,mFAuBjByB,KAAKua,eAAe,EAAG,qCAEhB,IAAAnW,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsK,GAAD,CACEM,YAAa,SAAA7D,GACXpD,EAAKlK,WAAasN,EAAI,GACtBpD,EAAKjK,SAAWqN,EAAI,MAJ1B,eAQEhH,EAAA9C,EAAA+C,cAAAoP,GAAA,GACEC,aAAa,KACb9N,MAAO,CAAEgF,MAAO,KAChBxB,SAAU,SAAA9Q,GAAK,OAAK0P,EAAKtI,MAAQpH,IAEjC8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,MAArB,MACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,WAArB,WACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,UAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,SAArB,6BAhBJ,eAmBE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAEgF,MAAO,KAChB9E,YAAY,mDACZ8N,IAAK,SAAAC,GACH7L,EAAKvC,MAAQoO,KAvBnB,eA2BEzP,EAAA9C,EAAA+C,cAAAoP,GAAA,GACEC,aAAa,GACb9N,MAAO,CAAEgF,MAAO,KAChBxB,SAAU,SAAA9Q,GAAK,OAAK0P,EAAK7N,OAAS7B,IAElC8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,IAArB,gBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,uBAtCJ,eAyCE8L,EAAA9C,EAAA+C,cAACsE,GAAD,CACErT,KAAK,UACL2Q,QAASrC,KAAKwa,SACdzY,KAAK,YAIXmO,MACE1P,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMvH,OAAOuI,SAAS8M,WACzC3P,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIf8O,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiB,GACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAOtH,SAASpJ,KAAKmE,MAAMiJ,OAC3B5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKlB,SAAS,CACZtP,KAAMA,IAERwQ,EAAKmW,eAAe3mB,EAAM8b,IAE5BmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKlB,SAAS,CACZwM,SAAUzK,IAEZb,EAAKmW,eAAezJ,EAAS7L,KAGjC8L,OAAQ,CAAEC,EAAG,QAEdhR,KAAKmE,MAAM+C,gBACV1G,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MACkB,WAAhB8B,KAAKxK,OACD,eACgB,UAAhBwK,KAAKxK,OACL,2BACA,uCAEN2S,QAASnI,KAAKmE,MAAM+C,eACpBkB,SAAU,WACRhE,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCmB,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACsb,GAAD,CACE3B,SAAU,WACRhW,EAAKmW,eAAenW,EAAKD,MAAMvQ,KAAMwQ,EAAKD,MAAMuL,UAChDtL,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCzS,OAAQuL,KAAK+R,eACbvc,OAAQwK,KAAKxK,kBArIPgN,aC0CL2X,GAFS/c,EAAA,EAAKsF,QAALtF,CA1DP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACF5M,EAAS+J,EAAM/J,OACjBxC,EAASoM,KAAKgG,MAAM5P,EAAOxC,QA0B/B,OACEuO,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,kBACMxO,EAAOqD,QADb,kCAC4BrD,EAAOiL,OADnC,gBAEoB,WAAjBsB,EAAMhJ,OAAsB,eAAO,gBAEtCgL,EAAA9C,EAAA+C,cAAArD,EAAA,GACEkL,SAAU,CAAEC,KAAM,GAClBC,WAAW,OACXjH,SAjCiB,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAA4N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAK3K,GAAZ,IAAAC,EAAAmS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBuB,EADmB,CAAAzB,EAAAE,KAAA,eAElBnJ,EAAM,CACR+lB,WAAYjmB,EAAOH,GACnBqmB,eAAgBlmB,EAAOxC,OACvB2oB,eAAgB,GAEG,WAAjBpc,EAAMhJ,SACRb,EAAI,oBAAsBD,EAAMmmB,OAChClmB,EAAI,gBAAkB,GATFiJ,EAAAE,KAAA,EAWJ3E,GAAkBxE,GAXd,OAYH,KADbmS,EAXgBlJ,EAAAG,MAYdxH,QACN1D,EAAA,EAAQ2M,QAAQ,2BAASsH,EAAIlH,KAC7BpB,EAAM4b,WACN5b,EAAMO,KAAK0O,eAEX5a,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAjBP,wBAAAhC,EAAAe,SAAApB,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,MAiCIiP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAE0H,QAA0B,WAAjBlL,EAAMhJ,OAAsB,QAAU,SAEvD6L,EAAkB,SAAU,CAC3BsI,aAAc1X,EAAO4oB,QADtBxZ,CAEEb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO+H,SAAP,CAAgBC,SAAU,CAAEC,QAAS,EAAGC,QAAS,QAGtDvJ,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU6Q,SAAS,UAAhC,qBC0JKuY,eAtMb,SAAAA,EAAYtc,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA8a,IACjBvc,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA2mB,GAAA7X,KAAAjD,KAAMxB,KASR+b,eAVmB,eAAA3N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAUF,SAAA5B,EAAO3J,EAAMC,GAAb,IAAAiT,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGlE,GAAkBhG,EAAMC,GAD3B,OAEI,KADbiT,EADSlJ,EAAAG,MAEPxH,QACNgI,EAAK2E,SAAS,CACZ5R,KAAMwV,EAAIxV,KACV8b,MAAOtG,EAAIsG,QALA,wBAAAxP,EAAAe,SAAApB,MAVE,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAmHnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,iBACPkM,UAAW,IAEb,CACElM,MAAO,KACPkM,UAAW,IAEb,CACElM,MAAO,iBACPkM,UAAW,IAEb,CACElM,MAAO,2BACPkM,UAAW,IAEb,CACElM,MAAO,iBACPkM,UAAW,IAEb,CACElM,MAAO,2BACPkM,UAAW,IAEb,CACElM,MAAO,2BACPkM,UAAW,IAEb,CACElM,MAAO,2BACPkM,UAAW,IAEb,CACElM,MAAO,2BACPkM,UAAW,IAEb,CACElM,MAAO,2BACPkM,UAAW,IAEb,CACElM,MAAO,2BACPkM,UAAW,IAEb,CACElM,MAAO,2BACPkM,UAAW,IAEb,CACElM,MAAO,eACPkM,UAAW,IAEb,CACElM,MAAO,2BACPkM,UAAW,IAEb,CACElM,MAAO,2BACPkM,UAAW,MA9KI7L,EA2LnBwc,OA3LmB,eAAA9b,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA2LV,SAAAC,EAAM3K,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACPS,EAAK/I,OAAS,SACd+I,EAAKwT,eAAiBtd,EACtB8J,EAAK2E,SAAS,CAAEgE,gBAAgB,IAHzB,wBAAA3H,EAAAZ,SAAAS,MA3LU,gBAAAyB,GAAA,OAAA5B,EAAAc,MAAAC,KAAAzO,YAAA,GAAAgN,EAgMnByc,OAhMmB,eAAA9a,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAgMV,SAAAgB,EAAM1L,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACPS,EAAK/I,OAAS,SACd+I,EAAKwT,eAAiBtd,EACtB8J,EAAK2E,SAAS,CAAEgE,gBAAgB,IAHzB,wBAAA9G,EAAAzB,SAAAwB,MAhMU,gBAAAW,GAAA,OAAAZ,EAAAH,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPxZ,KAAM,EACN8b,SAAU,GACVxI,gBAAgB,GAPD3I,mFAoBjByB,KAAKua,eAAe,EAAG,qCAEhB,IAAAnW,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsK,GAAD,CACEM,YAAa,SAAA7D,GACXpD,EAAKlK,WAAasN,EAAI,GACtBpD,EAAKjK,SAAWqN,EAAI,MAJ1B,eAQEhH,EAAA9C,EAAA+C,cAAAoP,GAAA,GACE3N,YAAY,2BACZF,MAAO,CAAEgF,MAAO,KAChBxB,SAAU,SAAA9Q,GAAK,OAAK0P,EAAK7N,OAAS7B,IAElC8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,6BAfJ,eAkBE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAEgF,MAAO,KAChB9E,YAAY,mDACZ8N,IAAK,SAAAC,GACH7L,EAAKvC,MAAQoO,KAtBnB,eA0BEzP,EAAA9C,EAAA+C,cAACsE,GAAD,CACErT,KAAK,UACL2Q,QAASrC,KAAKwa,SACdzY,KAAK,YAIXmO,MACE1P,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMvH,OAAOuI,SAAS8M,WACzC3P,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIf8O,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiB,GACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKlB,SAAS,CACZtP,KAAMA,IAERwQ,EAAKmW,eAAe3mB,EAAM8b,IAE5BmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKlB,SAAS,CACZwM,SAAUzK,IAEZb,EAAKmW,eAAezJ,EAAS7L,KAGjC8L,OAAQ,CAAEC,EAAG,QAEdhR,KAAKmE,MAAM+C,gBACV1G,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAuB,WAAhB8B,KAAKxK,OAAsB,eAAO,eACzC2S,QAASnI,KAAKmE,MAAM+C,eACpBkB,SAAU,WACRhE,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCmB,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACub,GAAD,CACE5B,SAAU,WACRhW,EAAKmW,eAAenW,EAAKD,MAAMvQ,KAAMwQ,EAAKD,MAAMuL,UAChDtL,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCzS,OAAQuL,KAAK+R,eACbvc,OAAQwK,KAAKxK,kBA7GPgN,aCyGL2X,GAFS/c,EAAA,EAAKsF,QAALtF,CA3GP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACF5M,EAAS+J,EAAM/J,OACfe,EAASgJ,EAAMhJ,OAmBrB,OACEgL,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAArD,EAAA,GACEkL,SAAU,CAAEC,KAAM,GAClBC,WAAW,OACXjH,SAvBiB,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAA4N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAK3K,GAAZ,IAAAoS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBuB,EADmB,CAAAzB,EAAAE,KAAA,cAEP,SAAXtI,IACFd,EAAMJ,GAAKG,EAAOH,IAHEsJ,EAAAE,KAAA,EAKJhE,GAAmBpF,GALf,OAMH,KADboS,EALgBlJ,EAAAG,MAMdxH,QACN1D,EAAA,EAAQ2M,QAAQ,2BAASsH,EAAIlH,KAC7BpB,EAAM4b,WACN5b,EAAMO,KAAK0O,eAEX5a,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAXP,wBAAAhC,EAAAe,SAAApB,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,MAuBIiP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAOsB,MAF9CsL,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,aAAc,CAC/BxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAOO,YAF9CqM,CAICb,EAAA9C,EAAA+C,cAAAoP,GAAA,GAAQ7N,MAAO,CAAEgF,MAAO,QACtBxG,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,qCAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,WAAY,CAC7BxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAOwnB,UAF9C5a,CAICb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAM,KAAb,gBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAM,KAAb,mBAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,wCACdpH,EAAkB,cAAe,CAChCxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAOynB,aAF9C7a,CAICb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAM,KAAb,UACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAM,KAAb,aAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,8CACdpH,EAAkB,gBAAiB,CAClCxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAO0nB,eAF9C9a,CAICb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAM,KAAb,UACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAM,KAAb,aAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,WAAY,CAC7BxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAO2nB,UAF9C/a,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAO6L,MAF9Ce,CAICb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO+H,SAAP,CACE5H,MAAO,CAAEgF,MAAO,OAChB6C,SAAU,CAAEE,QAAS,QAK3BvJ,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU6Q,SAAS,UAAhC,qBC+HK+Y,eAxNb,SAAAA,EAAY9c,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAsb,IACjB/c,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAmnB,GAAArY,KAAAjD,KAAMxB,KASR+b,eAVmB,eAAA3N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAUF,SAAA5B,EAAO3J,EAAMC,GAAb,IAAAiT,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGjE,GAAmBjG,EAAMC,GAD5B,OAEI,KADbiT,EADSlJ,EAAAG,MAEPxH,OACNgI,EAAK2E,SAAS,CACZ5R,KAAMwV,EAAIxV,KACV8b,MAAOhE,SAAStC,EAAIsG,SAGtBva,EAAA,EAAQD,MAAMkU,EAAIlH,KARL,wBAAAhC,EAAAe,SAAApB,MAVE,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAqHnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,KACPkM,UAAW,MAEb,CACElM,MAAO,2BACPkM,UAAW,QAEb,CACElM,MAAO,iBACPkM,UAAW,cAEb,CACElM,MAAO,2BACPkM,UAAW,WACXiC,OAAQ,SAAA0G,GAAI,OAAIvS,EAAA9C,EAAA+C,cAAA,YAAgB,MAATsS,EAAe,eAAO,kBAE/C,CACE7U,MAAO,uCACPkM,UAAW,cACXiC,OAAQ,SAAA0G,GAAI,OAAIvS,EAAA9C,EAAA+C,cAAA,YAAgB,MAATsS,EAAe,SAAM,YAE9C,CACE7U,MAAO,6CACPkM,UAAW,gBACXiC,OAAQ,SAAA0G,GAAI,OAAIvS,EAAA9C,EAAA+C,cAAA,YAAgB,MAATsS,EAAe,SAAM,YAE9C,CACE7U,MAAO,2BACPkM,UAAW,OACXpD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,YAEb,CACElM,MAAO,2BACPkM,UAAW,aACXiC,OAAQpD,IAEV,CACE/K,MAAO,eACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL5C,QAAS,WACP9D,EAAK4U,KAAK1e,KAHd,gBAQA+L,EAAA9C,EAAA+C,cAAA8O,GAAA,GACErR,MAAM,wCACNsR,UAAW,kBAAMjR,EAAKwY,OAAOtiB,IAC7B6a,OAAO,eACPG,WAAW,gBAEXjP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYrT,KAAK,SAASuT,KAAK,SAA/B,sBAlLS1G,EA0LnBic,SA1LmBrmB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA0LR,SAAAC,IAAA,IAAA1K,EAAAoS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACLpJ,EAAQ,CACVY,QAASiJ,EAAKsD,MAAMA,MAAMnN,OAFnB6K,EAAAzB,KAAA,EAISjE,GAChB0E,EAAK4F,MAAMvQ,KACX2K,EAAK4F,MAAMuL,SACXhb,GAPO,OAIHoS,EAJGvH,EAAAxB,KASTQ,EAAK2E,SAAS,CAAE5R,KAAMwV,EAAIxV,KAAM8b,MAAOhE,SAAStC,EAAIsG,SAT3C,wBAAA7N,EAAAZ,SAAAS,MA1LQb,EAqMnBqH,IArMmB,eAAA1F,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAqMb,SAAAgB,EAAM1L,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACJS,EAAK/I,OAAS,MACd+I,EAAK2E,SAAS,CAAEgE,gBAAgB,IAF5B,wBAAA9G,EAAAzB,SAAAwB,MArMa,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EAyMnB4U,KAzMmB,eAAAtF,EAAA1Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAyMZ,SAAA2O,EAAMrZ,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,OACLS,EAAK/I,OAAS,OACd+I,EAAKwT,eAAiBtd,EACtB8J,EAAK2E,SAAS,CAAEgE,gBAAgB,IAH3B,wBAAA6G,EAAApP,SAAAmP,MAzMY,gBAAAhN,GAAA,OAAA+M,EAAA9N,MAAAC,KAAAzO,YAAA,GAAAgN,EA8MnBwY,OA9MmB,eAAA9I,EAAA9Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA8MV,SAAA+O,EAAMzZ,GAAN,IAAAqS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAwQ,GAAA,cAAAA,EAAAtQ,KAAAsQ,EAAArQ,MAAA,cAAAqQ,EAAArQ,KAAA,EACW/D,GAAkBtF,EAAOH,IADpC,OAEY,KADbwS,EADCqH,EAAApQ,MAECxH,OACN1D,EAAA,EAAQ2M,QAAQsH,EAAIlH,KAEpB/M,EAAA,EAAQD,MAAMkU,EAAIlH,KAEpBrB,EAAKgc,eAAe,EAAG,IAPhB,wBAAApM,EAAAxP,SAAAuP,MA9MU,gBAAAP,GAAA,OAAAM,EAAAlO,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPxZ,KAAM,EACN8b,SAAU,GACVxI,gBAAgB,GAPD3I,mFAsBjByB,KAAKua,eAAe,EAAG,qCAEhB,IAAAnW,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsK,GAAD,CACEM,YAAa,SAAA7D,GACXpD,EAAKlB,SAAS,CACZhJ,WAAYsN,EAAI,GAChBrN,SAAUqN,EAAI,QALtB,eAUEhH,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAEgF,MAAO,KAChB9E,YAAY,mCACZ8N,IAAK,SAAAC,GACH7L,EAAKvC,MAAQoO,KAdnB,eAkBEzP,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAASrC,KAAKwa,SACdzY,KAAK,SACLkD,KAAK,YArBT,eAwBEzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK4F,IAAKX,KAAK,WAApC,iBAKJiL,MACE1P,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAE6T,MAAO,SAChBxT,QAAS,kBAAMvH,OAAOuI,SAAS8M,UAC/BpO,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiB,GACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKlB,SAAS,CACZtP,KAAMA,IAERwQ,EAAKmW,eAAe3mB,EAAM8b,IAE5BmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKlB,SAAS,CACZwM,SAAUzK,IAEZb,EAAKmW,eAAezJ,EAAS7L,OAIlCjF,KAAKmE,MAAM+C,gBACV1G,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAuB,QAAhB8B,KAAKxK,OAAmB,eAAO,eACtC2S,QAASnI,KAAKmE,MAAM+C,eACpBkB,SAAU,WACRhE,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCmB,OAAQ,MAER7H,EAAA9C,EAAA+C,cAAC4b,GAAD,CACEjC,SAAU,WACRhW,EAAKmW,eAAenW,EAAKD,MAAMvQ,KAAMwQ,EAAKD,MAAMuL,UAChDtL,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCzS,OAAQuL,KAAK+R,eACbvc,OAAQwK,KAAKxK,kBA/GDgN,aCqGX2X,GAFS/c,EAAA,EAAKsF,QAALtF,CA3GP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACF5M,EAAS+J,EAAM/J,OACfe,EAASgJ,EAAMhJ,OAmBrB,OACEgL,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAArD,EAAA,GACEkL,SAAU,CAAEC,KAAM,GAClBC,WAAW,OACXjH,SAvBiB,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAA4N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAK3K,GAAZ,IAAAoS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBuB,EADmB,CAAAzB,EAAAE,KAAA,cAEP,SAAXtI,IACFd,EAAMJ,GAAKG,EAAOH,IAHEsJ,EAAAE,KAAA,EAKJhE,GAAmBpF,GALf,OAMH,KADboS,EALgBlJ,EAAAG,MAMdxH,QACN1D,EAAA,EAAQ2M,QAAQ,2BAASsH,EAAIlH,KAC7BpB,EAAM4b,WACN5b,EAAMO,KAAK0O,eAEX5a,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAXP,wBAAAhC,EAAAe,SAAApB,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,MAuBIiP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAOsB,MAF9CsL,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,aAAc,CAC/BxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAOO,YAF9CqM,CAICb,EAAA9C,EAAA+C,cAAAoP,GAAA,GAAQ7N,MAAO,CAAEgF,MAAO,QACtBxG,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,qCAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,WAAY,CAC7BxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAOwnB,UAF9C5a,CAICb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAM,KAAb,gBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAM,KAAb,mBAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,wCACdpH,EAAkB,cAAe,CAChCxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAOynB,aAF9C7a,CAICb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAM,KAAb,UACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAM,KAAb,aAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,8CACdpH,EAAkB,gBAAiB,CAClCxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAO0nB,eAF9C9a,CAICb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAM,KAAb,UACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAM,KAAb,aAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,WAAY,CAC7BxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAO2nB,UAF9C/a,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CAAC,CAAE2J,UAAU,IACpBmI,aAAyB,QAAXnU,EAAmB,GAAKf,EAAO6L,MAF9Ce,CAICb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO+H,SAAP,CACE5H,MAAO,CAAEgF,MAAO,OAChB6C,SAAU,CAAEE,QAAS,QAK3BvJ,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU6Q,SAAS,UAAhC,qBC0HK+Y,eAnNb,SAAAA,EAAY9c,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAsb,IACjB/c,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAmnB,GAAArY,KAAAjD,KAAMxB,KASR+b,eAVmB,eAAA3N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAUF,SAAA5B,EAAO3J,EAAMC,GAAb,IAAAiT,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACG9D,GAAgBpG,EAAMC,GADzB,OAEI,KADbiT,EADSlJ,EAAAG,MAEPxH,OACNgI,EAAK2E,SAAS,CACZ5R,KAAMwV,EAAIxV,KACV8b,MAAOhE,SAAStC,EAAIsG,SAGtBva,EAAA,EAAQD,MAAMkU,EAAIlH,KARL,wBAAAhC,EAAAe,SAAApB,MAVE,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAqHnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,KACPkM,UAAW,MAEb,CACElM,MAAO,uBACPkM,UAAW,IAEb,CACElM,MAAO,iCACPkM,UAAW,IAEb,CACElM,MAAO,iBACPkM,UAAW,GACXiC,OAAQ,SAAA0G,GAAI,OAAIvS,EAAA9C,EAAA+C,cAAA,YAAgB,MAATsS,EAAe,eAAO,kBAE/C,CACE7U,MAAO,OACPkM,UAAW,GACXiC,OAAQ,SAAA0G,GAAI,OAAIvS,EAAA9C,EAAA+C,cAAA,YAAgB,MAATsS,EAAe,SAAM,YAE9C,CACE7U,MAAO,2BACPkM,UAAW,GACXiC,OAAQ,SAAA0G,GAAI,OAAIvS,EAAA9C,EAAA+C,cAAA,YAAgB,MAATsS,EAAe,SAAM,YAE9C,CACE7U,MAAO,2BACPkM,UAAW,GACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,YAEb,CACElM,MAAO,eACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,GAAP,OACN+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL5C,QAAS,WACP9D,EAAK4U,KAAK1e,KAHd,gBAQA+L,EAAA9C,EAAA+C,cAAA8O,GAAA,GACErR,MAAM,wCACNsR,UAAW,kBAAMjR,EAAKwY,OAAOtiB,IAC7B6a,OAAO,eACPG,WAAW,gBAEXjP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYrT,KAAK,SAASuT,KAAK,SAA/B,sBA7KS1G,EAqLnBic,SArLmBrmB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAqLR,SAAAC,IAAA,IAAA1K,EAAAoS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACLpJ,EAAQ,CACVY,QAASiJ,EAAKsD,MAAMA,MAAMnN,OAFnB6K,EAAAzB,KAAA,EAIS9D,GAChBuE,EAAK4F,MAAMvQ,KACX2K,EAAK4F,MAAMuL,SACXhb,GAPO,OAIHoS,EAJGvH,EAAAxB,KASTQ,EAAK2E,SAAS,CAAE5R,KAAMwV,EAAIxV,KAAM8b,MAAOhE,SAAStC,EAAIsG,SAT3C,wBAAA7N,EAAAZ,SAAAS,MArLQb,EAgMnBqH,IAhMmB,eAAA1F,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAgMb,SAAAgB,EAAM1L,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACJS,EAAK/I,OAAS,MACd+I,EAAK2E,SAAS,CAAEgE,gBAAgB,IAF5B,wBAAA9G,EAAAzB,SAAAwB,MAhMa,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EAoMnB4U,KApMmB,eAAAtF,EAAA1Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAoMZ,SAAA2O,EAAMrZ,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,OACLS,EAAK/I,OAAS,OACd+I,EAAKwT,eAAiBtd,EACtB8J,EAAK2E,SAAS,CAAEgE,gBAAgB,IAH3B,wBAAA6G,EAAApP,SAAAmP,MApMY,gBAAAhN,GAAA,OAAA+M,EAAA9N,MAAAC,KAAAzO,YAAA,GAAAgN,EAyMnBwY,OAzMmB,eAAA9I,EAAA9Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAyMV,SAAA+O,EAAMzZ,GAAN,IAAAqS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAwQ,GAAA,cAAAA,EAAAtQ,KAAAsQ,EAAArQ,MAAA,cAAAqQ,EAAArQ,KAAA,EACW/D,GAAkBtF,EAAOH,IADpC,OAEY,KADbwS,EADCqH,EAAApQ,MAECxH,OACN1D,EAAA,EAAQ2M,QAAQsH,EAAIlH,KAEpB/M,EAAA,EAAQD,MAAMkU,EAAIlH,KAEpBrB,EAAKgc,eAAe,EAAG,IAPhB,wBAAApM,EAAAxP,SAAAuP,MAzMU,gBAAAP,GAAA,OAAAM,EAAAlO,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPxZ,KAAM,EACN8b,SAAU,GACVxI,gBAAgB,GAPD3I,mFAsBjByB,KAAKua,eAAe,EAAG,qCAEhB,IAAAnW,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsK,GAAD,CACEM,YAAa,SAAA7D,GACXpD,EAAKlB,SAAS,CACZhJ,WAAYsN,EAAI,GAChBrN,SAAUqN,EAAI,QALtB,eAUEhH,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAEgF,MAAO,KAChB9E,YAAY,mCACZ8N,IAAK,SAAAC,GACH7L,EAAKvC,MAAQoO,KAdnB,eAkBEzP,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAASrC,KAAKwa,SACdzY,KAAK,SACLkD,KAAK,YArBT,eAwBEzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK4F,IAAKX,KAAK,WAApC,iBAKJiL,MACE1P,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAE6T,MAAO,SAChBxT,QAAS,kBAAMvH,OAAOuI,SAAS8M,UAC/BpO,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiB,GACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKlB,SAAS,CACZtP,KAAMA,IAERwQ,EAAKmW,eAAe3mB,EAAM8b,IAE5BmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKlB,SAAS,CACZwM,SAAUzK,IAEZb,EAAKmW,eAAezJ,EAAS7L,OAIlCjF,KAAKmE,MAAM+C,gBACV1G,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAuB,QAAhB8B,KAAKxK,OAAmB,eAAO,eACtC2S,QAASnI,KAAKmE,MAAM+C,eACpBkB,SAAU,WACRhE,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCmB,OAAQ,MAER7H,EAAA9C,EAAA+C,cAAC6b,GAAD,CACElC,SAAU,WACRhW,EAAKmW,eAAenW,EAAKD,MAAMvQ,KAAMwQ,EAAKD,MAAMuL,UAChDtL,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCzS,OAAQuL,KAAK+R,eACbvc,OAAQwK,KAAKxK,kBA/GDgN,aCmFXyH,eAzFb,SAAAA,EAAYzL,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAiK,IACjB1L,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA8V,GAAAhH,KAAAjD,KAAMxB,KAiBR0L,YAAc,WACZ,MAA0B,UAAtB3L,EAAKC,MAAMhJ,OACN,CACL,CACE0I,MAAO,qBACPkM,UAAW,eAEb,CACElM,MAAO,2BACPkM,UAAW,YACXiC,OAAQpD,KAGmB,SAAtB1K,EAAKC,MAAMhJ,OACb,CACL,CACE0I,MAAO,UACPkM,UAAW,MAEb,CACElM,MAAO,2BACPkM,UAAW,oBAGb,CACElM,MAAO,mCACPkM,UAAW,iBAEb,CACElM,MAAO,2BACPkM,UAAW,YAEXC,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE6M,cAAgBD,EAAEC,gBAExC,CACErM,MAAO,eACPkM,UAAW,OAEb,CACElM,MAAO,mCACPkM,UAAW,uBAEb,CACElM,MAAO,eACPkM,UAAW,cAEb,CACElM,MAAO,2BACPkM,UAAW,gBAIR,CACL,CACElM,MAAO,qBACPkM,UAAW,eAEb,CACElM,MAAO,eACPkM,UAAW,WAEb,CACElM,MAAO,2BACPkM,UAAW,aACXiC,OAAQpD,MAhFd1K,EAAK4F,MAAQ,GAFI5F,wEAIV,IACCjN,EAAS0O,KAAKxB,MAAMya,aAApB3nB,KAGR,OAFAkG,QAAQC,IAAInG,GAGVkP,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAO+Y,GAAR,SAAAvH,OAAmBuH,IAC3B5C,WAAYtZ,EACZuZ,QAAS7K,KAAKkK,cACdjF,KAAK,iBAfYzC,aCuCV2Y,eAvCb,SAAAA,EAAY3c,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAmb,IACjB5c,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAgnB,GAAAlY,KAAAjD,KAAMxB,KA4BR+d,YA7BmB,eAAA3P,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA6BL,SAAA5B,EAAM9I,GAAN,IAAAqS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMjB,GAChBpI,EAAO6F,SACP7F,EAAOa,QACPiJ,EAAK4F,MAAMrH,eAJD,OACNgK,EADMlJ,EAAAG,KAMZlL,EAAA,EAAQyN,KAAKwG,EAAIlH,KANL,wBAAAhC,EAAAe,SAAApB,MA7BK,gBAAAsC,GAAA,OAAA+M,EAAA7M,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACXrH,cAAe,IAHAyB,wEAMV,IAAA6F,EAAApE,KACDvL,EAASuL,KAAKxB,MAAM/J,OAC1B,OACE+L,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,6BAAWhM,EAAO6F,UAClBkG,EAAA9C,EAAA+C,cAAA,6BAAWhM,EAAOa,SAClBkL,EAAA9C,EAAA+C,cAAA,2BAAShM,EAAOyI,QAChBsD,EAAA9C,EAAA+C,cAAA,uCAEED,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,CACEjN,SAAU,SAAA4L,GACRhN,EAAKlB,SAAS,CAAEpG,cAAesU,EAAErF,OAAOrX,SAE1CA,MAAOsL,KAAKmE,MAAMrH,eAElB0D,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,sBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,uBAEF8L,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQD,QAAS,kBAAM+B,EAAKmY,YAAY9nB,KAAxC,yBAzBa+N,aCoXR0W,eAvWb,SAAAA,EAAY1a,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAkZ,IACjB3a,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA+kB,GAAAjW,KAAAjD,KAAMxB,KAmBRmO,SApBmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAoBR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYlC,GAAShI,EAAMC,EAAO,EAAG0K,EAAK4F,OAD1C,OACH3G,EADGI,EAAAG,KAETQ,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAOhE,SAAS5L,EAAO4P,SAJhB,wBAAAxP,EAAAe,SAAApB,MApBQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EA8BnB6U,aA9BmBjf,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA8BJ,SAAAC,IAAA,IAAA5B,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACQlC,GAAS,EAAG,GAAI,EAAG2C,EAAK4F,OADhC,OACP3G,EADO+B,EAAAxB,KAEbQ,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAOhE,SAAS5L,EAAO4P,SAJZ,wBAAA7N,EAAAZ,SAAAS,MA9BIb,EAqCnB2W,SAAW,WACThZ,GAAqBqC,EAAK4F,QAtCT5F,EA6KnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,iBACPkM,UAAW,WACXpD,MAAO,KAET,CACE9I,MAAO,UACPkM,UAAW,UACXpD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,YACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,SACXpD,MAAO,IACPqD,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAER,OAASoN,EAAEpN,SAEjC,CACEgB,MAAO,2BACPkM,UAAW,eACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,OACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,iBACXpD,MAAO,IACPqD,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE2X,eAAiB/K,EAAE+K,iBAEzC,CACEnX,MAAO,2BACPkM,UAAW,aACXpD,MAAO,KAET,CACE9I,MAAO,uBACPkM,UAAW,aACXpD,MAAO,KAET,CACE9I,MAAO,iCACPkM,UAAW,eACXpD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,SACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,IAAI2H,EACJ,OAAQpC,GACN,IAAK,IACHoC,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,QACEA,EAAO,GAGX,OAAO3U,EAAA9C,EAAA+C,cAAA,YAAO0U,KAGlB,CACEjX,MAAO,2BACPkM,UAAW,eACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,gBACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,aACXpD,MAAO,IACPqF,OAAQpD,GACRoB,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE4X,WAAahL,EAAEgL,aAErC,CACEpX,MAAO,2BACPkM,UAAW,aACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,MAAa,MAATuF,GAAiBA,EAEP9J,GAAY8J,GADjB,IAGX1I,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE6X,WAAajL,EAAEiL,aAErC,CACErX,MAAO,eACPkM,UAAW,GACXpD,MAAO,IACPqF,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4U,KAAK1e,KAArC,mBAIN,CACEyJ,MAAO,2BACPkM,UAAW,GACXpD,MAAO,IACPqF,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4a,UAAU1kB,EAAQ,WAAlD,mBAMN,CACEyJ,MAAO,2BACPkM,UAAW,GACXiC,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA8X,GAAA,GACEhY,QAAS9L,EAAO2kB,YAChBlb,MAAOzJ,EAAOa,QAAU,2BACxBuS,QAAQ,SAERrH,EAAA9C,EAAA+C,cAACsE,GAAD,kCAEFvE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4a,UAAU1kB,EAAQ,oBAAlD,iCA7TW8J,EAoUnB8a,mBAAqB,SAACvgB,EAAMsS,GAC1B,IAAI4B,EAAY5B,EAAW,GAAK,YAC5B6B,EAAU7B,EAAW,GAAK,YAC9B7M,EAAK2E,SAAS,CACZhJ,WAAY8S,EACZ7S,SAAU8S,KAzUK1O,EA4UnB4a,UA5UmB,eAAAjZ,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA4UP,SAAAgB,EAAO1L,EAAQe,GAAf,IAAAsR,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,UACVS,EAAK/I,OAASA,EACd+I,EAAK0a,aAAe,CAClB3nB,KAAM,GACN8b,MAAO,EACP9Y,GAAIG,EAAOa,SAGA,SAAXE,EARQ,CAAA4K,EAAAtC,KAAA,eAAAsC,EAAAtC,KAAA,EASE1I,EAAW,EAAG,GAAIX,EAAOa,SAT3B,OAAA8K,EAAAkO,GAAAlO,EAAArC,KAAAqC,EAAAtC,KAAA,mBAUO,UAAXtI,EAVI,CAAA4K,EAAAtC,KAAA,gBAAAsC,EAAAtC,KAAA,GAWE9B,GAAW,EAAG,GAAIvH,EAAO6F,UAX3B,QAAA8F,EAAAkZ,GAAAlZ,EAAArC,KAAAqC,EAAAtC,KAAA,wBAAAsC,EAAAtC,KAAA,GAYE7B,GAAW,EAAG,GAAIxH,EAAO6F,UAZ3B,QAAA8F,EAAAkZ,GAAAlZ,EAAArC,KAAA,QAAAqC,EAAAkO,GAAAlO,EAAAkZ,GAAA,QAaS,KANbxS,EAPI1G,EAAAkO,IAaF/X,SACNgI,EAAK0a,aAAa3nB,KAAOwV,EAAIxV,KAC7BiN,EAAK0a,aAAa7L,MAAQtG,EAAIsG,OAEhC7O,EAAK2E,SAAS,CAAEqW,cAAc,IAjBpB,yBAAAnZ,EAAAzB,SAAAwB,MA5UO,gBAAAU,EAAAC,GAAA,OAAAZ,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EA+VnB4U,KAAO,SAAA1e,GACL+C,QAAQC,IAAI,KAEZ8G,EAAKie,WAAa/nB,EAClB8J,EAAK2E,SAAS,CAAEgE,gBAAgB,KAjWhC3I,EAAKkV,aAAelV,EAAKkV,aAAaC,KAAlBvf,OAAAwS,GAAA,EAAAxS,CAAAoK,IACpBA,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACVxV,WAAY,GACZC,SAAU,GACVC,aAAc,GACd1I,KAAM,EACNoK,MAAO,GACPlB,WAAY,GACZtF,QAAS,GACTgF,SAAU,GACVqV,gBAAgB,EAChBzI,gBAAgB,GAElB3I,EAAK2L,cAlBY3L,4EA2BNM,GACXmB,KAAKkD,SAAS,CAAEtI,WAAYiE,EAAMkN,OAAOrX,oDAazCsL,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAoP,GAAA,GACE3N,YAAY,qBACZF,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAI0P,EAAKlB,SAAS,CAAEpH,MAAOpH,MAE1C8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,YAArB,kBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,WAArB,WACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,cAArB,wBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,eAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,gBAArB,6BAVJ,YAaE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLwQ,YAAY,uCACZF,MAAO,CAAEgF,MAAO,KAChBtS,MAAOsL,KAAKmE,MAAMvJ,WAClB4K,SAAUxF,KAAKyT,eAlBnB,YAqBEjT,EAAA9C,EAAA+C,cAACsK,GAAD,CACEM,YAAa,SAAA7D,GACXpD,EAAKlB,SAAS,CACZhJ,WAAYsN,EAAI,GAChBrN,SAAUqN,EAAI,QAzBtB,YA8BEhH,EAAA9C,EAAA+C,cAAAoP,GAAA,GACEC,aAAa,GACb9N,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAI0P,EAAKlB,SAAS,CAAE9I,aAAc1F,MAEjD8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,IAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,uBAxCJ,YA2CE8L,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKoT,aAAcnO,KAAK,WAC3CzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIjBwe,MACE1P,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAE6T,MAAO,SAChBxT,QAAS,WACPvH,OAAOuI,SAAS8M,UAElBpO,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRzF,KAAK,QACL0F,OAAO,KACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdmG,WAAY,CACVC,gBAAiBtQ,KAAKmE,MAAMuL,SAC5Ba,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACX9b,GAAQ8b,IACVtL,EAAKlB,SAAS,CACZwM,SAAUA,IAEZtL,EAAKuI,SAAS/Y,EAAM8b,KAGxBmB,iBAAkB,SAACC,EAAS7L,GACtBA,GACFb,EAAKuI,SAASmE,EAAS7L,KAI7B8L,OAAQ,CAAEC,EAAG,KAAMC,EAAG,UAExBzQ,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MACkB,UAAhB8B,KAAKxK,OACD,2BACgB,SAAhBwK,KAAKxK,OACL,2BACA,2BAEN2S,QAASnI,KAAKmE,MAAMoV,aACpBnR,SAAU,WACRhE,EAAKlB,SAAS,CAAEqW,cAAc,KAEhClR,OAAQ,KACRrB,MAAM,OAENxG,EAAA9C,EAAA+C,cAACgc,GAAD,CACExD,aAAcjZ,KAAKiZ,aACnBzjB,OAAQwK,KAAKxK,UAGhBwK,KAAKmE,MAAM+C,gBACV1G,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACNiK,QAASnI,KAAKmE,MAAM+C,eACpBkB,SAAU,WACRhE,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCmB,OAAQ,KACRrB,MAAM,OAENxG,EAAA9C,EAAA+C,cAACic,GAAD,CAAUjoB,OAAQuL,KAAKwc,sBAxKPha,aCHtBma,eACJ,SAAAA,EAAYne,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA2c,IACjBpe,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAwoB,GAAA1Z,KAAAjD,KAAMxB,KAKRmO,SANmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAMR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAAiT,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSxB,KADT,OAEU,KADbwK,EADGlJ,EAAAG,MAEDxH,QACNgI,EAAKqe,YAAc9V,EAAIxV,KACvBiN,EAAK2E,SAAS,CAAE5R,KAAM+M,KAAKgG,MAAMyC,EAAIxV,KAAK0oB,aAE1CnnB,EAAA,EAAQD,MAAMkU,EAAIlH,KANX,wBAAAhC,EAAAe,SAAApB,MANQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAwGnBK,aAAe,SAAAwS,GACbA,EAAEtS,kBAvGFP,EAAK4F,MAAQ,CACX7S,KAAM,IAHSiN,mFAgBjByB,KAAK2M,4CAEE,IACCtL,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBACKrB,KAAKmE,MAAM7S,KACxB,OACEkP,EAAA9C,EAAA+C,cAAA2P,GAAA,GACEF,MACE1P,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEN,MAAO,CAAE6T,MAAO,SAChB9T,KAAK,SACLM,QAAS,WACPvH,OAAOuI,SAAS8M,cAMxB3P,EAAA9C,EAAA+C,cAAArD,EAAA,GACEkL,SAAU,CAAEC,KAAM,GAClBwN,WAAY,CAAExN,KAAM,IACpBhH,SAAUvB,KAAKpB,cAEf4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,aAAc,CAC/BsI,aAAc,GADftI,CAGCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,4BACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,qCAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,WAAY,CAC7BsI,aAAc,GADftI,CAGCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,gBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,mBAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEsL,MAAM,2BACNzG,MAAO,CAAE0H,QAAS,eAAgB1C,MAAO,OACzCsB,SAAU,CAAEC,KAAM,EAAGsO,OAAQ,GAC7Bd,WAAY,CAAExN,KAAM,IAEnBlH,EAAkB,SAAU,CAC3BxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAc,IAPftI,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,MAAO9B,YAAa,MAC9C1E,EAAA9C,EAAA+C,cAAA,kBAEFD,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAE0H,QAAS,eAAgB1C,MAAO,OACzC+O,WAAY,CAAExN,KAAM,IAEnBlH,EAAkB,mCAAoC,CACrDxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAc,IAPftI,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAW4Y,WAAY,CAAEc,OAAQ,IAC/BrW,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE5Q,KAAK,UACL6Q,SAAS,SACTjB,UAAU,qBAHZ,0BA7FUkB,aAwIhBqa,GAAiBzf,EAAA,EAAKsF,QAALtF,CAAcuf,IAEtB7X,eAAW+X,IC0DX3D,eArMb,SAAAA,EAAY1a,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAkZ,IACjB3a,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA+kB,GAAAjW,KAAAjD,KAAMxB,KAQRmO,SATmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KASR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAA2J,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYd,GAAUpJ,EAAMC,EAAO,GADnC,OACH2J,EADGI,EAAAG,KAETQ,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KAAKwb,UAClBM,MAAOhE,SAAS5L,EAAO4P,SAJhB,wBAAAxP,EAAAe,SAAApB,MATQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAgBnB6U,aAhBmBjf,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAgBJ,SAAAC,IAAA,IAAA1K,EAAA8I,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACTpJ,EADSP,OAAAC,EAAA,EAAAD,CAAA,GAEVoK,EAAKzC,MAAQyC,EAAKsD,MAAMA,MAAMnN,OAFpB6K,EAAAzB,KAAA,EAIQd,GAAU,EAAG,GAAI,EAAGtI,GAJ5B,OAIP8I,EAJO+B,EAAAxB,KAKbQ,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KAAKwb,UAClBM,MAAOhE,SAAS5L,EAAO4P,SAPZ,wBAAA7N,EAAAZ,SAAAS,MAhBIb,EA8EnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,UACPkM,UAAW,MAEb,CACElM,MAAO,eACPkM,UAAW,aAEb,CACElM,MAAO,2BACPkM,UAAW,aAEb,CACElM,MAAO,2BACPkM,UAAW,GACXiC,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKue,MAAMroB,KAAtC,qBAhGW8J,EAqGnBwe,aAAe,WACb,MAAO,CACLvX,SAAU,SAACwX,EAAiBC,GAC1B1e,EAAK0e,aAAeA,GAEtBC,iBAAkB,SAAAzoB,GAAM,MAAK,MA1Gd8J,EAgHnBue,MAhHmB,eAAA5c,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAgHX,SAAAgB,EAAM1L,GAAN,IAAAqS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACY3I,EAAYV,EAAOH,IAD/B,OACAwS,EADA1G,EAAArC,KAENlL,EAAA,EAAQyN,KAAKwG,EAAIxV,KAAK,GAAG4a,WAFnB,wBAAA9L,EAAAzB,SAAAwB,MAhHW,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EAoHnB/J,WApHmBL,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAoHN,SAAA2O,IAAA,OAAArQ,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,OACNS,EAAK0e,cAAiB1e,EAAK0e,aAAa,IAG3CzlB,QAAQC,IAAI8G,EAAK0e,cACjB5c,EAAA,EAAMoG,QAAQ,CACZvI,MAAO,uCACPoR,OAAQ,eACRoM,OAAQ,UACR1U,MAAO,MACPN,KAAM,WAAM,IAAAkJ,EACiBrR,EAAK4F,MAA1BgZ,EADIvN,EACJuN,QAASC,EADLxN,EACKwN,QACXD,GAAWC,EACTD,EAAUC,EACZvqB,EAAA,EAAQD,MAAM,sEAEd2L,EAAK8e,SAASF,EAASC,GAGzBvqB,EAAA,EAAQD,MAAM,yCAGlB2N,QACEC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,6CACAD,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLsQ,MAAO,CAAEgF,MAAO,OAChB9E,YAAY,2BAKZob,OAAQ,SAAAlM,GAAC,OAAI7S,EAAK2E,SAAS,CAAEia,QAAS/L,EAAErF,OAAOrX,WAVnD,KAcE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLsQ,MAAO,CAAEgF,MAAO,OAChB9E,YAAY,2BACZob,OAAQ,SAAAlM,GAAC,OAAI7S,EAAK2E,SAAS,CAAEka,QAAShM,EAAErF,OAAOrX,eAvCvD7B,EAAA,EAAQD,MAAM,yEAFL,wBAAAmb,EAAApP,SAAAmP,MApHMvP,EAqKnB8e,SArKmB,eAAApP,EAAA9Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAqKR,SAAA+O,EAAOiP,EAASC,GAAhB,IAAAlgB,EAAAoJ,EAAAhR,EAAAwR,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAwQ,GAAA,cAAAA,EAAAtQ,KAAAsQ,EAAArQ,MAAA,OACLZ,EAASqB,EAAKgf,QAAQJ,EAASC,GAC1B9W,EAAI,EAFJ,YAEOA,EAAI/H,EAAK0e,aAAazrB,QAF7B,CAAA2c,EAAArQ,KAAA,gBAGHxI,EAAUiJ,EAAK0e,aAAa3W,GAAGhS,GAH5B6Z,EAAArQ,KAAA,EAIWb,GAA0B3H,EAAS4H,GAJ9C,OAID4J,EAJCqH,EAAApQ,KAKPlL,EAAA,EAAQyN,KAAKwG,EAAIlH,KALV,OAEqC0G,IAFrC6H,EAAArQ,KAAA,gBAOTS,EAAKoO,SAAS,EAAG,IAPR,yBAAAwB,EAAAxP,SAAAuP,MArKQ,gBAAApN,EAAA6M,GAAA,OAAAM,EAAAlO,MAAAC,KAAAzO,YAAA,GAAAgN,EA8KnBgf,QAAU,SAAC7b,EAAKC,GACdD,EAAM0H,SAAS1H,GAEf,IAAI8b,GADJ7b,EAAMyH,SAASzH,IACGD,EACd+b,EAAOC,KAAKC,SAEhB,OADUjc,EAAMgc,KAAKE,MAAMH,EAAOD,IAnLjBjf,EAsLnBsf,eAtLmB1pB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAsLF,SAAAwP,IAAA,IAAArI,EAAAhS,EAAAC,EAAAuS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAkR,GAAA,cAAAA,EAAAhR,KAAAgR,EAAA/Q,MAAA,WACXS,EAAK0e,eAAgB1e,EAAK0e,aAAa,GAD5B,CAAApO,EAAA/Q,KAAA,SAEJwI,EAAI,EAFA,YAEGA,EAAI/H,EAAK0e,aAAazrB,QAFzB,CAAAqd,EAAA/Q,KAAA,gBAGLxJ,EAAOiK,EAAK0e,aAAa3W,GAAzBhS,GACFC,EAAY,MAAQgK,EAAKgf,QAAQ,IAAQ,QAJlC1O,EAAA/Q,KAAA,EAKOzJ,EAAoBC,EAAIC,GAL/B,OAKLuS,EALK+H,EAAA9Q,KAMXlL,EAAA,EAAQyN,KAAKwG,EAAIlH,KANN,OAEiC0G,IAFjCuI,EAAA/Q,KAAA,gBAQbS,EAAKoO,SAAS,EAAG,IARJkC,EAAA/Q,KAAA,iBAUbjL,EAAA,EAAQD,MAAM,yEAVD,yBAAAic,EAAAlQ,SAAAgQ,MApLfpQ,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACP+P,QAAS,GACTC,QAAS,IANM7e,mFA2BjByB,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAoP,GAAA,GACE3N,YAAY,qBACZF,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAK0P,EAAKtI,MAAQpH,IAEjC8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,aAArB,gBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,WAArB,YAPJ,YAUE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLwQ,YAAY,uCACZF,MAAO,CAAEgF,MAAO,KAChBgJ,IAAK,SAAAC,GAAK,OAAK7L,EAAKvC,MAAQoO,MAIlCC,MACE1P,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAE6T,MAAO,SAChBxT,QAAS,WACPvH,OAAOuI,SAAS8M,UAElBpO,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKxL,YAA1B,wCACAgM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK6d,gBAA1B,wCACArd,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEsS,aAAc/c,KAAK+c,eACnBrS,UAAQ,EACRzF,KAAK,QACL0F,OAAO,KACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,wBA1EI1H,aCoFbyH,eAzFb,SAAAA,EAAYzL,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAiK,IACjB1L,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA8V,GAAAhH,KAAAjD,KAAMxB,KAiBR0L,YAAc,WACZ,MAA0B,UAAtB3L,EAAKC,MAAMhJ,OACN,CACL,CACE0I,MAAO,qBACPkM,UAAW,eAEb,CACElM,MAAO,2BACPkM,UAAW,YACXiC,OAAQpD,KAGmB,SAAtB1K,EAAKC,MAAMhJ,OACb,CACL,CACE0I,MAAO,UACPkM,UAAW,MAEb,CACElM,MAAO,2BACPkM,UAAW,oBAGb,CACElM,MAAO,mCACPkM,UAAW,iBAEb,CACElM,MAAO,2BACPkM,UAAW,YAEXC,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE6M,cAAgBD,EAAEC,gBAExC,CACErM,MAAO,eACPkM,UAAW,OAEb,CACElM,MAAO,mCACPkM,UAAW,uBAEb,CACElM,MAAO,eACPkM,UAAW,cAEb,CACElM,MAAO,2BACPkM,UAAW,gBAIR,CACL,CACElM,MAAO,qBACPkM,UAAW,eAEb,CACElM,MAAO,eACPkM,UAAW,WAEb,CACElM,MAAO,2BACPkM,UAAW,aACXiC,OAAQpD,MAhFd1K,EAAK4F,MAAQ,GAFI5F,wEAIV,IACCjN,EAAS0O,KAAKxB,MAAMya,aAApB3nB,KAGR,OAFAkG,QAAQC,IAAInG,GAGVkP,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAO+Y,GAAR,SAAAvH,OAAmBuH,IAC3B5C,WAAYtZ,EACZuZ,QAAS7K,KAAKkK,cACdjF,KAAK,iBAfYzC,aCAJ6O,eACnB,SAAAA,EAAY7S,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAqR,IACjB9S,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAkd,GAAApO,KAAAjD,KAAMxB,KAiDRsf,aAlDmB,eAAAlR,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAkDJ,SAAA5B,EAAOjJ,EAAI8H,EAASC,GAApB,IAAAyK,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACK3B,GAAe7H,EAAI8H,EAASC,GADjC,OAEM,KADbyK,EADOlJ,EAAAG,MAELxH,OACN1D,EAAA,EAAQ2M,QAAQ,4BAAUsH,EAAIlH,KAE9B/M,EAAA,EAAQD,MAAM,4BAAUkU,EAAIlH,KALjB,wBAAAhC,EAAAe,SAAApB,MAlDI,gBAAAsC,EAAAC,EAAAe,GAAA,OAAA+L,EAAA7M,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,GAFI5F,wEAIV,IAAA6F,EAAApE,KACC+R,EAAmB/R,KAAKxB,MAAxBuT,eACR,OACEvR,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,6BAAWsR,EAAezX,UAC1BkG,EAAA9C,EAAA+C,cAAA,6BAAWsR,EAAezc,SAC1BkL,EAAA9C,EAAA+C,cAAA,2BAASsR,EAAe7U,QACxBsD,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,2CACAD,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLsQ,MAAO,CAAEgF,MAAO,MAAO+W,OAAQ,UAC/B7b,YAAY,uFACZob,OAAQ,SAAAlM,GAAC,OAAKhN,EAAK4Z,WAAa5M,EAAErF,OAAOrX,SAE3C8L,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE5Q,KAAK,UACL4P,UAAU,oBACVe,QAAS,kBACP+B,EAAK0Z,aAAa/L,EAAezX,SAAU8J,EAAK4Z,WAAY,KAJhE,iBAUFxd,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,2CACAD,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLsQ,MAAO,CAAEgF,MAAO,MAAO+W,OAAQ,UAC/B7b,YAAY,mGACZob,OAAQ,SAAAlM,GAAC,OAAKhN,EAAK6Z,eAAiB7M,EAAErF,OAAOrX,SAE/C8L,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE5Q,KAAK,UACL4P,UAAU,oBACVe,QAAS,kBACP+B,EAAK0Z,aAAa/L,EAAezX,SAAU8J,EAAK6Z,eAAgB,KAJpE,yBAtC+Bzb,aCyBjCsI,oBA2XOoT,eAzXb,SAAAA,EAAY1f,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAke,IACjB3f,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAA+pB,GAAAjb,KAAAjD,KAAMxB,KAgBRmO,SAjBmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAiBR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAAvC,EAAAkM,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLxM,EADK6C,OAAAc,EAAA,EAAAd,CAAA,CACIyG,WAAY,IAAO2D,EAAK4F,OAD5BvG,EAAAE,KAAA,EAEYlC,GAAShI,EAAMC,EAAO,EAAGvC,GAFrC,OAGa,KADhBkM,EAFGI,EAAAG,MAGExH,OACTgI,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAOhE,SAAS5L,EAAO4P,SAGzBva,EAAA,EAAQD,MAAM,4BATP,wBAAAgL,EAAAe,SAAApB,MAjBQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EA6BnB6U,aA7BmBjf,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA6BJ,SAAAC,IAAA,IAAA9N,EAAAkM,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACTxM,EADS6C,OAAAc,EAAA,EAAAd,CAAA,CACAyG,WAAY2D,EAAKsD,MAAMA,MAAMnN,OAAU6J,EAAK4F,OACzD3M,QAAQC,IAAInG,GAFCiO,EAAAzB,KAAA,EAIQlC,GAAS,EAAG,GAAI,EAAGtK,GAJ3B,OAKS,KADhBkM,EAJO+B,EAAAxB,MAKFxH,OACTgI,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAOhE,SAAS5L,EAAO4P,UAGzB7O,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb8b,MAAOhE,SAAS5L,EAAO4P,SAEzBva,EAAA,EAAQD,MAAM,6EAfH,wBAAA2M,EAAAZ,SAAAS,MA7BIb,EA+CnB2W,SAAW,WACThZ,GAAqBqC,EAAK4F,QAhDT5F,EAyLnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,iBACPkM,UAAW,WACXpD,MAAO,KAET,CACE9I,MAAO,UACPkM,UAAW,UACXpD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,YACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,SACXpD,MAAO,IACPqD,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAER,OAASoN,EAAEpN,SAEjC,CACEgB,MAAO,2BACPkM,UAAW,iBACXpD,MAAO,IACPqD,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE2X,eAAiB/K,EAAE+K,iBAEzC,CACEnX,MAAO,2BACPkM,UAAW,aACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,cACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,WACXpD,MAAO,KAET,CACE9I,MAAO,eACPkM,UAAW,SACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,IAAI2H,EACJ,OAAQpC,GACN,IAAK,IACHoC,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,QACEA,EAAO,GAGX,OAAO3U,EAAA9C,EAAA+C,cAAA,YAAO0U,KAGlB,CACEjX,MAAO,eACPkM,UAAW,GACXpD,MAAO,IACPqF,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4U,KAAK1e,KAArC,mBAIN,CACEyJ,MAAO,2BACPkM,UAAW,eACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,gBACXpD,MAAO,KAET,CACE9I,MAAO,iBACPkM,UAAW,aACXpD,MAAO,KAET,CACE9I,MAAO,2BACPkM,UAAW,aACXpD,MAAO,IACPqF,OAAQpD,GACRoB,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE4X,WAAahL,EAAEgL,aAErC,CACEpX,MAAO,2BACPkM,UAAW,aACXpD,MAAO,IACPqF,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GACrB,MAAa,MAATuF,GAAiBA,EAEP9J,GAAY8J,GADjB,IAGX1I,OAAQ,SAAC3M,EAAG4M,GAAJ,OAAU5M,EAAE6X,WAAajL,EAAEiL,aAErC,CACErX,MAAO,eACPkM,UAAW,GACXpD,MAAO,IACPqF,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4a,UAAU1kB,EAAQ,UAAlD,gBAGA+L,EAAA9C,EAAA+C,cAACsE,GAAD,oCAIN,CACE7G,MAAO,2BACPkM,UAAW,GACXpD,MAAO,IACPqF,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4a,UAAU1kB,EAAQ,WAAlD,mBAMN,CACEyJ,MAAO,2BACPkM,UAAW,GACXiC,OAAQ,SAAA5X,GAAM,OACZ+L,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA8X,GAAA,GACEhY,QAAS9L,EAAO2kB,YAChBlb,MAAOzJ,EAAOa,QAAU,2BACxBuS,QAAQ,SAERrH,EAAA9C,EAAA+C,cAACsE,GAAD,kCAEFvE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK4a,UAAU1kB,EAAQ,oBAAlD,iCAjVW8J,EAwVnB8a,mBAAqB,SAACvgB,EAAMsS,GAC1B,IAAI4B,EAAY5B,EAAW,GAAK,YAC5B6B,EAAU7B,EAAW,GAAK,YAC9B7M,EAAK2E,SAAS,CACZhJ,WAAY8S,EACZ7S,SAAU8S,KA7VK1O,EAgWnB4a,UAhWmB,eAAAjZ,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAgWP,SAAAgB,EAAO1L,EAAQe,GAAf,IAAAsR,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,UACVS,EAAK/I,OAASA,EACd+I,EAAK0a,aAAe,CAClB3nB,KAAM,GACN8b,MAAO,EACP9Y,GAAIG,EAAOa,SAGA,SAAXE,EARQ,CAAA4K,EAAAtC,KAAA,eAAAsC,EAAAtC,KAAA,EASE1I,EAAW,EAAG,GAAIX,EAAOa,SAT3B,OAAA8K,EAAAkO,GAAAlO,EAAArC,KAAAqC,EAAAtC,KAAA,mBAUO,UAAXtI,EAVI,CAAA4K,EAAAtC,KAAA,gBAAAsC,EAAAtC,KAAA,GAWE9B,GAAW,EAAG,GAAIvH,EAAO6F,UAX3B,QAAA8F,EAAAkZ,GAAAlZ,EAAArC,KAAAqC,EAAAtC,KAAA,wBAAAsC,EAAAtC,KAAA,GAYE7B,GAAW,EAAG,GAAIxH,EAAO6F,UAZ3B,QAAA8F,EAAAkZ,GAAAlZ,EAAArC,KAAA,QAAAqC,EAAAkO,GAAAlO,EAAAkZ,GAAA,QAaS,KANbxS,EAPI1G,EAAAkO,IAaF/X,SACNgI,EAAK0a,aAAa3nB,KAAOwV,EAAIxV,KAC7BiN,EAAK0a,aAAa7L,MAAQtG,EAAIsG,OAEhC7O,EAAK2E,SAAS,CAAEqW,cAAc,IAjBpB,yBAAAnZ,EAAAzB,SAAAwB,MAhWO,gBAAAU,EAAAC,GAAA,OAAAZ,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EAmXnB4U,KAnXmB,eAAAtF,EAAA1Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAmXZ,SAAA2O,EAAMrZ,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,OACLS,EAAK2E,SAAS,CAAEsS,YAAY,IAC5BjX,EAAKwT,eAAiBtd,EAFjB,wBAAAsZ,EAAApP,SAAAmP,MAnXY,gBAAAH,GAAA,OAAAE,EAAA9N,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPsC,SAAU,GACVxV,WAAY,GACZC,SAAU,GACVC,aAAc,GACd1I,KAAM,EACNoK,MAAO,GACPxG,QAAS,GACTgF,SAAU,GACVqV,gBAAgB,GAElBpR,EAAK2L,cAfY3L,mFAmDjByB,KAAK2M,SAAS,EAAG,qCAEV,IAAAvI,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAuK,GAAA,GAAgBC,OAAQC,MACtB1K,EAAA9C,EAAA+C,cAAC0d,GAAD,CAGE7U,OAAO,aACPpH,YAAa,CAAC,2BAAQ,4BACtBsD,SAAUxF,KAAKqZ,sBAPrB,YAWE7Y,EAAA9C,EAAA+C,cAAAoP,GAAA,GACE3N,YAAY,qBACZF,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAI0P,EAAKlB,SAAS,CAAEpH,MAAOpH,MAE1C8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,YAArB,kBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,WAArB,WACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,cAArB,kBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,eAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,gBAArB,6BApBJ,YAuBE8L,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEnQ,KAAK,OACLwQ,YAAY,uCACZF,MAAO,CAAEgF,MAAO,KAGhBgJ,IAAK,SAAAC,GAAK,OAAK7L,EAAKvC,MAAQoO,KA7BhC,YAgCEzP,EAAA9C,EAAA+C,cAAAoP,GAAA,GACEC,aAAa,GACb9N,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAI0P,EAAKlB,SAAS,CAAE9I,aAAc1F,MAEjD8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,IAArB,4BACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,sBACA8L,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,uBA1CJ,YA6CE8L,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKoT,aAAcnO,KAAK,WAC3CzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIjBwe,MACE1P,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAE6T,MAAO,SAChBxT,QAAS,WACPvH,OAAOuI,SAAS8M,UAElBpO,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRzF,KAAK,QACL0F,OAAO,KACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdmG,WAAY,CACVC,gBAAiBtQ,KAAKmE,MAAMuL,SAC5Ba,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACX9b,GAAQ8b,IACVtL,EAAKlB,SAAS,CACZwM,SAAUA,IAEZtL,EAAKuI,SAAS/Y,EAAM8b,KAGxBmB,iBAAkB,SAACC,EAAS7L,GACtBA,GACFb,EAAKuI,SAASmE,EAAS7L,KAI7B8L,OAAQ,CAAEC,EAAG,KAAMC,EAAG,UAExBzQ,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MACkB,UAAhB8B,KAAKxK,OACD,2BACgB,SAAhBwK,KAAKxK,OACL,2BACA,2BAEN2S,QAASnI,KAAKmE,MAAMoV,aACpBnR,SAAU,WACRhE,EAAKlB,SAAS,CAAEqW,cAAc,KAEhClR,OAAQ,KACRrB,MAAM,OAENxG,EAAA9C,EAAA+C,cAAC2d,GAAD,CACEnF,aAAcjZ,KAAKiZ,aACnBzjB,OAAQwK,KAAKxK,UAGhBwK,KAAKmE,MAAMqR,YACVhV,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACNiK,QAASnI,KAAKmE,MAAMqR,WACpBpN,SAAU,WACRhE,EAAKlB,SAAS,CAAEsS,YAAY,KAE9BnN,OAAQ,KACRrB,MAAM,OAENxG,EAAA9C,EAAA+C,cAAC4d,GAAD,CAAatM,eAAgB/R,KAAK+R,0BApL1BvP,mDChBdma,eACJ,SAAAA,EAAYne,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA2c,IACjBpe,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAwoB,GAAA1Z,KAAAjD,KAAMxB,KAKRmO,SANmB,eAAAC,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAMR,SAAA5B,EAAO3J,EAAMC,GAAb,IAAAiT,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSxB,KADT,OAEU,KADbwK,EADGlJ,EAAAG,MAEDxH,QACNgI,EAAKqe,YAAc9V,EAAIxV,KACvBiN,EAAK2E,SAAS,CAAE5R,KAAM+M,KAAKgG,MAAMyC,EAAIxV,KAAK0oB,aAE1CnnB,EAAA,EAAQD,MAAMkU,EAAIlH,KANX,wBAAAhC,EAAAe,SAAApB,MANQ,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAmTnBK,aAAe,SAAAwS,GACbA,EAAEtS,iBACFP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAK3K,GAAZ,IAAA4pB,EAAAhqB,EAAAyB,EAAApB,EAAAiP,EAAAkD,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAW7B,IAAW8F,KAXkB0a,EACV/f,EAAKqe,YAAlBtoB,EADuBgqB,EACvBhqB,GAAIyB,EADmBuoB,EACnBvoB,KACNpB,EAAM,GACVD,EAAM6pB,SAASC,QAAQpoB,QAAQ,SAAC6H,EAAMuP,GACpC,IAAK,IAAM5J,KAAO3F,EAChBtJ,EAAG,qBAAAsR,OAAsBuH,EAAtB,MAAAvH,OAAgCrC,EAAhC,MAA0C3F,EAAK2F,KAItDjP,EAAI,sBAAwBD,EAAM6pB,SAAStC,SAAW,KAAO,MAC7DtnB,EAAI,oBAAsBD,EAAM+pB,OAAOxC,SAAW,KAAO,MACvCvnB,EAAMgqB,WACtB/pB,EAAG,cAAAsR,OAAerC,EAAf,MAAyBlP,EAAMgqB,WAAW9a,GAZlB,GAcxBvE,EAdwB,CAAAE,EAAAzB,KAAA,gBAAAyB,EAAAzB,KAAA,EAeTtB,GAAoBlI,EAAIyB,EAAMpB,GAfrB,OAgBR,KADbmS,EAfqBvH,EAAAxB,MAgBnBxH,QACN1D,EAAA,EAAQ2M,QAAQ,4BAAUsH,EAAIlH,KAC9BpI,QAAQC,IAAIqP,GACZvI,EAAKoO,YAEL9Z,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KArBFL,EAAAzB,KAAA,iBAwB3BjL,EAAA,EAAQD,MAAM,4BAxBa,yBAAA2M,EAAAZ,SAAAS,MAA/B,gBAAAyB,EAAAC,GAAA,OAAA7B,EAAAc,MAAAC,KAAAzO,YAAA,KAnTAgN,EAAK4F,MAAQ,CACX7S,KAAM,IAHSiN,mFAgBjByB,KAAK2M,4CAEE,IACCtL,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBACF/P,EAAO0O,KAAKmE,MAAM7S,KACxB,OACEkP,EAAA9C,EAAA+C,cAAA2P,GAAA,GACEF,MACE1P,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEN,MAAO,CAAE6T,MAAO,SAChB9T,KAAK,SACLM,QAAS,WACPvH,OAAOuI,SAAS8M,cAMxB3P,EAAA9C,EAAA+C,cAAArD,EAAA,GACEkL,SAAU,CAAEC,KAAM,GAClBwN,WAAY,CAAExN,KAAM,IACpBhH,SAAUvB,KAAKpB,cAEf4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,kCACdpH,EAAkB,mBAAoB,CACrCsI,gBAAcrY,GAAiC,IAAzBA,EAAKmtB,OAAOxC,UAClC0C,cAAe,WAFhBtd,CAGEb,EAAA9C,EAAA+C,cAAAme,GAAA,GAAQC,gBAAgB,KAAKC,kBAAkB,UAEpDte,EAAA9C,EAAA+C,cAAAse,GAAA,QACAve,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,kCACdpH,EAAkB,qBAAsB,CACvCsI,gBAAcrY,GAAmC,IAA3BA,EAAKitB,SAAStC,UACpC0C,cAAe,WAFhBtd,CAGEb,EAAA9C,EAAA+C,cAAAme,GAAA,GAAQC,gBAAgB,KAAKC,kBAAkB,UAEpDte,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,8CACdpH,EAAkB,iCAAkC,CACnDsI,aAAcrY,GAAQ8X,SAAS9X,EAAKitB,SAASC,QAAQ,GAAGvC,WADzD5a,CAGCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,gBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,mBAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,qCAAsC,CACvDxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKitB,SAASC,QAAQ,GAAGQ,cAPhD3d,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEsL,MAAM,2BACNzG,MAAO,CAAE0H,QAAS,eAAgB1C,MAAO,OACzCsB,SAAU,CAAEC,KAAM,EAAGsO,OAAQ,GAC7Bd,WAAY,CAAExN,KAAM,IAEnBlH,EAAkB,mCAAoC,CACrDxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKitB,SAASC,QAAQ,GAAGtI,YAPhD7U,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,MAAO9B,YAAa,MAC9C1E,EAAA9C,EAAA+C,cAAA,kBAEFD,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAE0H,QAAS,eAAgB1C,MAAO,OACzC+O,WAAY,CAAExN,KAAM,IAEnBlH,EAAkB,mCAAoC,CACrDxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKitB,SAASC,QAAQ,GAAGrI,YAPhD9U,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,6BAA8B,CAC/CxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKitB,SAASC,QAAQ,GAAGjI,MAPhDlV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,8CACdpH,EAAkB,iCAAkC,CACnDsI,aAAcrY,GAAQ8X,SAAS9X,EAAKitB,SAASC,QAAQ,GAAGvC,WADzD5a,CAGCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,gBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,mBAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,qCAAsC,CACvDxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKitB,SAASC,QAAQ,GAAGQ,cAPhD3d,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEsL,MAAM,2BACNzG,MAAO,CAAE0H,QAAS,eAAgB1C,MAAO,OACzCsB,SAAU,CAAEC,KAAM,EAAGsO,OAAQ,GAC7Bd,WAAY,CAAExN,KAAM,IAEnBlH,EAAkB,mCAAoC,CACrDxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKitB,SAASC,QAAQ,GAAGtI,YAPhD7U,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,MAAO9B,YAAa,MAC9C1E,EAAA9C,EAAA+C,cAAA,kBAEFD,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAE0H,QAAS,eAAgB1C,MAAO,OACzC+O,WAAY,CAAExN,KAAM,IAEnBlH,EAAkB,mCAAoC,CACrDxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKitB,SAASC,QAAQ,GAAGrI,YAPhD9U,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,6BAA8B,CAC/CxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKitB,SAASC,QAAQ,GAAGjI,MAPhDlV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,sBACdpH,EAAkB,iCAAkC,CACnDsI,aAAcrY,GAAQ8X,SAAS9X,EAAKitB,SAASC,QAAQ,GAAGvC,WADzD5a,CAGCb,EAAA9C,EAAA+C,cAAA+R,GAAA,EAAOC,MAAP,KACEjS,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,gBACA8L,EAAA9C,EAAA+C,cAAA+R,GAAA,GAAO9d,MAAO,GAAd,mBAIN8L,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,qCAAsC,CACvDxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKitB,SAASC,QAAQ,GAAGQ,cAPhD3d,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEsL,MAAM,2BACNzG,MAAO,CAAE0H,QAAS,eAAgB1C,MAAO,OACzCsB,SAAU,CAAEC,KAAM,EAAGsO,OAAQ,GAC7Bd,WAAY,CAAExN,KAAM,IAEnBlH,EAAkB,mCAAoC,CACrDxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKitB,SAASC,QAAQ,GAAGtI,YAPhD7U,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,MAAO9B,YAAa,MAC9C1E,EAAA9C,EAAA+C,cAAA,kBAEFD,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAE0H,QAAS,eAAgB1C,MAAO,OACzC+O,WAAY,CAAExN,KAAM,IAEnBlH,EAAkB,mCAAoC,CACrDxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKitB,SAASC,QAAQ,GAAGrI,YAPhD9U,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,6BAA8B,CAC/CxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKitB,SAASC,QAAQ,GAAGjI,MAPhDlV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAG5BxG,EAAA9C,EAAA+C,cAAAse,GAAA,QACAve,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,uBAAwB,CACzCsI,gBACErY,GAAqC,IAA7BA,EAAKotB,WAAWzC,UAC1B0C,cAAe,WAHhBtd,CAIEb,EAAA9C,EAAA+C,cAAAme,GAAA,GAAQC,gBAAgB,KAAKC,kBAAkB,UAEpDte,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEsL,MAAM,2BACNzG,MAAO,CAAE0H,QAAS,eAAgB1C,MAAO,OACzCsB,SAAU,CAAEC,KAAM,EAAGsO,OAAQ,GAC7Bd,WAAY,CAAExN,KAAM,IAEnBlH,EAAkB,yBAA0B,CAC3CxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKotB,WAAWxI,YAPvC7U,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,MAAO9B,YAAa,MAC9C1E,EAAA9C,EAAA+C,cAAA,kBAEFD,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAE0H,QAAS,eAAgB1C,MAAO,OACzC+O,WAAY,CAAExN,KAAM,IAEnBlH,EAAkB,yBAA0B,CAC3CxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKotB,WAAWvI,YAPvC9U,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAE5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,gBACdpH,EAAkB,mBAAoB,CACrCxJ,MAAO,CACL,CACE2J,UAAU,EACV3O,QAAS,yCAGb8W,aAAcrY,GAAQA,EAAKotB,WAAWpI,MAPvCjV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,WAG5BxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAW4Y,WAAY,CAAEc,OAAQ,IAC/BrW,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE5Q,KAAK,UACL6Q,SAAS,SACTjB,UAAU,qBAHZ,0BAxSUkB,aAmVhBqa,GAAiBzf,EAAA,EAAKsF,QAALtF,CAAcuf,IAEtB7X,eAAW+X,wCC7VLoC,4LACV,IAAA1gB,EAAAyB,KACP,OAEEQ,EAAA9C,EAAA+C,cAAAye,GAAA,GAAK5d,UAAU,aACbd,EAAA9C,EAAA+C,cAAA0e,GAAA,GAAK5W,KAAM,GAAIjH,UAAU,SACzBd,EAAA9C,EAAA+C,cAAA0e,GAAA,GAAK5W,KAAM,GAAIjH,UAAU,SACvBd,EAAA9C,EAAA+C,cAAA,iBACAD,EAAA9C,EAAA+C,cAAA,sFACAD,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU2Q,QAAS,kBAAM9D,EAAKC,MAAMC,QAAQC,QAAQ,WAAjE,sCAV0B8D,cCuCvB4c,GAxCQ,SAAA5gB,GA2BrB,OACEgC,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAYpM,EAAMlN,KAClBuZ,QA/BoB,CACtB,CACE3M,MAAO,eACPkM,UAAW,aAEb,CACElM,MAAO,iCACPkM,UAAW,sBACXpD,MAAO,KAET,CACE9I,MAAO,iCACPkM,UAAW,uBACXpD,MAAO,KAET,CACE9I,MAAO,iCACPkM,UAAW,kBACXpD,MAAO,KAET,CACE9I,MAAO,qBACPkM,UAAW,kBACXpD,MAAO,MASP/B,KAAK,WCgIIoa,eA9Jb,SAAAA,EAAY7gB,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAqf,IACjB9gB,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAkrB,GAAApc,KAAAjD,KAAMxB,KAkCR0L,YAAc,WACZ,GAA0B,kBAAtB3L,EAAKC,MAAMhJ,OA0Fb,MAzFkB,CAChB,CACE0I,MAAO,eACPkM,UAAW,QAEb,CACElM,MAAO,2BACPkM,UAAW,qBAEb,CACElM,MAAO,2BACPkM,UAAW,sBAEb,CACElM,MAAO,uCACPkM,UAAW,yBAEb,CACElM,MAAO,uCACPkM,UAAW,yBAEb,CACElM,MAAO,uCACPkM,UAAW,mBAEb,CACElM,MAAO,uCACPkM,UAAW,mBAEb,CACElM,MAAO,uCACPkM,UAAW,6BAEb,CACElM,MAAO,uCACPkM,UAAW,6BAEb,CACElM,MAAO,uCACPkM,UAAW,uBAEb,CACElM,MAAO,uCACPkM,UAAW,uBAEb,CACElM,MAAO,uCACPkM,UAAW,wBAEb,CACElM,MAAO,uCACPkM,UAAW,wBAEb,CACElM,MAAO,uCACPkM,UAAW,4BAEb,CACElM,MAAO,uCACPkM,UAAW,4BAEb,CACElM,MAAO,iCACPkM,UAAW,uBAEb,CACElM,MAAO,iCACPkM,UAAW,wBAEb,CACElM,MAAO,iCACPkM,UAAW,mBAEb,CACElM,MAAO,qBACPkM,UAAW,mBAEb,CACElM,MAAO,eACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ2C,KAAK,QAAQ5C,QAAS,kBAAM9D,EAAK+gB,cAAc7qB,KAAvD,qBAvHO8J,EAiInBghB,WAAa,SAAA3rB,GAEX,OADA4D,QAAQC,IAAI7D,GAEV4M,EAAA9C,EAAA+C,cAAA,UACED,EAAA9C,EAAA+C,cAAA,0BACAD,EAAA9C,EAAA+C,cAAA,MAAIuB,MAAO,CAAEgF,MAAO,KAApB,qBACAxG,EAAA9C,EAAA+C,cAAA,+BACAD,EAAA9C,EAAA+C,cAAA,+BACAD,EAAA9C,EAAA+C,cAAA,+BACAD,EAAA9C,EAAA+C,cAAA,iCA1IalC,EA8InB+gB,cA9ImB,eAAA1S,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA8IH,SAAA5B,EAAM9I,GAAN,IAAAqS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIjF,GAChB,EACA,GACA0F,EAAKC,MAAMxJ,WACXP,EAAOqE,MALK,OACRgO,EADQlJ,EAAAG,KAOdQ,EAAKC,MAAM6F,MAAMyC,GACjBvI,EAAK2E,SAAS,CACZpK,KAAMrE,EAAOqE,KACb0mB,kBAAkB,EAClBC,cAAe3Y,EAAIxV,OAXP,wBAAAsM,EAAAe,SAAApB,MA9IG,gBAAAsC,GAAA,OAAA+M,EAAA7M,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACXrL,KAAM,GACN0mB,kBAAkB,EAClBC,cAAe,IALAlhB,wEAQV,IAAA6F,EAAApE,KACC1O,EAAS0O,KAAKxB,MAAMkhB,WAApBpuB,KACR,OACEkP,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAYtZ,EACZuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACL8L,OAAQ,CAAEC,EAAG,OAGfxQ,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAO8B,KAAKmE,MAAMrL,KAAO,4BACzBkO,MAAM,MACNmB,QAASnI,KAAKmE,MAAMqb,iBACpBpX,SAAU,WACRhE,EAAKlB,SAAS,CAAEsc,kBAAkB,KAEpCnX,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACkf,GAAD,CAAgBruB,KAAM0O,KAAKmE,MAAMsb,yBA/BlBjd,aCobVod,eA3ab,SAAAA,EAAYphB,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA4f,IACjBrhB,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAyrB,GAAA3c,KAAAjD,KAAMxB,KAUR+b,eAXmB,eAAA3N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAWF,SAAA5B,EAAO3J,EAAMC,GAAb,IAAAiT,EAAAtJ,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACG7H,IADH,cACT6Q,EADSlJ,EAAAG,KAAAH,EAAAE,KAAA,EAEMtF,GAAgB5E,EAAMC,GAF5B,OAET2J,EAFSI,EAAAG,KAGI,IAAf+I,EAAIvQ,QAAkC,IAAlBiH,EAAOjH,QAC7BgI,EAAK2E,SAAS,CACZ5R,KAAMkM,EAAOlM,KACb2E,YAAa6Q,EAAIxV,OANN,wBAAAsM,EAAAe,SAAApB,MAXE,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,GAAAgN,EAoHnB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,eACPkM,UAAW,gBAEb,CACElM,MAAO,2BACPkM,UAAW,qBAEb,CACElM,MAAO,2BACPkM,UAAW,sBAEb,CACElM,MAAO,uCACPkM,UAAW,yBAEb,CACElM,MAAO,uCACPkM,UAAW,yBAEb,CACElM,MAAO,uCACPkM,UAAW,mBAEb,CACElM,MAAO,uCACPkM,UAAW,mBAEb,CACElM,MAAO,uCACPkM,UAAW,6BAEb,CACElM,MAAO,uCACPkM,UAAW,6BAEb,CACElM,MAAO,uCACPkM,UAAW,uBAEb,CACElM,MAAO,uCACPkM,UAAW,uBAEb,CACElM,MAAO,uCACPkM,UAAW,wBAEb,CACElM,MAAO,uCACPkM,UAAW,wBAEb,CACElM,MAAO,uCACPkM,UAAW,4BAEb,CACElM,MAAO,uCACPkM,UAAW,4BAEb,CACElM,MAAO,iCACPkM,UAAW,uBAEb,CACElM,MAAO,iCACPkM,UAAW,wBAEb,CACElM,MAAO,iCACPkM,UAAW,mBAEb,CACElM,MAAO,qBACPkM,UAAW,mBAEb,CACElM,MAAO,eACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKshB,cAAcprB,KAA9C,gBAGA+L,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK+gB,cAAc7qB,KAA9C,qBAzMW8J,EAgNnB6U,aAhNmBjf,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAgNJ,SAAAC,IAAA,IAAA0H,EAAAgZ,EAAA,OAAAriB,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACKrF,GAChB,EACA,GACA8F,EAAKvJ,WACLuJ,EAAKyO,UACLzO,EAAK0O,SANM,OACPnG,EADOvH,EAAAxB,KAQP+hB,EAASvhB,EAAKwhB,UAAUjZ,GAC9BvI,EAAK2E,SAAS,CAAE5R,KAAMwuB,EAAOxuB,KAAM8b,MAAO0S,EAAO1S,QATpC,wBAAA7N,EAAAZ,SAAAS,MAhNIb,EA2NnBwhB,UAAY,SAAAjZ,GACVtP,QAAQC,IAAI,OAAQqP,GACpB,IAAItV,EAAS,EACTwuB,EAAc,GAyElB,OAxEmB,IAAflZ,EAAIvQ,QAAgBuQ,EAAIxV,OAEtBwV,EAAIxV,KAAK2uB,MACXnZ,EAAIxV,KAAK2uB,KACN1Z,OAAO,SAAA6K,GAAC,OAAIA,GAAKA,EAAE0G,MACnB9P,IACC,SAAAoJ,GAAC,OAAMA,EAAEpc,WAAaoU,SAASgI,EAAE0G,IAAI9iB,mBAAqBoc,EAAE0G,MAI9DhR,EAAIxV,KAAK4uB,QACXpZ,EAAIxV,KAAK4uB,MACN3Z,OAAO,SAAA6K,GAAC,OAAIA,GAAKA,EAAE0G,MACnB9P,IACC,SAAAoJ,GAAC,OACEA,EAAE+O,sBAAwB/O,EAAEgP,eAAe5uB,OAC3C4f,EAAEiP,gBAAkBjP,EAAEkP,SAAS9uB,OAC/B4f,EAAEmP,0BAA4BnP,EAAEoP,mBAAmBhvB,OACnD4f,EAAEqP,oBAAsBrP,EAAEsP,aAAalvB,OACvC4f,EAAEuP,qBAAuBvP,EAAEwP,cAAcpvB,OACzC4f,EAAEyP,yBAA2BzP,EAAE0P,kBAAkBtvB,OACjD4f,EAAEpc,WAAaoU,SAASgI,EAAE0G,IAAI9iB,mBACxBoc,EAAE0G,MAIfhR,EAAIxV,KAAK2uB,KAAKjY,IAAI,SAAAoJ,GAAC,OACjBjd,OAAO6Q,OACLoM,EACAtK,EAAIxV,KAAK4uB,MAAMzc,KAAK,SAAAsd,GAAC,OAAIA,EAAE/rB,aAAeoc,EAAEpc,iBAM9C8R,EAAIxV,KAAK0vB,OACXla,EAAIxV,KAAK0vB,KACNza,OAAO,SAAA6K,GAAC,OAAIA,GAAKA,EAAE0G,MACnB9P,IACC,SAAAoJ,GAAC,OACEA,EAAE6P,kBACAvD,KAAKwD,IAAI9P,EAAE+P,sBAAwB/P,EAAEgQ,sBACrChQ,EAAEgQ,oBAAsB1D,KAAKwD,IAAI9P,EAAE+P,wBACpCE,QAAQ,GACTjQ,EAAEgQ,oBACD1D,KAAKE,MAA8B,IAAxBxM,EAAEgQ,qBAA+B,IAC7ChQ,EAAE+P,qBACDzD,KAAKE,MAA+B,IAAzBxM,EAAE+P,sBAAgC,IAC9C/P,EAAEkQ,gBACD5D,KAAKE,MAED,KADDxM,EAAEgQ,oBAAsB1D,KAAKwD,IAAI9P,EAAE+P,wBAElC,IACL/P,EAAEpc,WAAaoU,SAASgI,EAAE0G,IAAI9iB,mBACxBoc,EAAE0G,MAKfhR,EAAIxV,KAAK2uB,KAAKjY,IAAI,SAAAoJ,GAAC,OACjBjd,OAAO6Q,OACLoM,EACAtK,EAAIxV,KAAK0vB,KAAKvd,KAAK,SAAAsd,GAAC,OAAIA,EAAE/rB,aAAeoc,EAAEpc,iBAKjDxD,EAASsV,EAAIxV,KAAK2uB,KAAKzuB,OACvBwuB,EAAclZ,EAAIxV,KAAK2uB,KACvBzoB,QAAQC,IAAI,6BAAyBqP,EAAIxV,KAAK2uB,OAGzC,CACLsB,KAAMza,EAAIya,KACV3hB,IAAKkH,EAAIlH,IACTwN,MAAO5b,EACPF,KAAM0uB,IA3SSzhB,EA8SnBijB,cAAgB,SAAA1a,GACdtP,QAAQC,IAAIqP,GACZ,IAAItV,EAAS,EACTwuB,EAAc,GAqElB,OApEmB,IAAflZ,EAAIvQ,QAAgBuQ,EAAIxV,OAEtBwV,EAAIxV,KAAK2uB,MACXnZ,EAAIxV,KAAK2uB,KAAKjY,IAAI,SAAAoJ,GAAC,OAAMA,EAAEtY,KAAOsY,EAAE0G,IAAIiB,mBAAqB3H,EAAE0G,MAG7DhR,EAAIxV,KAAK4uB,QAEXpZ,EAAIxV,KAAK4uB,MACN3Z,OAAO,SAAA6K,GAAC,OAAIA,GAAKA,EAAE0G,MACnB9P,IACC,SAAAoJ,GAAC,OACEA,EAAE+O,sBAAwB/O,EAAEgP,eAAe5uB,OAC3C4f,EAAEiP,gBAAkBjP,EAAEkP,SAAS9uB,OAC/B4f,EAAEmP,0BAA4BnP,EAAEoP,mBAAmBhvB,OACnD4f,EAAEqP,oBAAsBrP,EAAEsP,aAAalvB,OACvC4f,EAAEuP,qBAAuBvP,EAAEwP,cAAcpvB,OACzC4f,EAAEyP,yBAA2BzP,EAAE0P,kBAAkBtvB,OACjD4f,EAAEtY,KAAOsY,EAAE0G,IAAIiB,mBACT3H,EAAE0G,MAIfhR,EAAIxV,KAAK2uB,KAAKjY,IAAI,SAAAoJ,GAAC,OACjBjd,OAAO6Q,OAAOoM,EAAGtK,EAAIxV,KAAK4uB,MAAMzc,KAAK,SAAAsd,GAAC,OAAIA,EAAEjoB,OAASsY,EAAEtY,WAIvDgO,EAAIxV,KAAK0vB,OAEXla,EAAIxV,KAAK0vB,KACNza,OAAO,SAAA6K,GAAC,OAAIA,GAAKA,EAAE0G,MACnB9P,IACC,SAAAoJ,GAAC,OACEA,EAAE6P,kBACAvD,KAAKwD,IAAI9P,EAAE+P,sBAAwB/P,EAAEgQ,sBACrChQ,EAAEgQ,oBAAsB1D,KAAKwD,IAAI9P,EAAE+P,wBACpCE,QAAQ,GACTjQ,EAAEgQ,oBACD1D,KAAKE,MAA8B,IAAxBxM,EAAEgQ,qBAA+B,IAC7ChQ,EAAE+P,qBACDzD,KAAKE,MAA+B,IAAzBxM,EAAE+P,sBAAgC,IAC9C/P,EAAEkQ,gBACD5D,KAAKE,MAED,KADDxM,EAAEgQ,oBAAsB1D,KAAKwD,IAAI9P,EAAE+P,wBAElC,IACL/P,EAAEtY,KAAOsY,EAAE0G,IAAIiB,mBACT3H,EAAE0G,MAKfhR,EAAIxV,KAAK2uB,KAAKjY,IAAI,SAAAoJ,GAAC,OACjBjd,OAAO6Q,OAAOoM,EAAGtK,EAAIxV,KAAK0vB,KAAKvd,KAAK,SAAAsd,GAAC,OAAIA,EAAEjoB,OAASsY,EAAEtY,WAK1DgO,EAAIxV,KAAK2uB,KAAK1J,KACZ,SAAC7Y,EAAG4M,GAAJ,OACElB,SAASkB,EAAExR,KAAK4F,QAAQ,KAAM,KAC9B0K,SAAS1L,EAAE5E,KAAK4F,QAAQ,KAAM,OAElClN,EAASsV,EAAIxV,KAAK2uB,KAAKzuB,OACvBwuB,EAAclZ,EAAIxV,KAAK2uB,KACvBzoB,QAAQC,IAAIqP,EAAIxV,KAAK2uB,OAEhB,CACLsB,KAAMza,EAAIya,KACV3hB,IAAKkH,EAAIlH,IACTwN,MAAO5b,EACPF,KAAM0uB,IA1XSzhB,EA6XnBkjB,cAAgB,SAAA3a,GACdtP,QAAQC,IAAIqP,GAEO,IAAfA,EAAIvQ,QAAgBuQ,EAAIxV,MAC1BwV,EAAIxV,KAAK0W,IACP,SAAAoJ,GAAC,OACEA,EAAE6P,kBACAvD,KAAKwD,IAAI9P,EAAE+P,sBAAwB/P,EAAEgQ,sBACrChQ,EAAEgQ,oBAAsB1D,KAAKwD,IAAI9P,EAAE+P,wBACpCE,QAAQ,GACTjQ,EAAEgQ,oBACD1D,KAAKE,MAA8B,IAAxBxM,EAAEgQ,qBAA+B,IAC7ChQ,EAAE+P,qBACDzD,KAAKE,MAA+B,IAAzBxM,EAAE+P,sBAAgC,IAC9C/P,EAAEkQ,gBACD5D,KAAKE,MAC0D,KAA5DxM,EAAEgQ,oBAAsB1D,KAAKwD,IAAI9P,EAAE+P,wBAClC,OA9YK5iB,EAmZnBshB,cAnZmB,eAAA3f,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAmZH,SAAAgB,EAAM1L,GAAN,IAAAqS,EAAA4Y,EAAA,OAAAjiB,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACIpF,GAChB,EACA,GACAjE,EAAOO,WACPuJ,EAAKyO,UACLzO,EAAK0O,SANO,OACRnG,EADQ1G,EAAArC,KAQR2hB,EAAanhB,EAAKijB,cAAc1a,GACtCvI,EAAKmhB,WAAaA,EAClBnhB,EAAK/I,OAAS,gBACd+I,EAAK2E,SAAS,CAAEwe,aAAa,IAXf,wBAAAthB,EAAAzB,SAAAwB,MAnZG,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EAganB+gB,cAhamB,eAAAzR,EAAA1Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAgaH,SAAA2O,EAAMrZ,GAAN,IAAAqS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,cAAAiQ,EAAAjQ,KAAA,EACIlF,GAAW,EAAG,GAAI2F,EAAKvJ,WAAYP,EAAOqE,MAD9C,OACRgO,EADQiH,EAAAhQ,KAEdQ,EAAKkjB,cAAc3a,GACnBvI,EAAK2E,SAAS,CACZpK,KAAMrE,EAAOqE,KACb0mB,kBAAkB,EAClBC,cAAe3Y,EAAIxV,OANP,wBAAAyc,EAAApP,SAAAmP,MAhaG,gBAAAhN,GAAA,OAAA+M,EAAA9N,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACX7S,KAAM,GACN2E,YAAa,GACbmX,MAAO,EACPsC,SAAU,GACVgS,aAAa,EACblC,kBAAkB,GARHjhB,mFAsBjByB,KAAKua,eAAe,EAAG,qCAEhB,IAAAnW,EAAApE,KACD2hB,EAAc3hB,KAAKmE,MAAMlO,YAAY+R,IAAI,SAAA/J,GAC7C,OACEuC,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAOuJ,EAAK3J,GAAIsP,IAAK3F,EAAK3J,IACtC2J,EAAKlI,QAIZ,OACEyK,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsK,GAAD,CACEM,YAAa,SAAA7D,GACI6B,KAAO7B,EAAI,IAAIoa,KAAKvY,KAAO7B,EAAI,IAAK,QACpC,EACb3U,EAAA,EAAQD,MAAM,kEAEdwR,EAAK4I,UAAYxF,EAAI,GACrBpD,EAAK6I,QAAUzF,EAAI,OAR3B,YAaEhH,EAAA9C,EAAA+C,cAAAoP,GAAA,GACE3N,YAAY,qBACZF,MAAO,CAAEgF,MAAO,KAChB6M,SAAU,SAAAnf,GAAK,OAAK0P,EAAKpP,WAAaN,IAErCitB,GAlBL,YAqBEnhB,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKoT,aAAcnO,KAAK,WAC3CzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,YAtBf,eA6BJ8O,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAE6f,aAAc,GAAIC,gBAAiB,SAC/CthB,EAAA9C,EAAA+C,cAAA,QAAMuB,MAAO,CAAE+f,OAAQ,mBACrBvhB,EAAA9C,EAAA+C,cAAA,uFAFJ,mBAKED,EAAA9C,EAAA+C,cAAA,QAAMuB,MAAO,CAAE+f,OAAQ,mBACrBvhB,EAAA9C,EAAA+C,cAAA,uFANJ,mBASED,EAAA9C,EAAA+C,cAAA,QAAMuB,MAAO,CAAE+f,OAAQ,mBACrBvhB,EAAA9C,EAAA+C,cAAA,wJAGJD,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAO,aACPC,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACL8L,OAAQ,CAAEC,EAAG,QAEfxQ,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,iCACN8I,MAAM,MACNmB,QAASnI,KAAKmE,MAAMud,YACpBtZ,SAAU,WACRhE,EAAKlB,SAAS,CAAEwe,aAAa,KAE/BrZ,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACuhB,GAAD,CACEtC,WAAY1f,KAAK0f,WACjBlqB,OAAQwK,KAAKxK,OACbR,WAAYgL,KAAKhL,WACjBqP,MAAOrE,KAAKyhB,iBAGhBjhB,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8I,MAAM,MACNmB,QAASnI,KAAKmE,MAAMqb,iBACpBpX,SAAU,WACRhE,EAAKlB,SAAS,CAAEsc,kBAAkB,KAEpCnX,OAAQ,MAER7H,EAAA9C,EAAA+C,cAACkf,GAAD,CAAgBruB,KAAM0O,KAAKmE,MAAMsb,yBAhHjBjd,aCyEX2X,GAFS/c,EAAA,EAAKsF,QAALtF,CAnFP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACF/P,EAAOkN,EAAMlN,KAqBnB,OACEkP,EAAA9C,EAAA+C,cAAArD,EAAA,GAAMkL,SAAU,CAAEC,KAAM,GAAKC,WAAW,OAAOjH,SArB1B,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAA4N,EAAAzY,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAK3K,GAAZ,IAAAkP,EAAAkD,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBuB,EADmB,CAAAzB,EAAAE,KAAA,QAEtB,IAAW8F,KAAOlP,OACGjD,IAAfiD,EAAMkP,KACRlP,EAAMkP,GAAO,IAJK,OAAAhG,EAAAE,KAAA,EAOJxG,EAAShG,EAAKgD,GAAII,GAPd,OAQH,KADboS,EAPgBlJ,EAAAG,MAQdxH,QACN1D,EAAA,EAAQ2M,QAAQ,4BAChBhB,EAAM4b,WACN5b,EAAMO,KAAK0O,eAEX5a,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAbP,wBAAAhC,EAAAe,SAAApB,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA8M,EAAA7M,MAAAC,KAAAzO,YAAA,MAoBEiP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,MAAO,CACxBxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,mCACnC8W,aAAerY,EAAK2wB,KAFrB5gB,CAICb,EAAA9C,EAAA+C,cAAAoP,GAAA,GAAQ7N,MAAO,CAAEgF,MAAO,QACtBxG,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAO,GAAtB,4BACC8J,EAAMmjB,eAIbnhB,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,sBACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,yCACnC8W,aAAcrY,EAAKyE,KAAK2I,QAAQ,UAAW,KAF5C2C,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,OAAS9E,YAAY,yBAEjD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,sBACdpH,EAAkB,SAAU,CAAEsI,aAAcrY,EAAK4wB,QAAjD7gB,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,OAAS9E,YAAY,yBAGhD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,sBACdpH,EAAkB,SAAU,CAAEsI,aAAcrY,EAAKkE,QAAjD6L,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,OAAS9E,YAAY,yBAGhD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,OAAQ,CAAEsI,aAAcrY,EAAK6wB,MAA/C9gB,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,OAAS9E,YAAY,+BAGhD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,mBACdpH,EAAkB,MAAO,CAAEsI,aAAcrY,EAAK8wB,YAA9C/gB,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,OAAS9E,YAAY,sBAGhD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,oBACdpH,EAAkB,OAAQ,CAAEsI,aAAcrY,EAAKyQ,MAA/CV,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,OAAS9E,YAAY,uBAGhD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWsL,MAAM,4BACdpH,EAAkB,OAAQ,CACzBxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,yCACnC8W,aAAcrY,EAAKilB,MAFpBlV,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,OAAS9E,YAAY,+BAGjD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU6Q,SAAS,SAASjB,UAAU,qBAAnD,oBC7DF+gB,eACJ,SAAAA,EAAY7jB,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAAqiB,IACjB9jB,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAkuB,GAAApf,KAAAjD,KAAMxB,KAOR+b,eARmBpmB,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAQF,SAAA5B,IAAA,IAAAuJ,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACG1G,IADH,OAEI,KADb0P,EADSlJ,EAAAG,MAEPxH,OACNgI,EAAK2E,SAAS,CACZ5R,KAAMwV,EAAIxV,KACV8b,MAAOtG,EAAIsG,QAGbva,EAAA,EAAQD,MAAMkU,EAAIlH,KARL,wBAAAhC,EAAAe,SAAApB,MAREgB,EA8InB2L,YAAc,iBAAM,CAClB,CACEhM,MAAO,qBACPkM,UAAW,OACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YAAOhM,EAAOsB,KAAK2I,QAAQ,UAAW,QAG1C,CACER,MAAO,qBACPkM,UAAW,UAEb,CACElM,MAAO,qBACPkM,UAAW,UAEb,CACElM,MAAO,2BACPkM,UAAW,QAEb,CACElM,MAAO,kBACPkM,UAAW,cAEb,CACElM,MAAO,mBACPkM,UAAW,QAEb,CACElM,MAAO,eACPkM,UAAW,UAEb,CACElM,MAAO,2BACPkM,UAAW,QAEb,CACElM,MAAO,eACPkM,UAAW,GACXiC,OAAQ,SAAC0G,EAAMte,EAAQ+Y,GAAf,OACNhN,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,UAAU2Q,QAAS,kBAAM9D,EAAK4U,KAAK1e,IAASwQ,KAAK,SAA9D,gBADF,eAKEzE,EAAA9C,EAAA+C,cAAA8O,GAAA,GACErR,MAAM,wCACNsR,UAAW,kBAAMjR,EAAK8Z,SAAS5jB,IAC/B6a,OAAO,eACPG,WAAW,gBAEXjP,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ5Q,KAAK,SAASuT,KAAK,SAA3B,sBAjMS1G,EAyMnBK,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAA9K,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAK3K,GAAZ,IAAAkP,EAAAkD,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACxBuB,EADwB,CAAAE,EAAAzB,KAAA,QAE3B,IAAW8F,KAAOlP,OACGjD,IAAfiD,EAAMkP,KACRlP,EAAMkP,GAAO,IAJU,OAAArE,EAAAzB,KAAA,EAOTzG,EAAQ3C,GAPC,OAQR,KADboS,EAPqBvH,EAAAxB,MAQnBxH,QACN1D,EAAA,EAAQ2M,QAAQ,4BAChBjB,EAAKgc,iBACLhc,EAAKC,MAAMO,KAAK0O,eAEhB5a,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KAbF,wBAAAL,EAAAZ,SAAAS,MAA/B,gBAAAS,EAAAC,GAAA,OAAAb,EAAAc,MAAAC,KAAAzO,YAAA,KA3MiBgN,EA6NnB8Z,SA7NmB,eAAAnY,EAAA/L,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KA6NR,SAAAgB,EAAM1L,GAAN,IAAAqS,EAAA,OAAArJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACOpG,GAAQjD,EAAOH,IADtB,OAEU,KADfwS,EADK1G,EAAArC,MAEDxH,QACN1D,EAAA,EAAQ2M,QAAQ,4BAChBjB,EAAKgc,kBAEL1nB,EAAA,EAAQD,MAAM,2BAASkU,EAAIlH,KANpB,wBAAAQ,EAAAzB,SAAAwB,MA7NQ,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAzO,YAAA,GAAAgN,EAsOnB4U,KAtOmB,eAAAtF,EAAA1Z,OAAA+K,EAAA,EAAA/K,CAAAsJ,EAAAC,EAAAyB,KAsOZ,SAAA2O,EAAMrZ,GAAN,OAAAgJ,EAAAC,EAAAC,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,OACLS,EAAKwT,eAAiBtd,EACtB8J,EAAK2E,SAAS,CACZgE,gBAAgB,IAHb,wBAAA6G,EAAApP,SAAAmP,MAtOY,gBAAAhN,GAAA,OAAA+M,EAAA9N,MAAAC,KAAAzO,YAAA,GAEjBgN,EAAK4F,MAAQ,CACX7S,KAAM,GACN8b,MAAO,EACPlG,gBAAgB,GALD3I,mFAoBjByB,KAAKua,kDAEE,IAAAnW,EAAApE,KACCqB,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBACFsgB,EAAc3hB,KAAKmE,MAAM7S,KAAK0W,IAAI,SAAA/J,GACtC,OACEuC,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAOuJ,EAAK3J,GAAIsP,IAAK3F,EAAKlI,MACtCkI,EAAKlI,KAAK2I,QAAQ,UAAW,QAIpC,OACE8B,EAAA9C,EAAA+C,cAAA2P,GAAA,GACElS,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAArD,EAAA,GAAMklB,OAAO,SAAS/gB,SAAUvB,KAAKpB,cACnC4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,MAAO,CACxBxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,mCACnC8W,aAAc,KAFftI,CAICb,EAAA9C,EAAA+C,cAAAoP,GAAA,GAAQ7N,MAAO,CAAEgF,MAAO,MACtBxG,EAAA9C,EAAA+C,cAAAoP,GAAA,EAAQvE,OAAR,CAAe5W,MAAM,KAArB,4BACCitB,KAIPnhB,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,OAAQ,CACzBxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,0CADpCwO,CAEEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,KAAO9E,YAAY,yBAE/C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,SAAU,GAA5BA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,KAAO9E,YAAY,yBAG9C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,SAAU,GAA5BA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,KAAO9E,YAAY,yBAG9C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,OAAQ,GAA1BA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,KAAO9E,YAAY,+BAG9C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,MAAO,GAAzBA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,KAAO9E,YAAY,sBAG9C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,OAAQ,GAA1BA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,KAAO9E,YAAY,uBAG9C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,OAAQ,CACzBxJ,MAAO,CAAC,CAAE2J,UAAU,EAAM3O,QAAS,0CADpCwO,CAEEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAEgF,MAAO,KAAO9E,YAAY,+BAE/C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACC2C,KAAK,UACJvT,KAAK,UACL6Q,SAAS,SACTjB,UAAU,qBAJZ,mBAYR4O,MACE1P,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMvH,OAAOuI,SAAS8M,UAAUlL,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAMrQ,KAAK,aAIf8O,EAAA9C,EAAA+C,cAAAgK,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAClW,EAAQ+Y,GAAT,SAAAvH,OAAsBuH,IAC9B5C,WAAY5K,KAAKmE,MAAM7S,KACvBuZ,QAAS7K,KAAKkK,cACdjF,KAAK,QACLoL,WAAY,CACVC,gBAAiB,GACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAA1K,OAAsByK,EAAtB,WACXE,eAAgB,EAChBF,MAAO1Q,KAAKmE,MAAMiJ,MAClB5H,SAAU,SAAC5R,EAAM8b,GACftL,EAAKmW,eAAe3mB,EAAM8b,IAE5BmB,iBAAkB,SAACC,EAAS7L,GAC1Bb,EAAKmW,eAAezJ,EAAS7L,OAInCzE,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACNiK,QAASnI,KAAKmE,MAAM+C,eACpBkB,SAAU,WACRhE,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCmB,OAAQ,MAER7H,EAAA9C,EAAA+C,cAAC8hB,GAAD,CACEnI,SAAU,WACRhW,EAAKmW,iBACLnW,EAAKlB,SAAS,CAAEgE,gBAAgB,KAElCya,YAAaA,EACbrwB,KAAM0O,KAAK+R,0BAzIJvP,aA+OJggB,GADIplB,EAAA,EAAKsF,QAALtF,CAAcilB,uBCzNzBI,cAAOC,gBAETjkB,GAAUkkB,eAIKC,eACnB,SAAAA,EAAYpkB,GAAO,IAAAD,EAAA,OAAApK,OAAA2O,EAAA,EAAA3O,CAAA6L,KAAA4iB,IACjBrkB,EAAApK,OAAA4O,EAAA,EAAA5O,CAAA6L,KAAA7L,OAAA6O,EAAA,EAAA7O,CAAAyuB,GAAA3f,KAAAjD,KAAMxB,KACD2F,MAAQ,GAFI5F,wEAQV,IAAA6F,EAAApE,KAGP,IAFc/M,aAAaD,MAGzB,OAAOwN,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAUC,GAAG,WAMtB,IAHkB,IAAI1B,MAAOC,UACN1M,aAAawM,eAEzB,OAEU,IADP9L,EAAS,EAAG,IAChB4C,OAKN,OAJAtD,aAAa2T,WAAW,YACxB3T,aAAa2T,WAAW,SACxB3T,aAAa2T,WAAW,QACxB3T,aAAa2T,WAAW,kBACjBpG,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAUC,GAAG,WAGxB,OACEZ,EAAA9C,EAAA+C,cAAA6hB,GAAA,GAAQtgB,MAAO,CAAE6gB,UAAW,SAC1BriB,EAAA9C,EAAA+C,cAACgiB,GAAD,KACEjiB,EAAA9C,EAAA+C,cAACqiB,GAAD,CACEzgB,QAAS,SAAAwD,GACPzB,EAAK2e,OAAOnd,KAAOxB,EAAK2e,OAAOnd,IAAIC,OAIzCrF,EAAA9C,EAAA+C,cAAA6hB,GAAA,OACE9hB,EAAA9C,EAAA+C,cAACuiB,GAAD,CAAQzb,MAAO,SAAAyI,GAAG,OAAK5L,EAAK2e,OAAS/S,GAAMvR,QAASA,IAApD,UAGA+B,EAAA9C,EAAA+C,cAACiiB,GAAD,CAAS1gB,MAAO,CAAE+b,OAAQ,EAAG+D,gBAAiB,SAC5CthB,EAAA9C,EAAA+C,cAACwiB,GAAA,EAAD,KACEziB,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEkhB,OAAQ,SACpB1iB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,KACEX,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAUgiB,KAAK,IAAIC,OAAK,EAAChiB,GAAG,UAC5BZ,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,QAAQggB,OAAK,EAACC,UAAW1a,KACrCnI,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,kBAAkBggB,OAAK,GACjC5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,QACdyK,EAAA9C,EAAA+C,cAAC8iB,GAAD,QAGJ/iB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,iCACV5C,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,eACdyK,EAAA9C,EAAA+C,cAAC+iB,GAAD,QAGJhjB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,kCACLggB,OAAK,EACLC,UAAWxK,IAEXrY,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,iBACdyK,EAAA9C,EAAA+C,cAACgjB,GAAD,QAGJjjB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,qBACLggB,OAAK,EACLC,UAAWvQ,IAEXtS,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,qBACdyK,EAAA9C,EAAA+C,cAACijB,GAAD,QAGJljB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,qBAAqBggB,OAAK,EAACC,UAAWb,IAChDhiB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,cACdyK,EAAA9C,EAAA+C,cAACkjB,GAAD,QAGJnjB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,qBAAqBggB,OAAK,EAACC,UAAWzO,IAChDpU,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,QACdyK,EAAA9C,EAAA+C,cAACmjB,GAAD,QAIJpjB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,qBAAqBggB,OAAK,GACpC5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,eACdyK,EAAA9C,EAAA+C,cAACojB,GAAD,QAIJrjB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,sBAAsBggB,OAAK,GACrC5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,iBACdyK,EAAA9C,EAAA+C,cAACqjB,GAAD,QAIJtjB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,uBAAuBggB,OAAK,GACtC5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,SACdyK,EAAA9C,EAAA+C,cAACsjB,GAAD,QAIJvjB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,qBAAqBggB,OAAK,GACpC5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,eACdyK,EAAA9C,EAAA+C,cAACujB,GAAD,QAGJxjB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,sBAAsBggB,OAAK,GACrC5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,gBACdyK,EAAA9C,EAAA+C,cAACwjB,GAAD,QAGJzjB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,oBAAoBggB,OAAK,GACnC5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,cACdyK,EAAA9C,EAAA+C,cAACyjB,GAAD,QAGJ1jB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,iBAAiBggB,OAAK,GAChC5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,gBACdyK,EAAA9C,EAAA+C,cAAC0jB,GAAD,QAGJ3jB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,wBAAwBggB,OAAK,GACvC5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,eACdyK,EAAA9C,EAAA+C,cAAC2jB,GAAD,QAGJ5jB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,qBAAqBggB,OAAK,EAACC,UAAWrO,IAChDxU,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,cACdyK,EAAA9C,EAAA+C,cAAC4jB,GAAD,QAGJ7jB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,uBACLggB,OAAK,EACLC,UAAW7M,IAEXhW,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,gBACdyK,EAAA9C,EAAA+C,cAAC6jB,GAAD,QAGJ9jB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,wBACLggB,OAAK,EACLC,UAAWvM,IAEXtW,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,iBACdyK,EAAA9C,EAAA+C,cAAC8jB,GAAD,QAGJ/jB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,yBACLggB,OAAK,EACLC,UAAWpM,IAEXzW,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,kBACdyK,EAAA9C,EAAA+C,cAAC+jB,GAAD,QAGJhkB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,2BACLggB,OAAK,EACLC,UAAWnM,IAEX1W,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,oBACdyK,EAAA9C,EAAA+C,cAACgkB,GAAD,QAGJjkB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,0BACLggB,OAAK,EACLC,UAAWnK,IAEX1Y,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,iBACdyK,EAAA9C,EAAA+C,cAACikB,GAAD,QAGJlkB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,uBACLggB,OAAK,EACLC,UAAWsB,IAEXnkB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,cACdyK,EAAA9C,EAAA+C,cAACkkB,GAAD,QAGJnkB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,oBAAoBggB,OAAK,GACnC5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,WACdyK,EAAA9C,EAAA+C,cAACmkB,GAAD,QAGJpkB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,aAAaggB,OAAK,GAC5B5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,YACdyK,EAAA9C,EAAA+C,cAACokB,GAAD,QAGJrkB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,gBAAgBggB,OAAK,GAC/B5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,eACdyK,EAAA9C,EAAA+C,cAACqkB,GAAD,QAGJtkB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,YAAYggB,OAAK,GAC3B5iB,EAAA9C,EAAA+C,cAAC6iB,GAAA,EAAD,CAAWvtB,KAAK,MACdyK,EAAA9C,EAAA+C,cAACskB,GAAD,QAGJvkB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOkiB,UAAWpE,kBAjNDzc,iCC5C7BwiB,GAAe,CACnB/wB,WAAY,ICECoR,GADD4f,aDCC,WAAkC,IAAjC9gB,EAAiC5S,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzByzB,GAAcxvB,EAAWjE,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE3CyzB,EAAW7mB,KAAKgG,MAAMhG,KAAKC,UAAU6F,IACzC,OAAQ3O,EAAO9D,MACb,IAAK,eACHwzB,EAASjxB,WAAauB,EAAOd,MAC7B,MACF,IAAK,gBACHwwB,EAASjxB,WAAa,GAK1B,OAAOixB,IEJYC,oLAEjB,OACE3kB,EAAA9C,EAAA+C,cAAC2kB,GAAA,EAAD,CAAU/f,MAAOA,IACf7E,EAAA9C,EAAA+C,cAACyD,EAAA,EAAD,KACE1D,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,KAEEX,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,SAASigB,UAAWhmB,KAChCmD,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,IAAIigB,UAAWT,eARNpgB,aCK3B/D,GAAU4mB,eAChB5mB,GAAQ6mB,OAAO,SAACjiB,EAAU7N,GAEtBgC,QAAQC,IAAI,UAAUjC,EAAQ6N,EAASC,SAAUD,EAASc,OAE1D9D,EAAA,EAAMklB,eAMGngB,KAKbogB,IAASnZ,OAAO7L,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAQ1C,QAASA,IAC7B+B,EAAA9C,EAAA+C,cAACglB,GAAD,OACSC,SAASC,eAAe","file":"static/js/main.caaa13f4.chunk.js","sourcesContent":["/*\n能发送异步ajax请求的函数模块\n封装axios库\n函数的返回值是promise对象\n1. 优化1: 统一处理请求异常?\n    在外层包一个自己创建的promise对象\n    在请求出错时, 不reject(error), 而是显示错误提示\n2. 优化2: 异步得到不是reponse, 而是response.data\n   在请求成功resolve时: resolve(response.data)\n */\n\nimport axios from \"axios\";\nimport { message } from \"antd\";\n\n//设置axios为form-data\n\nexport default function ajax(url, data = {}, type = \"GET\") {\n  // axios.interceptors.request.use((config) => {\n  //   if (['/user/login', '/user/register'].indexOf(config.url) === -1) {\n  //     const token = localStorage.getItem('token')\n  //     if (token) {\n  //       config.headers.Authorization = token\n  //     }\n  //   }\n  //   return config\n  // })\n  return new Promise((resolve, reject) => {\n    let promise;\n    // 1. 执行异步ajax请求\n    if (type === \"GET\") {\n      // 发GET请求\n      promise = axios.get(url, {\n        // 配置对象\n        params: data // 指定请求参数\n      });\n    } else {\n      // 发POST请求\n      axios.defaults.headers.post[\"Content-Type\"] =\n        \"application/x-www-form-urlencoded\";\n      axios.defaults.transformRequest = [\n        function(data) {\n          let ret = \"\";\n          for (let it in data) {\n            ret +=\n              encodeURIComponent(it) + \"=\" + encodeURIComponent(data[it]) + \"&\";\n          }\n          return ret;\n        }\n      ];\n      promise = axios.post(url, data);\n    }\n    // 2. 如果成功了, 调用resolve(value)\n    promise\n      .then(response => {\n        resolve(response.data);\n        // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\n      })\n      .catch(error => {\n        // reject(error)\n        message.error(\"请求出错了: \" + error.message);\n      });\n  });\n}","import ajax from \"./ajax\";\n//import storageUtils from \"../utils/storageUtils\";\n// import token from '../pages/login'\n//import memory from\n\nconst BASE = process.env.REACT_APP_HOST;\n\nvar token = localStorage.token || \"\";\n//登陆成功后赋值token\nexport const setToken = () => {\n  token = localStorage.token;\n};\n\n// 登陆\nexport const reqLogin = (username, password, authcode) =>\n  ajax(BASE + \"/login/login\", { username, password, authcode }, \"POST\");\n\n// 获取authCode\nexport const reqAuthCode = (username, password) =>\n  ajax(BASE + \"/login/authCode\", { username, password }, \"POST\");\n\n// 获取菜单\nexport const navList = () => {\n  const token = localStorage.token;\n  return ajax(BASE + \"/acl/navList\", { token }, \"POST\");\n};\n//安全码设置\nexport const getAuthCode = () =>\n  ajax(BASE + \"/index/getAuthCode\", { token }, \"POST\");\n//修改密码\nexport const editPass = password =>\n  ajax(BASE + \"/acl/editPass\", { token, password }, \"POST\");\n//用户列表\nexport const reqUsers = (page, limit, start, end, inputKey, inputValue) => {\n  return ajax(\n    BASE + \"/user/index\",\n    { page, limit, start, end, [inputKey]: inputValue, token },\n    \"POST\"\n  );\n};\n\nexport const setGameUserNickName = (id, game_nick) =>\n  ajax(BASE + \"/user/setGameUserNickName\", { token, id, game_nick }, \"POST\");\nexport const changeGold = (record, value) => {\n  let obj = {};\n  let str = \"params[user_id]\";\n  obj[str] = record.id;\n  str = \"params[amount]\";\n  obj[str] = value.gold;\n  str = \"params[reason]\";\n  obj[str] = value.desc;\n  str = \"params[user_name]\";\n  obj[str] = record.game_nick;\n  str = \"params[proxy_user_id]\";\n  obj[str] = record.proxy_user_id;\n  str = \"params[package_id]\";\n  obj[str] = record.package_id;\n  return ajax(\n    BASE + \"/user/changeGold\",\n    { token, task_type: 0, ...obj },\n    \"POST\"\n  );\n};\nexport const reqLoadGold = id => {\n  return ajax(\n    BASE + \"/user/getGameUser\",\n    {\n      page: 1,\n      limit: 10,\n      token,\n      id\n    },\n    \"POST\"\n  );\n};\nexport const userDetail = (page, limit, id) => {\n  return ajax(\n    BASE + \"/user/userDetail\",\n    {\n      page,\n      limit,\n      token,\n      id\n    },\n    \"POST\"\n  );\n};\nexport const bindInfo = (page, limit, id) => {\n  return ajax(\n    BASE + \"/user/bindInfo\",\n    {\n      page,\n      limit,\n      token,\n      user_id: id\n    },\n    \"POST\"\n  );\n};\nexport const saveUserBlack = (user_id, action) => {\n  return ajax(\n    BASE + \"/trade/saveUserBlack\",\n    {\n      token,\n      type: 1,\n      user_id,\n      action\n    },\n    \"POST\"\n  );\n};\nexport const createTask = (user_id, resetpwd) => {\n  return ajax(\n    BASE + \"/tasks/createTask\",\n    {\n      token,\n      task_type: 2,\n      \"params[id]\": user_id,\n      \"params[account_pass]\": resetpwd\n    },\n    \"POST\"\n  );\n};\n//后台管理-账户列表\nexport const reqAdminList = (page, limit) => {\n  return ajax(\n    BASE + \"/acl/index\",\n    {\n      page,\n      limit,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const searchAdminData = name => {\n  return ajax(\n    BASE + \"/acl/index\",\n    {\n      page: 1,\n      limit: 20,\n      token,\n      name\n    },\n    \"POST\"\n  );\n};\n\nexport const roleList = () => {\n  return ajax(\n    BASE + \"/acl/roleList\",\n    {\n      token\n    },\n    \"POST\"\n  );\n};\nexport const packageList = () => {\n  return ajax(\n    BASE + \"/user/packageList\",\n    {\n      token\n    },\n    \"POST\"\n  );\n};\nexport const addUser = formValue => {\n  let obj = {};\n  formValue.packageList.forEach(element => {\n    let str = \"group[\" + element + \"]\";\n    obj[str] = element;\n  });\n  let newobj = {\n    username: formValue.username,\n    status: formValue.userStatus,\n    group_id: formValue.userGroup,\n    source: formValue.proxy ? formValue.proxy : [],\n    ...obj,\n    use_money: formValue.loadGold,\n    pass: formValue.password,\n    repass: formValue.confirmPssword,\n    token\n  };\n  return ajax(BASE + \"/acl/addUser\", newobj, \"POST\");\n};\nexport const editUser = (formValue, id) => {\n  let obj = {};\n  formValue.packageList.forEach(element => {\n    let str = \"group[\" + element + \"]\";\n    obj[str] = element;\n  });\n  let newobj = {\n    id,\n    username: formValue.username,\n    status: formValue.userStatus,\n    group_id: formValue.userGroup,\n    source: formValue.proxy ? formValue.proxy : [],\n    ...obj,\n    use_money: formValue.loadGold,\n    pass: formValue.password ? formValue.password : [],\n    token\n  };\n  return ajax(BASE + \"/acl/editUser\", newobj, \"POST\");\n};\nexport const resetAuthCode = id => {\n  return ajax(\n    BASE + \"/acl/resetAuthCode\",\n    {\n      id,\n      token\n    },\n    \"POST\"\n  );\n};\n//后台管理-权限列表\nexport const ruleList = () => {\n  return ajax(\n    BASE + \"/acl/ruleList\",\n    {\n      token\n    },\n    \"POST\"\n  );\n};\nexport const addRule = value => {\n  return ajax(\n    BASE + \"/acl/addRule\",\n    {\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const editRule = (rule_id, value) => {\n  console.log(value);\n\n  return ajax(BASE + \"/acl/editRule\", { ...value, rule_id, token }, \"POST\");\n};\nexport const ruleDel = id => {\n  return ajax(\n    BASE + \"/acl/ruleDel\",\n    {\n      id,\n      token\n    },\n    \"POST\"\n  );\n};\n//后台管理-角色管理\nexport const getRoleList = (page, limit) => {\n  return ajax(\n    BASE + \"/acl/roleList\",\n    {\n      page,\n      limit,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const getRuleList = () => {\n  return ajax(\n    BASE + \"/acl/ruleList\",\n    {\n      page: 1,\n      limit: 10,\n      token,\n      flag: 1\n    },\n    \"POST\"\n  );\n};\n\nexport const addRole = (name, rules, desc) => {\n  let obj = {};\n  rules.forEach(element => {\n    let str = \"rules[\" + element + \"]\";\n    obj[str] = element;\n  });\n  let newobj = {\n    name,\n    ...obj,\n    desc,\n    token\n  };\n  return ajax(BASE + \"/acl/addRole\", newobj, \"POST\");\n};\nexport const editRole = (name, rules, desc, id) => {\n  let obj = {};\n  rules.forEach(element => {\n    let str = \"rules[\" + element + \"]\";\n    obj[str] = element;\n  });\n  let newobj = {\n    role_name: name,\n    role_id: id,\n    ...obj,\n    desc,\n    token\n  };\n  return ajax(BASE + \"/acl/editRole\", newobj, \"POST\");\n};\n//客服-公告设置\nexport const getList = (page, limit) => {\n  return ajax(\n    BASE + \"/notice/getList\",\n    {\n      page,\n      limit,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const addNotice = formData => {\n  return ajax(\n    BASE + \"/notice/addNotice\",\n    {\n      token,\n      ...formData\n    },\n    \"POST\"\n  );\n};\nexport const updateNotice = (formData, id) => {\n  return ajax(\n    BASE + \"/notice/updateNotice\",\n    {\n      token,\n      id,\n      ...formData\n    },\n    \"POST\"\n  );\n};\nexport const delNotice = id => {\n  return ajax(\n    BASE + \"/notice/delNotice\",\n    {\n      token,\n      id\n    },\n    \"POST\"\n  );\n};\n//客服-代充账号\nexport const customerList = (page, limit, user_id) => {\n  return ajax(\n    BASE + \"/customer/customerList\",\n    {\n      page,\n      limit,\n      token,\n      user_id: user_id ? user_id : \"\"\n    },\n    \"POST\"\n  );\n};\nexport const saveCustomerService = (formData, action, user_id) => {\n  if (user_id) {\n    formData.user_id = user_id;\n  }\n  return ajax(\n    BASE + \"/customer/saveCustomerService\",\n    {\n      token,\n      ...formData,\n      action\n    },\n    \"POST\"\n  );\n};\n//报表-日常运营\nexport const dailyReportInit = (page, limit) => {\n  return ajax(\n    BASE + \"/report/dailyReport\",\n    {\n      page,\n      limit,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const dailyReport = (page, limit, package_id, start = \"\", end = \"\") => {\n  return ajax(\n    BASE + \"/report/dailyReport\",\n    {\n      page,\n      limit,\n      token,\n      package_id,\n      start,\n      end\n    },\n    \"POST\"\n  );\n};\nexport const dateReport = (page, limit, package_id, start = \"\", end = \"\") => {\n  return ajax(\n    BASE + \"/report/dateReport\",\n    {\n      page,\n      limit,\n      token,\n      package_id,\n      start,\n      end,\n      group_by: \"date\"\n    },\n    \"POST\"\n  );\n};\nexport const gameReport = (page, limit, package_id, start = \"\", end = \"\") => {\n  return ajax(\n    BASE + \"/report/gameReport\",\n    {\n      page,\n      limit,\n      token,\n      package_id,\n      start,\n      end,\n      group_by: \"game_id\"\n    },\n    \"POST\"\n  );\n};\nexport const oneDayGameReport = (page, limit, package_id, date) => {\n  return ajax(\n    BASE + \"/report/gameReport\",\n    {\n      page,\n      limit,\n      token,\n      package_id,\n      date,\n      group_by: \"game_id\"\n    },\n    \"POST\"\n  );\n};\n//游戏设置-配置项\nexport const configList = (page, limit, conf_key) => {\n  return ajax(\n    BASE + \"/config/list\",\n    {\n      page,\n      limit,\n      token,\n      conf_key: conf_key ? conf_key : \"\"\n    },\n    \"POST\"\n  );\n};\nexport const saveConf = (value, action) => {\n  return ajax(\n    BASE + \"/config/saveConf\",\n    {\n      ...value,\n      action,\n      token\n    },\n    \"POST\"\n  );\n};\n//消息中心-任务列表\nexport const tasksList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/tasks/tasksList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\n\nexport const changeUserBalance = value => {\n  return ajax(\n    BASE + \"/tasks/changeUserBalance\",\n    {\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\n//交易所-收付款管理\nexport const allAccountList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/trade/allAccountList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const resetPassword = user_id => {\n  return ajax(\n    BASE + \"/trade/resetPassword\",\n    {\n      user_id,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const accountList = user_id => {\n  return ajax(BASE + \"/trade/accountList\", { user_id, token }, \"POST\");\n};\n\n//交易所-申请上架历史\nexport const sellGoldApplyList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/trade/sellGoldApplyList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const tradeRemark = value => {\n  return ajax(\n    BASE + \"/trade/tradeRemark\",\n    {\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const sellGoldInfoList = (page, limit, user_id) => {\n  return ajax(\n    BASE + \"/order/sellGoldInfoList\",\n    {\n      page,\n      limit,\n      user_id,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const reviewInfo2 = (page, limit, id) => {\n  return ajax(\n    BASE + \"/order/reviewInfo\",\n    {\n      page,\n      limit,\n      id,\n      type: 3,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const remarkInfo2 = (page, limit, id) => {\n  return ajax(\n    BASE + \"/order/remarkInfo\",\n    {\n      page,\n      limit,\n      id,\n      type: 6,\n      token\n    },\n    \"POST\"\n  );\n};\n//交易所-交易订单\nexport const sellGoldOrderList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/trade/sellGoldOrderList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\n//活动-活动列表\nexport const activityConfigList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/activity/activityConfigList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const saveActivityConfig = value => {\n  return ajax(\n    BASE + \"/activity/saveActivityConfig\",\n    {\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const delActivityConfig = id => {\n  return ajax(\n    BASE + \"/activity/delActivityConfig\",\n    {\n      id,\n      token\n    },\n    \"POST\"\n  );\n};\n\n//活动-礼金券领取列表\nexport const giftVoucherList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/activity/giftVoucherList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\n\n//充值-充值订单\nexport const reqOrder_list = (\n  page,\n  limit,\n  start_time,\n  end_time,\n  order_status,\n  type,\n  inputKey,\n  inputValue\n) => {\n  if (inputKey === \"1\" || inputKey === \"2\") {\n    inputValue = inputKey;\n    inputKey = \"time_type\";\n  }\n  return ajax(\n    BASE + \"/order/recharge\",\n    { start_time, end_time, order_status, type, token, [inputKey]: inputValue },\n    \"POST\"\n  );\n};\nexport const reqLostOrder_list = (page, limit, user_id, order_id) => {\n  return ajax(\n    BASE + \"/order/recharge\",\n    { page, limit, order_id, user_id, token },\n    \"POST\"\n  );\n};\nexport const orderReview = (user_id, order_id) => {\n  return ajax(\n    BASE + \"/order/orderReview\",\n    { user_id, order_id, status: 7, review_type: 1, token },\n    \"POST\"\n  );\n};\nexport const orderReviewEdit = (user_id, order_id, type) => {\n  return ajax(\n    BASE + \"/order/orderReview\",\n    { user_id, order_id, status: 8, review_type: 2, token, type },\n    \"POST\"\n  );\n};\nexport const downloadList = searchData => {\n  let {\n    start_time,\n    end_time,\n    order_status,\n    type,\n    inputParam,\n    paramKey\n  } = searchData;\n  if (!paramKey || paramKey === \"\") {\n    paramKey = 0;\n  }\n  let params =\n    \"token=\" +\n    token +\n    \"&filed=\" +\n    paramKey +\n    \"&keyword=\" +\n    inputParam +\n    \"&start_time=\" +\n    start_time +\n    \"&end_time=\" +\n    end_time +\n    \"&order_status=\" +\n    order_status +\n    \"&type=\" +\n    type;\n  let url = BASE + \"/order/recharge/?export=2&\" + params;\n  if (paramKey) {\n    switch (paramKey) {\n      case \"user_id\":\n        url = url + \"&user_id=\" + inputParam;\n        break;\n      case \"order_id\":\n        url = url + \"&order_id=\" + inputParam;\n        break;\n      case \"create_time\":\n        url = url + \"&time_type=1\";\n        break;\n      case \"arrival_time\":\n        url = url + \"&time_type=2\";\n        break;\n      default:\n        break;\n    }\n  }\n  window.open(url);\n};\nexport const getChannelList = (page, limit, name) => {\n  return ajax(\n    BASE + \"/order/channelList\",\n    {\n      page,\n      limit,\n      token,\n      name: name ? name : \"\"\n    },\n    \"POST\"\n  );\n};\nexport const addChannel = value => {\n  return ajax(\n    BASE + \"/order/addChannel\",\n    {\n      ...value,\n      token,\n      action: \"add\"\n    },\n    \"POST\"\n  );\n};\nexport const editPayChannel = (value, id) => {\n  return ajax(\n    BASE + \"/order/editPayChannel\",\n    {\n      ...value,\n      token,\n      id,\n      action: \"edit\"\n    },\n    \"POST\"\n  );\n};\n//充值-古都银行卡\nexport const bankList = (page, limit) => {\n  return ajax(\n    BASE + \"/order/bankList\",\n    {\n      page,\n      limit,\n      token\n    },\n    \"POST\"\n  );\n};\n\nexport const saveBankCard = (searchData, id) => {\n  if (id) {\n    searchData.id = id;\n  }\n  return ajax(\n    BASE + \"/order/saveBankCard\",\n    {\n      ...searchData,\n      action: id ? \"edit\" : \"add\",\n      token\n    },\n    \"POST\"\n  );\n};\nexport const deleteBankCard = id => {\n  return ajax(\n    BASE + \"/order/saveBankCard\",\n    {\n      id,\n      action: \"del\",\n      token\n    },\n    \"POST\"\n  );\n};\n//充值-代充订单\nexport const rechargeOrder = (\n  page,\n  limit,\n  start_time,\n  end_time,\n  order_status,\n  inputKey,\n  inputValue\n) => {\n  return ajax(\n    BASE + \"/order/rechargeOrder\",\n    {\n      page,\n      limit,\n      token,\n      type: 14,\n      start_time,\n      end_time,\n      order_status,\n      [inputKey]: inputValue\n    },\n    \"POST\"\n  );\n};\n//充值-渠道配置\nexport const getChannel = (page, limit) => {\n  return ajax(\n    BASE + \"/order/getChannel\",\n    {\n      page,\n      limit,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const getChannelInfo = channel_id => {\n  return ajax(\n    BASE + \"/order/getChannelInfo\",\n    {\n      page: 1,\n      limit: 20,\n      token,\n      channel_id\n    },\n    \"POST\"\n  );\n};\n\nexport const editChannelInfo = (id, pay_code) => {\n  return ajax(\n    BASE + \"/order/editChannelInfo\",\n    {\n      id,\n      token,\n      pay_code\n    },\n    \"POST\"\n  );\n};\n//兑换-兑换订单&代提设置\nexport const withDraw = (page, limit, flag, searchData) => {\n  if (searchData) {\n    let {\n      start_time,\n      end_time,\n      order_status,\n      type,\n      inputParam,\n      filed\n    } = searchData;\n    //处理输入关键字和选择关键字，组合成传输参数\n    let obj = {};\n    if (filed !== \"create_time\" && filed !== \"arrival_time\") {\n      obj[filed] = inputParam;\n    } else if (filed !== \"create_time\") {\n      obj.time_type = 1;\n    } else if (filed !== \"arrival_time\") {\n      obj.time_type = 2;\n    }\n    return ajax(\n      BASE + \"/order/withDraw\",\n      {\n        page,\n        limit,\n        token,\n        start_time,\n        end_time,\n        order_status,\n        type,\n        ...obj,\n        flag\n      },\n      \"POST\"\n    );\n  } else {\n    return ajax(\n      BASE + \"/order/withDraw\",\n      {\n        page,\n        limit,\n        token,\n        flag\n      },\n      \"POST\"\n    );\n  }\n};\nexport const reviewInfo = (page, limit, id) => {\n  return ajax(\n    BASE + \"/order/reviewInfo\",\n    {\n      page,\n      limit,\n      token,\n      id,\n      type: 2\n    },\n    \"POST\"\n  );\n};\nexport const remarkInfo = (page, limit, id) => {\n  return ajax(\n    BASE + \"/order/remarkInfo\",\n    {\n      page,\n      limit,\n      token,\n      id,\n      type: 2\n    },\n    \"POST\"\n  );\n};\nexport const downloadWithdrawList = searchData => {\n  let {\n    start_time,\n    end_time,\n    order_status,\n    type,\n    inputParam,\n    filed\n  } = searchData;\n  let params =\n    \"token=\" +\n    token +\n    \"&filed=\" +\n    filed +\n    \"&keyword=\" +\n    inputParam +\n    \"&start_time=\" +\n    start_time +\n    \"&end_time=\" +\n    end_time +\n    \"&order_status=\" +\n    order_status +\n    \"&type=\" +\n    type;\n  let url = BASE + \"/order/withDraw/?export=2&flag=2&\" + params;\n  if (filed) {\n    switch (filed) {\n      case \"user_id\":\n        url = url + \"&user_id=\" + inputParam;\n        break;\n      case \"order_id\":\n        url = url + \"&order_id=\" + inputParam;\n        break;\n      case \"create_time\":\n        url = url + \"&time_type=1\";\n        break;\n      case \"arrival_time\":\n        url = url + \"&time_type=2\";\n        break;\n      case \"replace_id\":\n        url = url + \"&replace_id=\" + inputParam;\n        break;\n      default:\n        break;\n    }\n  }\n  window.open(url);\n};\nexport const withDrawRemark = (id, temarks, remark_type) => {\n  return ajax(\n    BASE + \"/order/withDrawRemark\",\n    {\n      token,\n      id,\n      temarks,\n      remark_type,\n      type: 2\n    },\n    \"POST\"\n  );\n};\n//兑换-第三方提款设置\nexport const getConfigList = () => {\n  return ajax(\n    BASE + \"/config/list\",\n    {\n      conf_key: \"withdraw_channel_info\",\n      get_val: 1,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const saveWithDrawChannel = (id, name, value) => {\n  return ajax(\n    BASE + \"/config/saveWithDrawChannel\",\n    {\n      id,\n      name,\n      ...value,\n      \"alipay[name]\": \"支付宝\",\n      \"alipay[withdraw_type]\": 1,\n      \"bankcard[name]\": \"银行卡\",\n      \"bankcard[withdraw_type]\": 2,\n      conf_key: \"withdraw_channel_info\",\n      action: \"edit\",\n      token\n    },\n    \"POST\"\n  );\n};\n//赠送-赠送订单\nexport const withDrawReview = (order_id, user_id, review_status) => {\n  return ajax(\n    BASE + \"/order/withDraw\",\n    {\n      token,\n      order_id,\n      review_status,\n      user_id,\n      review_type: 1,\n      is_pass: 1\n    },\n    \"POST\"\n  );\n};\n//AI\nexport const getAIList = (page, limit, package_id, value) => {\n  return ajax(\n    BASE + \"/user/index\",\n    {\n      page,\n      limit,\n      package_id,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const changeInternalUserBalance = (user_id, amount) => {\n  return ajax(\n    BASE + \"/user/changeInternalUserBalance\",\n    {\n      user_id,\n      amount,\n      token\n    },\n    \"POST\"\n  );\n};\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Icon, Input, Button, Modal, message } from \"antd\";\nimport \"./login.less\";\nimport { reqLogin, reqAuthCode, navList, setToken } from \"../../api\";\n\nconst Item = Form.Item;\n\n/*\n登陆的路由组件\n */\nclass Login extends Component {\n  getMenuList = async () => {\n    const result = await navList();\n    if (result.status === 0) {\n      let { data } = result;\n      data.forEach(element => {\n        if (element.children) {\n          element.children.forEach(item => {\n            item.title = item.title.slice(24);\n          });\n        }\n      });\n      localStorage.menuList = JSON.stringify(data);\n      // 跳转到管理界面 (不需要再回退回到登陆)\n      this.props.history.replace(\"/\");\n\n      // setTimeout(() => this.props.history.replace(\"/\"), 300);\n    }\n  };\n  handleSubmit = event => {\n    // 阻止事件的默认行为\n    event.preventDefault();\n\n    // 对所有表单字段进行检验\n    this.props.form.validateFields(async (err, values) => {\n      // 检验成功\n      if (!err) {\n        // 请求登陆\n        const { username, password, authcode } = values;\n        const result = await reqLogin(username, password, authcode);\n\n        if (result.status === 0) {\n          // 登陆成功\n          message.success(\"登陆成功\");\n          localStorage.token = result.data.token;\n          localStorage.name = result.data.name;\n          localStorage.tokenTimeStamp = new Date().getTime();\n          setToken();\n          this.getMenuList();\n        } else {\n          // 登陆失败\n          // 提示错误信息\n          message.error(result.msg);\n        }\n      } else {\n        console.log(\"检验失败!\");\n      }\n    });\n  };\n\n  handleClick = () => {\n    this.props.form.validateFields(async (err, values) => {\n      // 检验成功\n      if (!err) {\n        // 请求登陆\n        const { username, password } = values;\n        const result = await reqAuthCode(username, password);\n        // console.log(\"请求成功\", result);\n        if (result.status === 0 && result.data) {\n          // 登陆成功\n          Modal.info({\n            title: \"首次登录扫码获取验证码\",\n            content: (\n              <div>\n                <img src={result.data.qrurl} alt=\"验证码\" />\n              </div>\n            )\n          });\n        } else {\n          // 登陆失败\n          // 提示错误信息\n          message.error(result.msg);\n        }\n      } else {\n        console.log(\"检验失败!\");\n      }\n    });\n\n    // 得到form对象\n    // const form = this.props.form\n    // // 获取表单项的输入数据\n    // const values = form.getFieldsValue()\n    // console.log('handleSubmit()', values)\n  };\n  /*\n  对密码进行自定义验证\n  */\n  /*\n   用户名/密码的的合法性要求\n     1). 必须输入\n     2). 必须大于等于4位\n     3). 必须小于等于12位\n     4). 必须是英文、数字或下划线组成\n    */\n  validatePwd = (rule, value, callback) => {\n    console.log(\"validatePwd()\", rule, value);\n    if (!value) {\n      callback(\"密码必须输入\");\n    } else if (value.length < 4) {\n      callback(\"密码长度不能小于4位\");\n    } else if (value.length > 12) {\n      callback(\"密码长度不能大于12位\");\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n      callback(\"密码必须是英文、数字或下划线组成\");\n    } else {\n      callback(); // 验证通过\n    }\n    // callback('xxxx') // 验证失败, 并指定提示的文本\n  };\n\n  render() {\n    // 如果用户已经登陆, 自动跳转到管理界面\n    const token = localStorage.token;\n    if (token) {\n      return <Redirect to=\"/\" />;\n    }\n    // 得到具强大功能的form对象\n    const form = this.props.form;\n    const { getFieldDecorator } = form;\n\n    return (\n      <div className=\"login\">\n        <header className=\"login-header\">\n          <h1>QGame: 后台管理系统</h1>\n        </header>\n        <section className=\"login-content\">\n          <h2>用户登陆</h2>\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Item>\n              {/*\n              用户名/密码的的合法性要求\n                1). 必须输入\n                2). 必须大于等于4位\n                3). 必须小于等于12位\n                4). 必须是英文、数字或下划线组成\n               */}\n              {getFieldDecorator(\"username\", {\n                // 配置对象: 属性名是特定的一些名称\n                // 声明式验证: 直接使用别人定义好的验证规则进行验证\n                rules: [\n                  {\n                    required: true,\n                    whitespace: true,\n                    message: \"用户名必须输入\"\n                  },\n                  { min: 3, message: \"用户名至少3位\" },\n                  { max: 12, message: \"用户名最多12位\" },\n                  {\n                    pattern: /^[a-zA-Z0-9_]+$/,\n                    message: \"用户名必须是英文、数字或下划线组成\"\n                  }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"用户名\"\n                />\n              )}\n            </Item>\n            <Form.Item>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  {\n                    validator: this.validatePwd\n                  }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"密码\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"authcode\", {\n                rules: [\n                  //{ required: true, whitespace: true, message: '验证码必须输入' },\n                  //{ min: 4, message: '验证码至少4位' }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"qrcode\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"验证码\"\n                />\n              )}\n            </Form.Item>\n            <span style={{ marginTop: 5 }} onClick={this.handleClick}>\n              首次登录，手机下载Google Authenticator\n              安装，点击此处扫码获取验证码\n            </span>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n              >\n                登陆\n              </Button>\n            </Form.Item>\n          </Form>\n        </section>\n      </div>\n    );\n  }\n}\nconst WrapLogin = Form.create()(Login);\nexport default WrapLogin;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Menu, message } from \"antd\";\nimport { navList } from \"../../api\";\nimport \"./index.less\";\n\nconst SubMenu = Menu.SubMenu;\n// 左侧导航的组件\nclass LeftNav extends Component {\n  constructor() {\n    super();\n    this.state = { data: [], openKey: \"\" };\n  }\n  getMenuList = async () => {\n    const result = await navList();\n\n    if (result.status === 0) {\n      //登陆成功\n      this.setState({\n        data: result.data\n      });\n    } else {\n      // 提示错误信息\n      message.error(result.msg);\n    }\n  };\n  /*\n   获取左侧菜单导航栏\n    */\n  getMenuList = async () => {\n    const result = await navList();\n    if (result.status === 0) {\n      this.setState({\n        data: result.data\n      });\n    } else {\n      message.error(\"网络问题，请重新登陆\");\n    }\n  };\n\n  /*\n  根据menu的数据数组生成对应的标签数组\n  使用reduce() + 递归调用\n  */\n  getMenuNodes = menuList => {\n    // 得到当前请求的路由路径\n    const path = this.props.location.pathname;\n    return menuList.reduce((pre, item) => {\n      // 向pre添加<Menu.Item>\n      // if (item.key) {\n        //按需渲染侧边栏，必须已经在后台-权限管理中设置了路由key才能渲染\n        if (!item.children) {\n          pre.push(\n            <Menu.Item\n              key={item.key}\n              onClick={() => {\n                this.props.onClick(item);\n                this.openMenu = item.key;\n              }}\n            >\n              <Link to={item.key}>\n                {/* <Icon type={item.icon} /> */}\n                <span>{item.title}</span>\n              </Link>\n            </Menu.Item>\n          );\n        } else {\n          // 查找一个与当前请求路径匹配的子Item\n          const cItem = item.children.find(\n            currentValue => path.indexOf(currentValue.key) === 0\n          );\n          // 如果存在, 说明当前item的子列表需要打开\n          if (cItem) {\n            this.openKey = item.key;\n            // this.setState({ openKey: item.key });\n          }\n          pre.push(\n            <SubMenu\n              key={item.key}\n              title={\n                <span>\n                  <span>{item.title}</span>\n                </span>\n              }\n              onClick={() => {\n                this.openMenu = item.key;\n                // console.log(this.openMenu);\n              }}\n            >\n              {item.children.reduce((cpre, ele) => {\n                cpre.push(\n                  <Menu.Item\n                    key={ele.key}\n                    onClick={() => {\n                      this.props.onClick(ele);\n                    }}\n                  >\n                    <Link to={ele.key}>\n                      <span>{ele.title}</span>\n                    </Link>\n                  </Menu.Item>\n                );\n                return cpre;\n              }, [])}\n            </SubMenu>\n          );\n        }\n      // }\n      return pre;\n    }, []);\n  };\n  componentDidMount() {\n    this.setState({openKey:this.openKey})\n  }\n  render() {\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\n    const menuNodes = this.getMenuNodes(menuList);\n    // 得到当前请求的路由路径\n    let path = this.props.location.pathname;\n    // 得到需要打开菜单项的key\n    // const openKey = this.openKey;\n\n    return (\n      <div className=\"left-nav\">\n        <Link\n          to=\"/\"\n          className=\"left-nav-header\"\n          style={{ justifyContent: \"center\" }}\n        >\n          <h1>QGame后台管理</h1>\n        </Link>\n        <Menu\n          mode=\"inline\"\n          theme=\"dark\"\n          selectedKeys={[path]}\n          // defaultOpenKeys={[this.openKey]}\n          onOpenChange={key => {\n            console.log(key);\n            if (key[1] && key[0] !== key[1]) {\n              this.setState({ openKey: key[1] });\n            } else {\n              this.setState({ openKey: null });\n            }\n          }}\n          openKeys={[this.state.openKey]}\n        >\n          {menuNodes}\n        </Menu>\n      </div>\n    );\n  }\n}\n\n/*\nwithRouter高阶组件:\n包装非路由组件, 返回一个新的组件\n新的组件向非路由组件传递3个属性: history/location/match\n */\nexport default withRouter(LeftNav);\n","import React from \"react\";\nimport { Button } from \"antd\";\nexport default function LinkButton(props) {\n  return (\n    <Button\n      type=\"primary\"\n      size='small'\n      style={{ marginRight: 10}}\n      {...props}\n    ></Button>\n  );\n}\n","/*\n用来在内存保存一些数据的工具模块\n */\nexport default {\n  user: {}, // 保存当前登陆的user\n  token:''\n}","/*\n进行local数据存储管理的工具模块\n */\nimport store from 'store'\nconst USER = 'user_key'\nexport default {\n  /*\n  保存user\n   */\n  saveUser (user) {\n    // localStorage.setItem(USER_TOKEN, JSON.stringify(user))\n    store.set(USER, user)\n  },\n\n  /*\n  读取user\n   */\n  getUser () {\n    // return JSON.parse(localStorage.getItem(USER_TOKEN) || '{}')\n    return store.get(USER) || {}\n  },\n\n  /*\n  删除user\n   */\n  removeUser () {\n    localStorage.removeItem(USER)\n    store.remove(USER)\n  }\n}","import React, { Component } from \"react\";\nimport { browserHistory } from \"react-router\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport {\n  Modal,\n  Tabs,\n  Dropdown,\n  Menu,\n  Icon,\n  Button,\n  message,\n  Input,\n  Form\n} from \"antd\";\n\nimport LinkButton from \"../link-button\";\nimport memoryUtils from \"../../utils/memoryUtils\";\nimport storageUtils from \"../../utils/storageUtils\";\nimport { getAuthCode, editPass } from \"../../api\";\nimport QRCode from \"qrcode.react\";\nimport \"./index.less\";\nconst { TabPane } = Tabs;\n/*\n左侧导航的组件\n */\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.newTabIndex = 0;\n    const panes = [\n      {\n        title: \"首页\",\n        content: \"Content of Tab 1\",\n        key: \"1\",\n        closable: false,\n        path: \"/home\"\n      }\n    ];\n    this.state = {\n      activeKey: panes[0].key,\n      panes,\n      isEditFormShow: false\n    };\n  }\n  onChange = activeKey => {\n    this.setState({ activeKey });\n  };\n\n  onEdit = (targetKey, action) => {\n    this[action](targetKey);\n  };\n\n  add = tabConfig => {\n    // console.log(\"tabConfig\", tabConfig);\n    const { panes } = this.state;\n    let isTabExist = false;\n    let oldKey;\n    panes.forEach(item => {\n      if (item.title === tabConfig.title) {\n        isTabExist = true;\n        oldKey = item.key;\n      }\n    });\n    if (isTabExist) {\n      this.onChange(oldKey);\n    } else {\n      const activeKey = `newTab${this.newTabIndex++}`;\n      panes.push({\n        title: tabConfig.title,\n        content: \"Content of new Tab\",\n        key: activeKey,\n        path: tabConfig.key\n      });\n      this.onChange(activeKey);\n      this.setState({ panes, activeKey });\n    }\n  };\n\n  remove = targetKey => {\n    let { activeKey } = this.state;\n    let lastIndex;\n    this.state.panes.forEach((pane, i) => {\n      if (pane.key === targetKey) {\n        lastIndex = i - 1;\n      }\n    });\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n    if (panes.length && activeKey === targetKey) {\n      if (lastIndex >= 0) {\n        activeKey = panes[lastIndex].key;\n        // browserHistory.push(panes[lastIndex].path);\n        this.props.history.push(panes[lastIndex].path);\n      } else {\n        activeKey = panes[0].key;\n      }\n    }\n    this.setState({ panes, activeKey });\n  };\n\n  //退出LOG OUT\n  logout = () => {\n    // 显示确认框\n    Modal.confirm({\n      content: \"确定退出吗?\",\n      onOk: () => {\n        console.log(\"OK\", this);\n        // 删除保存的user数据\n        // storageUtils.removeUser();\n        // memoryUtils.user = {};\n        // localStorage={}\n        localStorage.removeItem(\"menuList\");\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"name\");\n        localStorage.removeItem(\"tokenTimeStamp\");\n        // 跳转到login\n        this.props.history.replace(\"/login\");\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    // 清除定时器\n    clearInterval(this.intervalId);\n  }\n  componentDidMount() {\n    this.props.onRef && this.props.onRef(this);\n    let data = this.state;\n    const path = this.props.location.pathname;\n    let title;\n    if (path !== \"/home\" && path !== \"/\") {\n      const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\n      menuList.forEach(item => {\n        if (!item.children && item.key === path) {\n          title = item.title;\n        } else if (item.children) {\n          item.children.forEach(val => {\n            if (val.key === path) {\n              title = val.title;\n            }\n          });\n        }\n      });\n      data.activeKey = \"2\";\n      data.panes.push({\n        title: title,\n        key: \"2\",\n        path: path\n      });\n      this.setState({\n        ...data\n      });\n    }\n  }\n\n  render() {\n    const username = localStorage.getItem(\"name\");\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    return (\n      <div className=\"header\">\n        <div className=\"header-top\">\n          <Dropdown\n            overlay={\n              <Menu>\n                <Menu.Item key=\"0\">\n                  <Button type=\"link\" onClick={this.authCode}>\n                    安全码设置\n                  </Button>\n                </Menu.Item>\n                <Menu.Item key=\"1\">\n                  <Button type=\"link\" onClick={this.resetPWD}>\n                    修改密码\n                  </Button>\n                </Menu.Item>\n              </Menu>\n            }\n            trigger={[\"click\"]}\n          >\n            <Button type=\"link\">\n              {username} <Icon type=\"down\" />\n            </Button>\n          </Dropdown>\n          <LinkButton onClick={this.logout} size=\"default\">\n            退出\n          </LinkButton>\n        </div>\n        <div className=\"header-bottom\">\n          {/* <div className=\"header-bottom-left\">{title}</div> */}\n          <Tabs\n            onChange={this.onChange}\n            activeKey={this.state.activeKey}\n            type=\"editable-card\"\n            onEdit={this.onEdit}\n            hideAdd\n          >\n            {this.state.panes.map(pane => (\n              <TabPane\n                tab={<Link to={pane.path}>{pane.title}</Link>}\n                key={pane.key}\n                closable={pane.closable}\n                forceRender\n              />\n            ))}\n          </Tabs>\n        </div>\n        {this.state.isEditFormShow && (\n          <Modal\n            title=\"编辑\"\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <Form\n              labelCol={{ span: 6 }}\n              labelAlign=\"left\"\n              onSubmit={this.handleEditSubmit}\n            >\n              <Form.Item label=\"新密码\">\n                {getFieldDecorator(\"editPass\", {\n                  rules: [\n                    { required: true, message: \"密码不能为空\" },\n                    { whitespace: true },\n                    { min: 6, message: \"密码至少6位\" },\n                    { max: 16, message: \"密码最多16位\" }\n                    // {\n                    //   pattern: /^[a-zA-Z0-9_]+$/,\n                    //   message: \"用户名必须是英文、数字或下划线组成\"\n                    // }\n                  ]\n                })(\n                  <Input\n                    style={{ width: \"40%\" }}\n                    type=\"password\"\n                    placeholder=\"6到16个字符\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item label=\"重复密码\">\n                {getFieldDecorator(\"repeat\", {\n                  rules: [\n                    { required: true },\n                    {\n                      validator: (rule, value, callback) => {\n                        if (!value) {\n                          callback(); //如果还没填写，则不进行一致性验证\n                        }\n                        if (value === getFieldValue(\"editPass\")) {\n                          callback();\n                        } else {\n                          callback(\"两次密码不一致\");\n                        }\n                      }\n                    }\n                  ]\n                })(\n                  <Input\n                    style={{ width: \"40%\" }}\n                    type=\"password\"\n                    placeholder=\"6到16个字符\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  提交\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n  authCode = async () => {\n    const res = await getAuthCode();\n    if (res.status === 0) {\n      Modal.info({\n        title: \"扫码获取验证码\",\n        content: <QRCode value={res.data.qrurl}></QRCode>,\n        width: 300\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  resetPWD = () => {\n    this.setState({ isEditFormShow: true });\n  };\n  handleEditSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      if (!err) {\n        const res = await editPass(value.editPass);\n        if (res.status === 0) {\n          message.success(res.msg);\n        } else {\n          message.error(res.msg);\n        }\n      }\n    });\n  };\n}\nconst WrappedHeader = Form.create()(Header);\nexport default withRouter(WrappedHeader);\n","import React, { Component } from \"react\";\n// import ElasticText from \"../../components/elasticText\";\n// import { Icon} from \"antd\";\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      res: \"\"\n    };\n    this.i = 0;\n    this.timer = 0;\n    this.str = \"欢迎您来到QGame后台管理系统\";\n  }\n  typing = () => {\n    if (this.i <= this.str.length) {\n      this.setState(\n        {\n          res: this.str.slice(0, this.i++) + \"__\"\n        },\n        () => {\n          this.timer = setTimeout(() => this.typing(), 200);\n        }\n      );\n    } else {\n      this.setState({\n        res: this.str\n      });\n      clearTimeout(this.timer);\n    }\n  };\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  componentDidMount() {\n    this.typing();\n  }\n  render() {\n    return <span style={{ fontSize: \"20px\" }}>{this.state.res}</span>;\n    // <ElasticText></ElasticText>\n  }\n}\n","import moment from \"moment\";\n/*\n包含n个日期时间处理的工具函数模块\n*/\n\n/*\n  格式化日期\n*/\nexport function formateDate(time) {\n  if (!time) return \"\";\n  let timeStamp = parseInt(time);\n  if (timeStamp === 0) return \"\";\n  return moment(timeStamp * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n  // let date = new Date(time * 1000);\n  // return (\n  //   date.getFullYear() +\n  //   \"-\" +\n  //   (date.getMonth() + 1) +\n  //   \"-\" +\n  //   date.getDate() +\n  //   \" \" +\n  //   date.getHours() +\n  //   \":\" +\n  //   date.getMinutes() +\n  //   \":\" +\n  //   date.getSeconds()\n  // );\n}\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input } from \"antd\";\n\nconst FormItem = Form.Item;\nclass NormalLoginForm extends Component {\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { isNickModal } = this.props;\n    return (\n      <Form className=\"login-form\">\n        <FormItem style={isNickModal ? {} : { display: \"none\" }}>\n          {getFieldDecorator(\"name\", {\n            rules: [\n              {\n                required: isNickModal,\n                message: \"Please input your username!\"\n              }\n            ],\n            initialValue: this.props.val\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"请输入昵称\"\n            />\n          )}\n        </FormItem>\n        <FormItem label=\"金额\" style={isNickModal ? { display: \"none\" } : {}}>\n          {getFieldDecorator(\"gold\", {\n            rules: [\n              {\n                required: !isNickModal,\n                whitespace: true,\n                pattern: /^\\d+(\\.\\d+)?$/,\n                message: \"必须为数字，减少时金额为负\"\n              }\n            ],\n          })(<Input placeholder=\"必须为数字，减少时金额为负\" />)}\n        </FormItem>\n        <FormItem label=\"备注\" style={isNickModal ? { display: \"none\" } : {}}>\n          {getFieldDecorator(\"desc\", {\n            rules: [\n              { max: 400, message: \"最多400字\" },\n              {\n                required: !isNickModal\n              }\n            ]\n          })(\n            <Input.TextArea\n              placeholder=\"请输入文字\"\n              autosize={{ minRows: 2, maxRows: 6 }}\n            />\n          )}\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nexport default WrappedNormalLoginForm;\n","import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nclass GoldDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { data } = this.props.GoldDetailRecord;\n    return (\n      <Table\n        bordered\n        rowKey=\"_id\"\n        dataSource={data}\n        columns={this.initColumns()}\n        size=\"small\"\n      />\n    );\n  }\n  initColumns = () => {\n    if (this.props.isBindInfo) {\n      return [\n        {\n          title: \"支付宝账号\",\n          dataIndex: \"alipay_account\"\n        },\n        {\n          title: \"绑定支付宝时间\",\n          dataIndex: \"bind_alipay_at\"\n        },\n\n        {\n          title: \"开户人姓名\",\n          dataIndex: \"card_name\"\n        },\n        {\n          title: \"银行名称\",\n          dataIndex: \"bank_name\",\n        },\n        {\n          title: \"银行卡号\",\n          dataIndex: \"bank_num\"\n        },\n        {\n          title: \"绑定银行卡时间\",\n          dataIndex: \"bind_bank_at\"\n        },\n        {\n          title: \"是否灰名单\",\n          dataIndex: \"is_gray\"\n        },\n        {\n          title: \"灰名单备注\",\n          dataIndex: \"black_remark\"\n        },\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"remark_at\"\n        },\n        {\n          title: \"操作\",\n          dataIndex: \"option\"\n        }\n      ];\n    } else {\n      return [\n        {\n          title: \"user_id\",\n          dataIndex: \"id\"\n        },\n        {\n          title: \"产生来源\",\n          dataIndex: \"pay_account_name\"\n        },\n\n        {\n          title: \"余额(变动前)\",\n          dataIndex: \"total_balance\"\n        },\n        {\n          title: \"变动金额\",\n          dataIndex: \"final_pay\",\n\n          sorter: (a, b) => a.total_balance - b.total_balance\n        },\n        {\n          title: \"税收\",\n          dataIndex: \"tax\"\n        },\n        {\n          title: \"余额(变动后)\",\n          dataIndex: \"total_final_balance\"\n        },\n        {\n          title: \"备注\",\n          dataIndex: \"pay_reason\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"create_time\"\n        }\n      ];\n    }\n  };\n}\n\nexport default GoldDetail;\n","import React from \"react\";\nimport { DatePicker, ConfigProvider } from \"antd\";\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\nimport \"moment/locale/zh-cn\";\n\nconst { RangePicker } = DatePicker;\nexport default function MyDatePicker(props) {\n  return (\n    <ConfigProvider locale={zh_CN}>\n      <RangePicker\n        // defaultValue={[moment().locale(\"zh-cn\")]}\n        style={{width:300}}\n        showTime={{ format: \"HH:mm\" }}\n        format=\"YYYY-MM-DD HH:mm:00\"\n        placeholder={[\"开始日期\", \"结束日期\"]}\n        onChange={(data, dateString) => {\n          props.handleValue(dateString);\n        }}\n        // disabledDate={disabledDate}\n        // disabledTime={disabledRangeTime}\n        {...props}\n      />\n    </ConfigProvider>\n  );\n}\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Select,\n  Input,\n  Popconfirm,\n  Button\n} from \"antd\";\n// import moment from \"moment\";\nimport { formateDate } from \"../../utils/dateUtils\";\nimport LinkButton from \"../../components/link-button/index\";\nimport {\n  reqUsers,\n  setGameUserNickName,\n  changeGold,\n  reqLoadGold,\n  userDetail,\n  bindInfo,\n  saveUserBlack,\n  createTask\n} from \"../../api/index\";\nimport WrappedNormalLoginForm from \"././user-nick\";\nimport WrappedComponent from \"./gold_details\";\nimport MyDatePicker from \"../../components/MyDatePicker\";\n\nconst { Option } = Select;\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isNickShow: false,\n      isGoldShow: false,\n      isGoldDetailShow: false,\n      isBindInfoShow: false,\n      isResetPwdShow: false,\n      resetpwd: \"\",\n      game_nick: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      loading: false\n    };\n    this.inputKey = \"id\";\n    this.inputValue = \"\";\n  }\n\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"id\",\n      key: \"id\",\n      fixed: \"left\",\n      width: 150\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"game_nick\",\n      key: \"game_nick\",\n      fixed: \"left\",\n      width: 150,\n      onCell: (record, rowIndex) => {\n        return {\n          onClick: event => {\n            this.game_nick = record.game_nick;\n            this.id = record.id;\n            this.rowIndex = rowIndex;\n            this.setState({\n              isNickShow: true\n            });\n          }, // 点击行\n          onDoubleClick: event => {},\n          onContextMenu: event => {},\n          onMouseEnter: event => {\n            event.target.style.cursor = \"pointer\";\n          }, // 鼠标移入行\n          onMouseLeave: event => {}\n        };\n      }\n    },\n\n    {\n      title: \"账户余额\",\n      dataIndex: \"game_gold\",\n      key: \"game_gold\",\n      sorter: (a, b) => a.game_gold - b.game_gold,\n      width: 150,\n      onCell: (record, rowIndex) => {\n        return {\n          onClick: event => {\n            this.goldRecord = record;\n            this.setState({\n              isGoldShow: true\n            });\n          }, // 点击行\n          onDoubleClick: event => {},\n          onContextMenu: event => {},\n          onMouseEnter: event => {\n            event.target.style.cursor = \"pointer\";\n          }, // 鼠标移入行\n          onMouseLeave: event => {}\n        };\n      }\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      key: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_nick\",\n      key: \"proxy_nick\",\n      width: 150\n    },\n    {\n      title: \"手机\",\n      dataIndex: \"phone_number\",\n      key: \"phone_number\",\n      width: 150\n    },\n    {\n      title: \"账号\",\n      dataIndex: \"role_name\",\n      key: \"role_name\",\n      width: 150\n    },\n    {\n      title: \"注册时间\",\n      dataIndex: \"regin_time\",\n      render: formateDate,\n      key: \"regin_time\",\n      sorter: (a, b) => a.regin_time - b.regin_time,\n      width: 200\n    },\n    {\n      title: \"登录IP\",\n      dataIndex: \"login_ip\",\n      key: \"login_ip\",\n      width: 200\n    },\n    {\n      title: \"登陆时间\",\n      dataIndex: \"login_time\",\n      render: formateDate,\n      sorter: (a, b) => a.login_time - b.login_time,\n      width: 200\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getGoldDetail(record)} size=\"small\">\n            资金明细\n          </LinkButton>\n          <LinkButton onClick={() => this.getMoreDetail(record)} size=\"small\">\n            更多\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"实时余额\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton size=\"small\" onClick={() => this.getLoadGold(record)}>\n            查看\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n\n  getUsers = async (page, limit) => {\n    const result = await reqUsers(\n      page,\n      limit,\n      this.state.startTime,\n      this.state.endTime,\n      this.inputKey,\n      this.inputValue\n    );\n    if (result.status === 0) {\n      const { game_user, proxy_user } = result.data;\n      game_user.forEach(element => {\n        proxy_user.forEach(item => {\n          if (element.id === item.id) {\n            element.proxy_nick = item.proxy_pid;\n          }\n        });\n      });\n      this.setState({\n        data: game_user,\n        count: result.count\n      });\n    } else {\n      message.error(result.msg);\n    }\n  };\n  changeNickName = () => {\n    let form = this.refs.getFormValue; //通过refs属性可以获得对话框内form对象\n    form.validateFields(async (err, value) => {\n      if (!err) {\n        this.setState({ isNickShow: false });\n        if (value.name !== this.game_nick) {\n          const result = await setGameUserNickName(this.id, value.name);\n          if (result.status === 0) {\n            message.success(\"修改成功!\");\n            // 首先拿到索引, 也可以从参数中传递过来\n            let index = this.rowIndex;\n            // 然后根据索引修改\n            this.state.data[index][`game_nick`] = value.name;\n            // 这个时候并不会更新视图, 需要 setState更新 arr\n            this.setState({\n              data: this.state.data\n            });\n          }\n        }\n      }\n      form.resetFields();\n    });\n  };\n  changeGold = () => {\n    this.setState({ loading: true });\n    //这里直接复用了user-nick的模态框，所以取input的值时用value.name\n    let form = this.refs.getFormValue;\n    let goldRecord = this.goldRecord;\n    form.validateFields(async (err, value) => {\n      const res = await changeGold(goldRecord, value);\n      if (res.status === 0) {\n        message.success(res.msg);\n        this.setState({ isGoldShow: false, loading: false });\n      } else {\n        this.setState({ loading: false });\n        message.error(res.msg);\n      }\n      form.resetFields();\n    });\n  };\n  handleChange(event) {\n    let data = Object.assign({}, this.state.inputParam, {\n      val: event.target.value\n    });\n    this.setState({ inputParam: data });\n  }\n  getLoadGold = async record => {\n    const id = record.id;\n    const result = await reqLoadGold(id);\n    if (result.status === 0) {\n      Modal.success({\n        title: \"实时余额\",\n        content: `用户${record.id}实时余额是 : ${result.data[0].game_gold}`\n      });\n    }\n  };\n  getGoldDetail = async (record, isBindInfo) => {\n    this.moreModal.destroy();\n    this.isBindInfo = isBindInfo;\n    this.GoldDetailRecord = {\n      data: [],\n      count: 0,\n      id: record.id\n    };\n    const res = !isBindInfo\n      ? await userDetail(1, 20, record.id)\n      : await bindInfo(1, 20, record.id);\n    if (res.status === 0) {\n      this.GoldDetailRecord.data = res.data;\n      this.GoldDetailRecord.count = res.count;\n    }\n    this.setState({ isGoldDetailShow: true });\n  };\n  saveUserBlack = async (record, isAdd) => {\n    let action = isAdd ? \"add\" : \"remove\";\n    const res = await saveUserBlack(record.id, action);\n    if (res.status === 0) {\n      message.success(\"操作成功！\");\n    } else {\n      message.success(\"操作失败:\" + res.msg);\n    }\n  };\n  resetPwd = record => {\n    this.moreModal.destroy();\n    this.setState({ isResetPwdShow: true });\n    this.resetPwdId = record.id;\n  };\n  handleResetpwd = async () => {\n    const res = await createTask(this.resetPwdId, this.state.resetpwd);\n    if (res.status === 0) {\n      message.success(\"操作成功！\");\n      this.setState({ resetpwd: \"\", isResetPwdShow: false });\n    } else {\n      message.success(\"操作失败:\" + res.msg);\n    }\n  };\n  getMoreDetail = record => {\n    this.moreModal = Modal.info({\n      title: \"更多\",\n      okText: \"关闭\",\n      width:'50%',\n      content: (\n        <div>\n          <LinkButton\n            onClick={() => this.getGoldDetail(record, true)}\n            size=\"small\"\n          >\n            查看绑定信息\n          </LinkButton>\n          <Popconfirm\n            title=\"交易所黑名单\"\n            onConfirm={() => this.saveUserBlack(record, true)}\n            onCancel={() => this.saveUserBlack(record, false)}\n            okText=\"添加\"\n            cancelText=\"移除\"\n          >\n            <LinkButton size=\"small\">交易所黑名单</LinkButton>\n          </Popconfirm>\n          <LinkButton onClick={() => this.resetPwd(record)} size=\"small\">\n            重置密码\n          </LinkButton>\n        </div>\n      )\n    });\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    const { data, count } = this.state;\n    const title = (\n      <span>\n        <MyDatePicker\n          handleValue={val => {\n            this.setState({\n              startTime: val[0],\n              endTime: val[1]\n            });\n          }}\n        />\n        &nbsp; &nbsp;\n        <Select\n          style={{ width: 200 }}\n          placeholder=\"Select a person\"\n          defaultValue=\"id\"\n          onChange={val => {\n            this.inputKey = val;\n          }}\n        >\n          <Option value=\"id\">user_id</Option>\n          <Option value=\"game_nick\">昵称</Option>\n          <Option value=\"phone_number\">手机号</Option>\n          <Option value=\"role_name\">账号</Option>\n          <Option value=\"proxy_nick\">所属代理</Option>\n          <Option value=\"package_nick\">所属品牌</Option>\n        </Select>\n        &nbsp; &nbsp;\n        <Input\n          type=\"text\"\n          placeholder=\"请输入关键字搜索\"\n          style={{ width: 150 }}\n          ref={Input => (this.input = Input)}\n        />\n        &nbsp; &nbsp;\n        <LinkButton\n          onClick={() => {\n            this.inputValue = this.input.input.value;\n            this.getUsers(1, this.state.pageSize);\n          }}\n          size=\"default\"\n        >\n          <Icon type=\"search\" />\n        </LinkButton>\n      </span>\n    );\n    const extra = (\n      <LinkButton\n        onClick={() => {\n          window.location.reload();\n        }}\n        size=\"default\"\n      >\n        <Icon type=\"reload\" />\n      </LinkButton>\n    );\n    return (\n      <Card title={title} extra={extra}>\n        <Table\n          bordered\n          rowKey=\"_id\"\n          dataSource={data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 1900, y: \"65vh\" }}\n        />\n        <Modal\n          title=\"修改昵称\"\n          visible={this.state.isNickShow}\n          onOk={this.changeNickName}\n          onCancel={() => {\n            this.setState({ isNickShow: false });\n          }}\n        >\n          <WrappedNormalLoginForm\n            ref=\"getFormValue\"\n            val={this.game_nick}\n            isNickModal\n          />\n        </Modal>\n        <Modal\n          title=\"修改金额\"\n          visible={this.state.isGoldShow}\n          // onOk={this.changeGold}\n          onCancel={() => {\n            this.setState({ isGoldShow: false });\n          }}\n          footer={[\n            <Button\n              key=\"back\"\n              onClick={() => {\n                this.setState({ isGoldShow: false });\n              }}\n            >\n              取消\n            </Button>,\n            <Button\n              key=\"submit\"\n              type=\"primary\"\n              loading={this.state.loading}\n              onClick={this.changeGold}\n            >\n              确定\n            </Button>\n          ]}\n        >\n          <WrappedNormalLoginForm\n            ref=\"getFormValue\"\n            goldRecord={this.goldRecord}\n          />\n        </Modal>\n        <Modal\n          title={this.isBindInfo ? \"查看绑定信息\" : \"资金明细\"}\n          visible={this.state.isGoldDetailShow}\n          onCancel={() => {\n            this.setState({ isGoldDetailShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <WrappedComponent\n            GoldDetailRecord={this.GoldDetailRecord}\n            isBindInfo={this.isBindInfo}\n          />\n        </Modal>\n        <Modal\n          title=\"重置密码\"\n          visible={this.state.isResetPwdShow}\n          onOk={this.handleResetpwd}\n          onCancel={() => {\n            this.setState({ isResetPwdShow: false });\n          }}\n        >\n          <span>重置密码</span>\n          <Input\n            value={this.state.resetpwd}\n            onChange={e => this.setState({ resetpwd: e.target.value })}\n          />\n        </Modal>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Icon,\n  Input,\n  Radio,\n  Select,\n  Checkbox,\n  Button,\n  message\n} from \"antd\";\nimport { addUser, editUser } from \"../../../api\";\n\n\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBan: 1,\n      checkedList: [],\n      indeterminate: true,\n      checkAll: false\n    };\n  }\n  checkboxOnChange = checkedList => {\n    console.log(checkedList);\n    this.setState({\n      checkedList,\n      indeterminate:\n        !!checkedList.length &&\n        checkedList.length < this.props.packageList.length,\n      checkAll: checkedList.length === this.props.packageList.length\n    });\n  };\n  onCheckAllChange = e => {\n    let list = this.props.packageList.map(item => {\n      return item.value;\n    });\n    this.setState(\n      {\n        checkedList: e.target.checked ? list : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      },\n      () => {\n        this.props.form.setFieldsValue({\n          packageList: this.state.checkedList\n        });\n      }\n    );\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      if (!err) {\n        const res = !this.props.isEdit\n          ? await addUser(value)\n          : await editUser(value, this.props.editDataRecord.id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n  componentDidMount() {\n    if (this.props.isEdit && this.props.editDataRecord.group) {\n      let defaultValue = this.props.editDataRecord.group.split(\",\");\n      this.props.form.setFieldsValue({\n        packageList: defaultValue.map(Number)\n      });\n    }\n  }\n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    const Option = this.props.optionList.map(item => (\n      <Select.Option value={item.id} key={item.id}>\n        {item.name}\n      </Select.Option>\n    ));\n    return (\n      <Form\n        labelCol={{ span: 4 }}\n        onSubmit={this.handleSubmit}\n        labelAlign=\"left\"\n      >\n        <Form.Item label=\"登录名\">\n          {getFieldDecorator(\"username\", {\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"登录名必须输入\"\n              },\n              { min: 3, message: \"用户名至少3位\" },\n              { max: 10, message: \"用户名最多10位\" },\n              {\n                pattern: /^[a-zA-Z0-9_]+$/,\n                message: \"用户名必须是英文、数字或下划线组成\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.name : \"\"\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              style={{ width: \"60%\" }}\n              placeholder=\"将会成为您唯一的登入名\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"用户状态\">\n          {getFieldDecorator(\"userStatus\", {\n            initialValue: isEdit ? editDataRecord.status : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>启用</Radio>\n              <Radio value={0}>禁用</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"用户组\">\n          {getFieldDecorator(\"userGroup\", {\n            rules: [{ required: true, message: \"请选择用户组!\" }],\n            initialValue: isEdit && editDataRecord.group_id\n          })(\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择用户组\">\n              {Option}\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"授权品牌\">\n          <Checkbox\n            indeterminate={this.state.indeterminate}\n            onChange={this.onCheckAllChange}\n            checked={this.state.checkAll}\n          >\n            全选\n          </Checkbox>\n          {getFieldDecorator(\"packageList\", {\n            rules: [{ required: true, message: \"请选择授权品牌!\" }]\n          })(\n            <Checkbox.Group\n              options={this.props.packageList}\n              // value={this.state.checkedList}\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"授权代理\">\n          {getFieldDecorator(\"proxy\", {\n            rules: [\n              {\n                whitespace: true,\n                message: \"多个代理请用英文逗号分隔\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.proxy : \"\"\n          })(\n            <Input\n              style={{ width: \"60%\" }}\n              placeholder=\"多个代理请用英文逗号分隔\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"携带金额\">\n          {getFieldDecorator(\"loadGold\", {\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"请输入有效数字\"\n              },\n              {\n                pattern: /^\\d+(\\.\\d+)?$/,\n                message: \"请输入有效数字\"\n              }\n            ],\n            initialValue: isEdit && editDataRecord.use_balance\n          })(<Input style={{ width: \"60%\" }} placeholder=\"请输入数字\" />)}\n        </Form.Item>\n        <Form.Item label=\"密码\" style={isEdit ? { display: \"none\" } : {}}>\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: isEdit ? false : true,\n                whitespace: true,\n                message: \"密码不能为空\"\n              },\n              { min: 6, message: \"密码至少6位\" },\n              { max: 16, message: \"密码最多16位\" },\n              {\n                pattern: /^[a-zA-Z0-9_]+$/,\n                message: \"密码必须是英文、数字或下划线组成\"\n              }\n            ]\n          })(\n            <Input\n              type=\"password\"\n              style={{ width: \"60%\" }}\n              placeholder=\"6到16个字符\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"确认密码\" style={isEdit ? { display: \"none\" } : {}}>\n          {getFieldDecorator(\"confirmPssword\", {\n            rules: [\n              {\n                required: isEdit ? false : true,\n                whitespace: true\n              },\n              {\n                validator: (rule, value, callback) => {\n                  if (!value) {\n                    callback(); //如果还没填写，则不进行一致性验证\n                  }\n                  if (value === getFieldValue(\"password\")) {\n                    callback();\n                  } else {\n                    callback(\"两次密码不一致\");\n                  }\n                }\n              }\n            ]\n          })(\n            <Input\n              type=\"password\"\n              style={{ width: \"60%\" }}\n              placeholder=\"6到16个字符\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item\n          label=\"密码(选填)\"\n          style={!isEdit ? { display: \"none\" } : {}}\n        >\n          {getFieldDecorator(\"editPassword\", {\n            rules: [\n              {\n                whitespace: true\n              },\n              {\n                validator: (rule, value, callback) => {\n                  if (!value) {\n                    callback(); //如果还没填写，则不进行一致性验证\n                  }\n                  if (value === getFieldValue(\"password\")) {\n                    callback();\n                  } else {\n                    callback(\"两次密码不一致\");\n                  }\n                }\n              }\n            ]\n          })(\n            <Input\n              type=\"password\"\n              style={{ width: \"60%\" }}\n              placeholder=\"6到16个字符，重置密码时使用\"\n            />\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\nimport \"moment/locale/zh-cn\";\nimport WrappedAddDataForm from \"./addData\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport {\n  reqAdminList,\n  searchAdminData,\n  roleList,\n  packageList,\n  resetAuthCode\n} from \"../../../api/index\";\n\nclass Admin_manage_list extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"id\",\n    },\n    {\n      title: \"用户名\",\n      dataIndex: \"name\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"角色\",\n      dataIndex: \"role_name\",\n    },\n    {\n      title: \"授权品牌\",\n      dataIndex: \"group\",\n    },\n    {\n      title: \"授权代理\",\n      dataIndex: \"proxy\",\n    },\n    {\n      title: \"可使用金额\",\n      dataIndex: \"use_balance\",\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"更新时间\",\n      dataIndex: \"updated_at\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      align: \"center\",\n      render: (text, record, index) => (\n        <span>{text === 1 ? \"启用\" : \"禁用\"}</span>\n      )\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"handle\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n          <LinkButton onClick={() => this.resetAuthCode(record)}>\n            AuthCode重置\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n\n  getUsers = async (page, limit) => {\n    const result = await reqAdminList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  handleChange(event) {\n    this.setState({ inputParam: event.target.value });\n  }\n  onSearchData = async () => {\n    const result = await searchAdminData(this.state.inputParam);\n    // if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: 1\n      });\n    // }\n  };\n  addData = async () => {\n    const res = await roleList();\n    const result = await packageList();\n    if (res.status === 0 && result.status === 0) {\n      this.optionList = res.data;\n      this.packageList = result.data.map(item => {\n        return { label: item.name, value: item.id };\n      });\n      this.setState({\n        isAddDataShow: true\n      });\n    }\n  };\n  edit = async record => {\n    console.log(record);\n    this.editDataRecord = record;\n    const res = await roleList();\n    const result = await packageList();\n    if (res.status === 0 && result.status === 0) {\n      this.optionList = res.data;\n      this.packageList = result.data.map(item => {\n        return { label: item.name, value: item.id };\n      });\n      this.setState({\n        isEditDataShow: true\n      });\n    }\n  };\n  resetAuthCode = record => {\n    Modal.confirm({\n      title: \"信息\",\n      content: \"真的要重置么?\",\n      async onOk() {\n        const res = await resetAuthCode(record.id);\n        if (res.status === 0) {\n          message.success(res.msg);\n        } else {\n          message.success(res.msg);\n        }\n      }\n    });\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <Input\n              type=\"text\"\n              placeholder=\"请输入用户名\"\n              style={{ width: 150 }}\n              value={this.state.inputParam}\n              onChange={this.handleChange}\n            />\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData} size='default'>\n              <Icon type=\"search\" />\n            </LinkButton>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.addData} size='default'>\n              <Icon type=\"user-add\" />\n              添加账户\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size='default'>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n        />\n        <Modal\n          title=\"添加用户\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            optionList={this.optionList}\n            packageList={this.packageList}\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={() => this.getUsers(1, 20)}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit=\"true\"\n              optionList={this.optionList}\n              packageList={this.packageList}\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default Admin_manage_list;\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, message, Tree } from \"antd\";\nimport { addRole, editRole } from \"../../../api\";\n\nconst { TreeNode } = Tree;\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandedKeys: [],\n      selectedKeys: [],\n      checkedKeys: this.props.isEdit\n        ? this.props.editDataRecord.rules.split(\",\")\n        : [],\n      defaultCheckedKeys: []\n    };\n  }\n  //   componentDidMount() {\n  //     if (this.props.isEdit) {\n  //       if (this.props.editDataRecord.rules) {\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\n  //         this.setState({\n  //           defaultCheckedKeys: defaultValue\n  //         });\n  //       }\n  //     }\n  //   }\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\n  //解决上诉错误：\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  render() {\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\n    const treeData = this.getTreeNodes(menuList);\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form\n        labelCol={{ span: 4 }}\n        onSubmit={this.handleSubmit}\n        labelAlign=\"left\"\n      >\n        <Form.Item label=\"角色名\">\n          {getFieldDecorator(\"name\", {\n            rules: [\n              {\n                required: true,\n                message: \"角色名必须输入\"\n              },\n              { min: 3, message: \"用户名至少3位\" }\n            ],\n            initialValue: isEdit ? editDataRecord.name : \"\"\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              style={{ width: \"60%\" }}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"分配权限\">\n          <br />\n          <Tree\n            checkable\n            defaultCheckedKeys={isEdit ? editDataRecord.rules.split(\",\") : []}\n            expandedKeys={this.state.expandedKeys}\n            selectedKeys={this.state.selectedKeys}\n            onSelect={this.onSelect}\n            onCheck={this.onCheck}\n            onExpand={this.onExpand}\n          >\n            {treeData}\n          </Tree>\n        </Form.Item>\n        <Form.Item label=\"描述\">\n          {getFieldDecorator(\"desc\", {\n            rules: [{ max: 400, message: \"最多400字\" }],\n            initialValue: isEdit ? editDataRecord.description : \"\"\n          })(\n            <Input.TextArea\n              placeholder=\"请输入文字\"\n              autosize={{ minRows: 2, maxRows: 6 }}\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  getTreeNodes = menuList => {\n    return menuList.map(item => {\n      if (!item.children) {\n        return <TreeNode key={item.id} title={item.title.replace(/&nbsp;/g, \"\")} />;\n      } else {\n        return (\n          <TreeNode key={item.id} title={item.title.replace(/&nbsp;/g, \"\")}>\n            {this.getTreeNodes(item.children)}\n          </TreeNode>\n        );\n      }\n    });\n  };\n  onSelect = (selectedKeys, info) => {\n    const { node } = info;\n    const { expandedKeys } = this.state;\n    if (node.props.isLeaf) {\n      this.setState({ selectedKeys });\n    } else {\n      this.setState({\n        expandedKeys: node.props.expanded\n          ? expandedKeys.filter(k => k !== node.props.eventKey)\n          : expandedKeys.concat(node.props.eventKey)\n      });\n    }\n  };\n  onCheck = (checkedKeys, info) => {\n    // console.log(\"onCheck\", checkedKeys, info);\n    this.setState({\n      checkedKeys: checkedKeys.map(Number)\n    });\n  };\n  onExpand = (expandedKeys, info) => {\n    this.setState({ expandedKeys });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      if (!err) {\n        let { name, desc } = value;\n        let rules = this.state.checkedKeys;\n        let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\n        const res = !this.props.isEdit\n          ? await addRole(name, rules, desc)\n          : await editRole(name, rules, desc, id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n          this.setState({\n            checkedKeys: []\n          });\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\nimport WrappedAddDataForm from \"./addData\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { getRoleList, getRuleList } from \"../../../api/index\";\n\nclass Role extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"id\",\n      width: 80\n    },\n    {\n      title: \"角色名\",\n      dataIndex: \"name\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"描述\",\n      dataIndex: \"description\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      align: \"center\",\n      render: (text, record, index) => (\n        <span>{text === 1 ? \"已启用\" : \"禁用\"}</span>\n      )\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"handle\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    }\n  ];\n  getUsers = async (page, limit) => {\n    const result = await getRoleList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  addData = async () => {\n    //getRuleList的请求/acl/ruleList返回的不是树状结构的数据，所以使用缓存在本地navlist返回的menulist\n    // const res = await getRuleList();\n    // if (res.status === 0) {\n    //   this.ruleList = res.data;\n    this.setState({\n      isAddDataShow: true\n    });\n    // }\n  };\n  edit = async record => {\n    // console.log(record);\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <LinkButton onClick={this.addData} size='default'>\n              <Icon type=\"user-add\" />\n              添加账户\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size='default'>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n            // scroll={{ x: 1500, y: 550 }}\n        />\n        <Modal\n          title=\"添加角色\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={() => this.getUsers(1, 20)}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit=\"true\"\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default Role;\n","import React, { Component } from \"react\";\nimport { Table, Input, Icon, Button, message } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport { reqLostOrder_list, orderReview } from \"../../../api/index\";\n\nclass Diaodan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      user_id: \"\",\n      order_id: \"\"\n    };\n  }\n  render() {\n    return (\n      <div>\n        <Input\n          type=\"text\"\n          placeholder=\"user_id\"\n          style={{ width: 150 }}\n          value={this.state.user_id}\n          onChange={e => this.setState({ user_id: e.target.value })}\n        />\n        &nbsp; &nbsp;\n        <Input\n          type=\"text\"\n          placeholder=\"订单Id\"\n          style={{ width: 300 }}\n          value={this.state.order_id}\n          onChange={e => this.setState({ order_id: e.target.value })}\n        />\n        &nbsp; &nbsp;\n        <Button onClick={this.handleClick}>\n          <Icon type=\"search\" />\n        </Button>\n        <br></br>\n        <br></br>\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n        />\n      </div>\n    );\n  }\n  initColumns = () => {\n    return [\n      {\n        title: \"订单Id\",\n        dataIndex: \"order_id\"\n      },\n      {\n        title: \"user_id\",\n        dataIndex: \"user_id\"\n      },\n      {\n        title: \"金额\",\n        dataIndex: \"amount\"\n      },\n      {\n        title: \"下单时间\",\n        dataIndex: \"created_at\",\n        render: formateDate\n      },\n      {\n        title: \"操作\",\n        dataIndex: \"status\",\n        render: (text, record, index) => {\n          if (text !== \"6\" && text !== \"7\" && text !== \"9\") {\n            return (\n              <Button size='small' onClick={() => this.handleRecieveSubmit(record)}>\n                手动到账提交\n              </Button>\n            );\n          } else {\n            return;\n          }\n        }\n      }\n    ];\n  };\n  handleClick = async () => {\n    const res = await reqLostOrder_list(\n      1,\n      50,\n      this.state.user_id,\n      this.state.order_id\n    );\n    if (res.status === 0) {\n      this.setState({\n        data: res.data\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  handleRecieveSubmit = async record => {\n    let { user_id, order_id } = record;\n    const res = await orderReview(user_id, order_id);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n    this.handleClick();\n  };\n}\n\nexport default Diaodan;\n","import React, { Component } from \"react\";\nimport { Card, Table, message, Icon, Input, Select, Modal, Button } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport \"moment/locale/zh-cn\";\nimport {\n  reqOrder_list,\n  downloadList,\n  orderReviewEdit\n} from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport Diaodan from \"./editData\";\n\nclass Order_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      start_time: \"\",\n      end_time: \"\",\n      order_status: \"\",\n      type: \"\",\n      user_id: \"\",\n      order_id: \"\",\n      isQueryShow: false,\n      isEditShow: false\n    };\n    this.inputKey = \"\";\n    this.inputValue = \"\";\n    this.order_status = \"\";\n    this.type = \"\";\n  }\n  getUsers = async (page, limit) => {\n    const result = await reqOrder_list(\n      page,\n      limit,\n      this.state.start_time,\n      this.state.end_time,\n      this.order_status,\n      this.type,\n      this.inputKey,\n      this.inputValue\n    );\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  onSearchData = async () => {\n    this.setState({ isQueryShow: true });\n  };\n  download = () => {\n    downloadList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <div>\n              <Select\n                placeholder=\"请选择\"\n                style={{ width: 120 }}\n                onSelect={value => (this.inputKey = value)}\n              >\n                <Select.Option value=\"order_id\">订单id</Select.Option>\n                <Select.Option value=\"user_id\">user_id</Select.Option>\n                <Select.Option value=\"1\">创建时间</Select.Option>\n                <Select.Option value=\"2\">到账时间</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <Input\n                type=\"text\"\n                placeholder=\"请输入关键字\"\n                style={{ width: 150 }}\n                ref={Input => (this.input = Input)}\n              />\n              &nbsp; &nbsp;\n              <MyDatePicker\n                handleValue={val => {\n                  this.setState({\n                    start_time: val[0],\n                    end_time: val[1]\n                  });\n                }}\n              />\n              &nbsp; &nbsp;\n              <Select\n                defaultValue=\"\"\n                style={{ width: 200 }}\n                onSelect={value => (this.order_status = value)}\n              >\n                <Select.Option value=\"\">订单状态</Select.Option>\n                <Select.Option value=\"0\">全部</Select.Option>\n                <Select.Option value=\"1\">未支付</Select.Option>\n                <Select.Option value=\"4\">已撤销</Select.Option>\n                <Select.Option value=\"5\">已支付</Select.Option>\n                <Select.Option value=\"6\">已完成</Select.Option>\n                <Select.Option value=\"7\">补单初审通过</Select.Option>\n                <Select.Option value=\"8\">补单初审拒绝</Select.Option>\n                <Select.Option value=\"9\">补单复审通过</Select.Option>\n                <Select.Option value=\"10\">补单复审拒绝</Select.Option>\n                <Select.Option value=\"11\">充值失败</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <Select\n                defaultValue=\"\"\n                style={{ width: 120 }}\n                onSelect={value => (this.type = value)}\n              >\n                <Select.Option value=\"\">订单类型</Select.Option>\n                <Select.Option value=\"0\">全部</Select.Option>\n                <Select.Option value=\"1\">alipay</Select.Option>\n                <Select.Option value=\"2\">银行卡转账</Select.Option>\n                <Select.Option value=\"3\">人工代充</Select.Option>\n                <Select.Option value=\"4\">人工代提</Select.Option>\n                <Select.Option value=\"6\">微信支付</Select.Option>\n                <Select.Option value=\"7\">银联支付</Select.Option>\n                <Select.Option value=\"8\">网银支付</Select.Option>\n                <Select.Option value=\"9\">快捷支付</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <LinkButton\n                onClick={() => {\n                  this.inputValue = this.input.input.value;\n                  this.getUsers(1, this.state.pageSize);\n                }}\n                size=\"default\"\n              >\n                <Icon type=\"search\" />\n              </LinkButton>\n              &nbsp; &nbsp;\n            </div>\n            <div style={{ marginTop: 10 }}>\n              <LinkButton onClick={this.onSearchData} size=\"default\">\n                <Icon type=\"search\" />\n                玩家掉单查询\n              </LinkButton>\n            </div>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n              size=\"default\"\n            />\n            <br />\n            <br />\n            <LinkButton\n              size=\"default\"\n              style={{ float: \"right\" }}\n              onClick={this.download}\n              icon=\"download\"\n            ></LinkButton>\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n          scroll={{ x: 1900, y: \"60vh\" }}\n        />\n        <Modal\n          title=\"玩家调单查询\"\n          visible={this.state.isQueryShow}\n          onCancel={() => {\n            this.setState({ isQueryShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <Diaodan />\n        </Modal>\n        <Modal\n          title=\"编辑\"\n          visible={this.state.isEditShow}\n          onCancel={() => {\n            this.setState({ isEditShow: false });\n          }}\n          footer={null}\n          width=\"50%\"\n        >\n          <div>\n            <div>用户ID：{this.state.editUser_id}</div>\n            <br />\n            <div>金额：{this.state.editMount}</div>\n            <br />\n            <div>\n              手动到账复审：<Button type=\"primary\">通过</Button>{\" \"}\n              <Button type=\"primary\" onClick={this.editRefused}>\n                拒绝\n              </Button>\n            </div>\n          </div>\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 300\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 150\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\",\n      width: 100\n    },\n    {\n      title: \"支付渠道\",\n      dataIndex: \"channel_type\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"0\":\n            word = record.replace_id;\n            break;\n          case \"5\":\n            word = \"充提UC\";\n            break;\n          case \"12\":\n            word = \"onePay\";\n            break;\n          case \"11\":\n            word = \"古都\";\n            break;\n          case [\"10\", \"13\", \"14\", \"15\", \"16\"]:\n            word = \"聚鑫\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"支付类型\",\n      dataIndex: \"type\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"alipay\";\n            break;\n          case \"2\":\n            word = \"银行卡转账\";\n            break;\n          case \"3\":\n            word = \"人工代充\";\n            break;\n          case \"4\":\n            word = \"人工代提\";\n            break;\n          case \"5\":\n            word = \"被赠送\";\n            break;\n          case \"6\":\n            word = \"微信支付\";\n            break;\n          case \"7\":\n            word = \"银联支付\";\n            break;\n          case \"8\":\n            word = \"网银支付\";\n            break;\n          case \"9\":\n            word = \"快捷支付\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 100,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 100,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"订单状态\",\n      dataIndex: \"status\",\n      width: 130,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"未支付\";\n            break;\n          case \"2\":\n            word = \"已过期\";\n            break;\n          case \"3\":\n            word = \"已分配\";\n            break;\n          case \"4\":\n            word = \"已撤销\";\n            break;\n          case \"5\":\n            word = \"已支付\";\n            break;\n          case \"6\":\n            word = \"已完成\";\n            break;\n          case \"7\":\n            word = \"补单初审通过\";\n            break;\n          case \"8\":\n            word = \"初审拒绝\";\n            break;\n          case \"9\":\n            word = \"补单复审通过\";\n            break;\n          case \"10\":\n            word = \"复审拒绝\";\n            break;\n          case \"11\":\n            word = \"充值失败\";\n            break;\n          case \"12\":\n            word = \"客服拒绝\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 200,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 200,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 100,\n      render: (text, record, index) => {\n        if (record.status === \"7\") {\n          return (\n            <LinkButton size=\"small\" onClick={() => this.edit(record)}>\n              编辑\n            </LinkButton>\n          );\n        } else {\n          return;\n        }\n      }\n    },\n    {\n      title: \"备注\",\n      dataIndex: \"remark\"\n    }\n  ];\n  edit = record => {\n    this.setState({\n      isEditShow: true,\n      editUser_id: record.user_id,\n      editMount: record.amount\n    });\n    this.user_id = record.user_id;\n    this.order_id = record.order_id;\n    this.editType = record.type;\n  };\n  editRefused = async () => {\n    const res = await orderReviewEdit(\n      this.user_id,\n      this.order_id,\n      this.editType\n    );\n    if (res.status === 0) {\n      message.success(res.msg);\n      this.setState({\n        isEditShow: false\n      });\n      this.getUsers(1, this.pageSize);\n    } else {\n      message.error(res.msg);\n    }\n  };\n}\n\nexport default Order_list;\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\nimport { addChannel, editPayChannel } from \"../../../api\";\n\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //   componentDidMount() {\n  //     if (this.props.isEdit) {\n  //       if (this.props.editDataRecord.rules) {\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\n  //         this.setState({\n  //           defaultCheckedKeys: defaultValue\n  //         });\n  //       }\n  //     }\n  //   }\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\n  //解决上诉错误：\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form\n        labelCol={{ span: 7 }}\n        wrapperCol={{ span: 17 }}\n        onSubmit={this.handleSubmit}\n      >\n        <Form.Item label=\"支付名称\">\n          {getFieldDecorator(\"name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"所属渠道ID\">\n          {getFieldDecorator(\"channel_id\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.channel_id : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"支付名称\">\n          {getFieldDecorator(\"nick_name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"状态\">\n          {getFieldDecorator(\"status\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>开启</Radio>\n              <Radio value={0}>关闭</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"支付方式\">\n          {getFieldDecorator(\"pay_type\", {\n            rules: [{ required: true, message: \"请选择支付方式!\" }],\n            initialValue: isEdit && editDataRecord.pay_type\n          })(\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择支付方式\">\n              <Select.Option value=\"7\">支付宝H5</Select.Option>\n              <Select.Option value=\"8\">支付宝扫码</Select.Option>\n              <Select.Option value=\"2\">快捷支付</Select.Option>\n              <Select.Option value=\"4\">微信H5</Select.Option>\n              <Select.Option value=\"5\">微信扫码</Select.Option>\n              <Select.Option value=\"1\">网银支付</Select.Option>\n              <Select.Option value=\"13\">银联扫码</Select.Option>\n              <Select.Option value=\"17\">转账银行卡</Select.Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"支付限额最小面值\">\n          {getFieldDecorator(\"min_amount\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.min_amount : \"\"\n          })(<Input style={{ width: \"30%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"支付限额最大面值\">\n          {getFieldDecorator(\"max_amount\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.max_amount : \"\"\n          })(<Input style={{ width: \"30%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"固定面值\">\n          {getFieldDecorator(\"span_amount\", {\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"请输入有效数字\"\n              }\n            ],\n            initialValue: isEdit && editDataRecord.span_amount\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"单笔间隔\">\n          {getFieldDecorator(\"seed\", {\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"请输入有效数字\"\n              }\n            ],\n            initialValue: isEdit && editDataRecord.seed\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"玩家承担费率%\">\n          {getFieldDecorator(\"rate\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit && editDataRecord.rate\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"显示排序\">\n          {getFieldDecorator(\"sort\", {\n            initialValue: isEdit ? editDataRecord.sort : \"0\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\n      if (!err) {\n        const res = !this.props.isEdit\n          ? await addChannel(value)\n          : await editPayChannel(value,id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { getChannelList, getRuleList } from \"../../../api/index\";\nimport WrappedAddDataForm from \"./addorEdit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass Channel_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await getChannelList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  onSearchData = async () => {\n    const res = await getChannelList(1, 20, this.state.inputParam);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  addData = () => {\n    this.setState({\n      isAddDataShow: true\n    });\n  };\n  edit = async record => {\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  refreshPage=()=>{\n    this.setState({\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    });\n    this.getUsers(1, 20);\n  }\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <Input\n              type=\"text\"\n              placeholder=\"请输入支付名称\"\n              style={{ width: 150 }}\n              value={this.state.inputParam}\n              onChange={e => this.setState({ inputParam: e.target.value })}\n            />\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData}>\n              <Icon type=\"search\" />\n            </LinkButton>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.addData}>\n              <Icon type=\"user-add\" />\n              添加\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton\n          onClick={() => window.location.reload()}\n          >\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 1900, y: \"60vh\" }}\n        />\n        <Modal\n          title=\"添加角色\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={this.refreshPage}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      width: 80\n    },\n    {\n      title: \"支付名称\",\n      dataIndex: \"name\",\n      width: 120\n    },\n    {\n      title: \"渠道昵称\",\n      dataIndex: \"nick_name\",\n      width: 100\n    },\n    {\n      title: \"单笔-最小限额\",\n      dataIndex: \"min_amount\",\n      width: 120\n    },\n    {\n      title: \"单笔-最大限额\",\n      dataIndex: \"max_amount\",\n      width: 120\n    },\n    {\n      title: \"单笔间隔\",\n      dataIndex: \"seed\",\n      width: 100\n    },\n    {\n      title: \"玩家承担的费率%\",\n      dataIndex: \"rate\",\n      width: 150\n    },\n    {\n      title: \"固定面值\",\n      dataIndex: \"span_amount\",\n      width: 250\n    },\n    {\n      title: \"支付方式\",\n      dataIndex: \"pay_type\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"7\":\n            word = \"支付宝H5\";\n            break;\n          case \"8\":\n            word = \"支付宝扫码\";\n            break;\n          case \"2\":\n            word = \"快捷支付\";\n            break;\n          case \"4\":\n            word = \"微信H5\";\n            break;\n          case \"5\":\n            word = \"微信扫码\";\n            break;\n          case \"1\":\n            word = \"网银支付\";\n            break;\n          case \"13\":\n            word = \"银联扫码\";\n            break;\n          case \"17\":\n            word = \"转账银行卡\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 80,\n      render: (text, record, index) => {\n        return <span>{text === \"1\" ? \"开启\" : \"关闭\"}</span>;\n      }\n    },\n    {\n      title: \"显示顺序\",\n      width: 100,\n      dataIndex: \"sort\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 200,\n      render: formateDate\n    },\n    {\n      title: \"修改时间\",\n      dataIndex: \"updated_at\",\n      width: 200,\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    }\n  ];\n}\n\nexport default Channel_list;\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\nimport { saveBankCard } from \"../../../api\";\n\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //   componentDidMount() {\n  //     if (this.props.isEdit) {\n  //       if (this.props.editDataRecord.rules) {\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\n  //         this.setState({\n  //           defaultCheckedKeys: defaultValue\n  //         });\n  //       }\n  //     }\n  //   }\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\n  //解决上诉错误：\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form\n        labelCol={{ span: 7 }}\n        wrapperCol={{ span: 17 }}\n        onSubmit={this.handleSubmit}\n      >\n        <Form.Item label=\"开户人\">\n          {getFieldDecorator(\"card_name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.card_name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"银行名称\">\n          {getFieldDecorator(\"bank_name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.bank_name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"卡号\">\n          {getFieldDecorator(\"card_num\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              },\n              {\n                min: 15,\n                max: 20,\n                message: \"请输入15-20位正确卡号\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.card_num : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"用途\">\n          {getFieldDecorator(\"type\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>收款卡</Radio>\n              <Radio value={0}>出款卡</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"状态\">\n          {getFieldDecorator(\"status\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 2\n          })(\n            <Radio.Group>\n              <Radio value={1}>空闲</Radio>\n              <Radio value={2}>使用中</Radio>\n              <Radio value={3}>停用</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"支付密码\">\n          {getFieldDecorator(\"pay_password\", {})(\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\n          )}\n        </Form.Item>\n        <Form.Item label=\"查询密码\">\n          {getFieldDecorator(\"query_password\", {})(\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\n          )}\n        </Form.Item>\n        <Form.Item label=\"U盾密码\">\n          {getFieldDecorator(\"u_code\", {})(\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\n          )}\n        </Form.Item>\n        <Form.Item wrapperCol={{ offset: 18 }}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\n      if (!err) {\n        const res = !this.props.isEdit\n          ? await saveBankCard(value)\n          : await saveBankCard(value, id);\n        if (res.status === 0) {\n          message.success(\"提交成功:\" + res.msg);\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input, Popconfirm } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { bankList, deleteBankCard } from \"../../../api/index\";\nimport WrappedAddDataForm from \"./addorEdit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nclass Bankcard_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await bankList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题:\" + result.msg);\n    }\n  };\n  addData = () => {\n    this.setState({\n      isAddDataShow: true\n    });\n  };\n  edit = async record => {\n    // console.log(record);\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  delete = async record => {\n    const result = await deleteBankCard(record.id);\n    if (result.status === 0) {\n      message.success(result.msg);\n      this.refreshPage(1, 20);\n    } else {\n      message.error(\"网络问题:\" + result.msg);\n    }\n  };\n  refreshPage = () => {\n    this.setState({\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    });\n    this.getUsers(1, 20);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <LinkButton onClick={this.addData}>\n              <Icon type=\"user-add\" />\n              添加\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()}>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 1000, y: \"60vh\" }}\n        />\n        <Modal\n          title=\"添加角色\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={this.refreshPage}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      width: 50\n    },\n    {\n      title: \"卡使用类型\",\n      dataIndex: \"type\",\n      width: 100,\n      render: (text, record, index) => (\n        <span>{text === \"1\" ? \"收款卡\" : \"出款卡\"}</span>\n      )\n    },\n    {\n      title: \"银行卡号\",\n      dataIndex: \"card_num\",\n      width: 200\n    },\n    {\n      title: \"开户人姓名\",\n      dataIndex: \"card_name\",\n      width: 100,\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"银行名称\",\n      dataIndex: \"bank_name\",\n      width: 100\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record, index) => (\n        <span>{text === \"1\" ? \"空闲\" : text === \"2\" ? \"使用中\" : \"停用\"}</span>\n      )\n    },\n    {\n      title: \"修改时间\",\n      dataIndex: \"updated_at\",\n      width: 200,\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 150,\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n          <Popconfirm\n            title=\"确定要删除吗\"\n            onConfirm={() => this.delete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <LinkButton>删除</LinkButton>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n}\n\nexport default Bankcard_list;\n","import React, { Component } from \"react\";\nimport { Card, Table, Icon, Input, Select, Button } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport \"moment/locale/zh-cn\";\nimport { rechargeOrder, downloadList } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\n\nclass Recharge_order extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      start_time: \"\",\n      end_time: \"\",\n      type: \"14\",\n      paramKey: \"\",\n      inputParam: \"\",\n      user_id: \"\",\n      order_id: \"\"\n    };\n    this.inputKey = \"\";\n    this.inputValue = \"\";\n    this.order_status = \"\";\n  }\n  getUsers = async (page, limit) => {\n    const result = await rechargeOrder(\n      page,\n      limit,\n      this.state.start_time,\n      this.state.end_time,\n      this.order_status,\n      this.inputKey,\n      this.inputValue\n    );\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  handleChange(event) {\n    this.setState({ inputParam: event.target.value });\n  }\n  download = () => {\n    downloadList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <div>\n              <MyDatePicker\n                handleValue={val => {\n                  this.setState({\n                    start_time: val[0],\n                    end_time: val[1]\n                  });\n                }}\n              />\n              &nbsp; &nbsp;\n              <Select\n                placeholder=\"请选择\"\n                style={{ width: 120 }}\n                onSelect={value => (this.inputKey = value)}\n              >\n                <Select.Option value=\"order_id\">订单id</Select.Option>\n                <Select.Option value=\"user_id\">user_id</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <Input\n                type=\"text\"\n                placeholder=\"请输入关键字\"\n                style={{ width: 150 }}\n                ref={Input => (this.input = Input)}\n              />\n              &nbsp; &nbsp;\n              <Select\n                defaultValue=\"\"\n                style={{ width: 100 }}\n                onSelect={value => (this.order_status = value)}\n              >\n                <Select.Option value=\"\">状态</Select.Option>\n                <Select.Option value=\"0\">未成功</Select.Option>\n                <Select.Option value=\"1\">已分配</Select.Option>\n                <Select.Option value=\"4\">已撤销</Select.Option>\n                <Select.Option value=\"6\">已完成</Select.Option>\n                <Select.Option value=\"7\">初审通过</Select.Option>\n                <Select.Option value=\"8\">初审拒绝</Select.Option>\n                <Select.Option value=\"9\">复审通过</Select.Option>\n                <Select.Option value=\"10\">复审拒绝</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <LinkButton\n                onClick={() => {\n                  this.inputValue = this.input.input.value;\n                  this.getUsers(1, this.state.pageSize);\n                }}\n              >\n                <Icon type=\"search\" />\n              </LinkButton>\n              &nbsp; &nbsp;\n            </div>\n          </div>\n        }\n        extra={\n          <span>\n            <Button\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n            />\n            <br />\n            <br />\n            <Button onClick={this.download} icon=\"download\">\n              下载列表\n            </Button>\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n          scroll={{ x: 1500, y: \"60vh\" }}\n        />\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 280\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 200\n    },\n    {\n      title: \"代充ID\",\n      dataIndex: \"replace_id\",\n      width: 100\n    },\n    {\n      title: \"代充昵称\",\n      dataIndex: \"replace_name\",\n      width: 100\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 100,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 100,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"订单状态\",\n      dataIndex: \"status\",\n      width: 130,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"未支付\";\n            break;\n          case \"2\":\n            word = \"已过期\";\n            break;\n          case \"3\":\n            word = \"已分配\";\n            break;\n          case \"4\":\n            word = \"已撤销\";\n            break;\n          case \"5\":\n            word = \"已支付\";\n            break;\n          case \"6\":\n            word = \"已完成\";\n            break;\n          case \"7\":\n            word = \"补单初审通过\";\n            break;\n          case \"8\":\n            word = \"初审拒绝\";\n            break;\n          case \"9\":\n            word = \"补单复审通过\";\n            break;\n          case \"10\":\n            word = \"复审拒绝\";\n            break;\n          case \"11\":\n            word = \"充值失败\";\n            break;\n          case \"12\":\n            word = \"客服拒绝\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 150,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    }\n  ];\n}\n\nexport default Recharge_order;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Input,\n  Button,\n} from \"antd\";\nimport { getChannel, getChannelInfo,editChannelInfo } from \"../../../api/index\";\n\nclass Recharge_channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      childData: [],\n      expandedRowKeys: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isEditDataShow: false,\n      recordId: \"\"\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await getChannel(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: parseInt(result.count)\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        extra={\n          <span>\n            <Button\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"middle\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          expandedRowRender={this.expandedRowRender}\n          expandRowByClick\n          onExpand={this.onExpandRow}\n          expandedRowKeys={this.state.expandedRowKeys}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n        />\n        <Modal\n          title=\"修改\"\n          visible={this.state.isEditDataShow}\n          onOk={this.handleEditData}\n          onCancel={() => {\n            this.setState({ isEditDataShow: false });\n          }}\n        >\n          <span>pay_code:</span>\n          <Input\n            type=\"text\"\n            value={this.state.inputParam}\n            onChange={event =>\n              this.setState({ inputParam: event.target.value })\n            }\n          />\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"渠道名\",\n      dataIndex: \"name\"\n    },\n    {\n      title: \"商户号\",\n      dataIndex: \"member_id\"\n    }\n  ];\n  expandedRowRender = (record, index, indent, expanded) => {\n    const columns = [\n      {\n        title: \"支付方式名称\",\n        dataIndex: \"pay_name\",\n        width: 200\n      },\n      {\n        title: \"所属支付渠道\",\n        dataIndex: \"channel_name\",\n        width: 200\n      },\n      {\n        title: \"pay_code\",\n        dataIndex: \"pay_code\",\n        width: 200\n      },\n      {\n        title: \"操作\",\n        dataIndex: \"action\",\n        render: (text, record, index) => (\n          <Button onClick={() => this.edit(record)}>修改pay_code</Button>\n        )\n      }\n    ];\n    return (\n      <Table\n        columns={columns}\n        dataSource={this.state.childData}\n        pagination={false}\n      />\n    );\n  };\n  onExpandRow = async (expanded, record) => {\n    let keys = [];\n    if (expanded) {\n      keys.push(record.id);\n      this.setState({\n        expandedRowKeys: keys\n      });\n      const result = await getChannelInfo(record.id);\n      if (result.status === 0) {\n        result.data.forEach((element, index) => {\n          element.key = index;\n        });\n        this.setState({\n          childData: result.data\n        });\n      } else {\n        message.error(\"网络问题\");\n        this.setState({\n          childData: []\n        });\n      }\n    } else {\n      this.setState({\n        expandedRowKeys: []\n      });\n    }\n  };\n  edit = record => {\n    console.log(record.pay_code);\n    this.setState({\n      recordId: record.id,\n      inputParam: record.pay_code,\n      isEditDataShow: true\n    });\n  };\n  handleEditData = async () => {\n    const result = await editChannelInfo(this.state.recordId, this.state.inputParam);\n    if (result.status === 0) {\n      message.success(result.msg);\n      this.setState({\n        isEditDataShow: false,\n        expandedRowKeys:[],\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n}\nexport default Recharge_channel;\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Radio,\n  Checkbox,\n  DatePicker,\n  message\n} from \"antd\";\nimport { packageList, addNotice, updateNotice } from \"../../../api\";\nimport moment from \"moment\";\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      checkedList: this.props.isEdit\n        ? this.props.editDataRecord.package_ids\n        : []\n    };\n  }\n  getPackageList = async () => {\n    let res = await packageList();\n    if (res.status === 0) {\n      let arr = [];\n      res.data.forEach(element => {\n        arr.push({ label: element.name, value: element.id });\n      });\n      this.setState({\n        options: arr\n      });\n    }\n  };\n  componentDidMount() {\n    this.getPackageList();\n  }\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\n  //解决上诉错误：\n  // componentWillUnmount() {\n  //   this.setState = (state, callback) => {\n  //     return;\n  //   };\n  // }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"开关\">\n          {getFieldDecorator(\"is_open\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.is_open) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>开启</Radio>\n              <Radio value={0}>关闭</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"标题\">\n          {getFieldDecorator(\"title\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.title : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"品牌\">\n          {getFieldDecorator(\"packageList\", {\n            rules: [{ required: true, message: \"请选择品牌!\" }],\n            initialValue: isEdit && editDataRecord.package_ids\n          })(\n            <Checkbox.Group\n              options={this.state.options}\n              // defaultValue={editDataRecord.package_ids}\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"公告类型\">\n          {getFieldDecorator(\"type\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>活动</Radio>\n              <Radio value={2}>公告</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"是否跑马灯\">\n          {getFieldDecorator(\"is_slider\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>是</Radio>\n              <Radio value={0}>否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"排序\">\n          {getFieldDecorator(\"sort\", {\n            rules: [{ required: true }],\n            initialValue: isEdit && editDataRecord.sort\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"内容\">\n          {getFieldDecorator(\"words\", {\n            rules: [{ required: true }],\n            initialValue: isEdit ? editDataRecord.words : \"\"\n          })(\n            <Input.TextArea\n              autosize={{ minRows: 2, maxRows: 6 }}\n              style={{ width: \"60%\" }}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"开始日期\">\n          {getFieldDecorator(\"start_time\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit && moment(editDataRecord.start_time * 1000)\n          })(<DatePicker showTime format={\"YYYY-MM-DD HH:mm:ss\"} />)}\n        </Form.Item>\n        <Form.Item label=\"截止日期\">\n          {getFieldDecorator(\"end_time\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit && moment(editDataRecord.end_time * 1000)\n          })(<DatePicker showTime format={\"YYYY-MM-DD HH:mm:ss\"} />)}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      console.log(value);\n      let id = this.props.editDataRecord\n        ? this.props.editDataRecord._id.$oid\n        : \"\";\n      if (!err) {\n        value.packageList.forEach(item => {\n          let str = \"group[\" + item + \"]\";\n          value[str] = item;\n        });\n        value.start_time = value.start_time.format(\"YYYY-MM-DD HH:mm:ss\");\n        value.end_time = value.end_time.format(\"YYYY-MM-DD HH:mm:ss\");\n        delete value.packageList;\n        const res = !this.props.isEdit\n          ? await addNotice(value)\n          : await updateNotice(value, id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n  checkboxOnChange = checkedList => {\n    this.setState({\n      checkedList: checkedList\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Button,\n  Popover,\n  Popconfirm\n} from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { getList, delNotice } from \"../../../api/index\";\nimport WrappedAddDataForm from \"./addorEdit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass Notice_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n  }\n  getUsers = async (page, limit) => {\n    const result = await getList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  // onSearchData = async () => {\n  //   const res = await getChannelList(1, 20, this.state.inputParam);\n  //   if (res.status === 0) {\n  //     this.setState({\n  //       data: res.data,\n  //       count: parseInt(res.count)\n  //     });\n  //   } else {\n  //     message.error(\"网络问题\");\n  //   }\n  // };\n  addData = () => {\n    this.setState({\n      isAddDataShow: true\n    });\n  };\n  edit = async record => {\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  onDelete = async record => {\n    let res = await delNotice(record._id.$oid);\n    if (res.status === 0) {\n      message.success(\"删除成功\");\n      this.refreshPage();\n    } else {\n      message.error(\"出错了：\" + res.msg);\n    }\n  };\n  refreshPage = () => {\n    this.setState({\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    });\n    this.getUsers(1, 20);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <LinkButton onClick={this.addData} size='default'>添加</LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size='default'>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={record => record._id.$oid}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 2000 }}\n        />\n        <Modal\n          title=\"新增公告\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={this.refreshPage}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"标题\",\n      dataIndex: \"title\"\n    },\n    {\n      title: \"品牌\",\n      dataIndex: \"package_ids\",\n      render: (text, record) => <span>{text.join(\",\")}</span>\n    },\n    {\n      title: \"代理\",\n      dataIndex: \"proxy_user_id\"\n    },\n    {\n      title: \"公告类型\",\n      dataIndex: \"type\",\n      render: (text, record) => (\n        <span>{text === \"1\" || text === 1 ? \"活动\" : \"公告\"}</span>\n      )\n    },\n    {\n      title: \"是否跑马灯\",\n      dataIndex: \"is_slider\",\n      render: (text, record) => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"公告内容\",\n      dataIndex: \"words\",\n      render: (text, record) => (\n        <Popover content={text} trigger=\"click\" overlayStyle={{ width: \"30%\" }}>\n          <div\n            style={{\n              width: \"100px\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\"\n            }}\n          >\n            {text}\n          </div>\n        </Popover>\n      ),\n      onCell: (record, rowIndex) => {\n        return {\n          onClick: event => {}, // 点击行\n          onDoubleClick: event => {},\n          onContextMenu: event => {},\n          onMouseEnter: event => {\n            event.target.style.cursor = \"pointer\";\n          }, // 鼠标移入行\n          onMouseLeave: event => {}\n        };\n      }\n    },\n    {\n      title: \"开始时间\",\n      dataIndex: \"start_time\",\n      render: formateDate\n    },\n    {\n      title: \"截止时间\",\n      dataIndex: \"end_time\",\n      render: formateDate\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"create_time\",\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\n            编辑\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.onDelete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <Button type=\"danger\" size=\"small\">\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n}\n\nexport default Notice_list;\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Radio,\n  Checkbox,\n  DatePicker,\n  message\n} from \"antd\";\nimport { packageList, saveCustomerService} from \"../../../api\";\nimport moment from \"moment\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      checkedList: this.props.isEdit\n        ? this.props.editDataRecord.package_ids.split(\",\").map(Number)\n        : []\n    };\n  }\n  getPackageList = async () => {\n    let res = await packageList();\n    if (res.status === 0) {\n      let arr = [];\n      res.data.forEach(element => {\n        arr.push({ label: element.name, value: element.id });\n      });\n      this.setState({\n        options: arr\n      });\n    }\n  };\n  componentDidMount() {\n    this.getPackageList();\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"账号\">\n          {getFieldDecorator(\"user_id\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.user_id) : ''\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"昵称\">\n          {getFieldDecorator(\"nick_name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"授权品牌\">\n          {getFieldDecorator(\"package_ids\", {\n            rules: [{ required: true, message: \"请选择品牌!\" }],\n            initialValue:\n              isEdit && editDataRecord.package_ids.split(\",\").map(Number)\n          })(\n            <Checkbox.Group\n              options={this.state.options}\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"是否显示\">\n          {getFieldDecorator(\"status\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>是</Radio>\n              <Radio value={0}>否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"显示排序\">\n          {getFieldDecorator(\"sort\", {\n            rules: [{ required: true }],\n            initialValue: isEdit && editDataRecord.sort\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      let id = this.props.editDataRecord\n        ? this.props.editDataRecord.user_id\n        : \"\";\n      if (!err) {\n        value.package_ids.forEach(item => {\n          let str = \"group[\" + item + \"]\";\n          value[str] = item;\n        });\n        delete value.package_ids;\n        const res = !this.props.isEdit\n          ? await saveCustomerService(value, \"add\")\n          : await saveCustomerService(value, \"edit\", id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n  checkboxOnChange = checkedList => {\n    this.setState({\n      checkedList: checkedList\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Popconfirm,\n  Button\n} from \"antd\";\nimport { customerList, saveCustomerService } from \"../../../api/index\";\nimport WrappedAddDataForm from \"./addorEdit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport LinkButton from \"../../../components/link-button\";\n\nclass Customer_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await customerList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  onSearchData = async () => {\n    const res = await customerList(1, 20, this.input.input.value);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    }\n  };\n  addData = () => {\n    this.setState({\n      isAddDataShow: true\n    });\n  };\n  edit = async record => {\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  onDelete = async record => {\n    let user_id = record.user_id;\n    let res = await saveCustomerService({ user_id }, \"del\");\n    if (res.status === 0) {\n      message.success(\"删除成功\");\n      this.refreshPage();\n    } else {\n      message.error(\"出错了：\" + res.msg);\n    }\n  };\n  refreshPage = () => {\n    this.setState({\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isAddDataShow: false,\n      isEditDataShow: false\n    });\n    this.getUsers(1, 20);\n    this.input.handleReset();\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <Input\n              type=\"text\"\n              placeholder=\"请输入支付名称\"\n              style={{ width: 150 }}\n              ref={input => (this.input = input)}\n            />\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData} size='default'>\n              <Icon type=\"search\" />\n            </LinkButton>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.addData} size='default'>\n              <Icon type=\"user-add\" />\n              添加\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size='default'>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"user_id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 1200, y: \"60vh\" }}\n        />\n        <Modal\n          title=\"新增\"\n          visible={this.state.isAddDataShow}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={this.refreshPage}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"账号\",\n      dataIndex: \"user_id\",\n      width: 150\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"nick_name\",\n      width: 150\n    },\n    {\n      title: \"品牌ID\",\n      dataIndex: \"package_ids\",\n      width: 100\n    },\n    {\n      title: \"是否显示\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record) => (text === 1 ? \"是\" : \"否\")\n    },\n    {\n      title: \"排序\",\n      dataIndex: \"sort\",\n      width: 100\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"create_time\",\n      width: 200,\n      render: (text, record) => (\n        <span>{formateDate(record.create_time / 1000)}</span>\n      )\n    },\n    {\n      title: \"修改时间\",\n      dataIndex: \"update_time\",\n      width: 200,\n      render: (text, record) => (\n        <span>{formateDate(record.create_time / 1000)}</span>\n      )\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\n            编辑\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.onDelete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <Button type=\"danger\" size=\"small\">\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n}\n\nexport default Customer_list;\n","import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass GoldDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { data } = this.props.detailRecord;\n    console.log(data);\n\n    return (\n      <Table\n        bordered\n        rowKey={(record,index)=>`${index}`}\n        dataSource={data}\n        columns={this.initColumns()}\n        size=\"small\"\n      />\n    );\n  }\n  initColumns = () => {\n    if (this.props.action === \"check\") {\n      return [\n        {\n          title: \"审核人\",\n          dataIndex: \"review_name\"\n        },\n        {\n          title: \"审核时间\",\n          dataIndex: \"review_at\",\n          render: formateDate\n        }\n      ];\n    } else if (this.props.action === \"risk\") {\n      return [\n        {\n          title: \"user_id\",\n          dataIndex: \"id\"\n        },\n        {\n          title: \"产生来源\",\n          dataIndex: \"pay_account_name\"\n        },\n\n        {\n          title: \"余额(变动前)\",\n          dataIndex: \"total_balance\"\n        },\n        {\n          title: \"变动金额\",\n          dataIndex: \"final_pay\",\n\n          sorter: (a, b) => a.total_balance - b.total_balance\n        },\n        {\n          title: \"税收\",\n          dataIndex: \"tax\"\n        },\n        {\n          title: \"余额(变动后)\",\n          dataIndex: \"total_final_balance\"\n        },\n        {\n          title: \"备注\",\n          dataIndex: \"pay_reason\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"create_time\"\n        }\n      ];\n    } else {\n      return [\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"内容\",\n          dataIndex: \"content\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"created_at\",\n          render: formateDate\n        }\n      ];\n    }\n  };\n}\n\nexport default GoldDetail;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Select,\n  DatePicker,\n  Button,\n  Popover\n} from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport {\n  withDraw,\n  downloadWithdrawList,\n  userDetail,\n  reviewInfo,\n  remarkInfo\n} from \"../../../api\";\nimport WrappedComponent from \"./details\";\n\nclass Withdraw_list extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      start_time: \"\",\n      end_time: \"\",\n      order_status: \"\",\n      type: \"\",\n      filed: \"\",\n      inputParam: \"\",\n      user_id: \"\",\n      order_id: \"\",\n      isBindInfoShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await withDraw(page, limit, 3);\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  handleChange(event) {\n    this.setState({ inputParam: event.target.value });\n  }\n  onSearchData = async () => {\n    const result = await withDraw(1, 20, 3, this.state);\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  download = () => {\n    downloadWithdrawList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ filed: value })}\n            >\n              <Select.Option value=\"order_id\">订单id</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Input\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n              style={{ width: 150 }}\n              value={this.state.inputParam}\n              onChange={this.handleChange}\n            />\n            &nbsp; &nbsp;\n            <MyDatePicker\n              handleValue={val => {\n                this.setState({\n                  start_time: val[0],\n                  end_time: val[1]\n                });\n              }}\n            />\n            &nbsp; &nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ order_status: value })}\n            >\n              <Select.Option value=\"\">订单状态</Select.Option>\n              <Select.Option value=\"1\">待审核</Select.Option>\n              <Select.Option value=\"2\">处理中</Select.Option>\n              <Select.Option value=\"3\">已提交</Select.Option>\n              <Select.Option value=\"4\">已成功</Select.Option>\n              <Select.Option value=\"5\">已失败</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ type: value })}\n            >\n              <Select.Option value=\"\">兑换方式</Select.Option>\n              <Select.Option value=\"1\">alipay</Select.Option>\n              <Select.Option value=\"2\">bank</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => {\n                window.location.reload();\n              }}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n          scroll={{ x: 2400, y: \"60vh\" }}\n        />\n        <Modal\n          title={\n            this.action === \"check\"\n              ? \"审核信息\"\n              : this.action === \"risk\"\n              ? \"资金明细\"\n              : \"运营备注\"\n          }\n          visible={this.state.isDetailShow}\n          onCancel={() => {\n            this.setState({ isDetailShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <WrappedComponent\n            detailRecord={this.detailRecord}\n            action={this.action}\n          />\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 300\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 100\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 100,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"申请费率\",\n      dataIndex: \"handling_fee\",\n      width: 100\n    },\n    {\n      title: \"实际费率\",\n      dataIndex: \"gold\",\n      width: 100\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 100,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"兑换方式\",\n      dataIndex: \"order_type\",\n      width: 100\n    },\n    {\n      title: \"兑换账号\",\n      dataIndex: \"pay_account\",\n      width: 200\n    },\n    {\n      title: \"账号名称\",\n      dataIndex: \"pay_name\",\n      width: 100\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"待审核\";\n            break;\n          case \"2\":\n            word = \"处理中\";\n            break;\n          case \"3\":\n            word = \"已提交\";\n            break;\n          case \"4\":\n            word = \"已成功\";\n            break;\n          case \"5\":\n            word = \"已失败\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\",\n      width: 100\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 150,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 150,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"风控\",\n      dataIndex: \"\",\n      width: 200,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getDetail(record, \"risk\")}>\n            风控\n          </LinkButton>\n          <LinkButton>游戏数据</LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"审核详情\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"备注内容\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <Popover\n            content={record.user_remark}\n            title={record.user_id + \"用户备注\"}\n            trigger=\"click\"\n          >\n            <LinkButton>用户备注</LinkButton>\n          </Popover>\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\n            运营备注\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  dataPickerOnChange = (date, dateString) => {\n    let startTime = dateString[0] + \" 00:00:00\";\n    let endTime = dateString[1] + \" 00:00:00\";\n    this.setState({\n      start_time: startTime,\n      end_time: endTime\n    });\n  };\n  getDetail = async (record, action) => {\n    this.action = action;\n    this.detailRecord = {\n      data: [],\n      count: 0,\n      id: record.user_id\n    };\n    const res =\n      action === \"risk\"\n        ? await userDetail(1, 20, record.user_id)\n        : action === \"check\"\n        ? await reviewInfo(1, 20, record.order_id)\n        : await remarkInfo(1, 20, record.order_id);\n    if (res.status === 0) {\n      this.detailRecord.data = res.data;\n      this.detailRecord.count = res.count;\n    }\n    this.setState({ isDetailShow: true });\n  };\n}\n\nexport default Withdraw_list;\n","import React, { Component } from \"react\";\nimport { Progress } from \"antd\";\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/addon/lint/lint.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/mode/javascript/javascript.js\";\nimport \"codemirror/addon/lint/lint.js\";\nimport \"codemirror/addon/lint/json-lint.js\";\nimport \"codemirror/theme/rubyblue.css\";\n\nexport class MyProgress extends React.Component {\n  state = {\n    percent: 0\n  };\n  handle;\n  render() {\n    return (\n      <Progress\n        type=\"circle\"\n        strokeColor={{\n          \"0%\": \"#108ee9\",\n          \"100%\": \"#87d068\"\n        }}\n        percent={this.state.percent}\n      />\n    );\n  }\n}\nconst options = {\n  lineNumbers: true, //显示行号\n  mode: { name: \"javascript\", json: true }, //定义mode\n  theme: \"rubyblue\" //选中的theme\n};\nexport class CodeEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const conf_val = JSON.stringify([JSON.parse(this.props.conf_val)], null, 2);\n    //使用默认传过来的onChange事件\n    const { onChange } = this.props;\n    return (\n      <div className=\"json-editor\">\n        <CodeMirror\n          // ref=\"editor-sql\"\n          value={conf_val}\n          onChange={(editor, data, value) => {\n            //返回value值给edit中的form\n            return onChange(JSON.stringify(JSON.parse(value)[0]));\n          }}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { saveConf } from \"../../../api/index\";\nimport { CodeEditor } from \"../../../components/myComponents\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  let getValueFromEvent = e => {\n    console.log(\"Upload event:\", e);\n    // if (Array.isArray(e)) {\n    //   return e;\n    // }\n    // return e && e.fileList;\n  };\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      console.log(value);\n      if (!err) {\n        if (props.action === \"edit\") {\n          value.id = record.id;\n        }\n        const res = await saveConf(value, props.action);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <Form labelCol={{ span: 3 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\n      <Form.Item label=\"配置名\">\n        {getFieldDecorator(\"name\", {\n          rules: [{ required: true, message: \"请输入配置名\" }],\n          initialValue: props.action === \"add\" ? \"\" : props.record.name\n        })(<Input style={{ width: \"50%\" }} />)}\n      </Form.Item>\n      <Form.Item label=\"配置Key\">\n        {getFieldDecorator(\"conf_key\", {\n          rules: [{ required: true, message: \"请输入配置Key\" }],\n          initialValue: props.action === \"add\" ? \"\" : props.record.conf_key\n        })(<Input style={{ width: \"50%\" }} />)}\n      </Form.Item>\n      <Form.Item label=\"配置Val\">\n        {getFieldDecorator(\"conf_val\", {\n          rules: [{ required: true, message: \"请输入配置Val\" }]\n        })(\n          props.action === \"add\" ? (\n            <Input style={{ width: \"50%\" }} />\n          ) : (\n            <CodeEditor conf_val={props.record.conf_val} />\n          )\n        )}\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Popconfirm,\n  Button\n} from \"antd\";\nimport { configList, saveConf } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass Config extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await configList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Input\n              style={{ width: 120 }}\n              placeholder=\"请输入配置Key\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              size=\"default\"\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton type=\"primary\" onClick={this.onAdd} size=\"default\">\n              添加\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          // scroll={{ y: \"100%\" }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"add\" ? \"添加配置\" : \"编辑配置\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n            width=\"50%\"\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"配置名\",\n      dataIndex: \"name\"\n    },\n    {\n      title: \"配置Key\",\n      dataIndex: \"conf_key\"\n    },\n    {\n      title: \"配置值\",\n      dataIndex: \"conf_val\",\n      width: 150\n    },\n    {\n      title: \"更新时间\",\n      dataIndex: \"created_at\",\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\n            编辑\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.onDelete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <Button type=\"danger\" size=\"small\">\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let conf_key = this.input.input.value;\n    const res = await configList(1, 20, conf_key);\n    this.setState({ data: res.data, count: res.count });\n  };\n  onDelete = async record => {\n    let res = await saveConf({ id: record.id }, \"del\");\n    if (res.status === 0) {\n      message.success(\"删除成功:\" + res.msg);\n      this.getInitialData(this.state.page, this.state.pageSize);\n    } else {\n      message.error(\"出错了：\" + res.msg);\n    }\n  };\n  onAdd = async () => {\n    this.action = \"add\";\n    this.setState({\n      isEditFormShow: true\n    });\n  };\n  edit = async record => {\n    this.action = \"edit\";\n    this.editDataRecord = record;\n    this.setState({\n      isEditFormShow: true\n    });\n  };\n}\nexport default Config;\n","import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { changeUserBalance } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  let params = JSON.parse(record.params);\n\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        let obj = {\n          \"data[id]\": record.id,\n          \"data[params]\": record.params,\n          \"data[status]\": 2\n        };\n        if (props.action === \"review\") {\n          obj[\"data[pay_reason]\"] = value.reason;\n          obj[\"data[status]\"] = 1;\n        }\n        const res = await changeUserBalance(obj);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <div>\n      <span>\n        ID:{params.user_id} 资金变动：{params.amount} 复审\n        {props.action === \"review\" ? \"备注\" : \"拒绝\"}\n      </span>\n      <Form\n        labelCol={{ span: 4 }}\n        labelAlign=\"left\"\n        onSubmit={handleEditSubmit}\n      >\n        <Form.Item\n          style={{ display: props.action === \"review\" ? \"block\" : \"none\" }}\n        >\n          {getFieldDecorator(\"reason\", {\n            initialValue: params.reason\n          })(<Input.TextArea autosize={{ minRows: 5, maxRows: 10 }} />)}\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Popconfirm,\n  Button,\n  Select\n} from \"antd\";\nimport { tasksList, saveConf } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await tasksList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.start_time = val[0];\n                this.end_time = val[1];\n              }}\n            ></MyDatePicker>\n            &nbsp;&nbsp;&nbsp;\n            <Select\n              placeholder=\"任务状态\"\n              style={{ width: 150 }}\n              onChange={value => (this.status = value)}\n            >\n              <Select.Option value=\"0\">待操作</Select.Option>\n              <Select.Option value=\"1\">已复审</Select.Option>\n              <Select.Option value=\"2\">复审拒绝</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入创建人昵称\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()}>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          scroll={{ x: 1800 }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"review\" ? \"复审\" : \"拒绝\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"任务ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"任务信息\",\n      dataIndex: \"params\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"任务来源\",\n      dataIndex: \"task_type\",\n      render: (text, record, index) => (\n        <span>{text === 0 ? \"用户列表资金变动\" : \"代理配置列表资金变动\"}</span>\n      )\n    },\n    {\n      title: \"创建人昵称\",\n      dataIndex: \"operator_nick\",\n      width: 150\n    },\n    {\n      title: \"复审人昵称\",\n      dataIndex: \"review_nick\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\"\n    },\n    {\n      title: \"更新时间\",\n      dataIndex: \"updated_at\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      render: (text, record, index) => {\n        let res;\n        switch (text) {\n          case 0:\n            res = (\n              <div>\n                <LinkButton size=\"small\" onClick={()=>this.review(record)}>\n                  复审\n                </LinkButton>\n                <LinkButton size=\"small\" type=\"danger\" onClick={()=>this.refuse(record)}>\n                  拒绝\n                </LinkButton>\n              </div>\n            );\n            break;\n          case 1:\n            res = <LinkButton size=\"small\">已复审</LinkButton>;\n            break;\n          case 2:\n            res = (\n              <LinkButton size=\"small\" type=\"danger\">\n                复审拒绝\n              </LinkButton>\n            );\n            break;\n          default:\n            break;\n        }\n        return res;\n      }\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      end_time: this.start_time || \"\",\n      start_time: this.start_time || \"\",\n      status: this.status || \"\",\n      operator_nick: this.input.input.value || \"\"\n    };\n    const res = await tasksList(this.state.page, this.state.pageSize, value);\n    this.setState({ data: res.data, count: res.count });\n  };\n  review=async (record)=>{\n   this.action=\"review\"\n   this.editDataRecord=record\n   this.setState({ isEditFormShow: true });\n  }\n  refuse=async(record)=>{\n    this.action=\"refuse\"\n    this.editDataRecord=record\n    this.setState({ isEditFormShow: true });\n  }\n}\nexport default Tasks;\n","import React from \"react\";\nimport { Modal, Table } from \"antd\";\nimport {} from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport QRCode from \"qrcode.react\";\n\nconst EditForm = props => {\n  const data = props.record;\n  function checkQrcode(record) {\n    Modal.success({\n      title: \"收款码\",\n      content: (<div><QRCode value={record.pay_url}></QRCode></div>),\n      width: 250\n    });\n  }\n  let initColumns = [\n    {\n      title: \"账号类型\",\n      dataIndex: \"type\",\n      render: (text, record, index) => {\n        let res;\n        switch (text) {\n          case 1:\n            res = \"微信\";\n            break;\n          case 2:\n            res = \"alipay\";\n            break;\n          case 3:\n            res = \"银行卡\";\n            break;\n          case 4:\n            res = \"花呗\";\n            break;\n          case 5:\n            res = \"信用卡\";\n            break;\n          default:\n            res = \"\";\n            break;\n        }\n        return <span>{res}</span>;\n      }\n    },\n    {\n      title: \"账户名\",\n      dataIndex: \"account_name\"\n    },\n    {\n      title: \"账号\",\n      dataIndex: \"account_num\"\n    },\n    {\n      title: \"开户行\",\n      dataIndex: \"bank_name\"\n    },\n    {\n      title: \"收款码\",\n      dataIndex: \"pay_url\",\n      render: (text, record, index) => {\n        if (text && text.length > 0) {\n          return (\n            <LinkButton onClick={() => checkQrcode(record)}>预览</LinkButton>\n          );\n        }\n      }\n    },\n    {\n      title: \"状态[收款码审核]\",\n      dataIndex: \"status\"\n    },\n    {\n      title: \"绑定时间\",\n      dataIndex: \"created_at\"\n    },\n    {\n      title: \"修改时间\",\n      dataIndex: \"updated_at\"\n    }\n  ];\n  return (\n    <Table\n      bordered\n      rowKey={(record, index) => `${index}`}\n      dataSource={data}\n      columns={initColumns}\n      size=\"small\"\n    />\n  );\n};\n\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message,  Input, Select } from \"antd\";\nimport { allAccountList, resetPassword, accountList } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\n\nclass AccountList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await allAccountList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Select defaultValue=\"user_id\" style={{ width: 150 }}>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入user_id\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n            />\n            {/* <br />\n            <br />\n            <LinkButton style={{ float: \"right\" }} onClick={this.download} icon=\"download\">\n            </LinkButton> */}\n          </span>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          // scroll={{ x: 1800 }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title=\"绑定收付款账户详情\"\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            width=\"60%\"\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\"\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\"\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\"\n    },\n    {\n      title: \"资金密码操作\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <LinkButton\n          size=\"small\"\n          onClick={() => {\n            this.resetPassword(record);\n          }}\n        >\n          重置\n        </LinkButton>\n      )\n    },\n    {\n      title: \"绑定账号\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <LinkButton\n          size=\"small\"\n          onClick={() => {\n            this.checkAccount(record);\n          }}\n        >\n          查看\n        </LinkButton>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      user_id: this.input.input.value\n    };\n    const res = await allAccountList(\n      this.state.page,\n      this.state.pageSize,\n      value\n    );\n    this.setState({ data: res.data, count: parseInt(res.count) });\n  };\n  resetPassword = async record => {\n    const res = await resetPassword(record.user_id);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n  };\n  checkAccount = async record => {\n    const res = await accountList(record.user_id);\n    this.editDataRecord = res.data;\n    if (res.status !== 0) {\n      message.error(res.msg);\n    }\n    this.setState({ isEditFormShow: true });\n  };\n  // download=async()=>{\n\n  // }\n}\nexport default AccountList;\n","import React from \"react\";\nimport { Table } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nconst EditForm = props => {\n  const data = props.record||[];\n  const action = props.action;\n  let initColumns = [];\n  switch (action) {\n    case \"detail\":\n      initColumns = [\n        {\n          title: \"user_id\",\n          dataIndex: \"user_id\"\n        },\n        {\n          title: \"申请数量\",\n          dataIndex: \"\"\n        },\n        {\n          title: \"成交数量\",\n          dataIndex: \"\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"\"\n        }\n      ];\n      break;\n    case \"check\":\n      initColumns = [\n        {\n          title: \"审核人\",\n          dataIndex: \"review_name\"\n        },\n        {\n          title: \"审核时间\",\n          dataIndex: \"review_at\",\n          render: formateDate\n        }\n      ];\n      break;\n    case \"operatorRemark\":\n      initColumns = [\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"内容\",\n          dataIndex: \"content\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"created_at\",\n          render: formateDate\n        }\n      ];\n      break;\n    default:\n      break;\n  }\n  return (\n    <Table\n      bordered\n      rowKey={(record, index) => `${index}`}\n      dataSource={data}\n      columns={initColumns}\n      size=\"small\"\n    />\n  );\n};\n\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Select\n} from \"antd\";\nimport {\n  sellGoldApplyList,\n  tradeRemark,\n  sellGoldInfoList,\n  reviewInfo2,\n  remarkInfo2\n} from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false,\n    };\n    this.filed = \"id\";\n  }\n  getInitialData = async (page, limit) => {\n    const res = await sellGoldApplyList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.start_time = val[0];\n                this.end_time = val[1];\n              }}\n            ></MyDatePicker>\n            &nbsp;&nbsp;&nbsp;\n            <Select\n              defaultValue=\"id\"\n              style={{ width: 150 }}\n              onChange={value => (this.filed = value)}\n            >\n              <Select.Option value=\"id\">ID</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n              <Select.Option value=\"source\">所属代理</Select.Option>\n              <Select.Option value=\"group\">所属品牌</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入关键字搜索\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onChange={value => (this.status = value)}\n            >\n              <Select.Option value=\"\">状态</Select.Option>\n              <Select.Option value=\"1\">待初审</Select.Option>\n              <Select.Option value=\"2\">初审通过</Select.Option>\n              <Select.Option value=\"3\">初审拒绝</Select.Option>\n              <Select.Option value=\"4\">复审通过</Select.Option>\n              <Select.Option value=\"5\">复审拒绝</Select.Option>\n              <Select.Option value=\"6\">已下架</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()}>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: parseInt(this.state.count),\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          scroll={{ x: 1800 }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={\n              this.action === \"detail\"\n                ? \"详情\"\n                : this.action === \"check\"\n                ? \"审核详情\"\n                : \"运营备注详情\"\n            }\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 150\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\"\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\"\n    },\n    {\n      title: \"兑换单价\",\n      dataIndex: \"exchange_price\"\n    },\n    {\n      title: \"上架金币数\",\n      dataIndex: \"gold\"\n    },\n    {\n      title: \"上架金币余额\",\n      dataIndex: \"last_gold\"\n    },\n    {\n      title: \"最低兑换额\",\n      dataIndex: \"min_gold\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      render: (text, record, index) => {\n        let res;\n        switch (parseInt(text)) {\n          case 1:\n            res = (\n              <span>\n                <LinkButton size=\"small\">初审通过</LinkButton>\n                <LinkButton size=\"small\">初审拒绝</LinkButton>\n              </span>\n            );\n            break;\n          case 2:\n            res = (\n              <span>\n                <LinkButton size=\"small\">复审通过</LinkButton>\n                <LinkButton size=\"small\">复审拒绝</LinkButton>\n              </span>\n            );\n            break;\n          case 3:\n            res = <span>一审拒绝</span>;\n            break;\n          case 4:\n            res = <span>已上架</span>;\n            break;\n          case 5:\n            res = <span>二审拒绝</span>;\n            break;\n          case 6:\n            res = <span>已下架</span>;\n            break;\n          default:\n            break;\n        }\n        return res;\n      }\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      render: formateDate\n    },\n    {\n      title: \"风控\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton size=\"small\" type=\"dashed\">\n            风控\n          </LinkButton>\n          <LinkButton size=\"small\" type=\"dashed\">\n            游戏数据\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton size=\"small\" onClick={() => this.edit(record)}>\n            编辑\n          </LinkButton>\n          <LinkButton size=\"small\" onClick={() => this.checkDetail(record, \"detail\")}>\n            详情\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"审核详情\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            type=\"default\"\n            onClick={() => this.checkDetail(record, \"check\")}\n          >\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"备注内容\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            type=\"default\"\n            onClick={() => this.checkDetail(record, \"userRemark\")}\n          >\n            用户备注\n          </LinkButton>\n          <LinkButton\n            size=\"small\"\n            type=\"default\"\n            onClick={() => this.checkDetail(record, \"operatorRemark\")}\n          >\n            运营备注\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      end_time: this.start_time || \"\",\n      start_time: this.start_time || \"\",\n      status: this.status || \"\",\n      [this.filed]: this.input.input.value\n    };\n    const res = await sellGoldApplyList(\n      this.state.page,\n      this.state.pageSize,\n      value\n    );\n    this.setState({ data: res.data, count: res.count });\n  };\n  edit = async record => {\n    Modal.info({\n      title: \"编辑\",\n      okText: \"关闭\",\n      okType: \"default\",\n      width: \"50%\",\n      content: (\n        <div>\n          <div>\n            <span>备注[用户]&nbsp;&nbsp;&nbsp;</span>\n            <Input\n              style={{ width: \"60%\" }}\n              placeholder=\"请输入备注内容，用户查看使用\"\n              ref={Input => {\n                this.userRemarkInput = Input;\n              }}\n            />\n            <span>&nbsp;&nbsp;&nbsp;</span>\n            <LinkButton\n              onClick={() => {\n                this.editComfirm(record, 1);\n              }}\n            >\n              确定\n            </LinkButton>\n          </div>\n          <br />\n          <div>\n            <span>备注[运营]&nbsp;&nbsp;&nbsp;</span>\n            <Input\n              style={{ width: \"60%\" }}\n              placeholder=\"请输入备注内容，运营人员记录使用\"\n              ref={Input => {\n                this.operatorRemarkInput = Input;\n              }}\n            />\n            <span>&nbsp;&nbsp;&nbsp;</span>\n            <LinkButton\n              onClick={() => {\n                this.editComfirm(record, 2);\n              }}\n            >\n              确定\n            </LinkButton>\n          </div>\n        </div>\n      )\n    });\n  };\n  editComfirm = async (record, remark_type) => {\n    let value = {\n      id: record.id,\n      temarks:\n        remark_type === 1\n          ? this.userRemarkInput.input.value\n          : this.operatorRemarkInput.input.value,\n      remark_type: remark_type\n    };\n    if (remark_type === 2) {\n      value.type = 6;\n    }\n    const res = await tradeRemark(value);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n  };\n  checkDetail = async (record, action) => {\n    if (action === \"userRemark\") {\n      Modal.info({\n        title: `订单ID为【${record.id}】的用户备注`,\n        content: <div>{record.user_remark||'无'}</div>,\n        okText:'关闭'\n      });\n    } else {\n      let res;\n      switch (action) {\n        case \"detail\":\n          res = await sellGoldInfoList(1, 100, record.id);\n          break;\n        case \"check\":\n          res = await reviewInfo2(1, 100, record.id);\n          break;\n        case \"operatorRemark\":\n          res = await remarkInfo2(1, 100, record.id);\n          break;\n        default:\n          break;\n      }\n      this.editDataRecord = res.data;\n      this.action = action;\n      this.setState({ isEditFormShow: true });\n    }\n  };\n}\nexport default Tasks;\n","import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { changeUserBalance } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  let params = JSON.parse(record.params);\n\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        let obj = {\n          \"data[id]\": record.id,\n          \"data[params]\": record.params,\n          \"data[status]\": 2\n        };\n        if (props.action === \"review\") {\n          obj[\"data[pay_reason]\"] = value.reason;\n          obj[\"data[status]\"] = 1;\n        }\n        const res = await changeUserBalance(obj);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <div>\n      <span>\n        ID:{params.user_id} 资金变动：{params.amount} 复审\n        {props.action === \"review\" ? \"备注\" : \"拒绝\"}\n      </span>\n      <Form\n        labelCol={{ span: 4 }}\n        labelAlign=\"left\"\n        onSubmit={handleEditSubmit}\n      >\n        <Form.Item\n          style={{ display: props.action === \"review\" ? \"block\" : \"none\" }}\n        >\n          {getFieldDecorator(\"reason\", {\n            initialValue: params.reason\n          })(<Input.TextArea autosize={{ minRows: 5, maxRows: 10 }} />)}\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input, Select } from \"antd\";\nimport { sellGoldOrderList } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await sellGoldOrderList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } \n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.start_time = val[0];\n                this.end_time = val[1];\n              }}\n            ></MyDatePicker>\n            &nbsp;&nbsp;&nbsp;\n            <Select\n              placeholder=\"任务状态\"\n              style={{ width: 150 }}\n              onChange={value => (this.status = value)}\n            >\n              <Select.Option value=\"0\">待操作</Select.Option>\n              <Select.Option value=\"1\">已复审</Select.Option>\n              <Select.Option value=\"2\">复审拒绝</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入创建人昵称\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()}>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          scroll={{ x: 1800 }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"review\" ? \"复审\" : \"拒绝\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"买家ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"买家昵称\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"卖家ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"卖家昵称\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"兑换单价\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"支付金额\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"兑换金额\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"完成时间\",\n      dataIndex: \"\"\n    }\n  ];\n  // onSearch = async () => {\n  //   let value = {\n  //     end_time: this.start_time || \"\",\n  //     start_time: this.start_time || \"\",\n  //     status: this.status || \"\",\n  //     operator_nick: this.input.input.value || \"\"\n  //   };\n  //   const res = await tasksList(this.state.page, this.state.pageSize, value);\n  //   this.setState({ data: res.data, count: res.count });\n  // };\n  review = async record => {\n    this.action = \"review\";\n    this.editDataRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n  refuse = async record => {\n    this.action = \"refuse\";\n    this.editDataRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n}\nexport default Tasks;\n","import React from \"react\";\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\nimport { saveActivityConfig } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  const action = props.action;\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        if (action === \"edit\") {\n          value.id = record.id;\n        }\n        const res = await saveActivityConfig(value);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <div>\n      <Form\n        labelCol={{ span: 6 }}\n        labelAlign=\"left\"\n        onSubmit={handleEditSubmit}\n      >\n        <Form.Item label=\"活动名称\">\n          {getFieldDecorator(\"name\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.name\n          })(<Input style={{ width: \"40%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"品牌\">\n          {getFieldDecorator(\"package_id\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.package_id\n          })(\n            <Select style={{ width: \"40%\" }}>\n              <Select.Option value=\"1\">博臣娱乐</Select.Option>\n              <Select.Option value=\"2\">机器人首领</Select.Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"状态\">\n          {getFieldDecorator(\"is_close\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.is_close\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">关闭</Radio>\n              <Radio value=\"2\">开启</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"需要绑定电话\">\n          {getFieldDecorator(\"need_mobile\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.need_mobile\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">是</Radio>\n              <Radio value=\"2\">否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"需要绑定银行卡\">\n          {getFieldDecorator(\"need_bankcard\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.need_bankcard\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">是</Radio>\n              <Radio value=\"2\">否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"排序\">\n          {getFieldDecorator(\"order_by\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.order_by\n          })(<Input style={{ width: \"40%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"活动内容\">\n          {getFieldDecorator(\"info\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.info\n          })(\n            <Input.TextArea\n              style={{ width: \"70%\" }}\n              autosize={{ maxRows: 10 }}\n            />\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Input, Popconfirm } from \"antd\";\nimport {\n  activityConfigList,\n  delActivityConfig\n} from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport WrappedEditForm from \"./editForm\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass AccountList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await activityConfigList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.setState({\n                  start_time: val[0],\n                  end_time: val[1]\n                });\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入活动id\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              onClick={this.onSearch}\n              icon=\"search\"\n              size=\"default\"\n            ></LinkButton>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton onClick={this.add} size=\"default\">\n              添加\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"add\" ? \"添加\" : \"编辑\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"活动名称\",\n      dataIndex: \"name\"\n    },\n    {\n      title: \"品牌ID\",\n      dataIndex: \"package_id\"\n    },\n    {\n      title: \"活动状态\",\n      dataIndex: \"is_close\",\n      render: text => <span>{text === \"1\" ? \"关闭\" : \"开启\"}</span>\n    },\n    {\n      title: \"需要绑定电话\",\n      dataIndex: \"need_mobile\",\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"需要绑定银行卡\",\n      dataIndex: \"need_bankcard\",\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"活动内容\",\n      dataIndex: \"info\",\n      width: 200\n    },\n    {\n      title: \"排序\",\n      dataIndex: \"order_by\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            onClick={() => {\n              this.edit(record);\n            }}\n          >\n            编辑\n          </LinkButton>\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.delete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <LinkButton type=\"danger\" size=\"small\">\n              删除\n            </LinkButton>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      user_id: this.input.input.value\n    };\n    const res = await activityConfigList(\n      this.state.page,\n      this.state.pageSize,\n      value\n    );\n    this.setState({ data: res.data, count: parseInt(res.count) });\n  };\n  add = async record => {\n    this.action = \"add\";\n    this.setState({ isEditFormShow: true });\n  };\n  edit = async record => {\n    this.action = \"edit\";\n    this.editDataRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n  delete = async record => {\n    const res = await delActivityConfig(record.id);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n    this.getInitialData(1, 20);\n  };\n}\nexport default AccountList;\n","import React from \"react\";\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\nimport { saveActivityConfig } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  const action = props.action;\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        if (action === \"edit\") {\n          value.id = record.id;\n        }\n        const res = await saveActivityConfig(value);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <div>\n      <Form\n        labelCol={{ span: 6 }}\n        labelAlign=\"left\"\n        onSubmit={handleEditSubmit}\n      >\n        <Form.Item label=\"活动名称\">\n          {getFieldDecorator(\"name\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.name\n          })(<Input style={{ width: \"40%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"品牌\">\n          {getFieldDecorator(\"package_id\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.package_id\n          })(\n            <Select style={{ width: \"40%\" }}>\n              <Select.Option value=\"1\">博臣娱乐</Select.Option>\n              <Select.Option value=\"2\">机器人首领</Select.Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"状态\">\n          {getFieldDecorator(\"is_close\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.is_close\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">关闭</Radio>\n              <Radio value=\"2\">开启</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"需要绑定电话\">\n          {getFieldDecorator(\"need_mobile\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.need_mobile\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">是</Radio>\n              <Radio value=\"2\">否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"需要绑定银行卡\">\n          {getFieldDecorator(\"need_bankcard\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.need_bankcard\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">是</Radio>\n              <Radio value=\"2\">否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"排序\">\n          {getFieldDecorator(\"order_by\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.order_by\n          })(<Input style={{ width: \"40%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"活动内容\">\n          {getFieldDecorator(\"info\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.info\n          })(\n            <Input.TextArea\n              style={{ width: \"70%\" }}\n              autosize={{ maxRows: 10 }}\n            />\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Input, Popconfirm } from \"antd\";\nimport {\n  giftVoucherList,\n  delActivityConfig\n} from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport WrappedEditForm from \"./editForm\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass AccountList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await giftVoucherList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.setState({\n                  start_time: val[0],\n                  end_time: val[1]\n                });\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入活动id\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              onClick={this.onSearch}\n              icon=\"search\"\n              size=\"default\"\n            ></LinkButton>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton onClick={this.add} size=\"default\">\n              添加\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"add\" ? \"添加\" : \"编辑\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"领取人ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"领取人昵称\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"代理ID\",\n      dataIndex: \"\",\n      render: text => <span>{text === \"1\" ? \"关闭\" : \"开启\"}</span>\n    },\n    {\n      title: \"code\",\n      dataIndex: \"\",\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"领取金额\",\n      dataIndex: \"\",\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"\",\n      width: 200\n    },\n    {\n      title: \"领取时间\",\n      dataIndex: \"order_by\"\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            onClick={() => {\n              this.edit(record);\n            }}\n          >\n            编辑\n          </LinkButton>\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.delete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <LinkButton type=\"danger\" size=\"small\">\n              删除\n            </LinkButton>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      user_id: this.input.input.value\n    };\n    const res = await giftVoucherList(\n      this.state.page,\n      this.state.pageSize,\n      value\n    );\n    this.setState({ data: res.data, count: parseInt(res.count) });\n  };\n  add = async record => {\n    this.action = \"add\";\n    this.setState({ isEditFormShow: true });\n  };\n  edit = async record => {\n    this.action = \"edit\";\n    this.editDataRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n  delete = async record => {\n    const res = await delActivityConfig(record.id);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n    this.getInitialData(1, 20);\n  };\n}\nexport default AccountList;\n","import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass GoldDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { data } = this.props.detailRecord;\n    console.log(data);\n\n    return (\n      <Table\n        bordered\n        rowKey={(record,index)=>`${index}`}\n        dataSource={data}\n        columns={this.initColumns()}\n        size=\"small\"\n      />\n    );\n  }\n  initColumns = () => {\n    if (this.props.action === \"check\") {\n      return [\n        {\n          title: \"审核人\",\n          dataIndex: \"review_name\"\n        },\n        {\n          title: \"审核时间\",\n          dataIndex: \"review_at\",\n          render: formateDate\n        }\n      ];\n    } else if (this.props.action === \"risk\") {\n      return [\n        {\n          title: \"user_id\",\n          dataIndex: \"id\"\n        },\n        {\n          title: \"产生来源\",\n          dataIndex: \"pay_account_name\"\n        },\n\n        {\n          title: \"余额(变动前)\",\n          dataIndex: \"total_balance\"\n        },\n        {\n          title: \"变动金额\",\n          dataIndex: \"final_pay\",\n\n          sorter: (a, b) => a.total_balance - b.total_balance\n        },\n        {\n          title: \"税收\",\n          dataIndex: \"tax\"\n        },\n        {\n          title: \"余额(变动后)\",\n          dataIndex: \"total_final_balance\"\n        },\n        {\n          title: \"备注\",\n          dataIndex: \"pay_reason\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"create_time\"\n        }\n      ];\n    } else {\n      return [\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"内容\",\n          dataIndex: \"content\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"created_at\",\n          render: formateDate\n        }\n      ];\n    }\n  };\n}\n\nexport default GoldDetail;\n","import React, { Component } from \"react\";\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\nimport { withDrawReview } from \"../../../api/index\";\nclass EditForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      review_status: \"\"\n    };\n  }\n  render() {\n    const record = this.props.record;\n    return (\n      <div>\n        <div>订单ID:{record.order_id}</div>\n        <div>用户ID:{record.user_id}</div>\n        <div>金额:{record.amount}</div>\n        <div>\n          订单状态:\n          <Radio.Group\n            onChange={e => {\n              this.setState({ review_status: e.target.value });\n            }}\n            value={this.state.review_status}\n          >\n            <Radio value={2}>已成功</Radio>\n            <Radio value={3}>已失败</Radio>\n          </Radio.Group>\n          <Button onClick={() => this.orderStatus(record)}>确认</Button>\n        </div>\n      </div>\n    );\n  }\n  orderStatus = async record => {\n    const res = await withDrawReview(\n      record.order_id,\n      record.user_id,\n      this.state.review_status\n    );\n    message.info(res.msg);\n  };\n}\n\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, Icon, Input, Select, Popover } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport {\n  withDraw,\n  downloadWithdrawList,\n  userDetail,\n  reviewInfo,\n  remarkInfo\n} from \"../../../api\";\nimport WrappedComponent from \"./details\";\nimport EditForm from \"./editForm\";\n\nclass Withdraw_list extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      start_time: \"\",\n      end_time: \"\",\n      order_status: \"\",\n      type: 5,\n      filed: \"\",\n      inputParam: \"\",\n      user_id: \"\",\n      order_id: \"\",\n      isBindInfoShow: false,\n      isEditFormShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await withDraw(page, limit, 1, this.state);\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  handleChange(event) {\n    this.setState({ inputParam: event.target.value });\n  }\n  onSearchData = async () => {\n    const result = await withDraw(1, 20, 1, this.state);\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  download = () => {\n    downloadWithdrawList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ filed: value })}\n            >\n              <Select.Option value=\"order_id\">订单id</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n              <Select.Option value=\"replace_id\">被赠人ID</Select.Option>\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Input\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n              style={{ width: 150 }}\n              value={this.state.inputParam}\n              onChange={this.handleChange}\n            />\n            &nbsp; &nbsp;\n            <MyDatePicker\n              handleValue={val => {\n                this.setState({\n                  start_time: val[0],\n                  end_time: val[1]\n                });\n              }}\n            />\n            &nbsp; &nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ order_status: value })}\n            >\n              <Select.Option value=\"\">订单状态</Select.Option>\n              <Select.Option value=\"1\">待审核</Select.Option>\n              <Select.Option value=\"2\">处理中</Select.Option>\n              <Select.Option value=\"3\">已提交</Select.Option>\n              <Select.Option value=\"4\">已成功</Select.Option>\n              <Select.Option value=\"5\">已失败</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => {\n                window.location.reload();\n              }}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n          scroll={{ x: 2400, y: \"60vh\" }}\n        />\n        <Modal\n          title={\n            this.action === \"check\"\n              ? \"审核信息\"\n              : this.action === \"risk\"\n              ? \"资金明细\"\n              : \"运营备注\"\n          }\n          visible={this.state.isDetailShow}\n          onCancel={() => {\n            this.setState({ isDetailShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <WrappedComponent\n            detailRecord={this.detailRecord}\n            action={this.action}\n          />\n        </Modal>\n        {this.state.isEditFormShow && (\n          <Modal\n            title=\"编辑\"\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n            width=\"70%\"\n          >\n            <EditForm record={this.editRecord} />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 300\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 100\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 100,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"申请费率\",\n      dataIndex: \"handling_fee\",\n      width: 100\n    },\n    {\n      title: \"实际费率\",\n      dataIndex: \"gold\",\n      width: 100\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 100,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"兑换方式\",\n      dataIndex: \"order_type\",\n      width: 100\n    },\n    {\n      title: \"被赠人ID\",\n      dataIndex: \"replace_id\",\n      width: 100\n    },\n    {\n      title: \"被赠人昵称\",\n      dataIndex: \"replace_name\",\n      width: 100\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"待审核\";\n            break;\n          case \"2\":\n            word = \"处理中\";\n            break;\n          case \"3\":\n            word = \"已提交\";\n            break;\n          case \"4\":\n            word = \"已成功\";\n            break;\n          case \"5\":\n            word = \"已失败\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\",\n      width: 100\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 150,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 150,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 200,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"审核详情\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"备注内容\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <Popover\n            content={record.user_remark}\n            title={record.user_id + \"用户备注\"}\n            trigger=\"click\"\n          >\n            <LinkButton>用户备注</LinkButton>\n          </Popover>\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\n            运营备注\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  dataPickerOnChange = (date, dateString) => {\n    let startTime = dateString[0] + \" 00:00:00\";\n    let endTime = dateString[1] + \" 00:00:00\";\n    this.setState({\n      start_time: startTime,\n      end_time: endTime\n    });\n  };\n  getDetail = async (record, action) => {\n    this.action = action;\n    this.detailRecord = {\n      data: [],\n      count: 0,\n      id: record.user_id\n    };\n    const res =\n      action === \"risk\"\n        ? await userDetail(1, 20, record.user_id)\n        : action === \"check\"\n        ? await reviewInfo(1, 20, record.order_id)\n        : await remarkInfo(1, 20, record.order_id);\n    if (res.status === 0) {\n      this.detailRecord.data = res.data;\n      this.detailRecord.count = res.count;\n    }\n    this.setState({ isDetailShow: true });\n  };\n  edit = record => {\n    console.log(123);\n    \n    this.editRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n}\n\nexport default Withdraw_list;\n","import React, { Component } from \"react\";\nimport {  withRouter } from \"react-router-dom\";\nimport {\n  Card,\n  message,\n  Input,\n  Button,\n  Form,\n  Radio,\n} from \"antd\";\nimport { getConfigList,  } from \"../../../api/index\";\n\nclass Channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\"\n    };\n  }\n  getUsers = async (page, limit) => {\n    const res = await getConfigList();\n    if (res.status === 0) {\n      this.initialData = res.data;\n      this.setState({ data: JSON.parse(res.data.conf_val) });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getUsers();\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const data = this.state.data;\n    return (\n      <Card\n        extra={\n          <span>\n            <Button\n              style={{ float: \"right\" }}\n              icon=\"reload\"\n              onClick={() => {\n                window.location.reload();\n              }}\n            />\n          </span>\n        }\n      >\n        <Form\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 20 }}\n          onSubmit={this.handleSubmit}\n        >\n          <Form.Item label=\"品牌\">\n            {getFieldDecorator(\"package_id\", {\n              initialValue: 1\n            })(\n              <Radio.Group>\n                <Radio value={1}>博臣娱乐</Radio>\n                <Radio value={0}>机器人首领</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item label=\"开关\">\n            {getFieldDecorator(\"is_close\", {\n              initialValue: 1\n            })(\n              <Radio.Group>\n                <Radio value={1}>启用</Radio>\n                <Radio value={0}>停用</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"赠送区间\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"qujian\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: \"\"\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][2][max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: \"\"\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item wrapperCol={{ offset: 4 }}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    // this.props.form.validateFields(async (err, value) => {\n    //   let { id, name } = this.initialData;\n    //   let obj = {};\n    //   value.bankcard.channel.forEach((item, index) => {\n    //     for (const key in item) {\n    //       obj[`bankcard[channel][${index}][${key}]`] = item[key];\n    //     }\n    //   });\n\n    //   obj[\"bankcard[is_close]\"] = value.bankcard.is_close ? \"on\" : \"off\";\n    //   obj[\"alipay[is_close]\"] = value.alipay.is_close ? \"on\" : \"off\";\n    //   for (const key in value.artificial) {\n    //     obj[`artificial[${key}]`] = value.artificial[key];\n    //   }\n    //   if (!err) {\n    //     const res = await saveWithDrawChannel(id, name, obj);\n    //     if (res.status === 0) {\n    //       message.success(\"提交成功:\" + res.msg);\n    //       console.log(res);\n    //       this.getUsers();\n    //     } else {\n    //       message.error(\"出错了：\" + res.msg);\n    //     }\n    //   } else {\n    //     message.error(\"提交失败\");\n    //   }\n    // });\n  };\n}\nconst WrappedChannel = Form.create()(Channel);\n\nexport default withRouter(WrappedChannel);\n","import React, { Component } from \"react\";\nimport { Card, Table, Input, Select, message, Modal } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport {\n  getAIList,\n  reqLoadGold,\n  setGameUserNickName,\n  changeInternalUserBalance\n} from \"../../../api\";\n\nclass Withdraw_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      minGold: \"\",\n      maxGold: \"\"\n    };\n  }\n  getUsers = async (page, limit) => {\n    const result = await getAIList(page, limit, 5);\n    this.setState({\n      data: result.data.game_user,\n      count: parseInt(result.count)\n    });\n  };\n  onSearchData = async () => {\n    let value = {\n      [this.filed]: this.input.input.value\n    };\n    const result = await getAIList(1, 20, 5, value);\n    this.setState({\n      data: result.data.game_user,\n      count: parseInt(result.count)\n    });\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 150 }}\n              onSelect={value => (this.filed = value)}\n            >\n              <Select.Option value=\"game_nick\">昵称</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Input\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n              style={{ width: 150 }}\n              ref={Input => (this.input = Input)}\n            />\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => {\n                window.location.reload();\n              }}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <LinkButton onClick={this.changeGold}>批量增减金币</LinkButton>\n        <LinkButton onClick={this.changeNickname}>批量修改昵称</LinkButton>\n        <br />\n        <Table\n          rowSelection={this.rowSelection()}\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n        />\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"game_nick\"\n    },\n    {\n      title: \"账户余额\",\n      dataIndex: \"game_gold\"\n    },\n    {\n      title: \"实时余额\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.check(record)}>查看</LinkButton>\n        </span>\n      )\n    }\n  ];\n  rowSelection = () => {\n    return {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.selectedRows = selectedRows;\n      },\n      getCheckboxProps: record => ({\n        // disabled: record.name === \"Disabled User\", // Column configuration not to be checked\n        // name: record.name\n      })\n    };\n  };\n  check = async record => {\n    const res = await reqLoadGold(record.id);\n    message.info(res.data[0].game_gold);\n  };\n  changeGold = async () => {\n    if (!this.selectedRows || !this.selectedRows[0]) {\n      message.error(\"user_id为空，请至少选择1位user_id\");\n    } else {\n      console.log(this.selectedRows);\n      Modal.confirm({\n        title: \"添加金额区间\",\n        okText: \"提交\",\n        okType: \"primary\",\n        width: \"30%\",\n        onOk: () => {\n          let { minGold, maxGold } = this.state;\n          if (minGold && maxGold) {\n            if (minGold > maxGold) {\n              message.error(\"请确认最大值大于最小值\");\n            } else {\n              this.handleOk(minGold, maxGold);\n            }\n          } else {\n            message.error(\"请输入有效值\");\n          }\n        },\n        content: (\n          <div>\n            <div>金额区间：</div>\n            <Input\n              type=\"text\"\n              style={{ width: \"40%\" }}\n              placeholder=\"￥最小值\"\n              // value={this.state.minGold}\n              // onChange={e => {\n              //   this.setState({ minGold: e.target.value });\n              // }}\n              onBlur={e => this.setState({ minGold: e.target.value })}\n              // ref={Input => (this.minInput = Input)}\n            />\n            --\n            <Input\n              type=\"text\"\n              style={{ width: \"40%\" }}\n              placeholder=\"￥最大值\"\n              onBlur={e => this.setState({ maxGold: e.target.value })}\n              // ref={Input => (this.maxInput = Input)}\n            />\n          </div>\n        )\n      });\n    }\n  };\n  handleOk = async (minGold, maxGold) => {\n    let amount = this.randNum(minGold, maxGold);\n    for (let i = 0; i < this.selectedRows.length; i++) {\n      let user_id = this.selectedRows[i].id;\n      const res = await changeInternalUserBalance(user_id, amount);\n      message.info(res.msg);\n    }\n    this.getUsers(1, 20);\n  };\n  randNum = (min, max) => {\n    min = parseInt(min);\n    max = parseInt(max);\n    var Range = max - min;\n    var Rand = Math.random();\n    var num = min + Math.round(Rand * Range); //四舍五入\n    return num;\n  };\n  changeNickname = async () => {\n    if (this.selectedRows && this.selectedRows[0]) {\n      for (let i = 0; i < this.selectedRows.length; i++) {\n        let { id } = this.selectedRows[i];\n        let game_nick = \"VIP\" + this.randNum(100000, 999999);\n        const res = await setGameUserNickName(id, game_nick);\n        message.info(res.msg);\n      }\n      this.getUsers(1, 20);\n    } else {\n      message.error(\"user_id为空，请至少选择1位user_id\");\n    }\n  };\n}\n\nexport default Withdraw_list;\n","import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass GoldDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { data } = this.props.detailRecord;\n    console.log(data);\n\n    return (\n      <Table\n        bordered\n        rowKey={(record,index)=>`${index}`}\n        dataSource={data}\n        columns={this.initColumns()}\n        size=\"small\"\n      />\n    );\n  }\n  initColumns = () => {\n    if (this.props.action === \"check\") {\n      return [\n        {\n          title: \"审核人\",\n          dataIndex: \"review_name\"\n        },\n        {\n          title: \"审核时间\",\n          dataIndex: \"review_at\",\n          render: formateDate\n        }\n      ];\n    } else if (this.props.action === \"risk\") {\n      return [\n        {\n          title: \"user_id\",\n          dataIndex: \"id\"\n        },\n        {\n          title: \"产生来源\",\n          dataIndex: \"pay_account_name\"\n        },\n\n        {\n          title: \"余额(变动前)\",\n          dataIndex: \"total_balance\"\n        },\n        {\n          title: \"变动金额\",\n          dataIndex: \"final_pay\",\n\n          sorter: (a, b) => a.total_balance - b.total_balance\n        },\n        {\n          title: \"税收\",\n          dataIndex: \"tax\"\n        },\n        {\n          title: \"余额(变动后)\",\n          dataIndex: \"total_final_balance\"\n        },\n        {\n          title: \"备注\",\n          dataIndex: \"pay_reason\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"create_time\"\n        }\n      ];\n    } else {\n      return [\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"内容\",\n          dataIndex: \"content\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"created_at\",\n          render: formateDate\n        }\n      ];\n    }\n  };\n}\n\nexport default GoldDetail;\n","import React, { Component } from \"react\";\nimport {  Input, Button, message } from \"antd\";\nimport { withDrawRemark } from \"../../../api\";\n\nexport default class AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { editDataRecord } = this.props;\n    return (\n      <div>\n        <div>订单ID:{editDataRecord.order_id}</div>\n        <div>用户ID:{editDataRecord.user_id}</div>\n        <div>金额:{editDataRecord.amount}</div>\n        <div>\n          <span>备注[用户]:</span>\n          <Input\n            type=\"text\"\n            style={{ width: \"70%\", margin: \"0 10px\" }}\n            placeholder=\"请输入备注内容，用户查看使用\"\n            onBlur={e => (this.userRemark = e.target.value)}\n          />\n          <Button\n            type=\"primary\"\n            className=\"login-form-button\"\n            onClick={() =>\n              this.submitRemark(editDataRecord.order_id, this.userRemark, 1)\n            }\n          >\n            提交\n          </Button>\n        </div>\n        <div>\n          <span>备注[运营]:</span>\n          <Input\n            type=\"text\"\n            style={{ width: \"70%\", margin: \"0 10px\" }}\n            placeholder=\"请输入备注内容，运营人员记录使用\"\n            onBlur={e => (this.operatorRemark = e.target.value)}\n          />\n          <Button\n            type=\"primary\"\n            className=\"login-form-button\"\n            onClick={() =>\n              this.submitRemark(editDataRecord.order_id, this.operatorRemark, 2)\n            }\n          >\n            提交\n          </Button>\n        </div>\n      </div>\n    );\n  }\n  submitRemark = async (id, temarks, remark_type) => {\n    const res = await withDrawRemark(id, temarks, remark_type);\n    if (res.status === 0) {\n      message.success(\"操作成功:\" + res.msg);\n    } else {\n      message.error(\"操作失败:\" + res.msg);\n    }\n  };\n}\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Select,\n  ConfigProvider,\n  DatePicker,\n  Button,\n  Popover\n} from \"antd\";\nimport \"moment/locale/zh-cn\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\nimport \"moment/locale/zh-cn\";\nimport {\n  withDraw,\n  downloadWithdrawList,\n  userDetail,\n  reviewInfo,\n  remarkInfo\n} from \"../../../api\";\nimport WrappedComponent from \"./details\";\nimport AddDataForm from \"./edit\";\n\nconst { RangePicker } = DatePicker;\nclass Daiti extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      start_time: \"\",\n      end_time: \"\",\n      order_status: \"\",\n      type: 3,\n      filed: \"\",\n      user_id: \"\",\n      order_id: \"\",\n      isBindInfoShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    let data = { inputParam: \"\", ...this.state };\n    const result = await withDraw(page, limit, 1, data);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: parseInt(result.count)\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  onSearchData = async () => {\n    let data = { inputParam: this.input.input.value, ...this.state };\n    console.log(data);\n\n    const result = await withDraw(1, 20, 1, data);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: parseInt(result.count)\n      });\n    } else {\n      this.setState({\n        data: result.data,\n        count: parseInt(result.count)\n      });\n      message.error(\"请检查输入的关键词或网络\");\n    }\n  };\n  download = () => {\n    downloadWithdrawList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <ConfigProvider locale={zh_CN}>\n              <RangePicker\n                // defaultValue={[moment().locale(\"zh-cn\")]}\n                // showTime={{ format: \"HH:mm\" }}\n                format=\"YYYY-MM-DD\"\n                placeholder={[\"开始日期\", \"结束日期\"]}\n                onChange={this.dataPickerOnChange}\n              />\n            </ConfigProvider>\n            &nbsp; &nbsp;\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ filed: value })}\n            >\n              <Select.Option value=\"order_id\">订单id</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n              <Select.Option value=\"replace_id\">代提ID</Select.Option>\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Input\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n              style={{ width: 150 }}\n              // value={this.state.inputParam}\n              // onChange={this.handleChange}\n              ref={Input => (this.input = Input)}\n            />\n            &nbsp; &nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ order_status: value })}\n            >\n              <Select.Option value=\"\">订单状态</Select.Option>\n              <Select.Option value=\"1\">待审核</Select.Option>\n              <Select.Option value=\"2\">处理中</Select.Option>\n              <Select.Option value=\"3\">已提交</Select.Option>\n              <Select.Option value=\"4\">已成功</Select.Option>\n              <Select.Option value=\"5\">已失败</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => {\n                window.location.reload();\n              }}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n          scroll={{ x: 2500, y: \"60vh\" }}\n        />\n        <Modal\n          title={\n            this.action === \"check\"\n              ? \"审核信息\"\n              : this.action === \"risk\"\n              ? \"资金明细\"\n              : \"运营备注\"\n          }\n          visible={this.state.isDetailShow}\n          onCancel={() => {\n            this.setState({ isDetailShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <WrappedComponent\n            detailRecord={this.detailRecord}\n            action={this.action}\n          />\n        </Modal>\n        {this.state.isEditShow && (\n          <Modal\n            title=\"编辑\"\n            visible={this.state.isEditShow}\n            onCancel={() => {\n              this.setState({ isEditShow: false });\n            }}\n            footer={null}\n            width=\"40%\"\n          >\n            <AddDataForm editDataRecord={this.editDataRecord} />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 300\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 150\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 100,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 100,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"兑换方式\",\n      dataIndex: \"order_type\",\n      width: 100\n    },\n    {\n      title: \"兑换账号\",\n      dataIndex: \"pay_account\",\n      width: 200\n    },\n    {\n      title: \"账号名称\",\n      dataIndex: \"pay_name\",\n      width: 100\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"待审核\";\n            break;\n          case \"2\":\n            word = \"处理中\";\n            break;\n          case \"3\":\n            word = \"已提交\";\n            break;\n          case \"4\":\n            word = \"已成功\";\n            break;\n          case \"5\":\n            word = \"已失败\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 150,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\",\n      width: 100\n    },\n    {\n      title: \"代提ID\",\n      dataIndex: \"replace_id\",\n      width: 100\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 150,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 150,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"风控\",\n      dataIndex: \"\",\n      width: 180,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getDetail(record, \"risk\")}>\n            风控\n          </LinkButton>\n          <LinkButton>游戏数据</LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"审核详情\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"备注内容\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <Popover\n            content={record.user_remark}\n            title={record.user_id + \"用户备注\"}\n            trigger=\"click\"\n          >\n            <LinkButton>用户备注</LinkButton>\n          </Popover>\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\n            运营备注\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  dataPickerOnChange = (date, dateString) => {\n    let startTime = dateString[0] + \" 00:00:00\";\n    let endTime = dateString[1] + \" 00:00:00\";\n    this.setState({\n      start_time: startTime,\n      end_time: endTime\n    });\n  };\n  getDetail = async (record, action) => {\n    this.action = action;\n    this.detailRecord = {\n      data: [],\n      count: 0,\n      id: record.user_id\n    };\n    const res =\n      action === \"risk\"\n        ? await userDetail(1, 20, record.user_id)\n        : action === \"check\"\n        ? await reviewInfo(1, 20, record.order_id)\n        : await remarkInfo(1, 20, record.order_id);\n    if (res.status === 0) {\n      this.detailRecord.data = res.data;\n      this.detailRecord.count = res.count;\n    }\n    this.setState({ isDetailShow: true });\n  };\n  edit = async record => {\n    this.setState({ isEditShow: true });\n    this.editDataRecord = record;\n  };\n}\n\nexport default Daiti;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport {\n  Card,\n  message,\n  Input,\n  Button,\n  Form,\n  Switch,\n  Radio,\n  Divider\n} from \"antd\";\nimport { getConfigList, saveWithDrawChannel } from \"../../../api/index\";\n\nclass Channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\"\n    };\n  }\n  getUsers = async (page, limit) => {\n    const res = await getConfigList();\n    if (res.status === 0) {\n      this.initialData = res.data;\n      this.setState({ data: JSON.parse(res.data.conf_val) });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getUsers();\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const data = this.state.data;\n    return (\n      <Card\n        extra={\n          <span>\n            <Button\n              style={{ float: \"right\" }}\n              icon=\"reload\"\n              onClick={() => {\n                window.location.reload();\n              }}\n            />\n          </span>\n        }\n      >\n        <Form\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 20 }}\n          onSubmit={this.handleSubmit}\n        >\n          <Form.Item label=\"提款支付宝\">\n            {getFieldDecorator(\"alipay[is_close]\", {\n              initialValue: data && data.alipay.is_close === 1 ? true : false,\n              valuePropName: \"checked\"\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\n          </Form.Item>\n          <Divider></Divider>\n          <Form.Item label=\"提款银行卡\">\n            {getFieldDecorator(\"bankcard[is_close]\", {\n              initialValue: data && data.bankcard.is_close === 1 ? true : false,\n              valuePropName: \"checked\"\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\n          </Form.Item>\n          <Form.Item label=\"古都银行卡状态\">\n            {getFieldDecorator(\"bankcard[channel][2][is_close]\", {\n              initialValue: data && parseInt(data.bankcard.channel[0].is_close)\n            })(\n              <Radio.Group>\n                <Radio value={1}>启用</Radio>\n                <Radio value={0}>停用</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item label=\"显示名称\">\n            {getFieldDecorator(\"bankcard[channel][2][channel_name]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[0].channel_name\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item\n            label=\"提款限额\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][2][min_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[0].min_amount\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][2][max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[0].max_amount\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"渠道排序\">\n            {getFieldDecorator(\"bankcard[channel][2][sort]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[0].sort\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"第三方代付状态\">\n            {getFieldDecorator(\"bankcard[channel][3][is_close]\", {\n              initialValue: data && parseInt(data.bankcard.channel[1].is_close)\n            })(\n              <Radio.Group>\n                <Radio value={1}>启用</Radio>\n                <Radio value={0}>停用</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item label=\"显示名称\">\n            {getFieldDecorator(\"bankcard[channel][3][channel_name]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[1].channel_name\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item\n            label=\"提款限额\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][3][min_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[1].min_amount\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][3][max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[1].max_amount\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"渠道排序\">\n            {getFieldDecorator(\"bankcard[channel][3][sort]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[1].sort\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"onepay状态\">\n            {getFieldDecorator(\"bankcard[channel][7][is_close]\", {\n              initialValue: data && parseInt(data.bankcard.channel[2].is_close)\n            })(\n              <Radio.Group>\n                <Radio value={1}>启用</Radio>\n                <Radio value={0}>停用</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item label=\"显示名称\">\n            {getFieldDecorator(\"bankcard[channel][7][channel_name]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[2].channel_name\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item\n            label=\"提款限额\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][7][min_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[2].min_amount\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][7][max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[2].max_amount\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"渠道排序\">\n            {getFieldDecorator(\"bankcard[channel][7][sort]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[2].sort\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n\n          <Divider></Divider>\n          <Form.Item label=\"人工兑换\">\n            {getFieldDecorator(\"artificial[is_close]\", {\n              initialValue:\n                data && data.artificial.is_close === 1 ? true : false,\n              valuePropName: \"checked\"\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\n          </Form.Item>\n          <Form.Item\n            label=\"提款限额\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"artificial[min_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.artificial.min_amount\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"artificial[max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.artificial.max_amount\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"费率\">\n            {getFieldDecorator(\"artificial[rate]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.artificial.rate\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ offset: 4 }}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      let { id, name } = this.initialData;\n      let obj = {};\n      value.bankcard.channel.forEach((item, index) => {\n        for (const key in item) {\n          obj[`bankcard[channel][${index}][${key}]`] = item[key];\n        }\n      });\n\n      obj[\"bankcard[is_close]\"] = value.bankcard.is_close ? \"on\" : \"off\";\n      obj[\"alipay[is_close]\"] = value.alipay.is_close ? \"on\" : \"off\";\n      for (const key in value.artificial) {\n        obj[`artificial[${key}]`] = value.artificial[key];\n      }\n      if (!err) {\n        const res = await saveWithDrawChannel(id, name, obj);\n        if (res.status === 0) {\n          message.success(\"提交成功:\" + res.msg);\n          console.log(res);\n          this.getUsers();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\nconst WrappedChannel = Form.create()(Channel);\n\nexport default withRouter(WrappedChannel);\n","import React, {Component} from 'react'\nimport {Button, Row, Col} from 'antd'\nimport './not-found.less'\n/*\n前台404页面\n */\nexport default class NotFound extends Component {\n  render() {\n    return (\n\n      <Row className='not-found'>\n        <Col span={12} className='left'></Col>\n        <Col span={12} className='right'>\n          <h1>404</h1>\n          <h2>抱歉，你访问的页面不存在</h2>\n          <div>\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\n              回到首页\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}","import React from \"react\";\nimport { Table} from \"antd\";\n// import {  Table,Button} from 'element-react';\n// import \"element-theme-default\";\n\nconst DateGameReport = props => {\n  let initColumns = () => [\n    {\n      title: \"游戏\",\n      dataIndex: \"game_name\"\n    },\n    {\n      title: \"玩家总赢额\",\n      dataIndex: \"win_statement_total\",\n      width: 150\n    },\n    {\n      title: \"玩家总输额\",\n      dataIndex: \"lose_statement_total\",\n      width: 150\n    },\n    {\n      title: \"玩家总流水\",\n      dataIndex: \"statement_total\",\n      width: 150\n    },\n    {\n      title: \"盈亏比\",\n      dataIndex: \"statement_ratio\",\n      width: 150\n    }\n  ];\n  return (\n    <Table\n      bordered\n      rowKey={(record, index) => `${index}`}\n      dataSource={props.data}\n      columns={initColumns()}\n      size=\"small\"\n      // scroll={{ x: 3000 }}\n      // footer={this.footerData}\n    />\n  );\n};\n\nexport default DateGameReport;\n","import React, { Component } from \"react\";\nimport { Table, Button, Modal } from \"antd\";\n// import {  Table,Button} from 'element-react';\n// import \"element-theme-default\";\nimport { oneDayGameReport } from \"../../../api/index\";\nimport DateGameReport from \"./dateGameReport\";\n\nclass MoreDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: \"\",\n      isGameReportShow: false,\n      nextLevelData: \"\"\n    };\n  }\n  render() {\n    const { data } = this.props.reportData;\n    return (\n      <div>\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={data}\n          columns={this.initColumns()}\n          size=\"small\"\n          scroll={{ x: 2000 }}\n          // footer={this.footerData}\n        />\n        <Modal\n          title={this.state.date + \"/游戏数据\"}\n          width=\"80%\"\n          visible={this.state.isGameReportShow}\n          onCancel={() => {\n            this.setState({ isGameReportShow: false });\n          }}\n          footer={null}\n        >\n          <DateGameReport data={this.state.nextLevelData} />\n        </Modal>\n      </div>\n    );\n  }\n  initColumns = () => {\n    if (this.props.action === \"getDateReport\") {\n      let tableHeader = [\n        {\n          title: \"日期\",\n          dataIndex: \"date\"\n        },\n        {\n          title: \"新增用户\",\n          dataIndex: \"regin_user_number\"\n        },\n        {\n          title: \"活跃用户\",\n          dataIndex: \"active_user_number\"\n        },\n        {\n          title: \"官方首充用户\",\n          dataIndex: \"first_pay_user_number\"\n        },\n        {\n          title: \"官方首充金额\",\n          dataIndex: \"first_pay_money_total\"\n        },\n        {\n          title: \"官方充值用户\",\n          dataIndex: \"pay_user_number\"\n        },\n        {\n          title: \"官方充值金额\",\n          dataIndex: \"pay_money_total\"\n        },\n        {\n          title: \"人工首充用户\",\n          dataIndex: \"first_pay_user_number_res\"\n        },\n        {\n          title: \"人工首充金额\",\n          dataIndex: \"first_pay_money_total_res\"\n        },\n        {\n          title: \"人工充值用户\",\n          dataIndex: \"pay_user_number_res\"\n        },\n        {\n          title: \"人工充值金额\",\n          dataIndex: \"pay_money_total_res\"\n        },\n        {\n          title: \"官方兑换用户\",\n          dataIndex: \"exchange_user_number\"\n        },\n        {\n          title: \"官方兑换金额\",\n          dataIndex: \"exchange_money_total\"\n        },\n        {\n          title: \"人工兑换用户\",\n          dataIndex: \"exchange_user_number_res\"\n        },\n        {\n          title: \"人工兑换金额\",\n          dataIndex: \"exchange_money_total_res\"\n        },\n        {\n          title: \"玩家总赢额\",\n          dataIndex: \"win_statement_total\"\n        },\n        {\n          title: \"玩家总输额\",\n          dataIndex: \"lose_statement_total\"\n        },\n        {\n          title: \"玩家总流水\",\n          dataIndex: \"statement_total\"\n        },\n        {\n          title: \"盈亏比\",\n          dataIndex: \"statement_ratio\"\n        },\n        {\n          title: \"操作\",\n          dataIndex: \"\",\n          render: (text, record, index) => (\n            <span>\n              <Button size=\"small\" onClick={() => this.getGameReport(record)}>\n                游戏\n              </Button>\n            </span>\n          )\n        }\n      ];\n      return tableHeader;\n    }\n  };\n  footerData = page => {\n    console.log(page);\n    return (\n      <tr>\n        <td>合计</td>\n        <td style={{ width: 80 }}>regin_user_number</td>\n        <td>regin_user_number</td>\n        <td>regin_user_number</td>\n        <td>regin_user_number</td>\n        <td>regin_user_number</td>\n      </tr>\n    );\n  };\n  getGameReport = async record => {\n    const res = await oneDayGameReport(\n      1,\n      20,\n      this.props.package_id,\n      record.date\n    );\n    this.props.parse(res);\n    this.setState({\n      date: record.date,\n      isGameReportShow: true,\n      nextLevelData: res.data\n    });\n  };\n}\n\nexport default MoreDetail;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Select } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport {\n  dailyReportInit,\n  dailyReport,\n  packageList,\n  dateReport,\n  gameReport\n} from \"../../../api/index\";\nimport MoreDetail from \"./details\";\nimport moment from \"moment\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport DateGameReport from \"./dateGameReport\";\n\nclass DailyReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      packageList: [],\n      count: 0,\n      pageSize: 20,\n      reportTable: false,\n      isGameReportShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await packageList();\n    const result = await dailyReportInit(page, limit);\n    if (res.status === 0 && result.status === 0) {\n      this.setState({\n        data: result.data,\n        packageList: res.data\n      });\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    const packageNode = this.state.packageList.map(item => {\n      return (\n        <Select.Option value={item.id} key={item.id}>\n          {item.name}\n        </Select.Option>\n      );\n    });\n    return (\n      <Card\n        title={\n          <div>\n            <div>\n              <MyDatePicker\n                handleValue={val => {\n                  let diffDays = moment(val[1]).diff(moment(val[0]), \"days\");\n                  if (diffDays > 7) {\n                    message.error(\"请选择时间范围小于7天\");\n                  } else {\n                    this.startTime = val[0];\n                    this.endTime = val[1];\n                  }\n                }}\n              />\n              &nbsp; &nbsp;\n              <Select\n                placeholder=\"请选择\"\n                style={{ width: 120 }}\n                onSelect={value => (this.package_id = value)}\n              >\n                {packageNode}\n              </Select>\n              &nbsp; &nbsp;\n              <LinkButton onClick={this.onSearchData} size=\"default\">\n                <Icon type=\"search\" />\n              </LinkButton>\n              &nbsp; &nbsp;\n            </div>\n          </div>\n        }\n      >\n        <div style={{ marginBottom: 20, backgroundColor: \"#ddd\" }}>\n          <span style={{ border: \"1px solid #ddd\" }}>\n            <b>默认所选品牌7天的统计数据</b>\n          </span>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <span style={{ border: \"1px solid #ddd\" }}>\n            <b>总流水=玩家赢额+(abs)玩家输额</b>\n          </span>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <span style={{ border: \"1px solid #ddd\" }}>\n            <b>盈亏比=(玩家输额(abs) - 玩家赢额) /(玩家输额(abs) + 玩家赢额)</b>\n          </span>\n        </div>\n        <Table\n          bordered\n          rowKey=\"package_id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          scroll={{ x: 2500 }}\n        />\n        <Modal\n          title=\"按日期查看\"\n          width=\"80%\"\n          visible={this.state.reportTable}\n          onCancel={() => {\n            this.setState({ reportTable: false });\n          }}\n          footer={null}\n        >\n          <MoreDetail\n            reportData={this.reportData}\n            action={this.action}\n            package_id={this.package_id}\n            parse={this.parseGameData}\n          />\n        </Modal>\n        <Modal\n          title=\"游戏数据\"\n          width=\"80%\"\n          visible={this.state.isGameReportShow}\n          onCancel={() => {\n            this.setState({ isGameReportShow: false });\n          }}\n          footer={null}\n        >\n          <DateGameReport data={this.state.nextLevelData} />\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"品牌\",\n      dataIndex: \"package_nick\"\n    },\n    {\n      title: \"新增用户\",\n      dataIndex: \"regin_user_number\"\n    },\n    {\n      title: \"活跃用户\",\n      dataIndex: \"active_user_number\"\n    },\n    {\n      title: \"官方首充用户\",\n      dataIndex: \"first_pay_user_number\"\n    },\n    {\n      title: \"官方首充金额\",\n      dataIndex: \"first_pay_money_total\"\n    },\n    {\n      title: \"官方充值用户\",\n      dataIndex: \"pay_user_number\"\n    },\n    {\n      title: \"官方充值金额\",\n      dataIndex: \"pay_money_total\"\n    },\n    {\n      title: \"人工首充用户\",\n      dataIndex: \"first_pay_user_number_res\"\n    },\n    {\n      title: \"人工首充金额\",\n      dataIndex: \"first_pay_money_total_res\"\n    },\n    {\n      title: \"人工充值用户\",\n      dataIndex: \"pay_user_number_res\"\n    },\n    {\n      title: \"人工充值金额\",\n      dataIndex: \"pay_money_total_res\"\n    },\n    {\n      title: \"官方兑换用户\",\n      dataIndex: \"exchange_user_number\"\n    },\n    {\n      title: \"官方兑换金额\",\n      dataIndex: \"exchange_money_total\"\n    },\n    {\n      title: \"人工兑换用户\",\n      dataIndex: \"exchange_user_number_res\"\n    },\n    {\n      title: \"人工兑换金额\",\n      dataIndex: \"exchange_money_total_res\"\n    },\n    {\n      title: \"玩家总赢额\",\n      dataIndex: \"win_statement_total\"\n    },\n    {\n      title: \"玩家总输额\",\n      dataIndex: \"lose_statement_total\"\n    },\n    {\n      title: \"玩家总流水\",\n      dataIndex: \"statement_total\"\n    },\n    {\n      title: \"盈亏比\",\n      dataIndex: \"statement_ratio\"\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.getDateReport(record)}>\n            日期\n          </LinkButton>\n          <LinkButton onClick={() => this.getGameReport(record)}>\n            游戏\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  onSearchData = async () => {\n    const res = await dailyReport(\n      1,\n      20,\n      this.package_id,\n      this.startTime,\n      this.endTime\n    );\n    const newRes = this.parseData(res);\n    this.setState({ data: newRes.data, count: newRes.count });\n  };\n  parseData = res => {\n    console.log(\"res:\", res);\n    var length = 0;\n    var format_data = [];\n    if (res.status === 0 && res.data) {\n      //用户  (e.active_user_number = e.login_user_number - e.regin_user_number),\n      if (res.data.user) {\n        res.data.user\n          .filter(e => e && e._id)\n          .map(\n            e => ((e.package_id = parseInt(e._id.package_id)), delete e._id)\n          );\n      }\n      //充提交易所\n      if (res.data.order) {\n        res.data.order\n          .filter(e => e && e._id)\n          .map(\n            e => (\n              (e.first_pay_user_number = e.first_pay_user.length),\n              (e.pay_user_number = e.pay_user.length),\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\n              (e.pay_user_number_res = e.pay_user_res.length),\n              (e.exchange_user_number = e.exchange_user.length),\n              (e.exchange_user_number_res = e.exchange_user_res.length),\n              (e.package_id = parseInt(e._id.package_id)),\n              delete e._id\n            )\n          );\n        // 合并\n        res.data.user.map(e =>\n          Object.assign(\n            e,\n            res.data.order.find(d => d.package_id === e.package_id)\n          )\n        );\n      }\n\n      //游戏\n      if (res.data.game) {\n        res.data.game\n          .filter(e => e && e._id)\n          .map(\n            e => (\n              (e.statement_ratio = (\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\n              ).toFixed(4)),\n              (e.win_statement_total =\n                Math.round(e.win_statement_total * 10000) / 10000),\n              (e.lose_statement_total =\n                Math.round(e.lose_statement_total * 10000) / 10000),\n              (e.statement_total =\n                Math.round(\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\n                    10000\n                ) / 10000),\n              (e.package_id = parseInt(e._id.package_id)),\n              delete e._id\n            )\n          );\n\n        // 合并\n        res.data.user.map(e =>\n          Object.assign(\n            e,\n            res.data.game.find(d => d.package_id === e.package_id)\n          )\n        );\n      }\n\n      length = res.data.user.length;\n      format_data = res.data.user;\n      console.log(\"res.data.user assign后\", res.data.user);\n    }\n\n    return {\n      code: res.code,\n      msg: res.msg,\n      count: length,\n      data: format_data\n    };\n  };\n  parseDateData = res => {\n    console.log(res);\n    var length = 0;\n    var format_data = [];\n    if (res.status === 0 && res.data) {\n      //用户 (e.active_user_number = e.login_user_number - e.regin_user_number),\n      if (res.data.user) {\n        res.data.user.map(e => ((e.date = e._id.create_time), delete e._id));\n      }\n      //充提交易所\n      if (res.data.order) {\n        //res.data.order.filter(e => (e && e._id)).map(e => ((e.exchange_money_total = Math.abs(e.exchange_money_total)), (e.date = e._id.create_time), delete e._id));\n        res.data.order\n          .filter(e => e && e._id)\n          .map(\n            e => (\n              (e.first_pay_user_number = e.first_pay_user.length),\n              (e.pay_user_number = e.pay_user.length),\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\n              (e.pay_user_number_res = e.pay_user_res.length),\n              (e.exchange_user_number = e.exchange_user.length),\n              (e.exchange_user_number_res = e.exchange_user_res.length),\n              (e.date = e._id.create_time),\n              delete e._id\n            )\n          );\n        // 合并\n        res.data.user.map(e =>\n          Object.assign(e, res.data.order.find(d => d.date === e.date))\n        );\n      }\n      //游戏\n      if (res.data.game) {\n        //四舍五入保留四位小数\n        res.data.game\n          .filter(e => e && e._id)\n          .map(\n            e => (\n              (e.statement_ratio = (\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\n              ).toFixed(4)),\n              (e.win_statement_total =\n                Math.round(e.win_statement_total * 10000) / 10000),\n              (e.lose_statement_total =\n                Math.round(e.lose_statement_total * 10000) / 10000),\n              (e.statement_total =\n                Math.round(\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\n                    10000\n                ) / 10000),\n              (e.date = e._id.create_time),\n              delete e._id\n            )\n          );\n\n        // 合并\n        res.data.user.map(e =>\n          Object.assign(e, res.data.game.find(d => d.date === e.date))\n        );\n      }\n\n      // 排序\n      res.data.user.sort(\n        (a, b) =>\n          parseInt(b.date.replace(/-/g, \"\")) -\n          parseInt(a.date.replace(/-/g, \"\"))\n      );\n      length = res.data.user.length;\n      format_data = res.data.user;\n      console.log(res.data.user);\n    }\n    return {\n      code: res.code,\n      msg: res.msg,\n      count: length,\n      data: format_data\n    };\n  };\n  parseGameData = res => {\n    console.log(res);\n    //总流水\n    if (res.status === 0 && res.data) {\n      res.data.map(\n        e => (\n          (e.statement_ratio = (\n            (Math.abs(e.lose_statement_total) - e.win_statement_total) /\n            (e.win_statement_total + Math.abs(e.lose_statement_total))\n          ).toFixed(4)),\n          (e.win_statement_total =\n            Math.round(e.win_statement_total * 10000) / 10000),\n          (e.lose_statement_total =\n            Math.round(e.lose_statement_total * 10000) / 10000),\n          (e.statement_total =\n            Math.round(\n              (e.win_statement_total + Math.abs(e.lose_statement_total)) * 10000\n            ) / 10000)\n        )\n      );\n    }\n  };\n  getDateReport = async record => {\n    const res = await dateReport(\n      1,\n      20,\n      record.package_id,\n      this.startTime,\n      this.endTime\n    );\n    const reportData = this.parseDateData(res);\n    this.reportData = reportData;\n    this.action = \"getDateReport\";\n    this.setState({ reportTable: true });\n  };\n  getGameReport = async record => {\n    const res = await gameReport(1, 20, this.package_id, record.date);\n    this.parseGameData(res);\n    this.setState({\n      date: record.date,\n      isGameReportShow: true,\n      nextLevelData: res.data\n    });\n  };\n}\n\nexport default DailyReport;\n","import React from \"react\";\nimport { Form, Input, Select, Button, message } from \"antd\";\nimport { editRule } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const data = props.data;\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        for (const key in value) {\n          if (value[key] === undefined) {\n            value[key] = \"\";\n          }\n        }\n        const res = await editRule(data.id, value);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <Form labelCol={{ span: 4 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\n      <Form.Item label=\"父级权限\">\n        {getFieldDecorator(\"pid\", {\n          rules: [{ required: true, message: \"请选择权限\" }],\n          initialValue:  data.pid\n        })(\n          <Select style={{ width: \"60%\" }}>\n            <Select.Option value={0}>一级权限</Select.Option>\n            {props.packageNode}\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item label=\"菜单名\">\n        {getFieldDecorator(\"name\", {\n          rules: [{ required: true, message: \"请输入菜单名\" }],\n          initialValue: data.name.replace(/&nbsp;/g, \"\")\n        })(<Input style={{ width: \"60%\" }} placeholder=\"菜单名\" />)}\n      </Form.Item>\n      <Form.Item label=\"模块名\">\n        {getFieldDecorator(\"module\", { initialValue: data.module })(\n          <Input style={{ width: \"60%\" }} placeholder=\"模块名\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"方法名\">\n        {getFieldDecorator(\"action\", { initialValue: data.action })(\n          <Input style={{ width: \"60%\" }} placeholder=\"方法名\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"模板路径\">\n        {getFieldDecorator(\"href\", { initialValue: data.href })(\n          <Input style={{ width: \"60%\" }} placeholder=\"模板路径\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"路由key\">\n        {getFieldDecorator(\"key\", { initialValue: data.router_key })(\n          <Input style={{ width: \"60%\" }} placeholder=\"路由key\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"icon样式\">\n        {getFieldDecorator(\"icon\", { initialValue: data.icon })(\n          <Input style={{ width: \"60%\" }} placeholder=\"icon样式\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"菜单排序\">\n        {getFieldDecorator(\"sort\", {\n          rules: [{ required: true, message: \"请输入排序值\" }],\n          initialValue: data.sort\n        })(<Input style={{ width: \"60%\" }} placeholder=\"菜单排序\" />)}\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Popconfirm,\n  Select,\n  Button,\n  Form\n} from \"antd\";\nimport { ruleList, addRule, ruleDel } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\n\nclass Rule extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async () => {\n    const res = await ruleList();\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData();\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const packageNode = this.state.data.map(item => {\n      return (\n        <Select.Option value={item.id} key={item.name}>\n          {item.name.replace(/&nbsp;/g, \"-\")}\n        </Select.Option>\n      );\n    });\n    return (\n      <Card\n        title={\n          <div>\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n              <Form.Item>\n                {getFieldDecorator(\"pid\", {\n                  rules: [{ required: true, message: \"请选择权限\" }],\n                  initialValue: \"0\"\n                })(\n                  <Select style={{ width: 200 }}>\n                    <Select.Option value=\"0\">一级权限</Select.Option>\n                    {packageNode}\n                  </Select>\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"name\", {\n                  rules: [{ required: true, message: \"请输入菜单名\" }]\n                })(<Input style={{ width: 120 }} placeholder=\"菜单名\" />)}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"module\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"模块名\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"action\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"方法名\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"href\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"模板路径\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"key\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"路由key\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"icon\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"icon样式\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"sort\", {\n                  rules: [{ required: true, message: \"请输入排序值\" }]\n                })(<Input style={{ width: 120 }} placeholder=\"菜单排序\" />)}\n              </Form.Item>\n              <Form.Item>\n                <Button\n                 size='default' \n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                >\n                  增加\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size='default'>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.getInitialData(current, size);\n            }\n          }}\n        />\n        <Modal\n          title=\"编辑\"\n          visible={this.state.isEditFormShow}\n          onCancel={() => {\n            this.setState({ isEditFormShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedEditForm\n            finished={() => {\n              this.getInitialData();\n              this.setState({ isEditFormShow: false });\n            }}\n            packageNode={packageNode}\n            data={this.editDataRecord}\n          />\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"菜单名\",\n      dataIndex: \"name\",\n      render: (text, record, index) => (\n        <span>{record.name.replace(/&nbsp;/g, \"-\")}</span>\n      )\n    },\n    {\n      title: \"模块名\",\n      dataIndex: \"module\"\n    },\n    {\n      title: \"方法名\",\n      dataIndex: \"action\"\n    },\n    {\n      title: \"模板路径\",\n      dataIndex: \"href\"\n    },\n    {\n      title: \"路由key\",\n      dataIndex: \"router_key\"\n    },\n    {\n      title: \"icon样式\",\n      dataIndex: \"icon\"\n    },\n    {\n      title: \"显示\",\n      dataIndex: \"status\"\n    },\n    {\n      title: \"菜单排序\",\n      dataIndex: \"sort\"\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\n            编辑\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.onDelete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <Button type=\"danger\" size=\"small\">\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      if (!err) {\n        for (const key in value) {\n          if (value[key] === undefined) {\n            value[key] = \"\";\n          }\n        }\n        const res = await addRule(value);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.getInitialData();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  onDelete = async record => {\n    let res = await ruleDel(record.id);\n    if (res.status === 0) {\n      message.success(\"删除成功\");\n      this.getInitialData();\n    } else {\n      message.error(\"出错了：\" + res.msg);\n    }\n  };\n  edit = async record => {\n    this.editDataRecord = record;\n    this.setState({\n      isEditFormShow: true\n    });\n  };\n}\nconst RuleManage = Form.create()(Rule);\nexport default RuleManage;\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { createHashHistory } from \"history\";\nimport { reqUsers } from \"../../api/index\";\nimport { Layout } from \"antd\";\n\nimport LeftNav from \"../../components/left-nav\";\nimport Header from \"../../components/header\";\nimport Home from \"../home/home\";\nimport User from \"../user/user\";\nimport Admin_manage_list from \"../admin_manage/admin_manage_list/admin_manage_list\";\nimport Role from \"../admin_manage/role/role\";\nimport Order_list from \"../charge/order_list/order_list\";\nimport Channel_list from \"../charge/channel_list/channel_list\";\nimport Bankcard_list from \"../charge/bankcard_list/bankcard_list\";\nimport Recharge_order from \"../charge/recharge_order/recharge_order\";\nimport Recharge_channel from \"../charge/recharge_channel/recharge_channel\";\nimport NoticeList from \"../customer_service/notice_list\";\nimport Customer_list from \"../customer_service/customer_list\";\nimport Withdraw_list from \"../withdraw/withdraw_list\";\nimport WrappedConfig from \"../gameSetting/config\";\nimport Tasks from \"../messageCenter/tasks\";\nimport AccountList from \"../trade/accountList\";\nimport ApplyHistory from \"../trade/applyHistory\";\nimport TradeOrder from \"../trade/tradeOrder\";\nimport ActivityList from \"../activity/activityList\";\nimport GiftVoucher from \"../activity/giftVoucher\";\nimport GiftList from \"../gift/giftList\";\nimport GiftSetting from \"../gift/giftSetting\";\nimport AI from \"../AI/robot\";\n// import Withdraw_list from \"../withdraw/withdraw_list\";\n\nimport Daiti_list from \"../withdraw/Daiti_list\";\nimport Channel from \"../withdraw/Channel\";\nimport NotFound from \"../not-found/not-found\";\nimport DailyReport from \"../list/DailyReport\";\nimport RuleManage from \"../admin_manage/ruleManage\";\nimport { Provider, KeepAlive } from \"react-keep-alive\";\nconst { Sider, Content } = Layout;\n\nconst history = createHashHistory();\n/*\n后台管理的路由组件\n */\nexport default class Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //header和left-nav通过共同父组件传值\n  // onRef = ref => {\n  //   this.child1 = ref;\n  // };\n  render() {\n    const token = localStorage.token;\n    // 如果内存没有存储token ==> 当前没有登陆\n    if (!token) {\n      return <Redirect to=\"/login\" />;\n    }\n    //如果内存中存储的token超过24小时，需要验证token，如果已经延期更新时间戳，如果未延期，更新token\n    const timeStamp = new Date().getTime();\n    const tokenTimeStamp = localStorage.tokenTimeStamp;\n    let time = timeStamp - tokenTimeStamp;\n    if (time > 24 * 3600 * 1000) {\n      const res = reqUsers(1, 20);\n      if (res.status === 0) {\n        localStorage.removeItem(\"menuList\");\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"name\");\n        localStorage.removeItem(\"tokenTimeStamp\");\n        return <Redirect to=\"/login\" />;\n      }\n    }\n    return (\n      <Layout style={{ minHeight: \"100%\" }}>\n        <Sider>\n          <LeftNav\n            onClick={tabConfig => {\n              this.child1.add && this.child1.add(tabConfig);\n            }}\n          />\n        </Sider>\n        <Layout>\n          <Header onRef={ref => (this.child1 = ref)} history={history}>\n            Header\n          </Header>\n          <Content style={{ margin: 5, backgroundColor: \"#fff\" }}>\n            <Provider>\n              <div style={{ height: \"100%\" }}>\n                <Switch>\n                  <Redirect from=\"/\" exact to=\"/home\" />\n                  <Route path=\"/home\" exact component={Home} />\n                  <Route path=\"/user/user-list\" exact>\n                    <KeepAlive name=\"User\">\n                      <User />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/customer_service/notice_list\">\n                    <KeepAlive name=\"Notice_list\">\n                      <NoticeList />\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/customer_service/customer_list\"\n                    exact\n                    component={Customer_list}\n                  >\n                    <KeepAlive name=\"Customer_list\">\n                      <Customer_list></Customer_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/admin_manage/list\"\n                    exact\n                    component={Admin_manage_list}\n                  >\n                    <KeepAlive name=\"Admin_manage_list\">\n                      <Admin_manage_list></Admin_manage_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/admin_manage/rule\" exact component={RuleManage}>\n                    <KeepAlive name=\"RuleManage\">\n                      <RuleManage></RuleManage>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/admin_manage/role\" exact component={Role}>\n                    <KeepAlive name=\"Role\">\n                      <Role></Role>\n                    </KeepAlive>\n                  </Route>\n\n                  <Route path=\"/list/daily-report\" exact>\n                    <KeepAlive name=\"DailyReport\">\n                      <DailyReport></DailyReport>\n                    </KeepAlive>\n                  </Route>\n\n                  <Route path=\"/gameSetting/config\" exact>\n                    <KeepAlive name=\"WrappedConfig\">\n                      <WrappedConfig></WrappedConfig>\n                    </KeepAlive>\n                  </Route>\n\n                  <Route path=\"/messageCenter/tasks\" exact>\n                    <KeepAlive name=\"Tasks\">\n                      <Tasks></Tasks>\n                    </KeepAlive>\n                  </Route>\n\n                  <Route path=\"/trade/accountList\" exact>\n                    <KeepAlive name=\"AccountList\">\n                      <AccountList></AccountList>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/trade/applyHistory\" exact>\n                    <KeepAlive name=\"ApplyHistory\">\n                      <ApplyHistory></ApplyHistory>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/trade/tradeOrder\" exact>\n                    <KeepAlive name=\"TradeOrder\">\n                      <TradeOrder></TradeOrder>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/activity/list\" exact>\n                    <KeepAlive name=\"ActivityList\">\n                      <ActivityList />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/activity/giftVoucher\" exact>\n                    <KeepAlive name=\"giftVoucher\">\n                      <GiftVoucher />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/charge/order_list\" exact component={Order_list}>\n                    <KeepAlive name=\"Order_list\">\n                      <Order_list></Order_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/charge/channel-list\"\n                    exact\n                    component={Channel_list}\n                  >\n                    <KeepAlive name=\"Channel_list\">\n                      <Channel_list></Channel_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/charge/bankcard-list\"\n                    exact\n                    component={Bankcard_list}\n                  >\n                    <KeepAlive name=\"Bankcard_list\">\n                      <Bankcard_list></Bankcard_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/charge/recharge_order\"\n                    exact\n                    component={Recharge_order}\n                  >\n                    <KeepAlive name=\"Recharge_order\">\n                      <Recharge_order></Recharge_order>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/charge/recharge_channel\"\n                    exact\n                    component={Recharge_channel}\n                  >\n                    <KeepAlive name=\"Recharge_channel\">\n                      <Recharge_channel></Recharge_channel>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/withdraw/withdraw_list\"\n                    exact\n                    component={Withdraw_list}\n                  >\n                    <KeepAlive name=\"Withdraw_list\">\n                      <Withdraw_list></Withdraw_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/withdraw/daiti_list\"\n                    exact\n                    component={Daiti_list}\n                  >\n                    <KeepAlive name=\"Daiti_list\">\n                      <Daiti_list />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/withdraw/channel\" exact>\n                    <KeepAlive name=\"Channel\">\n                      <Channel></Channel>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/gift/list\" exact>\n                    <KeepAlive name=\"GiftList\">\n                      <GiftList></GiftList>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/gift/setting\" exact>\n                    <KeepAlive name=\"GiftSetting\">\n                      <GiftSetting></GiftSetting>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/AI/robot\" exact>\n                    <KeepAlive name=\"AI\">\n                      <AI></AI>\n                    </KeepAlive>\n                  </Route>\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n            </Provider>\n          </Content>\n          {/* <Footer style={{ textAlign: \"center\", color: \"#cccccc\", padding: 5 }}>\n            推荐使用谷歌浏览器，可以获得更佳页面操作体验\n          </Footer> */}\n        </Layout>\n      </Layout>\n    );\n  }\n}\n","const defaultState = {\n  inputValue: \"\"\n};\nexport default (state = defaultState, action) => {\n  // console.log(state, action);\n  let newState = JSON.parse(JSON.stringify(state));\n  switch (action.type) {\n    case \"change_input\":\n      newState.inputValue = action.value;\n      break;\n    case \"resetPassword\":\n      newState.inputValue = \"\";\n      break;\n    default:\n      break;\n  }\n  return newState;\n};\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer.js\";\nconst store = createStore(reducer);\nexport default store;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Login from \"./pages/login/login\";\nimport Admin from \"./pages/admin/admin\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n\n//应用的根组件\n \nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            {/*只匹配其中一个*/}\n            <Route path=\"/login\" component={Login}></Route>\n            <Route path=\"/\" component={Admin}></Route>\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n","/*\n入口js\n */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport storageUtils from './utils/storageUtils'\nimport memoryUtils from './utils/memoryUtils'\n\n\n\nimport { Router } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\nimport {Modal} from 'antd';\n\n//在react-router4中监听路由变化\nconst history = createBrowserHistory()\nhistory.listen((location, action) => {\n    // location is an object like window.location\n    console.log('history',action, location.pathname, location.state)\n    //每次变化执行\n    Modal.destroyAll();\n    //使用 Modal.destroyAll() 可以销毁弹出的确认窗（即 Modal.info、Modal.success、Modal.error、Modal.warning、Modal.confirm）。通常用于路由监听当中，处理路由前进、后退不能销毁确认对话框的问题，而不用各处去使用实例的返回值进行关闭（modal.destroy() 适用于主动关闭，而不是路由这样被动关闭）\n    //注意无法销毁<Modal></Modal>创建的模态框\n  })\n\n// 读取local中保存user, 保存到内存中\nconst user = storageUtils.getUser()\nmemoryUtils.user = user\n\n\n// 将App组件标签渲染到index页面的div上\nReactDOM.render(<Router history={history}>\n    <App/>\n  </Router>, document.getElementById('root'))"],"sourceRoot":""}