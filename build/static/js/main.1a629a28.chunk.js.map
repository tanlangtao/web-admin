{"version":3,"sources":["api/ajax.js","api/index.js","pages/login/login.jsx","components/left-nav/index.jsx","components/link-button/index.jsx","components/header/index.jsx","pages/home/home.jsx","utils/dateUtils.js","pages/user/user-nick.jsx","components/MyDatePicker.jsx","pages/user/gold_details.jsx","pages/user/user.jsx","pages/admin_manage/admin_manage_list/addData.jsx","pages/admin_manage/admin_manage_list/admin_manage_list.jsx","pages/admin_manage/role/addData.jsx","pages/admin_manage/role/role.jsx","pages/charge/order_list/editData.jsx","pages/charge/order_list/order_list.jsx","pages/charge/channel_list/addorEdit.jsx","pages/charge/channel_list/channel_list.jsx","pages/charge/bankcard_list/addorEdit.jsx","pages/charge/bankcard_list/bankcard_list.jsx","pages/charge/recharge_order/recharge_order.jsx","pages/charge/recharge_channel/recharge_channel.jsx","pages/customer_service/notice_list/addorEdit.jsx","pages/customer_service/notice_list/index.jsx","pages/customer_service/customer_list/addorEdit.jsx","pages/customer_service/customer_list/index.jsx","pages/withdraw/withdraw_list/details.jsx","pages/withdraw/withdraw_list/edit.jsx","pages/withdraw/withdraw_list/index.jsx","components/myComponents.jsx","pages/gameSetting/config/edit.jsx","pages/gameSetting/config/index.jsx","pages/messageCenter/tasks/edit.jsx","pages/messageCenter/tasks/index.jsx","pages/trade/accountList/edit.jsx","pages/trade/accountList/index.jsx","pages/trade/applyHistory/edit.jsx","pages/trade/applyHistory/index.jsx","pages/trade/tradeOrder/edit.jsx","pages/trade/tradeOrder/index.jsx","pages/activity/activityList/editForm.jsx","pages/activity/activityList/index.jsx","pages/activity/recieve/index.jsx","pages/activity/giftVoucher/editForm.jsx","pages/activity/giftVoucher/index.jsx","pages/gift/giftList/details.jsx","pages/gift/giftList/editForm.jsx","pages/gift/giftList/index.jsx","pages/gift/giftSetting/index.jsx","pages/AI/robot/index.jsx","pages/proxy/setting/BalanceChanged.jsx","pages/proxy/setting/nextlevel.jsx","pages/proxy/setting/index.jsx","pages/withdraw/Daiti_list/details.jsx","pages/withdraw/Daiti_list/edit.jsx","pages/withdraw/Daiti_list/index.jsx","pages/withdraw/Channel/index.jsx","pages/not-found/not-found.jsx","pages/list/DailyReport/dateGameReport.jsx","pages/list/DailyReport/details.jsx","pages/list/DailyReport/index.jsx","pages/admin_manage/ruleManage/edit.jsx","pages/admin_manage/ruleManage/index.jsx","pages/admin/admin.jsx","store/reducer.js","store/index.js","App.js","utils/storageUtils.js","index.js"],"names":["ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","promise","axios","get","params","defaults","headers","post","transformRequest","ret","it","encodeURIComponent","then","response","catch","error","message","BASE","process","token","localStorage","setToken","reqLogin","username","password","authcode","reqAuthCode","navList","getAuthCode","editPass","reqUsers","page","limit","start","end","inputKey","inputValue","_ajax","Object","defineProperty","setGameUserNickName","id","game_nick","changeGold","record","value","obj","str","gold","desc","proxy_user_id","package_id","objectSpread","task_type","reqLoadGold","userDetail","goldDetails","bindInfo","user_id","saveUserBlack","action","createTask","resetpwd","params[id]","params[account_pass]","setCustomer","reqAdminList","searchAdminData","name","roleList","packageList","addUser","formValue","forEach","element","newobj","status","userStatus","group_id","userGroup","source","proxy","use_money","loadGold","pass","repass","confirmPssword","editUser","resetAuthCode","ruleList","addRule","editRule","rule_id","console","log","ruleDel","getRoleList","addRole","rules","editRole","role_name","role_id","getList","addNotice","formData","updateNotice","delNotice","customerList","saveCustomerService","dailyReport","dateReport","group_by","gameReport","oneDayGameReport","date","configList","conf_key","saveConf","getProxyUserList","changeProxyUserProxyPid","tasksList","changeUserBalance","reviewTask","allAccountList","resetPassword","accountList","sellGoldApplyList","tradeRemark","sellGoldInfoList","reviewInfo2","remarkInfo2","sellGoldOrderList","activityConfigList","saveActivityConfig","delActivityConfig","giftVoucherList","activityList","reqOrder_list","reqData","reqLostOrder_list","order_id","orderReview","review_type","orderReviewEdit","downloadList","searchData","start_time","end_time","order_status","inputParam","paramKey","window","open","getChannelList","addChannel","editPayChannel","bankList","saveBankCard","deleteBankCard","rechargeOrder","cancelOrder","getChannel","getChannelInfo","channel_id","editChannelInfo","pay_code","withDraw","reviewInfo","remarkInfo","downloadWithdrawList","filed","withDrawRemark","temarks","remark_type","auditOrder","orderWithDrawReview","getConfigList","saveWithDrawChannel","alipay[name]","alipay[withdraw_type]","bankcard[name]","bankcard[withdraw_type]","withDrawReview","review_status","is_pass","setGiftConfig","getAIList","changeInternalUserBalance","amount","Item","es_form","Login","getMenuList","_callee","result","regenerator_default","a","wrap","_context","prev","next","sent","children","item","title","slice","menuList","JSON","stringify","_this","props","history","replace","stop","handleSubmit","event","preventDefault","form","validateFields","_ref2","asyncToGenerator","mark","_callee2","err","values","_context2","success","tokenTimeStamp","Date","getTime","msg","_x","_x2","apply","this","handleClick","_ref3","_callee3","_context3","modal","info","content","react_default","createElement","src","qrurl","alt","_x3","_x4","validatePwd","rule","callback","test","react_router","to","getFieldDecorator","className","onSubmit","required","whitespace","min","max","pattern","input","prefix","icon","style","color","placeholder","validator","marginTop","onClick","es_button","htmlType","Component","WrapLogin","create","SubMenu","menu","LeftNav","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","getMenuNodes","path","location","pathname","reduce","pre","find","currentValue","indexOf","key","openKey","push","openMenu","cpre","ele","react_router_dom","state","_this2","parse","getItem","menuNodes","justifyContent","mode","theme","selectedKeys","onOpenChange","openKeys","withRouter","LinkButton","assign","size","marginRight","TabPane","Header","onChange","activeKey","onEdit","targetKey","add","tabConfig","oldKey","panes","isTabExist","concat","newTabIndex","remove","lastIndex","pane","i","filter","logout","confirm","onOk","assertThisInitialized","removeItem","authCode","res","lib_default","width","resetPWD","isEditFormShow","handleEditSubmit","closable","clearInterval","intervalId","onRef","val","_this$props$form","getFieldValue","dropdown","overlay","trigger","tabs","hideAdd","map","tab","forceRender","visible","onCancel","footer","labelCol","span","labelAlign","label","WrappedHeader","Home","typing","timer","setTimeout","clearTimeout","fontSize","formateDate","time","timeStamp","parseInt","moment","format","FormItem","NormalLoginForm","isNickModal","display","initialValue","TextArea","autosize","minRows","maxRows","WrappedNormalLoginForm","RangePicker","MyDatePicker","config_provider","locale","zh_CN","showTime","defaultValue","dateString","handleValue","GoldDetail","getUsers","_ref","isBindInfo","recordID","t0","count","onSearchData","startTime","abrupt","endTime","funds_type","GoldDetailRecord","initColumns","dataIndex","sorter","b","total_balance","diff","card","table","bordered","rowKey","index","dataSource","columns","pagination","defaultPageSize","showQuickJumper","showTotal","total","range","defaultCurrent","pageSize","onShowSizeChange","current","Option","User","fixed","onCell","rowIndex","isNickShow","onDoubleClick","onContextMenu","onMouseEnter","target","cursor","onMouseLeave","game_gold","goldRecord","isGoldShow","render","regin_time","login_time","getGoldDetail","getMoreDetail","getLoadGold","text","_result$data","game_user","proxy_user","proxy_nick","proxy_pid","changeNickName","refs","getFormValue","resetFields","onChangeGold","loading","_x5","_x6","_ref4","_callee4","_context4","_x7","_ref5","_callee5","_context5","moreModal","destroy","isGoldDetailShow","_x8","_x9","_ref6","_callee6","isAdd","_context6","_x10","_x11","resetPwd","isResetPwdShow","resetPwdId","handleResetpwd","_callee7","_context7","okText","popconfirm","onConfirm","cancelText","setCustomerAccount","_ref8","_callee8","_context8","_x12","isBindInfoShow","_this$state","es_select","user_Option","ref","Input","extra","reload","showSizeChanger","scroll","x","y","user_nick","gold_details","e","AddDataForm","checkboxOnChange","checkedList","indeterminate","checkAll","onCheckAllChange","list","checked","setFieldsValue","isEdit","editDataRecord","refreshPage","cancel","isBan","group","split","Number","_this$props","optionList","readOnly","es_radio","Group","es_checkbox","options","use_balance","WrappedAddDataForm","Admin_manage_list","wordWrap","wordBreak","align","edit","addData","isAddDataShow","isEditDataShow","_onOk","handleChange","bind","TreeNode","getTreeNodes","onSelect","node","expandedKeys","isLeaf","expanded","k","eventKey","onCheck","checkedKeys","onExpand","defaultCheckedKeys","treeData","tree","checkable","description","Role","role_addData","Diaodan","handleRecieveSubmit","Order_list","PlayerLossOrderSearch","isQueryShow","time_type","download","word","replace_id","toFixed","arrival_amount","created_at","arrival_at","isEditShow","editUser_id","editMount","editType","editRefused","float","editData","wrapperCol","nick_name","pay_type","min_amount","max_amount","span_amount","seed","rate","sort","Channel_list","addorEdit","card_name","bank_name","card_num","offset","Bankcard_list","delete","bankcard_list_addorEdit","Recharge_order","handleWithdraw","form_type","Recharge_channel","expandedRowRender","indent","childData","onExpandRow","keys","expandedRowKeys","recordId","handleEditData","expandRowByClick","getPackageList","arr","_id","$oid","package_ids","is_open","words","date_picker","Notice_list","onDelete","join","popover","overlayStyle","textOverflow","whiteSpace","overflow","notice_list_addorEdit","user_type","Customer_list","handleReset","create_time","update_time","customer_list_addorEdit","detailRecord","EditForm","sumbitOrderStatus","orderStatus","onclose","review","sumbitRemarkUser","remarkUser","sumbitRemarkOperator","remarkOperator","orderStatusShow","reviewShow","confirmButtonShow","submitRadio","successRadio","failRadio","submitRadioChecked","successRadioChecked","failRadioChecked","disabled","React","Withdraw_list","flag","getDetail","user_remark","t1","isDetailShow","details","lineNumbers","json","CodeEditor","_Component","inherits","createClass","conf_val","react_codemirror2","editor","WrappedEditForm","finished","myComponents_CodeEditor","Config","getInitialData","onSearch","onAdd","config_edit","data[id]","data[params]","data[status]","reason","Tasks","refuse","operator_nick","tasks_edit","pay_url","checkQrcode","AccountList","checkAccount","accountList_edit","checkDetail","okType","userRemarkInput","editComfirm","operatorRemarkInput","applyHistory_edit","tradeOrder_edit","is_close","need_mobile","need_bankcard","order_by","editForm","check","receive_info","giftVoucher_editForm","dataPickerOnChange","editRecord","giftList_details","giftList_editForm","Channel","get_val","resData","_this$resData","give_info","version","WrappedChannel","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","minGold","maxGold","handleOk","onBlur","randNum","Range","Rand","Math","random","round","changeNickname","params[user_id]","params[amount]","params[reason]","params[user_name]","params[proxy_user_id]","params[package_id]","autoSize","NextLevel","reqdata","pid","changeBalance","nextLevel","changePid","new_proxy_user_id","proxyID","isChangeBalanceShow","top","topDistance","mask","maskClosable","nextlevel","BalanceChanged","ProxySetting","reg","RegExp","Daiti","Daiti_list_details","Daiti_list_edit","initialData","_this$initialData","bankcard","channel","alipay","artificial","valuePropName","es_switch","checkedChildren","unCheckedChildren","divider","channel_name","NotFound","row","col","DateGameReport","MoreDetail","getGameReport","footerData","isGameReportShow","nextLevelData","reportData","dateGameReport","DailyReport","getDateReport","newRes","parseData","format_data","user","order","first_pay_user_number","first_pay_user","pay_user_number","pay_user","first_pay_user_number_res","first_pay_user_res","pay_user_number_res","pay_user_res","exchange_user_number","exchange_user","exchange_user_number_res","exchange_user_res","d","game","statement_ratio","abs","lose_statement_total","win_statement_total","statement_total","code","parseDateData","parseGameData","reportTable","packageNode","marginBottom","backgroundColor","border","DailyReport_details","module","href","router_key","Rule","layout","ruleManage_edit","RuleManage","Sider","Content","createHashHistory","Admin","minHeight","components_left_nav","child1","components_header","margin","Provider","height","from","exact","component","KeepAlive","user_User","notice_list","customer_list","admin_manage_list","ruleManage","role","list_DailyReport","config","setting","tasks","trade_accountList","applyHistory","tradeOrder","activity_activityList","recieve","giftVoucher","order_list","channel_list","bankcard_list","recharge_order","recharge_channel","withdraw_list","Daiti_list","withdraw_Channel","giftList","giftSetting","robot","defaultState","store","createStore","newState","App","es","USER","storageUtils","createBrowserHistory","listen","destroyAll","ReactDOM","App_App","document","getElementById"],"mappings":"ydAgBe,SAASA,EAAKC,GAA8B,IAAzBC,EAAyBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,GAAIG,EAAcH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,MAUlD,OAAO,IAAII,QAAQ,SAACC,EAASC,GAC3B,IAAIC,EAES,QAATJ,EAEFI,EAAUC,IAAMC,IAAIX,EAAK,CAEvBY,OAAQX,KAIVS,IAAMG,SAASC,QAAQC,KAAK,gBAC1B,oCACFL,IAAMG,SAASG,iBAAmB,CAChC,SAASf,GACP,IAAIgB,EAAM,GACV,IAAK,IAAIC,KAAMjB,EACbgB,GACEE,mBAAmBD,GAAM,IAAMC,mBAAmBlB,EAAKiB,IAAO,IAElE,OAAOD,IAGXR,EAAUC,IAAMK,KAAKf,EAAKC,IAG5BQ,EACGW,KAAK,SAAAC,GACJd,EAAQc,EAASpB,QAGlBqB,MAAM,SAAAC,GAELC,EAAA,EAAQD,MAAM,mCAAYA,EAAMC,aCtDxC,IAAMC,EAAOC,iCAETC,EAAQC,aAAaD,OAAS,GAErBE,EAAW,WACtBF,EAAQC,aAAaD,OAIVG,EAAW,SAACC,EAAUC,EAAUC,GAArB,OACtBlC,EAAK0B,EAAO,eAAgB,CAAEM,WAAUC,WAAUC,YAAY,SAGnDC,EAAc,SAACH,EAAUC,GAAX,OACzBjC,EAAK0B,EAAO,kBAAmB,CAAEM,WAAUC,YAAY,SAG5CG,EAAU,WACrB,IAAMR,EAAQC,aAAaD,MAC3B,OAAO5B,EAAK0B,EAAO,eAAgB,CAAEE,SAAS,SAGnCS,EAAc,kBACzBrC,EAAK0B,EAAO,qBAAsB,CAAEE,SAAS,SAElCU,EAAW,SAAAL,GAAQ,OAC9BjC,EAAK0B,EAAO,gBAAiB,CAAEE,QAAOK,YAAY,SAEvCM,EAAW,SAACC,EAAMC,EAAOC,EAAOC,EAAKC,EAAUC,GAAe,IAAAC,EACzE,OAAO9C,EACL0B,EAAO,eADEoB,EAAA,CAEPN,OAAMC,QAAOC,QAAOC,OAFbI,OAAAC,EAAA,EAAAD,CAAAD,EAEmBF,EAAWC,GAF9BE,OAAAC,EAAA,EAAAD,CAAAD,EAAA,QAE0ClB,GAF1CkB,GAGT,SAISG,EAAsB,SAACC,EAAIC,GAAL,OACjCnD,EAAK0B,EAAO,4BAA6B,CAAEE,QAAOsB,KAAIC,aAAa,SACxDC,EAAa,SAACC,EAAQC,GACjC,IAAIC,EAAM,GACNC,EAAM,kBAYV,OAXAD,EAAIC,GAAOH,EAAOH,GAElBK,EADAC,EAAM,kBACKF,EAAMG,KAEjBF,EADAC,EAAM,kBACKF,EAAMI,KAEjBH,EADAC,EAAM,qBACKH,EAAOF,UAElBI,EADAC,EAAM,yBACKH,EAAOM,cAElBJ,EADAC,EAAM,sBACKH,EAAOO,WACX5D,EACL0B,EAAO,mBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAEPnB,QAAOkC,UAAW,GAAMP,GAC1B,SAGSQ,EAAc,SAAAb,GACzB,OAAOlD,EACL0B,EAAO,oBACP,CACEc,KAAM,EACNC,MAAO,GACPb,QACAsB,MAEF,SAGSc,EAAa,SAACxB,EAAMC,EAAOS,EAAIe,GAC1C,OAAOjE,EACL0B,EAAO,mBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,QACAb,QACAsB,MACGe,GAEL,SAGSC,EAAW,SAAC1B,EAAMC,EAAOS,GACpC,OAAOlD,EACL0B,EAAO,iBACP,CACEc,OACAC,QACAb,QACAuC,QAASjB,GAEX,SAGSkB,EAAgB,SAACD,EAASE,GACrC,OAAOrE,EACL0B,EAAO,uBACP,CACEE,QACAtB,KAAM,EACN6D,UACAE,UAEF,SAGSC,EAAa,SAACH,EAASI,GAClC,OAAOvE,EACL0B,EAAO,oBACP,CACEE,QACAkC,UAAW,EACXU,aAAcL,EACdM,uBAAwBF,GAE1B,SAGSG,EAAc,SAAAxB,GACzB,OAAOlD,EACL0B,EAAO,qBACP,CACEE,QACAsB,MAEF,SAISyB,EAAe,SAACnC,EAAMC,GACjC,OAAOzC,EACL0B,EAAO,aACP,CACEc,OACAC,QACAb,SAEF,SAGSgD,EAAkB,SAAAC,GAC7B,OAAO7E,EACL0B,EAAO,aACP,CACEc,KAAM,EACNC,MAAO,GACPb,QACAiD,QAEF,SAISC,EAAW,WACtB,OAAO9E,EACL0B,EAAO,gBACP,CACEE,SAEF,SAGSmD,EAAc,WACzB,OAAO/E,EACL0B,EAAO,oBACP,CACEE,SAEF,SAGSoD,EAAU,SAAAC,GACrB,IAAI1B,EAAM,GACV0B,EAAUF,YAAYG,QAAQ,SAAAC,GAE5B5B,EADU,SAAW4B,EAAU,KACpBA,IAEb,IAAIC,EAAMrC,OAAAc,EAAA,EAAAd,CAAA,CACRf,SAAUiD,EAAUjD,SACpBqD,OAAQJ,EAAUK,WAClBC,SAAUN,EAAUO,UACpBC,OAAQR,EAAUS,MAAQT,EAAUS,MAAQ,IACzCnC,EALK,CAMRoC,UAAWV,EAAUW,SACrBC,KAAMZ,EAAUhD,SAChB6D,OAAQb,EAAUc,eAClBnE,UAEF,OAAO5B,EAAK0B,EAAO,eAAgB0D,EAAQ,SAEhCY,EAAW,SAACf,EAAW/B,GAClC,IAAIK,EAAM,GACV0B,EAAUF,YAAYG,QAAQ,SAAAC,GAE5B5B,EADU,SAAW4B,EAAU,KACpBA,IAEb,IAAIC,EAAMrC,OAAAc,EAAA,EAAAd,CAAA,CACRG,KACAlB,SAAUiD,EAAUjD,SACpBqD,OAAQJ,EAAUK,WAClBC,SAAUN,EAAUO,UACpBC,OAAQR,EAAUS,MAAQT,EAAUS,MAAQ,IACzCnC,EANK,CAORoC,UAAWV,EAAUW,SACrBC,KAAMZ,EAAUhD,SAAWgD,EAAUhD,SAAW,GAChDL,UAEF,OAAO5B,EAAK0B,EAAO,gBAAiB0D,EAAQ,SAEjCa,EAAgB,SAAA/C,GAC3B,OAAOlD,EACL0B,EAAO,qBACP,CACEwB,KACAtB,SAEF,SAISsE,EAAW,WACtB,OAAOlG,EACL0B,EAAO,gBACP,CACEE,SAEF,SAGSuE,EAAU,SAAA7C,GACrB,OAAOtD,EACL0B,EAAO,eADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,UAEF,SAGSwE,GAAW,SAACC,EAAS/C,GAGhC,OAFAgD,QAAQC,IAAIjD,GAELtD,EAAK0B,EAAO,gBAARqB,OAAAc,EAAA,EAAAd,CAAA,GAA8BO,EAA9B,CAAqC+C,UAASzE,UAAS,SAEvD4E,GAAU,SAAAtD,GACrB,OAAOlD,EACL0B,EAAO,eACP,CACEwB,KACAtB,SAEF,SAIS6E,GAAc,SAACjE,EAAMC,GAChC,OAAOzC,EACL0B,EAAO,gBACP,CACEc,OACAC,QACAb,SAEF,SAgBS8E,GAAU,SAAC7B,EAAM8B,EAAOjD,GACnC,IAAIH,EAAM,GACVoD,EAAMzB,QAAQ,SAAAC,GAEZ5B,EADU,SAAW4B,EAAU,KACpBA,IAEb,IAAIC,EAAMrC,OAAAc,EAAA,EAAAd,CAAA,CACR8B,QACGtB,EAFK,CAGRG,OACA9B,UAEF,OAAO5B,EAAK0B,EAAO,eAAgB0D,EAAQ,SAEhCwB,GAAW,SAAC/B,EAAM8B,EAAOjD,EAAMR,GAC1C,IAAIK,EAAM,GACVoD,EAAMzB,QAAQ,SAAAC,GAEZ5B,EADU,SAAW4B,EAAU,KACpBA,IAEb,IAAIC,EAAMrC,OAAAc,EAAA,EAAAd,CAAA,CACR8D,UAAWhC,EACXiC,QAAS5D,GACNK,EAHK,CAIRG,OACA9B,UAEF,OAAO5B,EAAK0B,EAAO,gBAAiB0D,EAAQ,SAGjC2B,GAAU,SAACvE,EAAMC,GAC5B,OAAOzC,EACL0B,EAAO,kBACP,CACEc,OACAC,QACAb,SAEF,SAGSoF,GAAY,SAAAC,GACvB,OAAOjH,EACL0B,EAAO,oBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPnB,SACGqF,GAEL,SAGSC,GAAe,SAACD,EAAU/D,GACrC,OAAOlD,EACL0B,EAAO,uBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPnB,QACAsB,MACG+D,GAEL,SAGSE,GAAY,SAAAjE,GACvB,OAAOlD,EACL0B,EAAO,oBACP,CACEE,QACAsB,MAEF,SAISkE,GAAe,SAAC5E,EAAMC,EAAO0B,GACxC,OAAOnE,EACL0B,EAAO,yBACP,CACEc,OACAC,QACAb,QACAuC,QAASA,GAAoB,IAE/B,SAGSkD,GAAsB,SAACJ,EAAU5C,EAAQF,GAIpD,OAHIA,IACF8C,EAAS9C,QAAUA,GAEdnE,EACL0B,EAAO,gCADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPnB,SACGqF,EAJI,CAKP5C,WAEF,SAeSiD,GAAc,SAAC9E,EAAMC,EAAOmB,GAAqC,IAAzBlB,EAAyBvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,GAAIwC,EAAaxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACrE,OAAOH,EACL0B,EAAO,sBACP,CACEc,OACAC,QACAb,QACAgC,aACAlB,QACAC,OAEF,SAGS4E,GAAa,SAAC/E,EAAMC,EAAOmB,GAAqC,IAAzBlB,EAAyBvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,GAAIwC,EAAaxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACpE,OAAOH,EACL0B,EAAO,qBACP,CACEc,OACAC,QACAb,QACAgC,aACAlB,QACAC,MACA6E,SAAU,QAEZ,SAGSC,GAAa,SAACjF,EAAMC,EAAOmB,GAAqC,IAAzBlB,EAAyBvC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,GAAIwC,EAAaxC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACpE,OAAOH,EACL0B,EAAO,qBACP,CACEc,OACAC,QACAb,QACAgC,aACAlB,QACAC,MACA6E,SAAU,WAEZ,SAGSE,GAAmB,SAAClF,EAAMC,EAAOmB,EAAY+D,GACxD,OAAO3H,EACL0B,EAAO,qBACP,CACEc,OACAC,QACAb,QACAgC,aACA+D,OACAH,SAAU,WAEZ,SAISI,GAAa,SAACpF,EAAMC,EAAOoF,GACtC,OAAO7H,EACL0B,EAAO,eACP,CACEc,OACAC,QACAb,QACAiG,SAAUA,GAAsB,IAElC,SAGSC,GAAW,SAACxE,EAAOe,GAC9B,OAAOrE,EACL0B,EAAO,mBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIPe,SACAzC,UAEF,SAISmG,GAAmB,SAAA7H,GAC9B,OAAOF,EACL0B,EAAO,yBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJ7C,EAHI,CAIP0B,UAEF,SAGSoG,GAA0B,SAAA9H,GACrC,OAAOF,EACL0B,EAAO,gCADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJ7C,EAHI,CAIP0B,UAEF,SAcSqG,GAAY,SAACzF,EAAMC,EAAOa,GACrC,OAAOtD,EACL0B,EAAO,mBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAISsG,GAAoB,SAAA5E,GAC/B,OAAOtD,EACL0B,EAAO,2BADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,UAEF,SAGSuG,GAAa,SAAA7E,GACxB,OAAOtD,EACL0B,EAAO,oBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,UAEF,SAISwG,GAAiB,SAAC5F,EAAMC,EAAOa,GAC1C,OAAOtD,EACL0B,EAAO,wBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAGSyG,GAAgB,SAAAlE,GAC3B,OAAOnE,EACL0B,EAAO,uBACP,CACEyC,UACAvC,SAEF,SAGS0G,GAAc,SAAAnE,GACzB,OAAOnE,EAAK0B,EAAO,qBAAsB,CAAEyC,UAASvC,SAAS,SAIlD2G,GAAoB,SAAC/F,EAAMC,EAAOa,GAC7C,OAAOtD,EACL0B,EAAO,2BADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAGS4G,GAAc,SAAAlF,GACzB,OAAOtD,EACL0B,EAAO,qBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,UAEF,SAGS6G,GAAmB,SAACjG,EAAMC,EAAO0B,GAC5C,OAAOnE,EACL0B,EAAO,0BACP,CACEc,OACAC,QACA0B,UACAvC,SAEF,SAGS8G,GAAc,SAAClG,EAAMC,EAAOS,GACvC,OAAOlD,EACL0B,EAAO,oBACP,CACEc,OACAC,QACAS,KACA5C,KAAM,EACNsB,SAEF,SAGS+G,GAAc,SAACnG,EAAMC,EAAOS,GACvC,OAAOlD,EACL0B,EAAO,oBACP,CACEc,OACAC,QACAS,KACA5C,KAAM,EACNsB,SAEF,SAISgH,GAAoB,SAACpG,EAAMC,EAAOa,GAC7C,OAAOtD,EACL0B,EAAO,2BADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAISiH,GAAqB,SAACrG,EAAMC,EAAOa,GAC9C,OAAOtD,EACL0B,EAAO,+BADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAGSkH,GAAqB,SAAAxF,GAChC,OAAOtD,EACL0B,EAAO,+BADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,UAEF,SAGSmH,GAAoB,SAAA7F,GAC/B,OAAOlD,EACL0B,EAAO,8BACP,CACEwB,KACAtB,SAEF,SAKSoH,GAAkB,SAACxG,EAAMC,EAAOa,GAC3C,OAAOtD,EACL0B,EAAO,4BADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAISqH,GAAe,SAACzG,EAAMC,EAAOa,GACxC,OAAOtD,EACL0B,EAAO,yBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,SACGa,EALI,CAMP1B,UAEF,SAISsH,GAAgB,SAAC1G,EAAMC,EAAO0G,GACzC,OAAOnJ,EACL0B,EAAO,kBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAEPP,OAAMC,QAAOb,SAAUuH,GACzB,SAGSC,GAAoB,SAAC5G,EAAMC,EAAO0B,EAASkF,GACtD,OAAOrJ,EACL0B,EAAO,kBACP,CAAEc,OAAMC,QAAO4G,WAAUlF,UAASvC,SAClC,SAGS0H,GAAc,SAACnF,EAASkF,GACnC,OAAOrJ,EACL0B,EAAO,qBACP,CAAEyC,UAASkF,WAAUhE,OAAQ,EAAGkE,YAAa,EAAG3H,SAChD,SAGS4H,GAAkB,SAACrF,EAASkF,EAAU/I,GACjD,OAAON,EACL0B,EAAO,qBACP,CAAEyC,UAASkF,WAAUhE,OAAQ,EAAGkE,YAAa,EAAG3H,QAAOtB,QACvD,SAGSmJ,GAAe,SAAAC,GAAc,IAEtCC,EAMED,EANFC,WACAC,EAKEF,EALFE,SACAC,EAIEH,EAJFG,aACAvJ,EAGEoJ,EAHFpJ,KACAwJ,EAEEJ,EAFFI,WACAC,EACEL,EADFK,SAEGA,GAAyB,KAAbA,IACfA,EAAW,GAEb,IAeI9J,EAAMyB,EAAO,8BAdf,SACAE,EACA,UACAmI,EACA,YACAD,EACA,eACAH,EACA,aACAC,EACA,iBACAC,EACA,SACAvJ,GAEF,GAAIyJ,EACF,OAAQA,GACN,IAAK,UACH9J,EAAMA,EAAM,YAAc6J,EAC1B,MACF,IAAK,WACH7J,EAAMA,EAAM,aAAe6J,EAC3B,MACF,IAAK,cACH7J,GAAY,eACZ,MACF,IAAK,eACHA,GAAY,eAMlB+J,OAAOC,KAAKhK,IAEDiK,GAAiB,SAAC1H,EAAMC,EAAOoC,GAC1C,OAAO7E,EACL0B,EAAO,qBACP,CACEc,OACAC,QACAb,QACAiD,KAAMA,GAAc,IAEtB,SAGSsF,GAAa,SAAA7G,GACxB,OAAOtD,EACL0B,EAAO,oBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,QACAyC,OAAQ,QAEV,SAGS+F,GAAiB,SAAC9G,EAAOJ,GACpC,OAAOlD,EACL0B,EAAO,wBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJO,EAHI,CAIP1B,QACAsB,KACAmB,OAAQ,SAEV,SAISgG,GAAW,SAAC7H,EAAMC,GAC7B,OAAOzC,EACL0B,EAAO,kBACP,CACEc,OACAC,QACAb,SAEF,SAIS0I,GAAe,SAACZ,EAAYxG,GAIvC,OAHIA,IACFwG,EAAWxG,GAAKA,GAEXlD,EACL0B,EAAO,sBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJ2G,EAHI,CAIPrF,OAAQnB,EAAK,OAAS,MACtBtB,UAEF,SAGS2I,GAAiB,SAAArH,GAC5B,OAAOlD,EACL0B,EAAO,sBACP,CACEwB,KACAmB,OAAQ,MACRzC,SAEF,SAIS4I,GAAgB,SAC3BhI,EACAC,EACAkH,EACAC,EACAC,EACAjH,EACAC,GAEA,OAAO7C,EACL0B,EAAO,uBADEqB,OAAAC,EAAA,EAAAD,CAAA,CAGPP,OACAC,QACAb,QACAtB,KAAM,GACNqJ,aACAC,WACAC,gBACCjH,EAAWC,GAEd,SAGS4H,GAAc,SAAAtB,GACzB,OAAOnJ,EACL0B,EAAO,qBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJoG,EAHI,CAIPvH,UAEF,SAIS8I,GAAa,SAAClI,EAAMC,GAC/B,OAAOzC,EACL0B,EAAO,oBACP,CACEc,OACAC,QACAb,SAEF,SAGS+I,GAAiB,SAAAC,GAC5B,OAAO5K,EACL0B,EAAO,wBACP,CACEc,KAAM,EACNC,MAAO,GACPb,QACAgJ,cAEF,SAISC,GAAkB,SAAC3H,EAAI4H,GAClC,OAAO9K,EACL0B,EAAO,yBACP,CACEwB,KACAtB,QACAkJ,YAEF,SAISC,GAAW,SAACvI,EAAMC,EAAOvC,GACpC,OAAOF,EACL0B,EAAO,kBADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,QACAb,SACG1B,GAEL,SAGS8K,GAAa,SAACxI,EAAMC,EAAOS,GACtC,OAAOlD,EACL0B,EAAO,oBACP,CACEc,OACAC,QACAb,QACAsB,KACA5C,KAAM,GAER,SAGS2K,GAAa,SAACzI,EAAMC,EAAOS,GACtC,OAAOlD,EACL0B,EAAO,oBACP,CACEc,OACAC,QACAb,QACAsB,KACA5C,KAAM,GAER,SAGS4K,GAAuB,SAAAxB,GAAc,IAE9CC,EAMED,EANFC,WACAC,EAKEF,EALFE,SACAC,EAIEH,EAJFG,aACAvJ,EAGEoJ,EAHFpJ,KACAwJ,EAEEJ,EAFFI,WACAqB,EACEzB,EADFyB,MAiBElL,EAAMyB,EAAO,qCAdf,SACAE,EACA,UACAuJ,EACA,YACArB,EACA,eACAH,EACA,aACAC,EACA,iBACAC,EACA,SACAvJ,GAEF,GAAI6K,EACF,OAAQA,GACN,IAAK,UACHlL,EAAMA,EAAM,YAAc6J,EAC1B,MACF,IAAK,WACH7J,EAAMA,EAAM,aAAe6J,EAC3B,MACF,IAAK,cACH7J,GAAY,eACZ,MACF,IAAK,eACHA,GAAY,eACZ,MACF,IAAK,aACHA,EAAMA,EAAM,eAAiB6J,EAMnCE,OAAOC,KAAKhK,IAEDmL,GAAiB,SAAClI,EAAImI,EAASC,GAC1C,OAAOtL,EACL0B,EAAO,wBACP,CACEE,QACAsB,KACAmI,UACAC,cACAhL,KAAM,GAER,SAGSiL,GAAa,SAAApC,GACxB,OAAOnJ,EACL0B,EAAO,kBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJoG,EAHI,CAIPvH,UAEF,SAGS4J,GAAsB,SAAArC,GACjC,OAAOnJ,EACL0B,EAAO,wBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJoG,EAHI,CAIPvH,UAEF,SAKS6J,GAAgB,SAAAtC,GAC3B,OAAOnJ,EACL0B,EAAO,eADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJoG,EAHI,CAIPvH,UAEF,SAGS8J,GAAsB,SAACxI,EAAI2B,EAAMvB,GAC5C,OAAOtD,EACL0B,EAAO,8BADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPG,KACA2B,QACGvB,EALI,CAMPqI,eAAgB,qBAChBC,wBAAyB,EACzBC,iBAAkB,qBAClBC,0BAA2B,EAC3BjE,SAAU,wBACVxD,OAAQ,OACRzC,UAEF,SAISmK,GAAiB,SAAC1C,EAAUlF,EAAS6H,GAChD,OAAOhM,EACL0B,EAAO,kBACP,CACEE,QACAyH,WACA2C,gBACA7H,UACAoF,YAAa,EACb0C,QAAS,GAEX,SAGSC,GAAgB,SAAA/C,GAC3B,OAAOnJ,EACL0B,EAAO,wBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJoG,EAHI,CAIPvH,UAEF,SAISuK,GAAY,SAAC3J,EAAMC,EAAOmB,EAAYN,GACjD,OAAOtD,EACL0B,EAAO,cADEqB,OAAAc,EAAA,EAAAd,CAAA,CAGPP,OACAC,QACAmB,cACGN,EANI,CAOP1B,UAEF,SAGSwK,GAA4B,SAACjI,EAASkI,GACjD,OAAOrM,EACL0B,EAAO,kCACP,CACEyC,UACAkI,SACAzK,SAEF,SC5lCE0K,GAAOC,EAAA,EAAKD,KAKZE,8MACJC,iCAAc,SAAAC,IAAA,IAAAC,EAAAzM,EAAA,OAAA0M,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACS7K,IADT,OAEU,KADhBuK,EADMI,EAAAG,MAED7H,UACHnF,EAASyM,EAATzM,MACDgF,QAAQ,SAAAC,GACPA,EAAQgI,UACVhI,EAAQgI,SAASjI,QAAQ,SAAAkI,GACvBA,EAAKC,MAAQD,EAAKC,MAAMC,MAAM,QAIpCzL,aAAa0L,SAAWC,KAAKC,UAAUvN,GAEvCwN,EAAKC,MAAMC,QAAQC,QAAQ,MAbjB,wBAAAd,EAAAe,SAAApB,QAkBdqB,aAAe,SAAAC,GAEbA,EAAMC,iBAGNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAKC,GAAZ,IAAAzM,EAAAC,EAAAC,EAAAyK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UAExBuB,EAFwB,CAAAE,EAAAzB,KAAA,eAInBjL,EAAiCyM,EAAjCzM,SAAUC,EAAuBwM,EAAvBxM,SAAUC,EAAauM,EAAbvM,SAJDwM,EAAAzB,KAAA,EAKNlL,EAASC,EAAUC,EAAUC,GALvB,OAOL,KAFhByK,EALqB+B,EAAAxB,MAOhB7H,QAET5D,EAAA,EAAQkN,QAAQ,4BAChB9M,aAAaD,MAAQ+K,EAAOzM,KAAK0B,MACjCC,aAAagD,KAAO8H,EAAOzM,KAAK2E,KAChChD,aAAa+M,gBAAiB,IAAIC,MAAOC,UACzChN,IACA4L,EAAKjB,eAILhL,EAAA,EAAQD,MAAMmL,EAAOoC,KAlBIL,EAAAzB,KAAA,eAqB3B3G,QAAQC,IAAI,6BArBe,wBAAAmI,EAAAZ,SAAAS,MAA/B,gBAAAS,EAAAC,GAAA,OAAAb,EAAAc,MAAAC,KAAAhP,YAAA,OA0BFiP,YAAc,WACZ1B,EAAKC,MAAMO,KAAKC,eAAhB,eAAAkB,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA+B,SAAAgB,EAAOd,EAAKC,GAAZ,IAAAzM,EAAAC,EAAA0K,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,UAExBuB,EAFwB,CAAAe,EAAAtC,KAAA,eAInBjL,EAAuByM,EAAvBzM,SAAUC,EAAawM,EAAbxM,SAJSsN,EAAAtC,KAAA,EAKN9K,EAAYH,EAAUC,GALhB,OAOL,KAFhB0K,EALqB4C,EAAArC,MAOhB7H,QAAgBsH,EAAOzM,KAEhCsP,EAAA,EAAMC,KAAK,CACTpC,MAAO,qEACPqC,QACEC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,OAAKC,IAAKlD,EAAOzM,KAAK4P,MAAOC,IAAI,0BAOvCtO,EAAA,EAAQD,MAAMmL,EAAOoC,KApBIQ,EAAAtC,KAAA,eAuB3B3G,QAAQC,IAAI,6BAvBe,wBAAAgJ,EAAAzB,SAAAwB,MAA/B,gBAAAU,EAAAC,GAAA,OAAAZ,EAAAH,MAAAC,KAAAhP,YAAA,OA2CF+P,YAAc,SAACC,EAAM7M,EAAO8M,GAC1B9J,QAAQC,IAAI,gBAAiB4J,EAAM7M,GAC9BA,EAEMA,EAAMlD,OAAS,EACxBgQ,EAAS,2DACA9M,EAAMlD,OAAS,GACxBgQ,EAAS,4DACC,kBAAkBC,KAAK/M,GAGjC8M,IAFAA,EAAS,oGANTA,EAAS,iHAgBX,GADcvO,aAAaD,MAEzB,OAAO+N,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAUC,GAAG,MAGtB,IACQC,EADKrB,KAAKxB,MAAMO,KAChBsC,kBAER,OACEb,EAAA9C,EAAA+C,cAAA,OAAKa,UAAU,SACbd,EAAA9C,EAAA+C,cAAA,UAAQa,UAAU,gBAChBd,EAAA9C,EAAA+C,cAAA,0DAEFD,EAAA9C,EAAA+C,cAAA,WAASa,UAAU,iBACjBd,EAAA9C,EAAA+C,cAAA,sCACAD,EAAA9C,EAAA+C,cAAArD,EAAA,GAAMmE,SAAUvB,KAAKpB,aAAc0C,UAAU,cAC3Cd,EAAA9C,EAAA+C,cAACtD,GAAD,KAQGkE,EAAkB,WAAY,CAG7B7J,MAAO,CACL,CACEgK,UAAU,EACVC,YAAY,EACZnP,QAAS,8CAEX,CAAEoP,IAAK,EAAGpP,QAAS,yCACnB,CAAEqP,IAAK,GAAIrP,QAAS,0CACpB,CACEsP,QAAS,kBACTtP,QAAS,4GAbd+O,CAiBCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEC,OACEtB,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,OAAO6Q,MAAO,CAAEC,MAAO,qBAEpCC,YAAY,yBAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,WAAY,CAC7B7J,MAAO,CACL,CACE2K,UAAWnC,KAAKe,eAHrBM,CAOCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEC,OACEtB,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,OAAO6Q,MAAO,CAAEC,MAAO,qBAEpC9Q,KAAK,WACL+Q,YAAY,mBAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,WAAY,CAC7B7J,MAAO,IADR6J,CAMCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEC,OACEtB,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,SAAS6Q,MAAO,CAAEC,MAAO,qBAEtC9Q,KAAK,WACL+Q,YAAY,yBAIlB1B,EAAA9C,EAAA+C,cAAA,QAAMuB,MAAO,CAAEI,UAAW,GAAKC,QAASrC,KAAKC,aAA7C,mKAIAO,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEnR,KAAK,UACLoR,SAAS,SACTjB,UAAU,qBAHZ,2BAvMMkB,aAsNLC,GADGrF,EAAA,EAAKsF,QAALtF,CAAcC,kDC1N1BsF,WAAUC,GAAA,EAAKD,SAEfE,eACJ,SAAAA,IAAc,IAAAtE,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA6C,IACZtE,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAiP,GAAAI,KAAAjD,QAGF1C,YAJc1J,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAIA,SAAA5B,IAAA,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACS7K,IADT,OAGU,KAFhBuK,EADMI,EAAAG,MAGD7H,OAETqI,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,OAIfuB,EAAA,EAAQD,MAAMmL,EAAOoC,KAVX,wBAAAhC,EAAAe,SAAApB,MAJAgB,EAoBdjB,YApBc1J,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAoBA,SAAAC,IAAA,IAAA5B,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACS7K,IADT,OAEU,KADhBuK,EADM+B,EAAAxB,MAED7H,OACTqI,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,OAGfuB,EAAA,EAAQD,MAAM,gEAPJ,wBAAAkN,EAAAZ,SAAAS,MApBAb,EAmCd4E,aAAe,SAAA/E,GAEb,IAAMgF,EAAO7E,EAAKC,MAAM6E,SAASC,SACjC,OAAOlF,EAASmF,OAAO,SAACC,EAAKvF,GAIpBA,EAAKD,UAiBMC,EAAKD,SAASyF,KAC1B,SAAAC,GAAY,OAAuC,IAAnCN,EAAKO,QAAQD,EAAaE,SAI1CrF,EAAKsF,QAAU5F,EAAK2F,KAGtBJ,EAAIM,KACFtD,EAAA9C,EAAA+C,cAACkC,GAAD,CACEiB,IAAK3F,EAAK2F,IACV1F,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA,YAAOxC,EAAKC,QAGhBmE,QAAS,WACP9D,EAAKwF,SAAW9F,EAAK2F,MAItB3F,EAAKD,SAASuF,OAAO,SAACS,EAAMC,GAa3B,OAZAD,EAAKF,KACHtD,EAAA9C,EAAA+C,cAAAmC,GAAA,EAAMzF,KAAN,CACEyG,IAAKK,EAAIL,IACTvB,QAAS,WACP9D,EAAKC,MAAM6D,QAAQ4B,KAGrBzD,EAAA9C,EAAA+C,cAACyD,EAAA,EAAD,CAAM9C,GAAI6C,EAAIL,KACZpD,EAAA9C,EAAA+C,cAAA,YAAOwD,EAAI/F,UAIV8F,GACN,OAnDPR,EAAIM,KACFtD,EAAA9C,EAAA+C,cAAAmC,GAAA,EAAMzF,KAAN,CACEyG,IAAK3F,EAAK2F,IACVvB,QAAS,WACP9D,EAAKC,MAAM6D,QAAQpE,GACnBM,EAAKwF,SAAW9F,EAAK2F,MAGvBpD,EAAA9C,EAAA+C,cAACyD,EAAA,EAAD,CAAM9C,GAAInD,EAAK2F,KAEbpD,EAAA9C,EAAA+C,cAAA,YAAOxC,EAAKC,UA8CtB,OAAOsF,GACN,KAlGHjF,EAAK4F,MAAQ,CAAEpT,KAAM,GAAI8S,QAAS,IAFtBtF,mFAuGZyB,KAAKkD,SAAS,CAACW,QAAQ7D,KAAK6D,2CAErB,IAAAO,EAAApE,KACD5B,EAAWC,KAAKgG,MAAM3R,aAAa4R,QAAQ,aAC3CC,EAAYvE,KAAKmD,aAAa/E,GAEhCgF,EAAOpD,KAAKxB,MAAM6E,SAASC,SAI/B,OACE9C,EAAA9C,EAAA+C,cAAA,OAAKa,UAAU,YACbd,EAAA9C,EAAA+C,cAACyD,EAAA,EAAD,CACE9C,GAAG,IACHE,UAAU,kBACVU,MAAO,CAAEwC,eAAgB,WAEzBhE,EAAA9C,EAAA+C,cAAA,4CAEFD,EAAA9C,EAAA+C,cAAAmC,GAAA,GACE6B,KAAK,SACLC,MAAM,OACNC,aAAc,CAACvB,GAEfwB,aAAc,SAAAhB,GACZzM,QAAQC,IAAIwM,GACRA,EAAI,IAAMA,EAAI,KAAOA,EAAI,GAC3BQ,EAAKlB,SAAS,CAAEW,QAASD,EAAI,KAE7BQ,EAAKlB,SAAS,CAAEW,QAAS,QAG7BgB,SAAU,CAAC7E,KAAKmE,MAAMN,UAErBU,WA1IW/B,aAsJPsC,eAAWjC,mDC5JX,SAASkC,GAAWvG,GACjC,OACEgC,EAAA9C,EAAA+C,cAAA6B,EAAA,EAAA1O,OAAAoR,OAAA,CACE7T,KAAK,UACL8T,KAAK,QACLjD,MAAO,CAAEkD,YAAa,KAClB1G,6BCaF2G,yBAIFC,eACJ,SAAAA,EAAY5G,GAAO,IAAAD,EAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAoF,IACjB7G,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAwR,GAAAnC,KAAAjD,KAAMxB,KAiBR6G,SAAW,SAAAC,GACT/G,EAAK2E,SAAS,CAAEoC,eAnBC/G,EAsBnBgH,OAAS,SAACC,EAAWtQ,GACnBqJ,EAAKrJ,GAAQsQ,IAvBIjH,EA0BnBkH,IAAM,SAAAC,GAAa,IAIbC,EAFIC,EAAUrH,EAAK4F,MAAfyB,MACJC,GAAa,EAQjB,GANAD,EAAM7P,QAAQ,SAAAkI,GACRA,EAAKC,QAAUwH,EAAUxH,QAC3B2H,GAAa,EACbF,EAAS1H,EAAK2F,OAGdiC,EACFtH,EAAK8G,SAASM,OACT,CACL,IAAML,EAAS,SAAAQ,OAAYvH,EAAKwH,eAChCH,EAAM9B,KAAK,CACT5F,MAAOwH,EAAUxH,MACjBqC,QAAS,qBACTqD,IAAK0B,EACLlC,KAAMsC,EAAU9B,MAElBrF,EAAK8G,SAASC,GACd/G,EAAK2E,SAAS,CAAE0C,QAAON,gBAhDR/G,EAoDnByH,OAAS,SAAAR,GAAa,IAEhBS,EADEX,EAAc/G,EAAK4F,MAAnBmB,UAEN/G,EAAK4F,MAAMyB,MAAM7P,QAAQ,SAACmQ,EAAMC,GAC1BD,EAAKtC,MAAQ4B,IACfS,EAAYE,EAAI,KAGpB,IAAMP,EAAQrH,EAAK4F,MAAMyB,MAAMQ,OAAO,SAAAF,GAAI,OAAIA,EAAKtC,MAAQ4B,IACvDI,EAAM3U,QAAUqU,IAAcE,IAC5BS,GAAa,GACfX,EAAYM,EAAMK,GAAWrC,IAE7BrF,EAAKC,MAAMC,QAAQqF,KAAK8B,EAAMK,GAAW7C,OAEzCkC,EAAYM,EAAM,GAAGhC,KAGzBrF,EAAK2E,SAAS,CAAE0C,QAAON,eAtEN/G,EA0EnB8H,OAAS,WAEPhG,EAAA,EAAMiG,QAAQ,CACZ/F,QAAS,kCACTgG,KAAM,WACJpP,QAAQC,IAAI,KAAZxD,OAAA4S,GAAA,EAAA5S,CAAA2K,IAKA7L,aAAa+T,WAAW,YACxB/T,aAAa+T,WAAW,SACxB/T,aAAa+T,WAAW,QACxB/T,aAAa+T,WAAW,kBAExBlI,EAAKC,MAAMC,QAAQC,QAAQ,cAzFdH,EAwPnBmI,SAxPmB9S,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAwPR,SAAA5B,IAAA,IAAAoJ,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACS5K,IADT,OAEU,KADbyT,EADG/I,EAAAG,MAED7H,OACNmK,EAAA,EAAMC,KAAK,CACTpC,MAAO,6CACPqC,QAASC,EAAA9C,EAAA+C,cAACmG,GAAAlJ,EAAD,CAAQvJ,MAAOwS,EAAI5V,KAAK4P,QACjCkG,MAAO,MAGTvU,EAAA,EAAQD,MAAMsU,EAAI/G,KATX,wBAAAhC,EAAAe,SAAApB,MAxPQgB,EAoQnBuI,SAAW,WACTvI,EAAK2E,SAAS,CAAE6D,gBAAgB,KArQfxI,EAuQnByI,iBAAmB,SAAAnI,GACjBA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAKlL,GAAZ,IAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACxBuB,EADwB,CAAAE,EAAAzB,KAAA,eAAAyB,EAAAzB,KAAA,EAET3K,EAASgB,EAAMhB,UAFN,OAGR,KADbwT,EAFqBpH,EAAAxB,MAGnB7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KAEpBtN,EAAA,EAAQD,MAAMsU,EAAI/G,KANO,wBAAAL,EAAAZ,SAAAS,MAA/B,gBAAAS,EAAAC,GAAA,OAAAb,EAAAc,MAAAC,KAAAhP,YAAA,KAvQAuN,EAAKwH,YAAc,EACnB,IAAMH,EAAQ,CACZ,CACE1H,MAAO,eACPqC,QAAS,mBACTqD,IAAK,IACLqD,UAAU,EACV7D,KAAM,UATO,OAYjB7E,EAAK4F,MAAQ,CACXmB,UAAWM,EAAM,GAAGhC,IACpBgC,QACAmB,gBAAgB,GAfDxI,sFAgGjB2I,cAAclH,KAAKmH,wDAGnBnH,KAAKxB,MAAM4I,OAASpH,KAAKxB,MAAM4I,MAAMpH,MACrC,IAEI9B,EAFAnN,EAAOiP,KAAKmE,MACVf,EAAOpD,KAAKxB,MAAM6E,SAASC,SAEpB,UAATF,GAA6B,MAATA,IACL/E,KAAKgG,MAAM3R,aAAa4R,QAAQ,aACxCvO,QAAQ,SAAAkI,GACVA,EAAKD,UAAYC,EAAK2F,MAAQR,EAExBnF,EAAKD,UACdC,EAAKD,SAASjI,QAAQ,SAAAsR,GAChBA,EAAIzD,MAAQR,IACdlF,EAAQmJ,EAAInJ,SAJhBA,EAAQD,EAAKC,QASjBnN,EAAKuU,UAAY,IACjBvU,EAAK6U,MAAM9B,KAAK,CACd5F,MAAOA,EACP0F,IAAK,IACLR,KAAMA,IAERpD,KAAKkD,SAALtP,OAAAc,EAAA,EAAAd,CAAA,GACK7C,sCAKA,IAAAqT,EAAApE,KACDnN,EAAWH,aAAa4R,QAAQ,QAD/BgD,EAEsCtH,KAAKxB,MAAMO,KAAhDsC,EAFDiG,EAECjG,kBAAmBkG,EAFpBD,EAEoBC,cAC3B,OACE/G,EAAA9C,EAAA+C,cAAA,OAAKa,UAAU,UACbd,EAAA9C,EAAA+C,cAAA,OAAKa,UAAU,cACbd,EAAA9C,EAAA+C,cAAA+G,GAAA,GACEC,QACEjH,EAAA9C,EAAA+C,cAAAmC,GAAA,OACEpC,EAAA9C,EAAA+C,cAAAmC,GAAA,EAAMzF,KAAN,CAAWyG,IAAI,KACbpD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,OAAOkR,QAASrC,KAAK0G,UAAlC,mCAIFlG,EAAA9C,EAAA+C,cAAAmC,GAAA,EAAMzF,KAAN,CAAWyG,IAAI,KACbpD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,OAAOkR,QAASrC,KAAK8G,UAAlC,8BAMNY,QAAS,CAAC,UAEVlH,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,QACV0B,EADH,IACa2N,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,WAG1BqP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKqG,OAAQpB,KAAK,WAAvC,iBAIFzE,EAAA9C,EAAA+C,cAAA,OAAKa,UAAU,iBAEbd,EAAA9C,EAAA+C,cAAAkH,GAAA,GACEtC,SAAUrF,KAAKqF,SACfC,UAAWtF,KAAKmE,MAAMmB,UACtBnU,KAAK,gBACLoU,OAAQvF,KAAKuF,OACbqC,SAAO,GAEN5H,KAAKmE,MAAMyB,MAAMiC,IAAI,SAAA3B,GAAI,OACxB1F,EAAA9C,EAAA+C,cAAC0E,GAAD,CACE2C,IAAKtH,EAAA9C,EAAA+C,cAACyD,EAAA,EAAD,CAAM9C,GAAI8E,EAAK9C,MAAO8C,EAAKhI,OAChC0F,IAAKsC,EAAKtC,IACVqD,SAAUf,EAAKe,SACfc,aAAW,QAKlB/H,KAAKmE,MAAM4C,gBACVvG,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACN8J,QAAShI,KAAKmE,MAAM4C,eACpBkB,SAAU,WACR7D,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElCmB,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAArD,EAAA,GACE+K,SAAU,CAAEC,KAAM,GAClBC,WAAW,OACX9G,SAAUvB,KAAKgH,kBAEfxG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,sBACdjH,EAAkB,WAAY,CAC7B7J,MAAO,CACL,CAAEgK,UAAU,EAAMlP,QAAS,wCAC3B,CAAEmP,YAAY,GACd,CAAEC,IAAK,EAAGpP,QAAS,mCACnB,CAAEqP,IAAK,GAAIrP,QAAS,sCALvB+O,CAYCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,OAChB1V,KAAK,WACL+Q,YAAY,kCAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,SAAU,CAC3B7J,MAAO,CACL,CAAEgK,UAAU,GACZ,CACEW,UAAW,SAACnB,EAAM7M,EAAO8M,GAClB9M,GACH8M,IAEE9M,IAAUoT,EAAc,YAC1BtG,IAEAA,EAAS,kDAXlBI,CAiBCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,OAChB1V,KAAK,WACL+Q,YAAY,kCAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUoR,SAAS,UAAhC,2BA/OKC,aAsRf+F,GAAgBnL,EAAA,EAAKsF,QAALtF,CAAcgI,IACrBN,eAAWyD,IC7SLC,eACnB,SAAAA,EAAYhK,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAwI,IACjBjK,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA4U,GAAAvF,KAAAjD,KAAMxB,KAQRiK,OAAS,WACHlK,EAAK4H,GAAK5H,EAAKlK,IAAIpD,OACrBsN,EAAK2E,SACH,CACEyD,IAAKpI,EAAKlK,IAAI8J,MAAM,EAAGI,EAAK4H,KAAO,MAErC,WACE5H,EAAKmK,MAAQC,WAAW,kBAAMpK,EAAKkK,UAAU,QAIjDlK,EAAK2E,SAAS,CACZyD,IAAKpI,EAAKlK,MAEZuU,aAAarK,EAAKmK,SArBpBnK,EAAK4F,MAAQ,CACXwC,IAAK,IAEPpI,EAAK4H,EAAI,EACT5H,EAAKmK,MAAQ,EACbnK,EAAKlK,IAAM,0EAPMkK,sFA2BjByB,KAAKkD,SAAW,SAACiB,EAAOlD,iDAKxBjB,KAAKyI,0CAGL,OAAOjI,EAAA9C,EAAA+C,cAAA,QAAMuB,MAAO,CAAE6G,SAAU,SAAW7I,KAAKmE,MAAMwC,YApCxBnE,oGCK3B,SAASsG,GAAYC,GAC1B,IAAKA,EAAM,MAAO,GAClB,IAAIC,EAAYC,SAASF,GACzB,OAAkB,IAAdC,EAAwB,GACrBE,KAAmB,IAAZF,GAAkBG,OAAO,uBCTzC,IAAMC,GAAWhM,EAAA,EAAKD,KAChBkM,oLACK,IACChI,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBACAiI,EAAgBtJ,KAAKxB,MAArB8K,YACR,OACE9I,EAAA9C,EAAA+C,cAAArD,EAAA,GAAMkE,UAAU,cACdd,EAAA9C,EAAA+C,cAAC2I,GAAD,CAAUpH,MAAOsH,EAAc,GAAK,CAAEC,QAAS,SAC5ClI,EAAkB,OAAQ,CACzB7J,MAAO,CACL,CACEgK,SAAU8H,EACVhX,QAAS,gCAGbkX,aAAcxJ,KAAKxB,MAAM6I,KAP1BhG,CASCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEC,OAAQtB,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,OAAO6Q,MAAO,CAAEC,MAAO,qBAC1CC,YAAY,qCAIlB1B,EAAA9C,EAAA+C,cAAC2I,GAAD,CAAUd,MAAM,eAAKtG,MAAOsH,EAAc,CAAEC,QAAS,QAAW,IAC7DlI,EAAkB,OAAQ,CACzB7J,MAAO,CACL,CACEgK,UAAW8H,EACX7H,YAAY,EACZG,QAAS,gBACTtP,QAAS,oFANd+O,CASEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOK,YAAY,qFAExB1B,EAAA9C,EAAA+C,cAAC2I,GAAD,CAAUd,MAAM,eAAKtG,MAAOsH,EAAc,CAAEC,QAAS,QAAW,IAC7DlI,EAAkB,OAAQ,CACzB7J,MAAO,CACL,CAAEmK,IAAK,IAAKrP,QAAS,yBACrB,CACEkP,UAAW8H,KAJhBjI,CAQCb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO4H,SAAP,CACEvH,YAAY,iCACZwH,SAAU,CAAEC,QAAS,EAAGC,QAAS,eA7CjBpH,aAwDfqH,GAFgBzM,EAAA,EAAKsF,QAALtF,CAAciM,8DCrDrCS,6BACO,SAASC,GAAavL,GACnC,OACEgC,EAAA9C,EAAA+C,cAAAuJ,GAAA,GAAgBC,OAAQC,MACtB1J,EAAA9C,EAAA+C,cAACqJ,GAADlW,OAAAoR,OAAA,CAEEhD,MAAO,CAAE6E,MAAO,KAChBsD,SAAU,CACRhB,OAAQ,QACRiB,aAAc,CACZlB,KAAO,QAAS,SAChBA,KAAO,QAAS,WAGpBC,OAAO,sBACPjH,YAAa,CAAC,2BAAQ,4BACtBmD,SAAU,SAACtU,EAAMsZ,GACf7L,EAAM8L,YAAYD,KAIhB7L,SCuKG+L,eA1Lb,SAAAA,EAAY/L,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAuK,IACjBhM,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA2W,GAAAtH,KAAAjD,KAAMxB,KAQRgM,SATmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KASR,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAoX,EAAA3W,EAAA4S,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACL4M,EAAanM,EAAKC,MAAMkM,WACxB3W,EAAKwK,EAAKC,MAAMmM,SACPD,EAHJ,CAAA9M,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAICjJ,EAAWxB,EAAMC,EAAOS,GAJzB,OAAA6J,EAAAgN,GAAAhN,EAAAG,KAAAH,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,GAKC/I,EAAS1B,EAAMC,EAAOS,GALvB,QAAA6J,EAAAgN,GAAAhN,EAAAG,KAAA,QAMU,KAHb4I,EAHG/I,EAAAgN,IAMD1U,QACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KACV8Z,MAAOlE,EAAIkE,QATN,yBAAAjN,EAAAe,SAAApB,MATQ,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAyBnBuM,aAzBmB,eAAA7L,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAyBJ,SAAAC,EAAO/L,EAAMC,GAAb,IAAA0G,EAAAjG,EAAA4S,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACRS,EAAKwM,WAAcxM,EAAK9J,WADhB,CAAA8K,EAAAzB,KAAA,eAEXxL,EAAA,EAAQD,MAAM,gEAFHkN,EAAAyL,OAAA,wBAKThR,EAAU,CACZzG,MAAOgL,EAAKwM,UACZvX,IAAK+K,EAAK0M,QACVC,WAAY,GAEVnX,EAAKwK,EAAKC,MAAM2M,iBAAiBpX,GAVxBwL,EAAAzB,KAAA,EAWKjJ,EAAWxB,EAAMC,EAAOS,EAAIiG,GAXjC,OAYM,KADb2M,EAXOpH,EAAAxB,MAYL7H,OACNqI,EAAK2E,SAAS,CAAEnS,KAAM4V,EAAI5V,KAAM8Z,MAAOlE,EAAIkE,QAE3CvY,EAAA,EAAQgO,KAAK,wCAfF,wBAAAf,EAAAZ,SAAAS,MAzBI,gBAAAyB,EAAAC,GAAA,OAAA7B,EAAAc,MAAAC,KAAAhP,YAAA,GAAAuN,EA+FnB6M,YAAc,WACZ,OAAI7M,EAAKC,MAAMkM,WACN,CACL,CACExM,MAAO,iCACPmN,UAAW,kBAEb,CACEnN,MAAO,6CACPmN,UAAW,kBAGb,CACEnN,MAAO,iCACPmN,UAAW,aAEb,CACEnN,MAAO,2BACPmN,UAAW,aAEb,CACEnN,MAAO,2BACPmN,UAAW,YAEb,CACEnN,MAAO,6CACPmN,UAAW,gBAEb,CACEnN,MAAO,iCACPmN,UAAW,WAEb,CACEnN,MAAO,iCACPmN,UAAW,gBAEb,CACEnN,MAAO,qBACPmN,UAAW,eAEb,CACEnN,MAAO,2BACPmN,UAAW,aAEb,CACEnN,MAAO,eACPmN,UAAW,WAIR,CACL,CACEnN,MAAO,UACPmN,UAAW,MAEb,CACEnN,MAAO,2BACPmN,UAAW,oBAGb,CACEnN,MAAO,mCACPmN,UAAW,iBAEb,CACEnN,MAAO,2BACPmN,UAAW,YAEXC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAE8N,cAAgBD,EAAEC,gBAExC,CACEtN,MAAO,eACPmN,UAAW,OAEb,CACEnN,MAAO,mCACPmN,UAAW,uBAEb,CACEnN,MAAO,eACPmN,UAAW,cAEb,CACEnN,MAAO,2BACPmN,UAAW,iBAjLjB9M,EAAKwM,UAAY,GACjBxM,EAAK0M,QAAU,GACf1M,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,GANQtM,mFAuBjByB,KAAKwK,SAAS,EAAG,qCAoBV,IAEHtM,EAFGkG,EAAApE,KAwBP,OArBKA,KAAKxB,MAAMkM,aACdxM,EACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACI6B,KAAO7B,EAAI,IAAIoE,KAAKvC,KAAO7B,EAAI,IAAK,QACpC,EACb/U,EAAA,EAAQD,MAAM,wEAEd+R,EAAK2G,UAAY1D,EAAI,GACrBjD,EAAK6G,QAAU5D,EAAI,OAR3B,YAaE7G,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM+B,EAAK0G,aAAa,EAAG,KAAK7F,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,cAMjBqP,EAAA9C,EAAA+C,cAAAiL,GAAA,GAAMxN,MAAOA,GACXsC,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACR3G,KAAK,QACL4G,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACda,WAAY,CACVC,gBAAiB,GACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAK0G,aAAazX,EAAMmZ,IAE1BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAK0G,aAAa4B,EAASzH,eAzFhBzC,aCqBjBmK,eACaC,eACnB,SAAAA,EAAYpO,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA4M,IACjBrO,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAgZ,GAAA3J,KAAAjD,KAAMxB,KAoBR4M,YAAc,iBAAM,CAClB,CACElN,MAAO,UACPmN,UAAW,KACXzH,IAAK,KACLiJ,MAAO,OACPhG,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,YACXzH,IAAK,YACLiJ,MAAO,OACPhG,MAAO,IACPiG,OAAQ,SAAC5Y,EAAQ6Y,GACf,MAAO,CACL1K,QAAS,SAAAxD,GACPN,EAAKvK,UAAYE,EAAOF,UACxBuK,EAAKxK,GAAKG,EAAOH,GACjBwK,EAAKwO,SAAWA,EAChBxO,EAAK2E,SAAS,CACZ8J,YAAY,KAGhBC,cAAe,SAAApO,KACfqO,cAAe,SAAArO,KACfsO,aAAc,SAAAtO,GACZA,EAAMuO,OAAOpL,MAAMqL,OAAS,WAE9BC,aAAc,SAAAzO,QAKpB,CACEX,MAAO,2BACPmN,UAAW,YACXzH,IAAK,YACL0H,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAE6P,UAAYhC,EAAEgC,WAClC1G,MAAO,IACPiG,OAAQ,SAAC5Y,EAAQ6Y,GACf,MAAO,CACL1K,QAAS,SAAAxD,GACPN,EAAKiP,WAAatZ,EAClBqK,EAAK2E,SAAS,CACZuK,YAAY,KAGhBR,cAAe,SAAApO,KACfqO,cAAe,SAAArO,KACfsO,aAAc,SAAAtO,GACZA,EAAMuO,OAAOpL,MAAMqL,OAAS,WAE9BC,aAAc,SAAAzO,QAIpB,CACEX,MAAO,2BACPmN,UAAW,eACXzH,IAAK,eACLiD,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,aACXzH,IAAK,aACLiD,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,eACXzH,IAAK,eACLiD,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,YACXzH,IAAK,YACLiD,MAAO,KAET,CACE3I,MAAO,iBACPmN,UAAW,WACXzH,IAAK,WACLiD,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,GACRlF,IAAK,aACL0H,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEiQ,WAAapC,EAAEoC,YACnC9G,MAAO,KAET,CACE3I,MAAO,iBACPmN,UAAW,WACXzH,IAAK,WACLiD,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,GACRwC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEkQ,WAAarC,EAAEqC,YACnC/G,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,GACXxE,MAAO,IACP6G,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKsP,cAAc3Z,IAAS/C,KAAK,WAA5D,4BAGAqP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKuP,cAAc5Z,KAA9C,mBAMN,CACEgK,MAAO,2BACP2I,MAAO,IACP6G,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY5T,KAAK,UAAUkR,QAAS,kBAAM9D,EAAKwP,YAAY7Z,KAA3D,mBAMN,CACEgK,MAAO,6CACPmN,UAAW,iBACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YAA0B,IAAnBwI,SAAS+E,GAAc,SAAM,QA/JvBzP,EAoKnBiM,SApKmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAoKR,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAkK,EAAAyQ,EAAAC,EAAAC,EAAA,OAAA1Q,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY1K,EACnBC,EACAC,EACAiL,EAAK4F,MAAM4G,UACXxM,EAAK4F,MAAM8G,QACX1M,EAAK9K,SACL8K,EAAK7K,YAPE,OASa,KARhB8J,EADGI,EAAAG,MASE7H,QAAc+X,EACWzQ,EAAOzM,KAAjCmd,EADeD,EACfC,UAAWC,EADIF,EACJE,WACnBD,EAAUnY,QAAQ,SAAAC,GAChBmY,EAAWpY,QAAQ,SAAAkI,GACbjI,EAAQjC,KAAOkK,EAAKlK,KACtBiC,EAAQoY,WAAanQ,EAAKoQ,eAKhC9P,EAAK2E,SAAS,CACZnS,KAAMmd,EACNrD,MAAOrN,EAAOqN,SAGhBvY,EAAA,EAAQD,MAAMmL,EAAOoC,IAAM,iEAxBpB,wBAAAhC,EAAAe,SAAApB,MApKQ,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EA+LnB+P,eAAiB,WACf,IAAIvP,EAAOR,EAAKgQ,KAAKC,aACrBzP,EAAKC,eAAL,eAAAC,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAAoB,SAAAC,EAAOC,EAAKlL,GAAZ,IAAA2X,EAAA,OAAArO,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACbuB,EADa,CAAAE,EAAAzB,KAAA,WAEhBS,EAAK2E,SAAS,CAAE8J,YAAY,IACxB7Y,EAAMuB,OAAS6I,EAAKvK,UAHR,CAAAuL,EAAAzB,KAAA,eAAAyB,EAAAzB,KAAA,EAIOhK,EAAoByK,EAAKxK,GAAII,EAAMuB,MAJ1C,OAKQ,IALR6J,EAAAxB,KAKH7H,SACT5D,EAAA,EAAQkN,QAAQ,6BAEZsM,EAAQvN,EAAKwO,SAEjBxO,EAAK4F,MAAMpT,KAAK+a,GAAhB,UAAsC3X,EAAMuB,KAE5C6I,EAAK2E,SAAS,CACZnS,KAAMwN,EAAK4F,MAAMpT,QAbP,OAkBlBgO,EAAK0P,cAlBa,wBAAAlP,EAAAZ,SAAAS,MAApB,gBAAAyB,EAAAC,GAAA,OAAA7B,EAAAc,MAAAC,KAAAhP,YAAA,KAjMiBuN,EAsNnBmQ,aAAe,WACbnQ,EAAK2E,SAAS,CAAEyL,SAAS,IAEzB,IAAI5P,EAAOR,EAAKgQ,KAAKC,aACjBhB,EAAajP,EAAKiP,WACtBzO,EAAKC,eAAL,eAAAkB,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAAoB,SAAAgB,EAAOd,EAAKlL,GAAZ,IAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACA7J,EAAWuZ,EAAYrZ,GADvB,OAEC,KADbwS,EADYvG,EAAArC,MAEV7H,QACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KACpBrB,EAAK2E,SAAS,CAAEuK,YAAY,EAAOkB,SAAS,MAE5CpQ,EAAK2E,SAAS,CAAEyL,SAAS,IACzBrc,EAAA,EAAQD,MAAMsU,EAAI/G,MAEpBb,EAAK0P,cATa,wBAAArO,EAAAzB,SAAAwB,MAApB,gBAAAyO,EAAAC,GAAA,OAAA3O,EAAAH,MAAAC,KAAAhP,YAAA,KA3NiBuN,EA6OnBwP,YA7OmB,eAAAe,EAAAlb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA6OL,SAAA4P,EAAM7a,GAAN,IAAAH,EAAAyJ,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,cACN/J,EAAKG,EAAOH,GADNib,EAAAlR,KAAA,EAESlJ,EAAYb,GAFrB,OAGU,KADhByJ,EAFMwR,EAAAjR,MAGD7H,QACTmK,EAAA,EAAMb,QAAQ,CACZtB,MAAO,2BACPqC,QAAO,eAAAuF,OAAO5R,EAAOH,GAAd,qCAAA+R,OAA2BtI,EAAOzM,KAAK,GAAGwc,aANzC,wBAAAyB,EAAArQ,SAAAoQ,MA7OK,gBAAAE,GAAA,OAAAH,EAAA/O,MAAAC,KAAAhP,YAAA,GAAAuN,EAuPnBsP,cAvPmB,eAAAqB,EAAAtb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAuPH,SAAAgQ,EAAOjb,EAAQwW,GAAf,OAAAjN,EAAAC,EAAAC,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,OACVS,EAAK8Q,WACP9Q,EAAK8Q,UAAUC,UAEjB/Q,EAAKmM,WAAaA,EAClBnM,EAAKoM,SAAWzW,EAAOH,GACvBwK,EAAK2E,SAAS,CAAEqM,kBAAkB,IANpB,wBAAAH,EAAAzQ,SAAAwQ,MAvPG,gBAAAK,EAAAC,GAAA,OAAAP,EAAAnP,MAAAC,KAAAhP,YAAA,GAAAuN,EA+PnBtJ,cA/PmB,eAAAya,EAAA9b,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA+PH,SAAAwQ,EAAOzb,EAAQ0b,GAAf,IAAA1a,EAAAyR,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAkS,GAAA,cAAAA,EAAAhS,KAAAgS,EAAA/R,MAAA,cACV5I,EAAS0a,EAAQ,MAAQ,SADfC,EAAA/R,KAAA,EAEI7I,EAAcf,EAAOH,GAAImB,GAF7B,OAGK,KADbyR,EAFQkJ,EAAA9R,MAGN7H,OACN5D,EAAA,EAAQkN,QAAQ,kCAEhBlN,EAAA,EAAQkN,QAAQ,4BAAUmH,EAAI/G,KANlB,wBAAAiQ,EAAAlR,SAAAgR,MA/PG,gBAAAG,EAAAC,GAAA,OAAAL,EAAA3P,MAAAC,KAAAhP,YAAA,GAAAuN,EAwQnByR,SAAW,SAAA9b,GACLqK,EAAK8Q,WACP9Q,EAAK8Q,UAAUC,UAEjB/Q,EAAK2E,SAAS,CAAE+M,gBAAgB,IAChC1R,EAAK2R,WAAahc,EAAOH,IA7QRwK,EA+QnB4R,eA/QmBvc,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA+QF,SAAAiR,IAAA,IAAAzJ,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA0S,GAAA,cAAAA,EAAAxS,KAAAwS,EAAAvS,MAAA,cAAAuS,EAAAvS,KAAA,EACG3I,EAAWoJ,EAAK2R,WAAY3R,EAAK4F,MAAM/O,UAD1C,OAEI,KADbuR,EADS0J,EAAAtS,MAEP7H,QACN5D,EAAA,EAAQkN,QAAQ,kCAChBjB,EAAK2E,SAAS,CAAE9N,SAAU,GAAI6a,gBAAgB,KAE9C3d,EAAA,EAAQkN,QAAQ,4BAAUmH,EAAI/G,KANjB,wBAAAyQ,EAAA1R,SAAAyR,MA/QE7R,EAwRnBuP,cAAgB,SAAA5Z,GACdqK,EAAK8Q,UAAYhP,EAAA,EAAMC,KAAK,CAC1BpC,MAAO,eACPoS,OAAQ,eACRzJ,MAAO,MACPtG,QACEC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,kBAAM9D,EAAKsP,cAAc3Z,GAAQ,IAC1C+Q,KAAK,SAFP,wCAMAzE,EAAA9C,EAAA+C,cAAA8P,GAAA,GACErS,MAAM,uCACNsS,UAAW,kBAAMjS,EAAKtJ,cAAcf,GAAQ,IAC5C+T,SAAU,kBAAM1J,EAAKtJ,cAAcf,GAAQ,IAC3Coc,OAAO,eACPG,WAAW,gBAEXjQ,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,yCAEFzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKyR,SAAS9b,IAAS+Q,KAAK,SAAvD,4BAGAzE,EAAA9C,EAAA+C,cAAA8P,GAAA,GACErS,MAAM,2EACNsS,UAAW,kBAAMjS,EAAKmS,mBAAmBxc,IACzCoc,OAAO,eACPG,WAAW,gBAEXjQ,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,6CAvTS1G,EA6TnBmS,mBA7TmB,eAAAC,EAAA/c,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA6TE,SAAAyR,EAAM1c,GAAN,IAAAH,EAAA4S,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAkT,GAAA,cAAAA,EAAAhT,KAAAgT,EAAA/S,MAAA,cACf/J,EAAKG,EAAOH,GADG8c,EAAA/S,KAAA,EAEDvI,EAAYxB,GAFX,OAGA,KADb4S,EAFakK,EAAA9S,MAGX7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,IAAM,4BAE1BtN,EAAA,EAAQD,MAAMsU,EAAI/G,IAAM,4BANP,wBAAAiR,EAAAlS,SAAAiS,MA7TF,gBAAAE,GAAA,OAAAH,EAAA5Q,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACVQ,YAAY,EACZS,YAAY,EACZ8B,kBAAkB,EAClBwB,gBAAgB,EAChBd,gBAAgB,EAChB7a,SAAU,GACVpB,UAAW,GACX+W,UAAW,GACXE,QAAS,GACT0D,SAAS,GAEXpQ,EAAK9K,SAAW,KAChB8K,EAAK7K,WAAa,GAlBD6K,4EAuONM,GACX,IAAI9N,EAAO6C,OAAOoR,OAAO,GAAIhF,KAAKmE,MAAMxJ,WAAY,CAClD0M,IAAKxI,EAAMuO,OAAOjZ,QAEpB6L,KAAKkD,SAAS,CAAEvI,WAAY5J,gDA4F5BiP,KAAKwK,SAAS,EAAG,qCAEV,IAAApG,EAAApE,KAAAgR,EACiBhR,KAAKmE,MAArBpT,EADDigB,EACCjgB,KAAM8Z,EADPmG,EACOnG,MACR3M,EACJsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACXjD,EAAKlB,SAAS,CACZ6H,UAAW1D,EAAI,GACf4D,QAAS5D,EAAI,QALrB,YAUE7G,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACEjP,MAAO,CAAE6E,MAAO,KAChB3E,YAAY,kBACZkI,aAAa,KACb/E,SAAU,SAAAgC,GACRjD,EAAK3Q,SAAW4T,IAGlB7G,EAAA9C,EAAA+C,cAACyQ,GAAD,CAAQ/c,MAAM,MAAd,WACAqM,EAAA9C,EAAA+C,cAACyQ,GAAD,CAAQ/c,MAAM,aAAd,gBACAqM,EAAA9C,EAAA+C,cAACyQ,GAAD,CAAQ/c,MAAM,gBAAd,sBACAqM,EAAA9C,EAAA+C,cAACyQ,GAAD,CAAQ/c,MAAM,aAAd,gBACAqM,EAAA9C,EAAA+C,cAACyQ,GAAD,CAAQ/c,MAAM,cAAd,4BACAqM,EAAA9C,EAAA+C,cAACyQ,GAAD,CAAQ/c,MAAM,gBAAd,4BACAqM,EAAA9C,EAAA+C,cAACyQ,GAAD,CAAQ/c,MAAM,YAAd,mBAxBJ,YA2BEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,mDACZF,MAAO,CAAE6E,MAAO,KAChBsK,IAAK,SAAAC,GAAK,OAAKhN,EAAKvC,MAAQuP,KA/BhC,YAkCE5Q,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP+B,EAAK1Q,WAAa0Q,EAAKvC,MAAMA,MAAM1N,MACnCiQ,EAAKoG,SAAS,EAAGpG,EAAKD,MAAMqI,WAE9BvH,KAAK,WAELzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIXkgB,EACJ7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACPxH,OAAOwI,SAASiO,UAElBrM,KAAK,WAELzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,YAGf,OACEqP,EAAA9C,EAAA+C,cAAAiL,GAAA,GAAMxN,MAAOA,EAAOmT,MAAOA,GACzB7Q,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAYhb,EACZib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiB,GACjBqF,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOxB,EACPxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKoG,SAASnX,EAAMmZ,IAEtBC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKoG,SAASkC,EAASzH,KAG3BuM,OAAQ,CAAEC,EAAG,IAAMC,EAAG,UAEvB1R,KAAKmE,MAAM6I,YACVxM,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAM6I,WACpBzG,KAAMvG,KAAKsO,eACXrG,SAAU,WACR7D,EAAKlB,SAAS,CAAE8J,YAAY,MAG9BxM,EAAA9C,EAAA+C,cAACkR,GAAD,CACER,IAAI,eACJ9J,IAAKrH,KAAKhM,UACVsV,aAAW,KAIhBtJ,KAAKmE,MAAMsJ,YACVjN,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAMsJ,WACpBxF,SAAU,WACR7D,EAAKlB,SAAS,CAAEuK,YAAY,KAE9BvF,OAAQ,CACN1H,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEsB,IAAI,OACJvB,QAAS,WACP+B,EAAKlB,SAAS,CAAEuK,YAAY,MAHhC,gBAQAjN,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEsB,IAAI,SACJzS,KAAK,UACLwd,QAAS3O,KAAKmE,MAAMwK,QACpBtM,QAASrC,KAAK0O,cAJhB,kBAUFlO,EAAA9C,EAAA+C,cAACkR,GAAD,CACER,IAAI,eACJ3D,WAAYxN,KAAKwN,cAItBxN,KAAKmE,MAAMoL,kBACV/O,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAO8B,KAAK0K,WAAa,uCAAW,2BACpC1C,QAAShI,KAAKmE,MAAMoL,iBACpBtH,SAAU,WACR7D,EAAKlB,SAAS,CAAEqM,kBAAkB,KAEpCrH,OAAQ,KACRrB,MAAM,OAENrG,EAAA9C,EAAA+C,cAACmR,GAAD,CACEjH,SAAU3K,KAAK2K,SACfD,WAAY1K,KAAK0K,cAIvBlK,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAM8L,eACpB1J,KAAMvG,KAAKmQ,eACXlI,SAAU,WACR7D,EAAKlB,SAAS,CAAE+M,gBAAgB,MAGlCzP,EAAA9C,EAAA+C,cAAA,wCACAD,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1N,MAAO6L,KAAKmE,MAAM/O,SAClBiQ,SAAU,SAAAwM,GAAC,OAAIzN,EAAKlB,SAAS,CAAE9N,SAAUyc,EAAEzE,OAAOjZ,oBAve5BqO,gDCf5BsP,eACJ,SAAAA,EAAYtT,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA8R,IACjBvT,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAke,GAAA7O,KAAAjD,KAAMxB,KAQRuT,iBAAmB,SAAAC,GAEjBzT,EAAK2E,SAAS,CACZ8O,cACAC,gBACID,EAAY/gB,QACd+gB,EAAY/gB,OAASsN,EAAKC,MAAM5I,YAAY3E,OAC9CihB,SAAUF,EAAY/gB,SAAWsN,EAAKC,MAAM5I,YAAY3E,UAhBzCsN,EAmBnB4T,iBAAmB,SAAAN,GACjB,IAAIO,EAAO7T,EAAKC,MAAM5I,YAAYiS,IAAI,SAAA5J,GACpC,OAAOA,EAAK9J,QAEdoK,EAAK2E,SACH,CACE8O,YAAaH,EAAEzE,OAAOiF,QAAUD,EAAO,GACvCH,eAAe,EACfC,SAAUL,EAAEzE,OAAOiF,SAErB,WACE9T,EAAKC,MAAMO,KAAKuT,eAAe,CAC7B1c,YAAa2I,EAAK4F,MAAM6N,iBA/BbzT,EAqCnBK,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAyL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA+B,SAAA5B,EAAO8B,EAAKlL,GAAZ,IAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACxBuB,EADwB,CAAAzB,EAAAE,KAAA,YAEdS,EAAKC,MAAM+T,OAFG,CAAA3U,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGjBjI,EAAQ1B,GAHS,OAAAyJ,EAAAgN,GAAAhN,EAAAG,KAAAH,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,EAIjBjH,EAAS1C,EAAOoK,EAAKC,MAAMgU,eAAeze,IAJzB,OAAA6J,EAAAgN,GAAAhN,EAAAG,KAAA,QAKR,KAHb4I,EAFqB/I,EAAAgN,IAKnB1U,QACN5D,EAAA,EAAQkN,QAAQ,4BAChBjB,EAAKC,MAAMiU,cACXlU,EAAKC,MAAMkU,SACXnU,EAAKC,MAAMO,KAAK0P,eAEhBnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAXFhC,EAAAE,KAAA,iBAc3BxL,EAAA,EAAQD,MAAM,4BAda,yBAAAuL,EAAAe,SAAApB,MAA/B,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,KArCAuN,EAAK4F,MAAQ,CACXwO,MAAO,EACPX,YAAa,GACbC,eAAe,EACfC,UAAU,GANK3T,mFA0DjB,GAAIyB,KAAKxB,MAAM+T,QAAUvS,KAAKxB,MAAMgU,eAAeI,MAAO,CACxD,IAAIxI,EAAepK,KAAKxB,MAAMgU,eAAeI,MAAMC,MAAM,KACzD7S,KAAKxB,MAAMO,KAAKuT,eAAe,CAC7B1c,YAAawU,EAAavC,IAAIiL,4CAI3B,IAAA1O,EAAApE,KAAAsH,EACsCtH,KAAKxB,MAAMO,KAAhDsC,EADDiG,EACCjG,kBAAmBkG,EADpBD,EACoBC,cADpBwL,EAE4B/S,KAAKxB,MAAhCgU,EAFDO,EAECP,eAAgBD,EAFjBQ,EAEiBR,OAClB5F,EAAS3M,KAAKxB,MAAMwU,WAAWnL,IAAI,SAAA5J,GAAI,OAC3CuC,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAO8J,EAAKlK,GAAI6P,IAAK3F,EAAKlK,IACtCkK,EAAKvI,QAGV,OACE8K,EAAA9C,EAAA+C,cAAArD,EAAA,GACE+K,SAAU,CAAEC,KAAM,GAClB7G,SAAUvB,KAAKpB,aACfyJ,WAAW,QAEX7H,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,sBACdjH,EAAkB,WAAY,CAC7B7J,MAAO,CACL,CACEgK,UAAU,EACVC,YAAY,EACZnP,QAAS,8CAEX,CAAEoP,IAAK,EAAGpP,QAAS,yCACnB,CAAEqP,IAAK,GAAIrP,QAAS,0CACpB,CACEsP,QAAS,kBACTtP,QAAS,2GAGbkX,aAAc+I,EAASC,EAAe9c,KAAO,IAd9C2L,CAgBCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEC,OAAQtB,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,OAAO6Q,MAAO,CAAEC,MAAO,qBAC1CD,MAAO,CAAE6E,MAAO,OAChB3E,YAAY,qEACZ+Q,WAAUV,MAIhB/R,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,aAAc,CAC/BmI,aAAc+I,EAASC,EAAetc,OAAS,GADhDmL,CAGCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,gBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,mBAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,sBACdjH,EAAkB,YAAa,CAC9B7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,0CACnCkX,aAAc+I,GAAUC,EAAepc,UAFxCiL,CAICb,EAAA9C,EAAA+C,cAAAwQ,GAAA,GAAQjP,MAAO,CAAE6E,MAAO,QAAU3E,YAAY,kCAC3CyK,KAIPnM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACf9H,EAAA9C,EAAA+C,cAAA2S,GAAA,GACEnB,cAAejS,KAAKmE,MAAM8N,cAC1B5M,SAAUrF,KAAKmS,iBACfE,QAASrS,KAAKmE,MAAM+N,UAHtB,gBAOC7Q,EAAkB,cAAe,CAChC7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,iDADpC+O,CAGCb,EAAA9C,EAAA+C,cAAA2S,GAAA,EAAUD,MAAV,CACEE,QAASrT,KAAKxB,MAAM5I,YAEpByP,SAAU,SAAA2M,GAAW,OAAI5N,EAAK2N,iBAAiBC,QAIrDxR,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,QAAS,CAC1B7J,MAAO,CACL,CACEiK,YAAY,EACZnP,QAAS,6EAGbkX,aAAc+I,EAASC,EAAejc,MAAQ,IAP/C8K,CASCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,OAChB3E,YAAY,+EAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,WAAY,CAC7B7J,MAAO,CACL,CACEgK,UAAU,EACVC,YAAY,EACZnP,QAAS,8CAEX,CACEsP,QAAS,gBACTtP,QAAS,+CAGbkX,aAAc+I,GAAUC,EAAec,aAZxCjS,CAaEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,OAAS3E,YAAY,qCAEjD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,eAAKtG,MAAOuQ,EAAS,CAAEhJ,QAAS,QAAW,IACzDlI,EAAkB,WAAY,CAC7B7J,MAAO,CACL,CACEgK,UAAU+Q,EACV9Q,YAAY,EACZnP,QAAS,wCAEX,CAAEoP,IAAK,EAAGpP,QAAS,mCACnB,CAAEqP,IAAK,GAAIrP,QAAS,oCACpB,CACEsP,QAAS,kBACTtP,QAAS,sGAXd+O,CAeCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,WACL6Q,MAAO,CAAE6E,MAAO,OAChB3E,YAAY,kCAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,2BAAOtG,MAAOuQ,EAAS,CAAEhJ,QAAS,QAAW,IAC3DlI,EAAkB,iBAAkB,CACnC7J,MAAO,CACL,CACEgK,UAAU+Q,EACV9Q,YAAY,GAEd,CACEU,UAAW,SAACnB,EAAM7M,EAAO8M,GAClB9M,GACH8M,IAEE9M,IAAUoT,EAAc,YAC1BtG,IAEAA,EAAS,kDAdlBI,CAoBCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,WACL6Q,MAAO,CAAE6E,MAAO,OAChB3E,YAAY,kCAIlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEmL,MAAM,6BACNtG,MAAQuQ,EAA+B,GAAtB,CAAEhJ,QAAS,SAE3BlI,EAAkB,eAAgB,CACjC7J,MAAO,CACL,CACEiK,YAAY,GAEd,CACEU,UAAW,SAACnB,EAAM7M,EAAO8M,GAClB9M,GACH8M,IAEE9M,IAAUoT,EAAc,YAC1BtG,IAEAA,EAAS,kDAblBI,CAmBCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,WACL6Q,MAAO,CAAE6E,MAAO,OAChB3E,YAAY,kFAKlB1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEnR,KAAK,UACLoR,SAAS,SACTjB,UAAU,qBAHZ,yBAlQgBkB,aAgRX+Q,GAFYnW,EAAA,EAAKsF,QAALtF,CAAc0U,ICpB1B0B,eAzPb,SAAAA,EAAYhV,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAwT,IACjBjV,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA4f,GAAAvQ,KAAAjD,KAAMxB,KAWR4M,YAAc,iBAAM,CAClB,CACElN,MAAO,UACPmN,UAAW,MAEb,CACEnN,MAAO,qBACPmN,UAAW,OACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEyR,SAAU,aAAcC,UAAW,cAC9C1F,KAIP,CACE9P,MAAO,eACPmN,UAAW,aAEb,CACEnN,MAAO,2BACPmN,UAAW,SAEb,CACEnN,MAAO,2BACPmN,UAAW,SAEb,CACEnN,MAAO,iCACPmN,UAAW,eAEb,CACEnN,MAAO,2BACPmN,UAAW,aACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEyR,SAAU,aAAcC,UAAW,cAC9C1F,KAIP,CACE9P,MAAO,2BACPmN,UAAW,aACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEyR,SAAU,aAAcC,UAAW,cAC9C1F,KAIP,CACE9P,MAAO,eACPmN,UAAW,SACXsI,MAAO,SACPjG,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YAAgB,IAATuN,EAAa,eAAO,kBAG/B,CACE9P,MAAO,eACPmN,UAAW,SACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKqV,KAAK1f,KAArC,gBACAsM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKzH,cAAc5C,IAAS/C,KAAK,WAA5D,6BA1EWoN,EAkFnBiM,SAlFmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAkFR,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAkK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYtI,EAAanC,EAAMC,GAD/B,OAEa,KADhBkK,EADGI,EAAAG,MAEE7H,OACTqI,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAOrN,EAAOqN,QAGhBvY,EAAA,EAAQD,MAAM,4BARP,wBAAAuL,EAAAe,SAAApB,MAlFQ,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAgGnBuM,aAhGmBlX,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAgGJ,SAAAC,IAAA,IAAA5B,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACQrI,EAAgB8I,EAAK4F,MAAMxJ,YADnC,OACP6C,EADO+B,EAAAxB,KAGbQ,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAO,IALI,wBAAAtL,EAAAZ,SAAAS,MAhGIb,EAyGnBsV,QAzGmBjgB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAyGT,SAAAgB,IAAA,IAAAwG,EAAAnJ,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACUnI,IADV,cACFgR,EADEvG,EAAArC,KAAAqC,EAAAtC,KAAA,EAEalI,IAFb,OAEF4H,EAFE4C,EAAArC,KAGW,IAAf4I,EAAIzQ,QAAkC,IAAlBsH,EAAOtH,SAC7BqI,EAAKyU,WAAarM,EAAI5V,KACtBwN,EAAK3I,YAAc4H,EAAOzM,KAAK8W,IAAI,SAAA5J,GACjC,MAAO,CAAEqK,MAAOrK,EAAKvI,KAAMvB,MAAO8J,EAAKlK,MAEzCwK,EAAK2E,SAAS,CACZ4Q,eAAe,KATX,wBAAA1T,EAAAzB,SAAAwB,MAzGS5B,EAsHnBqV,KAtHmB,eAAA9E,EAAAlb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAsHZ,SAAA4P,EAAM7a,GAAN,IAAAyS,EAAAnJ,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,cACL3G,QAAQC,IAAIlD,GACZqK,EAAKiU,eAAiBte,EAFjB8a,EAAAlR,KAAA,EAGanI,IAHb,cAGCgR,EAHDqI,EAAAjR,KAAAiR,EAAAlR,KAAA,EAIgBlI,IAJhB,OAIC4H,EAJDwR,EAAAjR,KAKc,IAAf4I,EAAIzQ,QAAkC,IAAlBsH,EAAOtH,SAC7BqI,EAAKyU,WAAarM,EAAI5V,KACtBwN,EAAK3I,YAAc4H,EAAOzM,KAAK8W,IAAI,SAAA5J,GACjC,MAAO,CAAEqK,MAAOrK,EAAKvI,KAAMvB,MAAO8J,EAAKlK,MAEzCwK,EAAK2E,SAAS,CACZ6Q,gBAAgB,KAXf,wBAAA/E,EAAArQ,SAAAoQ,MAtHY,gBAAAlO,GAAA,OAAAiO,EAAA/O,MAAAC,KAAAhP,YAAA,GAAAuN,EAqInBzH,cAAgB,SAAA5C,GACdmM,EAAA,EAAMiG,QAAQ,CACZpI,MAAO,eACPqC,QAAS,wCACHgG,KAHM,eAAAyN,EAAApgB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAAA,SAAAgQ,IAAA,IAAAxI,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,cAAAsR,EAAAtR,KAAA,EAIQhH,EAAc5C,EAAOH,IAJ7B,QAIJ4S,EAJIyI,EAAArR,MAKF7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KANZ,wBAAAwP,EAAAzQ,SAAAwQ,MAAA,yBAAA6E,EAAAjU,MAAAC,KAAAhP,YAAA,MApIduN,EAAK0V,aAAe1V,EAAK0V,aAAaC,KAAlBtgB,OAAA4S,GAAA,EAAA5S,CAAA2K,IACpBA,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACVsH,eAAe,EACfC,gBAAgB,GAElBxV,EAAK6M,cAVY7M,4EA6FNM,GACXmB,KAAKkD,SAAS,CAAEvI,WAAYkE,EAAMuO,OAAOjZ,oDAsDzC6L,KAAKwK,SAAS,EAAG,qCAEV,IAAApG,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,uCACZF,MAAO,CAAE6E,MAAO,KAChB1S,MAAO6L,KAAKmE,MAAMxJ,WAClB0K,SAAUrF,KAAKiU,eANnB,YASEzT,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK8K,aAAc7F,KAAK,WAC3CzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,YAVf,YAaEqP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK6T,QAAS5O,KAAK,WACtCzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aADb,6BAMJkgB,MACE7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMxH,OAAOwI,SAASiO,UAAUrM,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIfqP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAO,KACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiBlM,KAAKmE,MAAMqI,SAC5B+E,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKoG,SAASnX,EAAMmZ,IAEtBC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKoG,SAASkC,EAASzH,OAI7BzE,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAM2P,cAEpB7L,SAAU,WACR7D,EAAKlB,SAAS,CAAE4Q,eAAe,KAEjC5L,OAAQ,MAER1H,EAAA9C,EAAA+C,cAACoT,GAAD,CACEb,WAAYhT,KAAKgT,WACjBpd,YAAaoK,KAAKpK,YAClB8c,OAAQ,kBACNtO,EAAKlB,SAAS,CACZ4Q,eAAe,KAGnBrB,YAAa,kBAAMrO,EAAKoG,SAAS,EAAG,QAGvCxK,KAAKmE,MAAM4P,gBACVvT,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAM4P,eAEpB9L,SAAU,WACR7D,EAAKlB,SAAS,CAAE6Q,gBAAgB,KAElC7L,OAAQ,MAER1H,EAAA9C,EAAA+C,cAACoT,GAAD,CACEtB,OAAO,OACPS,WAAYhT,KAAKgT,WACjBpd,YAAaoK,KAAKpK,YAClB4c,eAAgBxS,KAAKwS,eACrBE,OAAQ,kBACNtO,EAAKlB,SAAS,CACZ6Q,gBAAgB,KAGpBtB,YAAa,kBAAMrO,EAAKoG,SAAS,EAAG,gBAjPlBhI,gCCTxB2R,iBACFrC,eACJ,SAAAA,EAAYtT,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA8R,IACjBvT,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAke,GAAA7O,KAAAjD,KAAMxB,KA4FR4V,aAAe,SAAAhW,GACb,OAAOA,EAASyJ,IAAI,SAAA5J,GAClB,OAAKA,EAAKD,SAINwC,EAAA9C,EAAA+C,cAAC0T,GAAD,CAAUvQ,IAAK3F,EAAKlK,GAAImK,MAAOD,EAAKC,MAAMQ,QAAQ,UAAW,KAC1DH,EAAK6V,aAAanW,EAAKD,WAJrBwC,EAAA9C,EAAA+C,cAAC0T,GAAD,CAAUvQ,IAAK3F,EAAKlK,GAAImK,MAAOD,EAAKC,MAAMQ,QAAQ,UAAW,SAhGvDH,EA0GnB8V,SAAW,SAAC1P,EAAcrE,GAAS,IACzBgU,EAAShU,EAATgU,KACAC,EAAiBhW,EAAK4F,MAAtBoQ,aACJD,EAAK9V,MAAMgW,OACbjW,EAAK2E,SAAS,CAAEyB,iBAEhBpG,EAAK2E,SAAS,CACZqR,aAAcD,EAAK9V,MAAMiW,SACrBF,EAAanO,OAAO,SAAAsO,GAAC,OAAIA,IAAMJ,EAAK9V,MAAMmW,WAC1CJ,EAAazO,OAAOwO,EAAK9V,MAAMmW,aAnHtBpW,EAuHnBqW,QAAU,SAACC,EAAavU,GAEtB/B,EAAK2E,SAAS,CACZ2R,YAAaA,EAAYhN,IAAIiL,WA1HdvU,EA6HnBuW,SAAW,SAACP,EAAcjU,GACxB/B,EAAK2E,SAAS,CAAEqR,kBA9HChW,EAiInBK,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAyL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA+B,SAAA5B,EAAO8B,EAAKlL,GAAZ,IAAAuB,EAAAnB,EAAAiD,EAAAzD,EAAA4S,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACxBuB,EADwB,CAAAzB,EAAAE,KAAA,YAErBpI,EAAevB,EAAfuB,KAAMnB,EAASJ,EAATI,KACRiD,EAAQ+G,EAAK4F,MAAM0Q,YACnB9gB,EAAKwK,EAAKC,MAAMgU,eAAiBjU,EAAKC,MAAMgU,eAAeze,GAAK,GACvDwK,EAAKC,MAAM+T,OALG,CAAA3U,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAMjBvG,GAAQ7B,EAAM8B,EAAOjD,GANJ,OAAAqJ,EAAAgN,GAAAhN,EAAAG,KAAAH,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAOjBrG,GAAS/B,EAAM8B,EAAOjD,EAAMR,GAPX,QAAA6J,EAAAgN,GAAAhN,EAAAG,KAAA,QAQR,KAHb4I,EALqB/I,EAAAgN,IAQnB1U,QACN5D,EAAA,EAAQkN,QAAQ,4BAChBjB,EAAKC,MAAMiU,cACXlU,EAAKC,MAAMkU,SACXnU,EAAKC,MAAMO,KAAK0P,cAChBlQ,EAAK2E,SAAS,CACZ2R,YAAa,MAGfviB,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAjBFhC,EAAAE,KAAA,iBAoB3BxL,EAAA,EAAQD,MAAM,4BApBa,yBAAAuL,EAAAe,SAAApB,MAA/B,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,KAjIAuN,EAAK4F,MAAQ,CACXoQ,aAAc,GACd5P,aAAc,GACdkQ,YAAatW,EAAKC,MAAM+T,OACpBhU,EAAKC,MAAMgU,eAAehb,MAAMqb,MAAM,KACtC,GACJkC,mBAAoB,IARLxW,sFAwBjByB,KAAKkD,SAAW,SAACiB,EAAOlD,sCAKxB,IAAM7C,EAAWC,KAAKgG,MAAM3R,aAAa4R,QAAQ,aAC3C0Q,EAAWhV,KAAKoU,aAAahW,GAC3BiD,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBAHD0R,EAI4B/S,KAAKxB,MAAhCgU,EAJDO,EAICP,eAAgBD,EAJjBQ,EAIiBR,OACxB,OACE/R,EAAA9C,EAAA+C,cAAArD,EAAA,GACE+K,SAAU,CAAEC,KAAM,GAClB7G,SAAUvB,KAAKpB,aACfyJ,WAAW,QAEX7H,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,sBACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,8CAEX,CAAEoP,IAAK,EAAGpP,QAAS,0CAErBkX,aAAc+I,EAASC,EAAe9c,KAAO,IAR9C2L,CAUCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEC,OAAQtB,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,OAAO6Q,MAAO,CAAEC,MAAO,qBAC1CD,MAAO,CAAE6E,MAAO,WAItBrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACf9H,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAAwU,GAAA,GACEC,WAAS,EACTH,mBAAoBxC,EAASC,EAAehb,MAAMqb,MAAM,KAAO,GAC/D0B,aAAcvU,KAAKmE,MAAMoQ,aACzB5P,aAAc3E,KAAKmE,MAAMQ,aACzB0P,SAAUrU,KAAKqU,SACfO,QAAS5U,KAAK4U,QACdE,SAAU9U,KAAK8U,UAEdE,IAGLxU,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CAAC,CAAEmK,IAAK,IAAKrP,QAAS,0BAC7BkX,aAAc+I,EAASC,EAAe2C,YAAc,IAFrD9T,CAICb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO4H,SAAP,CACEvH,YAAY,iCACZwH,SAAU,CAAEC,QAAS,EAAGC,QAAS,OAIvCpJ,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEnR,KAAK,UACLoR,SAAS,SACTjB,UAAU,qBAHZ,yBAnFgBkB,aAgKX+Q,GAFYnW,EAAA,EAAKsF,QAALtF,CAAc0U,ICS1BsD,eArKb,SAAAA,EAAY5W,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAoV,IACjB7W,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAwhB,GAAAnS,KAAAjD,KAAMxB,KAUR4M,YAAc,iBAAM,CAClB,CACElN,MAAO,UACPmN,UAAW,KACXxE,MAAO,IAET,CACE3I,MAAO,qBACPmN,UAAW,OACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEyR,SAAU,aAAcC,UAAW,cAC9C1F,KAIP,CACE9P,MAAO,eACPmN,UAAW,eAEb,CACEnN,MAAO,eACPmN,UAAW,SACXsI,MAAO,SACPjG,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YAAgB,IAATuN,EAAa,qBAAQ,kBAGhC,CACE9P,MAAO,eACPmN,UAAW,SACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKqV,KAAK1f,KAArC,qBA3CWqK,EAgDnBiM,SAhDmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAgDR,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAkK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYxG,GAAYjE,EAAMC,GAD9B,OAEa,KADhBkK,EADGI,EAAAG,MAEE7H,OACTqI,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAOrN,EAAOqN,QAGhBvY,EAAA,EAAQD,MAAM,4BARP,wBAAAuL,EAAAe,SAAApB,MAhDQ,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EA2DnBsV,QA3DmBjgB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA2DT,SAAAC,IAAA,OAAA3B,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAKRS,EAAK2E,SAAS,CACZ4Q,eAAe,IANT,wBAAAvU,EAAAZ,SAAAS,MA3DSb,EAqEnBqV,KArEmB,eAAA1T,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAqEZ,SAAAgB,EAAMjM,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OAELS,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CACZ6Q,gBAAgB,IAJb,wBAAA3T,EAAAzB,SAAAwB,MArEY,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACVsH,eAAe,EACfC,gBAAgB,GAElBxV,EAAK6M,cATY7M,mFA6EjByB,KAAKwK,SAAS,EAAG,qCAEV,IAAApG,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK6T,QAAS5O,KAAK,WACtCzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aADb,6BAMJkgB,MACE7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMxH,OAAOwI,SAASiO,UAAUrM,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIfqP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAO,KACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACda,WAAY,CACVC,gBAAiBlM,KAAKmE,MAAMqI,SAC5B+E,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAU,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACVE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKoG,SAASnX,EAAMmZ,GACpBpI,EAAKlB,SAAS,CACZsJ,SAAUA,KAGdC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKoG,SAASkC,EAASzH,OAK7BzE,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAM2P,cAEpB7L,SAAU,WACR7D,EAAKlB,SAAS,CAAE4Q,eAAe,KAEjC5L,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAC4U,GAAD,CACE3C,OAAQ,kBACNtO,EAAKlB,SAAS,CACZ4Q,eAAe,KAGnBrB,YAAa,kBAAMrO,EAAKoG,SAAS,EAAG,QAGvCxK,KAAKmE,MAAM4P,gBACVvT,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAM4P,eAEpB9L,SAAU,WACR7D,EAAKlB,SAAS,CAAE6Q,gBAAgB,KAElC7L,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAC4U,GAAD,CACE9C,OAAO,OACPC,eAAgBxS,KAAKwS,eACrBE,OAAQ,kBACNtO,EAAKlB,SAAS,CACZ6Q,gBAAgB,KAGpBtB,YAAa,kBAAMrO,EAAKoG,SAAS,EAAG,gBA7J/BhI,aC4GJ8S,eA5Gb,SAAAA,EAAY9W,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAsV,IACjB/W,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA0hB,GAAArS,KAAAjD,KAAMxB,KAyCR4M,YAAc,WACZ,MAAO,CACL,CACElN,MAAO,iBACPmN,UAAW,YAEb,CACEnN,MAAO,UACPmN,UAAW,WAEb,CACEnN,MAAO,eACPmN,UAAW,UAEb,CACEnN,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,IAEV,CACE5K,MAAO,eACPmN,UAAW,SACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,MAAa,MAATkC,GAAyB,MAATA,GAAyB,MAATA,EAEhCxN,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE2C,KAAK,QACL5C,QAAS,kBAAM9D,EAAKgX,oBAAoBrhB,KAF1C,6CAQF,MA3ESqK,EAiFnB0B,YAjFmBrM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAiFL,SAAA5B,IAAA,IAAAoJ,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACM7D,GAChB,EACA,GACAsE,EAAK4F,MAAMnP,QACXuJ,EAAK4F,MAAMjK,UALD,OAOO,KANbyM,EADM/I,EAAAG,MAOJ7H,OACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,OAGZuB,EAAA,EAAQD,MAAM,wCAZJ,wBAAAuL,EAAAe,SAAApB,MAjFKgB,EAgGnBgX,oBAhGmB,eAAAtW,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAgGG,SAAAC,EAAMlL,GAAN,IAAAc,EAAAkF,EAAAyM,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACd9I,EAAsBd,EAAtBc,QAASkF,EAAahG,EAAbgG,SADKqF,EAAAzB,KAAA,EAEF3D,GAAYnF,EAASkF,GAFnB,OAGD,KADbyM,EAFcpH,EAAAxB,MAGZ7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KAEpBtN,EAAA,EAAQD,MAAMsU,EAAI/G,KAEpBrB,EAAK0B,cARe,wBAAAV,EAAAZ,SAAAS,MAhGH,gBAAAS,GAAA,OAAAZ,EAAAc,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXpT,KAAM,GACNiE,QAAS,GACTkF,SAAU,IALKqE,wEAQV,IAAA6F,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,UACZF,MAAO,CAAE6E,MAAO,KAChB1S,MAAO6L,KAAKmE,MAAMnP,QAClBqQ,SAAU,SAAAwM,GAAC,OAAIzN,EAAKlB,SAAS,CAAElO,QAAS6c,EAAEzE,OAAOjZ,WANrD,YASEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,iBACZF,MAAO,CAAE6E,MAAO,KAChB1S,MAAO6L,KAAKmE,MAAMjK,SAClBmL,SAAU,SAAAwM,GAAC,OAAIzN,EAAKlB,SAAS,CAAEhJ,SAAU2X,EAAEzE,OAAOjZ,WAdtD,YAiBEqM,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQD,QAASrC,KAAKC,aACpBO,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,YAEbqP,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,kBAtCOzC,aC8bPgT,eAtbb,SAAAA,EAAYhX,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAwV,IACjBjX,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA4hB,GAAAvS,KAAAjD,KAAMxB,KAiBRgM,SAlBmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAkBR,SAAA5B,EAAOlK,EAAMC,EAAO0G,GAApB,IAAAwD,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY/D,GAAc1G,EAAMC,EAAO0G,GADvC,OAEa,KADhBwD,EADGI,EAAAG,MAEE7H,QACTqI,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAO5B,SAASzL,EAAOqN,SALlB,wBAAAjN,EAAAe,SAAApB,MAlBQ,gBAAAsC,EAAAC,EAAAe,GAAA,OAAA4J,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EA2BnBkX,sBA3BmB7hB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA2BK,SAAAC,IAAA,OAAA3B,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACtBS,EAAK2E,SAAS,CAAEwS,aAAa,IADP,wBAAAnW,EAAAZ,SAAAS,MA3BLb,EA8BnBuM,aAAe,SAACzX,EAAMC,GAEpB,IAAI0G,EAAOpG,OAAAc,EAAA,EAAAd,CAAA,GACN2K,EAAKvE,SAEY,MAAlBuE,EAAK9K,UAAsC,MAAlB8K,EAAK9K,SAChCuG,EAAQ2b,UAAYpX,EAAK9K,SAChB8K,EAAK9K,WACduG,EAAQuE,EAAK9K,UAAY8K,EAAK7K,YAEhC6K,EAAKiM,SAASnX,EAAMC,EAAO0G,IAxCVuE,EA0CnBqX,SAAW,WACT,IAAI7kB,EAAI6C,OAAAc,EAAA,EAAAd,CAAA,GACH2K,EAAKvE,QADF,CAENW,WAAY4D,EAAK7K,WACjBkH,SAAU2D,EAAK9K,WAEjB6G,GAAavJ,IAhDIwN,EAuNnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,iBACPmN,UAAW,WACXxE,MAAO,KAET,CACE3I,MAAO,UACPmN,UAAW,WAEb,CACEnN,MAAO,eACPmN,UAAW,aAEb,CACEnN,MAAO,2BACPmN,UAAW,gBAEb,CACEnN,MAAO,2BACPmN,UAAW,iBAEb,CACEnN,MAAO,2BACPmN,UAAW,eACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,IAAI+J,EACJ,OAAQ7H,GACN,IAAK,IACH6H,EAAO3hB,EAAO4hB,WACd,MACF,IAAK,IACHD,EAAO,iBACP,MACF,IAAK,KACHA,EAAO,SACP,MACF,IAAK,KACHA,EAAO,eACP,MACF,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,MAC5BA,EAAO,eACP,MACF,QACEA,EAAO,GAGX,OAAOrV,EAAA9C,EAAA+C,cAAA,YAAOoV,KAGlB,CACE3X,MAAO,2BACPmN,UAAW,OACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,IAAI+J,EACJ,OAAQ7H,GACN,IAAK,IACH6H,EAAO,SACP,MACF,IAAK,IACHA,EAAO,iCACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,QACEA,EAAO,GAGX,OAAOrV,EAAA9C,EAAA+C,cAAA,YAAOoV,KAGlB,CACE3X,MAAO,2BACPmN,UAAW,SACXC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAER,OAASqO,EAAErO,QAC/BwQ,OAAQ,SAAAM,GAEN,OADAA,EAAO/E,SAAS+E,GAAM+H,QAAQ,GACvBvV,EAAA9C,EAAA+C,cAAA,YAAOuN,KAGlB,CACE9P,MAAO,2BACPmN,UAAW,iBACXC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEsY,eAAiBzK,EAAEyK,gBACvCtI,OAAQ,SAAAM,GAEN,OADAA,EAAO/E,SAAS+E,GAAM+H,QAAQ,GACvBvV,EAAA9C,EAAA+C,cAAA,YAAOuN,KAGlB,CACE9P,MAAO,2BACPmN,UAAW,SACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,IAAI+J,EACJ,OAAQ7H,GACN,IAAK,IACH6H,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,uCACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,uCACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,QACEA,EAAO,GAGX,OAAOrV,EAAA9C,EAAA+C,cAAA,YAAOoV,KAGlB,CACE3X,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,GACRjC,MAAO,IACPyE,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEuY,WAAa1K,EAAE0K,aAErC,CACE/X,MAAO,2BACPmN,UAAW,aACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,MAAa,MAATkC,GAAiBA,EAEPlF,GAAYkF,GADjB,IAGX1C,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEwY,WAAa3K,EAAE2K,aAErC,CACEhY,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,MAAsB,MAAlB5X,EAAOgC,OAEPsK,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQ5C,QAAS,kBAAM9D,EAAKqV,KAAK1f,KAAlD,qBAKF,IAIN,CACEgK,MAAO,eACPmN,UAAW,YAvZI9M,EA0ZnBqV,KAAO,SAAA1f,GACLqK,EAAK2E,SAAS,CACZiT,YAAY,EACZC,YAAaliB,EAAOc,QACpBqhB,UAAWniB,EAAOgJ,SAEpBqB,EAAKvJ,QAAUd,EAAOc,QACtBuJ,EAAKrE,SAAWhG,EAAOgG,SACvBqE,EAAK+X,SAAWpiB,EAAO/C,MAlaNoN,EAoanBgY,YApamB3iB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAoaL,SAAAgB,IAAA,IAAAwG,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACMzD,GAChBkE,EAAKvJ,QACLuJ,EAAKrE,SACLqE,EAAK+X,UAJK,OAMO,KALb3P,EADMvG,EAAArC,MAMJ7H,QACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KACpBrB,EAAK2E,SAAS,CACZiT,YAAY,IAEd5X,EAAKiM,SAAS,EAAGjM,EAAKiO,WAEtBla,EAAA,EAAQD,MAAMsU,EAAI/G,KAbR,wBAAAQ,EAAAzB,SAAAwB,MAlaZ5B,EAAKvE,QAAU,CACbQ,WAAY,GACZC,SAAU,GACVC,aAAc,GACdvJ,KAAM,IAERoN,EAAK9K,SAAW,GAChB8K,EAAK7K,WAAa,GAClB6K,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACVkJ,aAAa,EACbS,YAAY,GAfG5X,mFAmDjByB,KAAKwK,SAAS,EAAG,qCAEV,IAAApG,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE/O,YAAY,qBACZF,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAK3Q,SAAWU,IAEpCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,YAArB,kBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,WAArB,WACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,6BATJ,YAYEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,uCACZF,MAAO,CAAE6E,MAAO,KAChBxB,SAAU,SAAAwM,GAAC,OAAKzN,EAAK1Q,WAAame,EAAEzE,OAAOjZ,SAhB/C,YAmBEqM,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACXjD,EAAKpK,QAAQQ,WAAa6M,EAAI,GAC9BjD,EAAKpK,QAAQS,SAAW4M,EAAI,MAtBlC,YA0BE7G,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE7G,aAAa,GACbpI,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAKpK,QAAQU,aAAevG,IAEhDqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,IAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,gBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,wCACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,wCACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,wCACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,MAArB,wCACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,MAArB,6BAzCJ,YA4CEqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE7G,aAAa,GACbpI,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAKpK,QAAQ7I,KAAOgD,IAExCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,IAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,gBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,UACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,kCACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,6BA1DJ,YA6DEqM,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,kBAAM+B,EAAK0G,aAAa,EAAG,KACpC7F,KAAK,WAELzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,YAjEf,aAqEAqP,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEI,UAAW,KACvB5B,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKyV,sBAAuBxQ,KAAK,WACpDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,WADb,0CAONkgB,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAEwU,MAAO,SAChBnU,QAAS,kBAAMxH,OAAOwI,SAASiO,UAC/BvP,KAAK,SACLkD,KAAK,YAEPzE,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,UACLjD,MAAO,CAAEwU,MAAO,SAChBnU,QAASrC,KAAK4V,SACd7T,KAAK,eAKXvB,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACR3G,KAAK,QACL4G,OAAO,KACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACda,WAAY,CACVC,gBAAiBlM,KAAKmE,MAAMqI,SAC5B+E,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAK0G,aAAazX,EAAMmZ,IAE1BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAK0G,aAAa4B,EAASzH,KAG/BuM,OAAQ,CAAEC,EAAG,OAEfjR,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,uCACN8J,QAAShI,KAAKmE,MAAMuR,YACpBzN,SAAU,WACR7D,EAAKlB,SAAS,CAAEwS,aAAa,KAE/BxN,OAAQ,KACRrB,MAAM,OAENrG,EAAA9C,EAAA+C,cAACgW,GAAD,OAEFjW,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACN8J,QAAShI,KAAKmE,MAAMgS,WACpBlO,SAAU,WACR7D,EAAKlB,SAAS,CAAEiT,YAAY,KAE9BjO,OAAQ,KACRrB,MAAM,OAENrG,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,kCAAWT,KAAKmE,MAAMiS,aACtB5V,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAA,gCAAST,KAAKmE,MAAMkS,WACpB7V,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAA,wDACSD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,WAAb,gBAAmC,IAC1CqP,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUkR,QAASrC,KAAKuW,aAArC,2BA/MW/T,aCRnBsP,eACJ,SAAAA,EAAYtT,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA8R,IACjBvT,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAke,GAAA7O,KAAAjD,KAAMxB,KA0KRI,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAyL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA+B,SAAA5B,EAAO8B,EAAKlL,GAAZ,IAAAJ,EAAA4S,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACzB/J,EAAKwK,EAAKC,MAAMgU,eAAiBjU,EAAKC,MAAMgU,eAAeze,GAAK,GAC/DsL,EAFwB,CAAAzB,EAAAE,KAAA,YAGdS,EAAKC,MAAM+T,OAHG,CAAA3U,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAIjB9C,GAAW7G,GAJM,OAAAyJ,EAAAgN,GAAAhN,EAAAG,KAAAH,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,GAKjB7C,GAAe9G,EAAMJ,GALJ,QAAA6J,EAAAgN,GAAAhN,EAAAG,KAAA,QAMR,KAHb4I,EAHqB/I,EAAAgN,IAMnB1U,QACN5D,EAAA,EAAQkN,QAAQ,4BAChBjB,EAAKC,MAAMiU,cACXlU,EAAKC,MAAMkU,SACXnU,EAAKC,MAAMO,KAAK0P,eAEhBnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAZFhC,EAAAE,KAAA,iBAe3BxL,EAAA,EAAQD,MAAM,4BAfa,yBAAAuL,EAAAe,SAAApB,MAA/B,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,KA3KAuN,EAAK4F,MAAQ,GAFI5F,sFAiBjByB,KAAKkD,SAAW,SAACiB,EAAOlD,sCAIjB,IACCI,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBADD0R,EAE4B/S,KAAKxB,MAAhCgU,EAFDO,EAECP,eAAgBD,EAFjBQ,EAEiBR,OACxB,OACE/R,EAAA9C,EAAA+C,cAAArD,EAAA,GACE+K,SAAU,CAAEC,KAAM,GAClBsO,WAAY,CAAEtO,KAAM,IACpB7G,SAAUvB,KAAKpB,cAEf4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAASC,EAAe9c,KAAO,IAP9C2L,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,8BACdjH,EAAkB,aAAc,CAC/B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAASC,EAAe/W,WAAa,IAPpD4F,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,YAAa,CAC9B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAASC,EAAemE,UAAY,IAPnDtV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,SAAU,CAC3B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAAStJ,SAASuJ,EAAetc,QAAU,GAP1DmL,CASCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,gBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,mBAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,WAAY,CAC7B7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,gDACnCkX,aAAc+I,GAAUC,EAAeoE,UAFxCvV,CAICb,EAAA9C,EAAA+C,cAAAwQ,GAAA,GAAQjP,MAAO,CAAE6E,MAAO,QAAU3E,YAAY,wCAC5C1B,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,wBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,kCACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,kBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,MAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,MAArB,qCAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,oDACdjH,EAAkB,aAAc,CAC/B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAASC,EAAeqE,WAAa,IAPpDxV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,oDACdjH,EAAkB,aAAc,CAC/B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAASC,EAAesE,WAAa,IAPpDzV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,cAAe,CAChC7J,MAAO,CACL,CACEgK,UAAU,EACVC,YAAY,EACZnP,QAAS,+CAGbkX,aAAc+I,GAAUC,EAAeuE,aARxC1V,CASEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CACL,CACEgK,UAAU,EACVC,YAAY,EACZnP,QAAS,+CAGbkX,aAAc+I,GAAUC,EAAewE,MARxC3V,CASEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,yCACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,GAAUC,EAAeyE,MAPxC5V,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,OAAQ,CACzBmI,aAAc+I,EAASC,EAAe0E,KAAO,KAD9C7V,CAEEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAG5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEnR,KAAK,UACLoR,SAAS,SACTjB,UAAU,qBAHZ,yBAjKgBkB,aAqMX+Q,GAFYnW,EAAA,EAAKsF,QAALtF,CAAc0U,ICiF1BqF,eAhRb,SAAAA,EAAY3Y,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAmX,IACjB5Y,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAujB,GAAAlU,KAAAjD,KAAMxB,KAWRgM,SAZmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAYR,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAkK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY/C,GAAe1H,EAAMC,GADjC,OAEa,KADhBkK,EADGI,EAAAG,MAEE7H,QAAgBsH,EAAOzM,KAChCwN,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAOrN,EAAOqN,QAGhBvY,EAAA,EAAQD,MAAM,4BARP,wBAAAuL,EAAAe,SAAApB,MAZQ,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAuBnBuM,aAvBmBlX,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAuBJ,SAAAC,IAAA,IAAAuH,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACK/C,GAAe,EAAG,GAAIwD,EAAK4F,MAAMxJ,YADtC,OAEM,KADbgM,EADOpH,EAAAxB,MAEL7H,OACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KACV8Z,MAAO5B,SAAStC,EAAIkE,SAGtBvY,EAAA,EAAQD,MAAM,4BARH,wBAAAkN,EAAAZ,SAAAS,MAvBIb,EAkCnBsV,QAAU,WACRtV,EAAK2E,SAAS,CACZ4Q,eAAe,KApCAvV,EAuCnBqV,KAvCmB,eAAA1T,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAuCZ,SAAAgB,EAAMjM,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACLS,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CACZ6Q,gBAAgB,IAHb,wBAAA3T,EAAAzB,SAAAwB,MAvCY,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EA6CnBkU,YAAc,WACZlU,EAAK2E,SAAS,CACZnS,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACV7R,WAAY,GACZmZ,eAAe,EACfC,gBAAgB,IAElBxV,EAAKiM,SAAS,EAAG,KAtDAjM,EA4JnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,KACPmN,UAAW,KACXxE,MAAO,IAET,CACE3I,MAAO,2BACPmN,UAAW,OACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,YACXxE,MAAO,KAET,CACE3I,MAAO,wCACPmN,UAAW,aACXxE,MAAO,KAET,CACE3I,MAAO,wCACPmN,UAAW,aACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,OACXxE,MAAO,KAET,CACE3I,MAAO,8CACPmN,UAAW,OACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,cACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,WACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,IAAI+J,EACJ,OAAQ7H,GACN,IAAK,IACH6H,EAAO,uBACP,MACF,IAAK,IACHA,EAAO,iCACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,iBACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,IAAK,KACHA,EAAO,iCACP,MACF,QACEA,EAAO,GAGX,OAAOrV,EAAA9C,EAAA+C,cAAA,YAAOoV,KAGlB,CACE3X,MAAO,eACPmN,UAAW,SACXxE,MAAO,GACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,OAAOtL,EAAA9C,EAAA+C,cAAA,YAAgB,MAATuN,EAAe,eAAO,kBAGxC,CACE9P,MAAO,2BACP2I,MAAO,IACPwE,UAAW,QAEb,CACEnN,MAAO,2BACPmN,UAAW,aACXxE,MAAO,IACP6G,OAAQ5E,IAEV,CACE5K,MAAO,2BACPmN,UAAW,aACXxE,MAAO,IACP6G,OAAQ5E,IAEV,CACE5K,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKqV,KAAK1f,KAArC,qBAvQNqK,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACV7R,WAAY,GACZmZ,eAAe,EACfC,gBAAgB,GAElBxV,EAAK6M,cAVY7M,mFAyDjByB,KAAKwK,SAAS,EAAG,qCAEV,IAAApG,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,6CACZF,MAAO,CAAE6E,MAAO,KAChB1S,MAAO6L,KAAKmE,MAAMxJ,WAClB0K,SAAU,SAAAwM,GAAC,OAAIzN,EAAKlB,SAAS,CAAEvI,WAAYkX,EAAEzE,OAAOjZ,WANxD,YASEqM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK8K,cACxBtK,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,YAVf,YAaEqP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK6T,SACxBrT,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aADb,iBAMJkgB,MACE7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMxH,OAAOwI,SAASiO,WACzC9Q,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIfqP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAO,KACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiBlM,KAAKmE,MAAMqI,SAC5B+E,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKoG,SAASnX,EAAMmZ,GACpBpI,EAAKlB,SAAS,CACZsJ,SAAUA,KAGdC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKoG,SAASkC,EAASzH,KAG3BuM,OAAQ,CAAEC,EAAG,KAAMC,EAAG,UAExBlR,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAM2P,cAEpB7L,SAAU,WACR7D,EAAKlB,SAAS,CAAE4Q,eAAe,KAEjC5L,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAC2W,GAAD,CACE1E,OAAQ,kBACNtO,EAAKlB,SAAS,CACZ4Q,eAAe,KAGnBrB,YAAazS,KAAKyS,eAGrBzS,KAAKmE,MAAM4P,gBACVvT,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACN8J,QAAShI,KAAKmE,MAAM4P,eAEpB9L,SAAU,WACR7D,EAAKlB,SAAS,CAAE6Q,gBAAgB,KAElC7L,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAC2W,GAAD,CACE7E,QAAM,EACNC,eAAgBxS,KAAKwS,eACrBE,OAAQ,kBACNtO,EAAKlB,SAAS,CACZ6Q,gBAAgB,KAGpBtB,YAAa,kBAAMrO,EAAKoG,SAAS,EAAG,gBAtJvBhI,aCHrBsP,eACJ,SAAAA,EAAYtT,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA8R,IACjBvT,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAke,GAAA7O,KAAAjD,KAAMxB,KA+HRI,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAyL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA+B,SAAA5B,EAAO8B,EAAKlL,GAAZ,IAAAJ,EAAA4S,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACzB/J,EAAKwK,EAAKC,MAAMgU,eAAiBjU,EAAKC,MAAMgU,eAAeze,GAAK,GAC/DsL,EAFwB,CAAAzB,EAAAE,KAAA,YAGdS,EAAKC,MAAM+T,OAHG,CAAA3U,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAIjB3C,GAAahH,GAJI,OAAAyJ,EAAAgN,GAAAhN,EAAAG,KAAAH,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,GAKjB3C,GAAahH,EAAOJ,GALH,QAAA6J,EAAAgN,GAAAhN,EAAAG,KAAA,QAMR,KAHb4I,EAHqB/I,EAAAgN,IAMnB1U,QACN5D,EAAA,EAAQkN,QAAQ,4BAAUmH,EAAI/G,KAC9BrB,EAAKC,MAAMiU,cACXlU,EAAKC,MAAMkU,SACXnU,EAAKC,MAAMO,KAAK0P,eAEhBnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAZFhC,EAAAE,KAAA,iBAe3BxL,EAAA,EAAQD,MAAM,4BAfa,yBAAAuL,EAAAe,SAAApB,MAA/B,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,KAhIAuN,EAAK4F,MAAQ,GAFI5F,sFAiBjByB,KAAKkD,SAAW,SAACiB,EAAOlD,sCAIjB,IACCI,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBADD0R,EAE4B/S,KAAKxB,MAAhCgU,EAFDO,EAECP,eAAgBD,EAFjBQ,EAEiBR,OACxB,OACE/R,EAAA9C,EAAA+C,cAAArD,EAAA,GACE+K,SAAU,CAAEC,KAAM,GAClBsO,WAAY,CAAEtO,KAAM,IACpB7G,SAAUvB,KAAKpB,cAEf4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,sBACdjH,EAAkB,YAAa,CAC9B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAASC,EAAe6E,UAAY,IAPnDhW,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,YAAa,CAC9B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAASC,EAAe8E,UAAY,IAPnDjW,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,WAAY,CAC7B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,wCAEX,CACEoP,IAAK,GACLC,IAAK,GACLrP,QAAS,0DAGbkX,aAAc+I,EAASC,EAAe+E,SAAW,IAZlDlW,CAaEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAAStJ,SAASuJ,EAAerhB,MAAQ,GAPxDkQ,CASCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,sBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,yBAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,SAAU,CAC3B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAAStJ,SAASuJ,EAAetc,QAAU,GAP1DmL,CASCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,gBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,sBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,mBAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,eAAgB,GAAlCA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOK,YAAY,uCAASF,MAAO,CAAE6E,MAAO,WAGhDrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,iBAAkB,GAApCA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOK,YAAY,uCAASF,MAAO,CAAE6E,MAAO,WAGhDrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,uBACdjH,EAAkB,SAAU,GAA5BA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOK,YAAY,uCAASF,MAAO,CAAE6E,MAAO,WAGhDrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWuZ,WAAY,CAAEc,OAAQ,KAC/BhX,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEnR,KAAK,UACLoR,SAAS,SACTjB,UAAU,qBAHZ,yBAtHgBkB,aA0JX+Q,GAFYnW,EAAA,EAAKsF,QAALtF,CAAc0U,IC+D1B2F,eApNb,SAAAA,EAAYjZ,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAyX,IACjBlZ,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA6jB,GAAAxU,KAAAjD,KAAMxB,KAWRgM,SAZmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAYR,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAkK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY5C,GAAS7H,EAAMC,GAD3B,OAEa,KADhBkK,EADGI,EAAAG,MAEE7H,OACTqI,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAOrN,EAAOqN,QAGhBvY,EAAA,EAAQD,MAAM,4BAAUmL,EAAOoC,KARxB,wBAAAhC,EAAAe,SAAApB,MAZQ,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAuBnBsV,QAAU,WACRtV,EAAK2E,SAAS,CACZ4Q,eAAe,KAzBAvV,EA4BnBqV,KA5BmB,eAAA3U,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA4BZ,SAAAC,EAAMlL,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAELS,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CACZ6Q,gBAAgB,IAJb,wBAAAxU,EAAAZ,SAAAS,MA5BY,gBAAAyB,GAAA,OAAA5B,EAAAc,MAAAC,KAAAhP,YAAA,GAAAuN,EAmCnBmZ,OAnCmB,eAAAxX,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAmCV,SAAAgB,EAAMjM,GAAN,IAAAsJ,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACc1C,GAAelH,EAAOH,IADpC,OAEe,KADhByJ,EADC4C,EAAArC,MAEI7H,QACT5D,EAAA,EAAQkN,QAAQhC,EAAOoC,KACvBrB,EAAKkU,YAAY,EAAG,KAEpBngB,EAAA,EAAQD,MAAM,4BAAUmL,EAAOoC,KAN1B,wBAAAQ,EAAAzB,SAAAwB,MAnCU,gBAAAW,GAAA,OAAAZ,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EA4CnBkU,YAAc,WACZlU,EAAK2E,SAAS,CACZnS,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACV7R,WAAY,GACZmZ,eAAe,EACfC,gBAAgB,IAElBxV,EAAKiM,SAAS,EAAG,KArDAjM,EA+InB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,KACPmN,UAAW,KACXxE,MAAO,IAET,CACE3I,MAAO,iCACPmN,UAAW,OACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YAAgB,MAATuN,EAAe,qBAAQ,wBAGlC,CACE9P,MAAO,2BACPmN,UAAW,WACXxE,MAAO,KAET,CACE3I,MAAO,iCACPmN,UAAW,YACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEyR,SAAU,aAAcC,UAAW,cAC9C1F,KAIP,CACE9P,MAAO,2BACPmN,UAAW,YACXxE,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,SACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YAAgB,MAATuN,EAAe,eAAgB,MAATA,EAAe,qBAAQ,kBAGxD,CACE9P,MAAO,2BACPmN,UAAW,aACXxE,MAAO,IACP6G,OAAQ5E,IAEV,CACE5K,MAAO,eACPmN,UAAW,GACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKqV,KAAK1f,KAArC,gBACAsM,EAAA9C,EAAA+C,cAAA8P,GAAA,GACErS,MAAM,uCACNsS,UAAW,kBAAMjS,EAAKmZ,OAAOxjB,IAC7Boc,OAAO,eACPG,WAAW,gBAEXjQ,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY5T,KAAK,UAAjB,sBA1MRoN,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACV7R,WAAY,GACZmZ,eAAe,EACfC,gBAAgB,GAElBxV,EAAK6M,cAVY7M,mFAwDjByB,KAAKwK,SAAS,EAAG,qCAEV,IAAApG,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK6T,SACxBrT,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aADb,iBAMJkgB,MACE7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMxH,OAAOwI,SAASiO,WACzC9Q,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIfqP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAO,KACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiBlM,KAAKmE,MAAMqI,SAC5B+E,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKoG,SAASnX,EAAMmZ,GACpBpI,EAAKlB,SAAS,CACZsJ,SAAUA,KAGdC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKoG,SAASkC,EAASzH,KAG3BuM,OAAQ,CAAEC,EAAG,IAAMC,EAAG,UAExBlR,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAM2P,cAEpB7L,SAAU,WACR7D,EAAKlB,SAAS,CAAE4Q,eAAe,KAEjC5L,OAAQ,MAER1H,EAAA9C,EAAA+C,cAACkX,GAAD,CACEjF,OAAQ,kBACNtO,EAAKlB,SAAS,CACZ4Q,eAAe,KAGnBrB,YAAazS,KAAKyS,eAGrBzS,KAAKmE,MAAM4P,gBACVvT,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAM4P,eAEpB9L,SAAU,WACR7D,EAAKlB,SAAS,CAAE6Q,gBAAgB,KAElC7L,OAAQ,MAER1H,EAAA9C,EAAA+C,cAACkX,GAAD,CACEpF,QAAM,EACNC,eAAgBxS,KAAKwS,eACrBE,OAAQ,kBACNtO,EAAKlB,SAAS,CACZ6Q,gBAAgB,KAGpBtB,YAAa,kBAAMrO,EAAKoG,SAAS,EAAG,gBAzItBhI,aCsSboV,eA1Rb,SAAAA,EAAYpZ,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA4X,IACjBrZ,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAgkB,GAAA3U,KAAAjD,KAAMxB,KAkBRgM,SAnBmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAmBR,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAkK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYzC,GACnBhI,EACAC,EACAiL,EAAK4F,MAAM3J,WACX+D,EAAK4F,MAAM1J,SACX8D,EAAK7D,aACL6D,EAAK9K,SACL8K,EAAK7K,YARE,OACH8J,EADGI,EAAAG,KAUTQ,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAO5B,SAASzL,EAAOqN,SAZhB,wBAAAjN,EAAAe,SAAApB,MAnBQ,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAqCnBqX,SAAW,WACTtb,GAAaiE,EAAK4F,QAtCD5F,EA2InB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,iBACPmN,UAAW,WACXxE,MAAO,KAET,CACE3I,MAAO,UACPmN,UAAW,UACXxE,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,YACXxE,MAAO,KAET,CACE3I,MAAO,iBACPmN,UAAW,aACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,eACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,SACXxE,MAAO,IACPyE,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAER,OAASqO,EAAErO,SAEjC,CACEgB,MAAO,2BACPmN,UAAW,iBACXxE,MAAO,IACPyE,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEsY,eAAiBzK,EAAEyK,iBAEzC,CACE9X,MAAO,eACPmN,UAAW,SACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,IAAI+J,EACJ,OAAQ7H,GACN,IAAK,IACH6H,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,uCACP,MACF,IAAK,IACHA,EAAO,2BACP,MACF,IAAK,IACHA,EAAO,uCACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,IAAK,KACHA,EAAO,2BACP,MACF,QACEA,EAAO,GAGX,OAAOrV,EAAA9C,EAAA+C,cAAA,YAAOoV,KAGlB,CACE3X,MAAO,2BACPmN,UAAW,aACXxE,MAAO,IACP6G,OAAQ5E,GACRwC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEuY,WAAa1K,EAAE0K,aAErC,CACE/X,MAAO,2BACPmN,UAAW,aACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,MAAa,MAATkC,GAAiBA,EAEPlF,GAAYkF,GADjB,IAGX1C,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEwY,WAAa3K,EAAE2K,aAErC,CACEhY,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,OAAqB,GAAjB5X,EAAOgC,QAAgC,GAAjBhC,EAAOgC,OAE7BsK,EAAA9C,EAAA+C,cAAA8P,GAAA,GACErS,MAAM,wCACNsS,UAAW,kBAAMjS,EAAKsZ,eAAe3jB,IACrCoc,OAAO,eACPG,WAAW,gBAEXjQ,EAAA9C,EAAA+C,cAACsE,GAAD,mDAIJ,MArQWxG,EA0QnBsZ,eA1QmB,eAAA5Y,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA0QF,SAAAC,EAAMlL,GAAN,IAAA8F,EAAA2M,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACX9D,EAAU,CACZE,SAAUhG,EAAOgG,SACjBlF,QAASd,EAAOc,QAChB8iB,UAAW,GAJEvY,EAAAzB,KAAA,EAMGxC,GAAYtB,GANf,OAOI,KADb2M,EANSpH,EAAAxB,MAOP7H,QACN5D,EAAA,EAAQgO,KAAKqG,EAAI/G,KAAO,4BACxB/E,OAAOwI,SAASiO,UAEhBhf,EAAA,EAAQD,MAAMsU,EAAI/G,KAAO,4BAXZ,wBAAAL,EAAAZ,SAAAS,MA1QE,gBAAAyB,GAAA,OAAA5B,EAAAc,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK0V,aAAe1V,EAAK0V,aAAaC,KAAlBtgB,OAAA4S,GAAA,EAAA5S,CAAA2K,IACpBA,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACVhS,WAAY,GACZC,SAAU,GACVtJ,KAAM,KACNyJ,SAAU,GACVD,WAAY,GACZ3F,QAAS,GACTkF,SAAU,IAEZqE,EAAK9K,SAAW,GAChB8K,EAAK7K,WAAa,GAClB6K,EAAK7D,aAAe,GAjBH6D,4EAkCNM,GACXmB,KAAKkD,SAAS,CAAEvI,WAAYkE,EAAMuO,OAAOjZ,oDAMzC6L,KAAKwK,SAAS,EAAG,qCAEV,IAAApG,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACXjD,EAAKlB,SAAS,CACZ1I,WAAY6M,EAAI,GAChB5M,SAAU4M,EAAI,QALtB,YAUE7G,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE/O,YAAY,qBACZF,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAK3Q,SAAWU,IAEpCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,YAArB,kBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,WAArB,WACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,gBAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,aAArB,6BAlBJ,YAqBEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,uCACZF,MAAO,CAAE6E,MAAO,KAChBsK,IAAK,SAAAC,GAAK,OAAKhN,EAAKvC,MAAQuP,KAzBhC,YA4BE5Q,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE7G,aAAa,GACbpI,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAK1J,aAAevG,IAExCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,IAArB,gBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,uBArCJ,YAwCEqM,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP+B,EAAK1Q,WAAa0Q,EAAKvC,MAAMA,MAAM1N,MACnCiQ,EAAKoG,SAAS,EAAGpG,EAAKD,MAAMqI,WAE9BvH,KAAK,WAELzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,YA/Cf,cAqDJkgB,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEN,MAAO,CAAEwU,MAAO,SAChBnU,QAAS,kBAAMxH,OAAOwI,SAASiO,UAC/BvP,KAAK,aAKXvB,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACR3G,KAAK,QACL4G,OAAO,KACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACda,WAAY,CACVC,gBAAiBlM,KAAKmE,MAAMqI,SAC5B+E,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKoG,SAASnX,EAAMmZ,IAEtBC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAKoG,SAASkC,EAASzH,KAG3BuM,OAAQ,CAAEC,EAAG,KAAMC,EAAG,kBAvIHlP,aCuLduV,eA5Lb,SAAAA,EAAYvZ,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA+X,IACjBxZ,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAmkB,GAAA9U,KAAAjD,KAAMxB,KAaRgM,SAdmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAcR,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAkK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYvC,GAAWlI,EAAMC,GAD7B,OAEa,KADhBkK,EADGI,EAAAG,MAEE7H,OACTqI,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAO5B,SAASzL,EAAOqN,SAGzBvY,EAAA,EAAQD,MAAM,4BARP,wBAAAuL,EAAAe,SAAApB,MAdQ,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EA6FnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,KACPmN,UAAW,MAEb,CACEnN,MAAO,qBACPmN,UAAW,QAEb,CACEnN,MAAO,qBACPmN,UAAW,eAxGI9M,EA2GnByZ,kBAAoB,SAAC9jB,EAAQ4X,EAAOmM,EAAQxD,GAC1C,IAAMzI,EAAU,CACd,CACE9N,MAAO,uCACPmN,UAAW,WACXxE,MAAO,KAET,CACE3I,MAAO,uCACPmN,UAAW,eACXxE,MAAO,KAET,CACE3I,MAAO,WACPmN,UAAW,WACXxE,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,SACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQD,QAAS,kBAAM9D,EAAKqV,KAAK1f,KAAjC,2BAIN,OACEsM,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEK,QAASA,EACTD,WAAYxN,EAAK4F,MAAM+T,UACvBjM,YAAY,KAxIC1N,EA4InB4Z,YA5ImB,eAAAlZ,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA4IL,SAAAC,EAAOqV,EAAUvgB,GAAjB,IAAAkkB,EAAA5a,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACRsa,EAAO,IACP3D,EAFQ,CAAAlV,EAAAzB,KAAA,gBAGVsa,EAAKtU,KAAK5P,EAAOH,IACjBwK,EAAK2E,SAAS,CACZmV,gBAAiBD,IALT7Y,EAAAzB,KAAA,EAOWtC,GAAetH,EAAOH,IAPjC,OAQY,KADhByJ,EAPI+B,EAAAxB,MAQC7H,QACTsH,EAAOzM,KAAKgF,QAAQ,SAACC,EAAS8V,GAC5B9V,EAAQ4N,IAAMkI,IAEhBvN,EAAK2E,SAAS,CACZgV,UAAW1a,EAAOzM,SAGpBuB,EAAA,EAAQD,MAAM,4BACdkM,EAAK2E,SAAS,CACZgV,UAAW,MAlBL3Y,EAAAzB,KAAA,iBAsBVS,EAAK2E,SAAS,CACZmV,gBAAiB,KAvBT,yBAAA9Y,EAAAZ,SAAAS,MA5IK,gBAAAyB,EAAAC,GAAA,OAAA7B,EAAAc,MAAAC,KAAAhP,YAAA,GAAAuN,EAuKnBqV,KAAO,SAAA1f,GACLiD,QAAQC,IAAIlD,EAAOyH,UACnB4C,EAAK2E,SAAS,CACZoV,SAAUpkB,EAAOH,GACjB4G,WAAYzG,EAAOyH,SACnBoY,gBAAgB,KA5KDxV,EA+KnBga,eA/KmB3kB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA+KF,SAAAgB,IAAA,IAAA3C,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACMpC,GAAgB6C,EAAK4F,MAAMmU,SAAU/Z,EAAK4F,MAAMxJ,YADtD,OAEO,KADhB6C,EADS4C,EAAArC,MAEJ7H,QACT5D,EAAA,EAAQkN,QAAQhC,EAAOoC,KACvBrB,EAAK2E,SAAS,CACZ6Q,gBAAgB,EAChBsE,gBAAgB,MAGlB/lB,EAAA,EAAQD,MAAM,4BATD,wBAAA+N,EAAAzB,SAAAwB,MA7Kf5B,EAAK4F,MAAQ,CACXpT,KAAM,GACNmnB,UAAW,GACXG,gBAAiB,GACjBxN,MAAO,EACP2B,SAAU,GACV7R,WAAY,GACZoZ,gBAAgB,EAChBuE,SAAU,IAEZ/Z,EAAK6M,cAZY7M,mFA0BjByB,KAAKwK,SAAS,EAAG,qCAEV,IAAApG,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACE2F,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEN,MAAO,CAAEwU,MAAO,SAChBnU,QAAS,kBAAMxH,OAAOwI,SAASiO,UAC/BvP,KAAK,aAKXvB,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACR3G,KAAK,SACL4G,OAAO,KACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACd4M,kBAAmBhY,KAAKgY,kBACxBQ,kBAAgB,EAChB1D,SAAU9U,KAAKmY,YACfE,gBAAiBrY,KAAKmE,MAAMkU,gBAC5BpM,WAAY,CACVC,gBAAiBlM,KAAKmE,MAAMqI,SAC5B+E,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAU,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACVE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACXnZ,GAAQmZ,IACVpI,EAAKlB,SAAS,CACZsJ,SAAUA,IAEZpI,EAAKoG,SAASnX,EAAMmZ,KAGxBC,iBAAkB,SAACC,EAASzH,GACtBA,GACFb,EAAKoG,SAASkC,EAASzH,OAK/BzE,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACN8J,QAAShI,KAAKmE,MAAM4P,eACpBxN,KAAMvG,KAAKuY,eACXtQ,SAAU,WACR7D,EAAKlB,SAAS,CAAE6Q,gBAAgB,MAGlCvT,EAAA9C,EAAA+C,cAAA,yBACAD,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACLgD,MAAO6L,KAAKmE,MAAMxJ,WAClB0K,SAAU,SAAAxG,GAAK,OACbuF,EAAKlB,SAAS,CAAEvI,WAAYkE,EAAMuO,OAAOjZ,oBAvFxBqO,+BCCzBsP,eACJ,SAAAA,EAAYtT,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA8R,IACjBvT,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAke,GAAA7O,KAAAjD,KAAMxB,KAQRia,eATmB7kB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KASF,SAAA5B,IAAA,IAAAoJ,EAAA+R,EAAA,OAAAjb,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACClI,IADD,OAEI,KADf+Q,EADW/I,EAAAG,MAEP7H,SACFwiB,EAAM,GACV/R,EAAI5V,KAAKgF,QAAQ,SAAAC,GACf0iB,EAAI5U,KAAK,CAAEwE,MAAOtS,EAAQN,KAAMvB,MAAO6B,EAAQjC,OAEjDwK,EAAK2E,SAAS,CACZmQ,QAASqF,KARE,wBAAA9a,EAAAe,SAAApB,MATEgB,EA0JnBK,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAKlL,GAAZ,IAAAJ,EAAA4S,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UAC7B3G,QAAQC,IAAIjD,GACRJ,EAAKwK,EAAKC,MAAMgU,eAChBjU,EAAKC,MAAMgU,eAAemG,IAAIC,KAC9B,GACCvZ,EALwB,CAAAE,EAAAzB,KAAA,YAM3B3J,EAAMyB,YAAYG,QAAQ,SAAAkI,GAExB9J,EADU,SAAW8J,EAAO,KACfA,IAEf9J,EAAMqG,WAAarG,EAAMqG,WAAW2O,OAAO,uBAC3ChV,EAAMsG,SAAWtG,EAAMsG,SAAS0O,OAAO,8BAChChV,EAAMyB,YACA2I,EAAKC,MAAM+T,OAbG,CAAAhT,EAAAzB,KAAA,gBAAAyB,EAAAzB,KAAA,GAcjBjG,GAAU1D,GAdO,QAAAoL,EAAAqL,GAAArL,EAAAxB,KAAAwB,EAAAzB,KAAA,wBAAAyB,EAAAzB,KAAA,GAejB/F,GAAa5D,EAAOJ,GAfH,QAAAwL,EAAAqL,GAAArL,EAAAxB,KAAA,QAgBR,KAHb4I,EAbqBpH,EAAAqL,IAgBnB1U,QACN5D,EAAA,EAAQkN,QAAQ,4BAChBjB,EAAKC,MAAMiU,cACXlU,EAAKC,MAAMkU,SACXnU,EAAKC,MAAMO,KAAK0P,eAEhBnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAtBFL,EAAAzB,KAAA,iBAyB3BxL,EAAA,EAAQD,MAAM,4BAzBa,yBAAAkN,EAAAZ,SAAAS,MAA/B,gBAAAS,EAAAC,GAAA,OAAAb,EAAAc,MAAAC,KAAAhP,YAAA,KA5JiBuN,EAyLnBwT,iBAAmB,SAAAC,GACjBzT,EAAK2E,SAAS,CACZ8O,YAAaA,KAzLfzT,EAAK4F,MAAQ,CACXkP,QAAS,GACTrB,YAAazT,EAAKC,MAAM+T,OACpBhU,EAAKC,MAAMgU,eAAeqG,YAC1B,IANWta,mFAsBjByB,KAAKyY,kDASE,IAAArU,EAAApE,KACCqB,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBADD0R,EAE4B/S,KAAKxB,MAAhCgU,EAFDO,EAECP,eAAgBD,EAFjBQ,EAEiBR,OACxB,OACE/R,EAAA9C,EAAA+C,cAAArD,EAAA,GAAM+K,SAAU,CAAEC,KAAM,GAAK7G,SAAUvB,KAAKpB,cAC1C4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,UAAW,CAC5B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAAStJ,SAASuJ,EAAesG,SAAW,GAP3DzX,CASCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,gBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,mBAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,QAAS,CAC1B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAASC,EAAetU,MAAQ,IAP/CmD,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,cAAe,CAChC7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,oCACnCkX,aAAc+I,GAAUC,EAAeqG,aAFxCxX,CAICb,EAAA9C,EAAA+C,cAAA2S,GAAA,EAAUD,MAAV,CACEE,QAASrT,KAAKmE,MAAMkP,QAEpBhO,SAAU,SAAA2M,GAAW,OAAI5N,EAAK2N,iBAAiBC,QAIrDxR,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CACL,CACEgK,UAAU,IAGdgI,aAAc+I,EAAStJ,SAASuJ,EAAerhB,MAAQ,GANxDkQ,CAQCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,gBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,mBAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,kCACdjH,EAAkB,YAAa,CAC9B7J,MAAO,CACL,CACEgK,UAAU,IAGdgI,aAAc+I,EAAStJ,SAASuJ,EAAerhB,MAAQ,GANxDkQ,CAQCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,UACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,aAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAc+I,GAAUC,EAAe0E,MAFxC7V,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,QAAS,CAC1B7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAc+I,EAASC,EAAeuG,MAAQ,IAF/C1X,CAICb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO4H,SAAP,CACEC,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjC5H,MAAO,CAAE6E,MAAO,WAItBrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,aAAc,CAC/B7J,MAAO,CACL,CACEgK,UAAU,IAGdgI,aAAc+I,GAAUrJ,KAAmC,IAA5BsJ,EAAehY,aAN/C6G,CAOEb,EAAA9C,EAAA+C,cAAAuY,GAAA,GAAY7O,UAAQ,EAAChB,OAAQ,0BAElC3I,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,WAAY,CAC7B7J,MAAO,CACL,CACEgK,UAAU,IAGdgI,aAAc+I,GAAUrJ,KAAiC,IAA1BsJ,EAAe/X,WAN/C4G,CAOEb,EAAA9C,EAAA+C,cAAAuY,GAAA,GAAY7O,UAAQ,EAAChB,OAAQ,0BAElC3I,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEnR,KAAK,UACLoR,SAAS,SACTjB,UAAU,qBAHZ,yBAhJgBkB,aAmMX+Q,GAFYnW,EAAA,EAAKsF,QAALtF,CAAc0U,ICwD1BmH,eApPb,SAAAA,EAAYza,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAiZ,IACjB1a,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAqlB,GAAAhW,KAAAjD,KAAMxB,KAURgM,SAXmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAWR,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAkK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYlG,GAAQvE,EAAMC,GAD1B,OAEa,KADhBkK,EADGI,EAAAG,MAEE7H,OACTqI,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAOrN,EAAOqN,QAGhBvY,EAAA,EAAQD,MAAM,4BARP,wBAAAuL,EAAAe,SAAApB,MAXQ,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAiCnBsV,QAAU,WACRtV,EAAK2E,SAAS,CACZ4Q,eAAe,KAnCAvV,EAsCnBqV,KAtCmB,eAAA3U,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAsCZ,SAAAC,EAAMlL,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACLS,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CACZ6Q,gBAAgB,IAHb,wBAAAxU,EAAAZ,SAAAS,MAtCY,gBAAAyB,GAAA,OAAA5B,EAAAc,MAAAC,KAAAhP,YAAA,GAAAuN,EA4CnB2a,SA5CmB,eAAAhZ,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA4CR,SAAAgB,EAAMjM,GAAN,IAAAyS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACO9F,GAAU9D,EAAOykB,IAAIC,MAD5B,OAEU,KADfjS,EADKvG,EAAArC,MAED7H,QACN5D,EAAA,EAAQkN,QAAQ,4BAChBjB,EAAKkU,eAELngB,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KANpB,wBAAAQ,EAAAzB,SAAAwB,MA5CQ,gBAAAW,GAAA,OAAAZ,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EAqDnBkU,YAAc,WACZlU,EAAK2E,SAAS,CACZnS,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACV7R,WAAY,GACZmZ,eAAe,EACfC,gBAAgB,IAElBxV,EAAKiM,SAAS,EAAG,KA9DAjM,EAqJnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,eACPmN,UAAW,SAEb,CACEnN,MAAO,eACPmN,UAAW,cACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OAAkBsM,EAAA9C,EAAA+C,cAAA,YAAOuN,EAAKmL,KAAK,QAE7C,CACEjb,MAAO,eACPmN,UAAW,iBAEb,CACEnN,MAAO,2BACPmN,UAAW,OACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA,YAAgB,MAATuN,GAAyB,IAATA,EAAa,eAAO,kBAG/C,CACE9P,MAAO,iCACPmN,UAAW,YACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OAAkBsM,EAAA9C,EAAA+C,cAAA,YAAgB,MAATuN,EAAe,SAAM,YAExD,CACE9P,MAAO,2BACPmN,UAAW,QACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA2Y,GAAA,GAAS7Y,QAASyN,EAAMtG,QAAQ,QAAQ2R,aAAc,CAAExS,MAAO,QAC7DrG,EAAA9C,EAAA+C,cAAA,OACEuB,MAAO,CACL6E,MAAO,QACPyS,aAAc,WACdC,WAAY,SACZC,SAAU,WAGXxL,KAIPlB,OAAQ,SAAC5Y,EAAQ6Y,GACf,MAAO,CACL1K,QAAS,SAAAxD,KACToO,cAAe,SAAApO,KACfqO,cAAe,SAAArO,KACfsO,aAAc,SAAAtO,GACZA,EAAMuO,OAAOpL,MAAMqL,OAAS,WAE9BC,aAAc,SAAAzO,QAIpB,CACEX,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,IAEV,CACE5K,MAAO,2BACPmN,UAAW,WACXqC,OAAQ5E,IAEV,CACE5K,MAAO,2BACPmN,UAAW,cACXqC,OAAQ5E,IAEV,CACE5K,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUkR,QAAS,kBAAM9D,EAAKqV,KAAK1f,IAAS+Q,KAAK,SAA9D,gBADF,eAKEzE,EAAA9C,EAAA+C,cAAA8P,GAAA,GACErS,MAAM,wCACNsS,UAAW,kBAAMjS,EAAK2a,SAAShlB,IAC/Boc,OAAO,eACPG,WAAW,gBAEXjQ,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,SAAS8T,KAAK,SAA3B,sBAxOR1G,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACV7R,WAAY,GACZmZ,eAAe,EACfC,gBAAgB,GARDxV,mFAiEjByB,KAAKwK,SAAS,EAAG,qCAEV,IAAApG,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK6T,QAAS5O,KAAK,WAAxC,iBAGJoM,MACE7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMxH,OAAOwI,SAASiO,UAAUrM,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIfqP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAA3X,GAAM,OAAIA,EAAOykB,IAAIC,MAC7B7M,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiBlM,KAAKmE,MAAMqI,SAC5B+E,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAU,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACVE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKoG,SAASnX,EAAMmZ,GACpBpI,EAAKlB,SAAS,CACZsJ,SAAUA,KAGdC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKoG,SAASkC,EAASzH,KAG3BuM,OAAQ,CAAEC,EAAG,OAEfjR,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAM2P,cAEpB7L,SAAU,WACR7D,EAAKlB,SAAS,CAAE4Q,eAAe,KAEjC5L,OAAQ,MAER1H,EAAA9C,EAAA+C,cAACgZ,GAAD,CACE/G,OAAQ,kBACNtO,EAAKlB,SAAS,CACZ4Q,eAAe,KAGnBrB,YAAazS,KAAKyS,eAGrBzS,KAAKmE,MAAM4P,gBACVvT,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAM4P,eAEpB9L,SAAU,WACR7D,EAAKlB,SAAS,CAAE6Q,gBAAgB,KAElC7L,OAAQ,MAER1H,EAAA9C,EAAA+C,cAACgZ,GAAD,CACElH,QAAM,EACNC,eAAgBxS,KAAKwS,eACrBE,OAAQ,kBACNtO,EAAKlB,SAAS,CACZ6Q,gBAAgB,KAGpBtB,YAAa,kBAAMrO,EAAKoG,SAAS,EAAG,gBA/IxBhI,aCHpBsP,eACJ,SAAAA,EAAYtT,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA8R,IACjBvT,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAke,GAAA7O,KAAAjD,KAAMxB,KAQRia,eATmB7kB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KASF,SAAA5B,IAAA,IAAAoJ,EAAA+R,EAAA,OAAAjb,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACClI,IADD,OAEI,KADf+Q,EADW/I,EAAAG,MAEP7H,SACFwiB,EAAM,GACV/R,EAAI5V,KAAKgF,QAAQ,SAAAC,GACf0iB,EAAI5U,KAAK,CAAEwE,MAAOtS,EAAQN,KAAMvB,MAAO6B,EAAQjC,OAEjDwK,EAAK2E,SAAS,CACZmQ,QAASqF,KARE,wBAAA9a,EAAAe,SAAApB,MATEgB,EA+GnBK,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAKlL,GAAZ,IAAAJ,EAAA4S,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACzB/J,EAAKwK,EAAKC,MAAMgU,eAChBjU,EAAKC,MAAMgU,eAAexd,QAC1B,GACCqK,EAJwB,CAAAE,EAAAzB,KAAA,YAK3B3J,EAAM0kB,YAAY9iB,QAAQ,SAAAkI,GAExB9J,EADU,SAAW8J,EAAO,KACfA,WAER9J,EAAM0kB,YACAta,EAAKC,MAAM+T,OAVG,CAAAhT,EAAAzB,KAAA,gBAAAyB,EAAAzB,KAAA,EAWjB5F,GAAoB/D,EAAO,OAXV,OAAAoL,EAAAqL,GAAArL,EAAAxB,KAAAwB,EAAAzB,KAAA,wBAAAyB,EAAAzB,KAAA,GAYjB5F,GAAoB/D,EAAO,OAAQJ,GAZlB,QAAAwL,EAAAqL,GAAArL,EAAAxB,KAAA,QAaR,KAHb4I,EAVqBpH,EAAAqL,IAanB1U,QACN5D,EAAA,EAAQkN,QAAQ,4BAChBjB,EAAKC,MAAMiU,cACXlU,EAAKC,MAAMkU,SACXnU,EAAKC,MAAMO,KAAK0P,eAEhBnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAnBFL,EAAAzB,KAAA,iBAsB3BxL,EAAA,EAAQD,MAAM,4BAtBa,yBAAAkN,EAAAZ,SAAAS,MAA/B,gBAAAS,EAAAC,GAAA,OAAAb,EAAAc,MAAAC,KAAAhP,YAAA,KAjHiBuN,EA2InBwT,iBAAmB,SAAAC,GACjBzT,EAAK2E,SAAS,CACZ8O,YAAaA,KA3IfzT,EAAK4F,MAAQ,CACXkP,QAAS,GACTrB,YAAazT,EAAKC,MAAM+T,OACpBhU,EAAKC,MAAMgU,eAAeqG,YAAYhG,MAAM,KAAKhL,IAAIiL,QACrD,IANWvU,mFAsBjByB,KAAKyY,kDAEE,IAAArU,EAAApE,KACCqB,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBADD0R,EAE4B/S,KAAKxB,MAAhCgU,EAFDO,EAECP,eAAgBD,EAFjBQ,EAEiBR,OACxB,OACE/R,EAAA9C,EAAA+C,cAAArD,EAAA,GAAM+K,SAAU,CAAEC,KAAM,GAAK7G,SAAUvB,KAAKpB,cAC1C4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,UAAW,CAC5B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAAStJ,SAASuJ,EAAexd,SAAW,IAP3DqM,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,YAAa,CAC9B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAAc+I,EAASC,EAAemE,UAAY,IAPnDtV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,cAAe,CAChC7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,oCACnCkX,aACE+I,GAAUC,EAAeqG,YAAYhG,MAAM,KAAKhL,IAAIiL,SAHvDzR,CAKCb,EAAA9C,EAAA+C,cAAA2S,GAAA,EAAUD,MAAV,CACEE,QAASrT,KAAKmE,MAAMkP,QACpBhO,SAAU,SAAA2M,GAAW,OAAI5N,EAAK2N,iBAAiBC,QAIrDxR,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,YAAa,CAC9B7J,MAAO,CACL,CACEgK,UAAU,IAGdgI,aAAc+I,EAAStJ,SAASuJ,EAAekH,WAAa,GAN7DrY,CAQCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,4BACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,+BAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,SAAU,CAC3B7J,MAAO,CACL,CACEgK,UAAU,IAGdgI,aAAc+I,EAAStJ,SAASuJ,EAAetc,QAAU,GAN1DmL,CAQCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,UACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,aAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAc+I,GAAUC,EAAe0E,MAFxC7V,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEnR,KAAK,UACLoR,SAAS,SACTjB,UAAU,qBAHZ,yBArGgBkB,aAqJX+Q,GAFYnW,EAAA,EAAKsF,QAALtF,CAAc0U,IC4F1B6H,eA3Ob,SAAAA,EAAYnb,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA2Z,IACjBpb,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA+lB,GAAA1W,KAAAjD,KAAMxB,KAURgM,SAXmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAWR,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAkK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY7F,GAAa5E,EAAMC,GAD/B,OAEa,KADhBkK,EADGI,EAAAG,MAEE7H,OACTqI,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAOrN,EAAOqN,QAGhBvY,EAAA,EAAQD,MAAM,4BARP,wBAAAuL,EAAAe,SAAApB,MAXQ,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAsBnBuM,aAtBmBlX,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAsBJ,SAAAC,IAAA,IAAAuH,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACK7F,GAAa,EAAG,GAAIsG,EAAKsD,MAAMA,MAAM1N,OAD1C,OAEM,KADbwS,EADOpH,EAAAxB,MAEL7H,QACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KACV8Z,MAAO5B,SAAStC,EAAIkE,SALX,wBAAAtL,EAAAZ,SAAAS,MAtBIb,EA+BnBsV,QAAU,WACRtV,EAAK2E,SAAS,CACZ4Q,eAAe,KAjCAvV,EAoCnBqV,KApCmB,eAAA1T,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAoCZ,SAAAgB,EAAMjM,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACLS,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CACZ6Q,gBAAgB,IAHb,wBAAA3T,EAAAzB,SAAAwB,MApCY,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EA0CnB2a,SA1CmB,eAAApK,EAAAlb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA0CR,SAAA4P,EAAM7a,GAAN,IAAAc,EAAA2R,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,cACL9I,EAAUd,EAAOc,QADZga,EAAAlR,KAAA,EAEO5F,GAAoB,CAAElD,WAAW,OAFxC,OAGU,KADf2R,EAFKqI,EAAAjR,MAGD7H,QACN5D,EAAA,EAAQkN,QAAQ,4BAChBjB,EAAKkU,eAELngB,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAPpB,wBAAAoP,EAAArQ,SAAAoQ,MA1CQ,gBAAAjO,GAAA,OAAAgO,EAAA/O,MAAAC,KAAAhP,YAAA,GAAAuN,EAoDnBkU,YAAc,WACZlU,EAAK2E,SAAS,CACZnS,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACVsH,eAAe,EACfC,gBAAgB,IAElBxV,EAAKiM,SAAS,EAAG,IACjBjM,EAAKsD,MAAM+X,eA7DMrb,EAiKnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,eACPmN,UAAW,UACXxE,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,YACXxE,MAAO,KAET,CACE3I,MAAO,iBACPmN,UAAW,cACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,SACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,GAAP,OAA4B,IAAT8Z,EAAa,SAAM,WAEhD,CACE9P,MAAO,2BACPmN,UAAW,YACXxE,MAAO,IACP6G,OAAQ,SAAAM,GAAI,OAAwB,IAAnB/E,SAAS+E,GAAc,2BAAS,6BAEnD,CACE9P,MAAO,eACPmN,UAAW,OACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,cACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA,YAAOqI,GAAY5U,EAAO2lB,YAAc,QAG5C,CACE3b,MAAO,2BACPmN,UAAW,cACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA,YAAOqI,GAAY5U,EAAO4lB,YAAc,QAG5C,CACE5b,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUkR,QAAS,kBAAM9D,EAAKqV,KAAK1f,IAAS+Q,KAAK,SAA9D,gBADF,eAKEzE,EAAA9C,EAAA+C,cAAA8P,GAAA,GACErS,MAAM,wCACNsS,UAAW,kBAAMjS,EAAK2a,SAAShlB,IAC/Boc,OAAO,eACPG,WAAW,gBAEXjQ,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,SAAS8T,KAAK,SAA3B,sBA/NR1G,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACVsH,eAAe,EACfC,gBAAgB,GAElBxV,EAAK6M,cATY7M,mFAgEjByB,KAAKwK,SAAS,EAAG,qCAEV,IAAApG,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,6CACZF,MAAO,CAAE6E,MAAO,KAChBsK,IAAK,SAAAtP,GAAK,OAAKuC,EAAKvC,MAAQA,KALhC,YAQErB,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK8K,aAAc7F,KAAK,WAC3CzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,YATf,YAYEqP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK6T,QAAS5O,KAAK,WACtCzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aADb,iBAMJkgB,MACE7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMxH,OAAOwI,SAASiO,UAAUrM,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIfqP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAO,UACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiBlM,KAAKmE,MAAMqI,SAC5B+E,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKoG,SAASnX,EAAMmZ,GACpBpI,EAAKlB,SAAS,CACZsJ,SAAUA,KAGdC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKoG,SAASkC,EAASzH,KAG3BuM,OAAQ,CAAEC,EAAG,KAAMC,EAAG,UAExBlR,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACN8J,QAAShI,KAAKmE,MAAM2P,cACpB7L,SAAU,WACR7D,EAAKlB,SAAS,CAAE4Q,eAAe,KAEjC5L,OAAQ,MAER1H,EAAA9C,EAAA+C,cAACsZ,GAAD,CACErH,OAAQ,kBACNtO,EAAKlB,SAAS,CACZ4Q,eAAe,KAGnBrB,YAAazS,KAAKyS,eAGrBzS,KAAKmE,MAAM4P,gBACVvT,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN8J,QAAShI,KAAKmE,MAAM4P,eAEpB9L,SAAU,WACR7D,EAAKlB,SAAS,CAAE6Q,gBAAgB,KAElC7L,OAAQ,MAER1H,EAAA9C,EAAA+C,cAACsZ,GAAD,CACExH,QAAM,EACNC,eAAgBxS,KAAKwS,eACrBE,OAAQ,kBACNtO,EAAKlB,SAAS,CACZ6Q,gBAAgB,KAGpBtB,YAAa,kBAAMrO,EAAKoG,SAAS,EAAG,gBA3JtBhI,aC4Eb+H,eAvFb,SAAAA,EAAY/L,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAuK,IACjBhM,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA2W,GAAAtH,KAAAjD,KAAMxB,KAeR4M,YAAc,WACZ,MAA0B,UAAtB7M,EAAKC,MAAMtJ,OACN,CACL,CACEgJ,MAAO,qBACPmN,UAAW,eAEb,CACEnN,MAAO,2BACPmN,UAAW,YACXqC,OAAQ5E,KAGmB,SAAtBvK,EAAKC,MAAMtJ,OACb,CACL,CACEgJ,MAAO,UACPmN,UAAW,MAEb,CACEnN,MAAO,2BACPmN,UAAW,oBAGb,CACEnN,MAAO,mCACPmN,UAAW,iBAEb,CACEnN,MAAO,2BACPmN,UAAW,YAEXC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAE8N,cAAgBD,EAAEC,gBAExC,CACEtN,MAAO,eACPmN,UAAW,OAEb,CACEnN,MAAO,mCACPmN,UAAW,uBAEb,CACEnN,MAAO,eACPmN,UAAW,cAEb,CACEnN,MAAO,2BACPmN,UAAW,gBAIR,CACL,CACEnN,MAAO,qBACPmN,UAAW,eAEb,CACEnN,MAAO,eACPmN,UAAW,WAEb,CACEnN,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,MA9EdvK,EAAK4F,MAAQ,GAFI5F,wEAIV,IACCxN,EAASiP,KAAKxB,MAAMwb,aAApBjpB,KACR,OACEyP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAO4X,GAAR,SAAAhG,OAAmBgG,IAC3BC,WAAYhb,EACZib,QAAShM,KAAKoL,cACdnG,KAAK,iBAbYzC,aCiNVyX,eA/Mb,SAAAA,EAAYzb,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAia,IACjB1b,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAqmB,GAAAhX,KAAAjD,KAAMxB,KA2IR0b,kBA5ImBtmB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA4IC,SAAA5B,IAAA,IAAAxM,EAAAiJ,EAAA2M,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACZ/M,EAAOwN,EAAKC,MAAMiY,SACnBlY,EAAK4b,YAFQ,CAAAvc,EAAAE,KAAA,QAGhBxL,EAAA,EAAQD,MAAM,oDAHEuL,EAAAE,KAAA,uBAKZ9D,EAAU,CACZE,SAAUnJ,EAAKmJ,SACf2C,cAAe0B,EAAK4b,YACpBnlB,QAASjE,EAAKiE,QACdoF,YAAa,EACb0C,QAAS,GAVKc,EAAAE,KAAA,EAYEzB,GAAoBrC,GAZtB,OAaG,KADb2M,EAZU/I,EAAAG,MAaR7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KAEpBtN,EAAA,EAAQD,MAAM,4BAEhBkM,EAAKC,MAAM4b,UAlBK,yBAAAxc,EAAAe,SAAApB,MA5IDgB,EAiKnB8b,OAjKmB,eAAApb,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAiKV,SAAAC,EAAMtC,GAAN,IAAA/L,EAAAiJ,EAAA2M,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACD/M,EAAOwN,EAAKC,MAAMiY,SACpBzc,EAAU,CACZE,SAAUnJ,EAAKmJ,SACf2C,cAAe9L,EAAK8L,cACpB7H,QAASjE,EAAKiE,QACdoF,YAAa,EACb0C,QAASA,GAPJyC,EAAAzB,KAAA,EASWzB,GAAoBrC,GAT/B,OAUY,KADb2M,EATCpH,EAAAxB,MAUC7H,OACN5D,EAAA,EAAQgO,KAAKqG,EAAI/G,KAEjBtN,EAAA,EAAQD,MAAM,4BAEhBkM,EAAKC,MAAM4b,UAfJ,wBAAA7a,EAAAZ,SAAAS,MAjKU,gBAAAS,GAAA,OAAAZ,EAAAc,MAAAC,KAAAhP,YAAA,GAAAuN,EAkLnB+b,iBAlLmB1mB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAkLA,SAAAgB,IAAA,IAAApP,EAAA4V,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,UACjB3G,QAAQC,IAAImH,EAAKgc,YACXxpB,EAAOwN,EAAKC,MAAMiY,SACnBlY,EAAKgc,WAHO,CAAAna,EAAAtC,KAAA,QAIfxL,EAAA,EAAQD,MAAM,oDAJC+N,EAAAtC,KAAA,uBAAAsC,EAAAtC,KAAA,EAMG7B,GAAelL,EAAKmJ,SAAUqE,EAAKgc,WAAY,GANlD,OAOI,KADb5T,EANSvG,EAAArC,MAOP7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KAEpBtN,EAAA,EAAQD,MAAMsU,EAAI/G,KAVL,yBAAAQ,EAAAzB,SAAAwB,MAlLA5B,EAgMnBic,qBAhMmB5mB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAgMI,SAAA4P,IAAA,IAAAhe,EAAA4V,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,UACrB3G,QAAQC,IAAImH,EAAKkc,gBACX1pB,EAAOwN,EAAKC,MAAMiY,SACnBlY,EAAKkc,eAHW,CAAAzL,EAAAlR,KAAA,QAInBxL,EAAA,EAAQD,MAAM,oDAJK2c,EAAAlR,KAAA,uBAAAkR,EAAAlR,KAAA,EAMD7B,GAAelL,EAAKmJ,SAAUqE,EAAKkc,eAAgB,GANlD,OAOA,KADb9T,EANaqI,EAAAjR,MAOX7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KAEpBtN,EAAA,EAAQD,MAAMsU,EAAI/G,KAVD,yBAAAoP,EAAArQ,SAAAoQ,MA9LrBxQ,EAAK4F,MAAQ,GAFI5F,wEAIV,IAIHmc,EACFC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAZK9W,EAAApE,KACDjP,EAAOiP,KAAKxB,MAAMiY,SACpB5Z,EAAgBoM,SAASlY,EAAK8L,eAWlC,OAVaoM,SAASlY,EAAKmF,SAWzB,KAAK,EACHwkB,GAAkB,EAClBE,GAAoB,EACpB,MACF,KAAK,EAGH,OAFAF,GAAkB,EAClBC,GAAa,EACL9d,GACN,KAAK,EACHie,GAAe,EACfC,GAAY,EACZC,GAAqB,EACrB,MACF,KAAK,EACHH,GAAc,EACdE,GAAY,EACZE,GAAsB,EACtB,MACF,KAAK,EACHH,GAAe,EACfD,GAAc,EACdK,GAAmB,EAKvB,MACF,KAAK,EACHR,GAAkB,EAClBE,GAAoB,EACpBC,GAAc,EAKlB,OACEra,EAAA9C,EAAA+C,cAAArD,EAAA,GAAM+K,SAAU,CAAEC,KAAM,GAAKC,WAAW,QACtC7H,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,kBACf9H,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,OAChB1S,MAAOpD,EAAKmJ,SACZ+Y,UAAQ,KAGZzS,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,kBACf9H,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,OAAS1S,MAAOpD,EAAKiE,QAASie,UAAQ,KAE/DzS,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACf9H,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,OAAS1S,MAAOpD,EAAKmM,OAAQ+V,UAAQ,KAG9DzS,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEmL,MAAM,4BACNtG,MAAO0Y,EAAkB,GAAK,CAAEnR,QAAS,SAEzC/I,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,CACE/I,aAAcvN,EACdwI,SAAU,SAAAwM,GAAC,OAAKzN,EAAK+V,YAActI,EAAEzE,OAAOjZ,QAE5CqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GACE/e,MAAO,EACPgnB,SAAUN,EACVxI,QAAS2I,GAHX,kCAOAxa,EAAA9C,EAAA+C,cAAAyS,GAAA,GACE/e,MAAO,EACPgnB,SAAUL,EACVzI,QAAS4I,GAHX,sBAOAza,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,EAAGgnB,SAAUJ,EAAW1I,QAAS6I,GAA/C,uBAIF1a,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAASrC,KAAKka,kBACdlY,MAAO4Y,EAAoB,GAAK,CAAErR,QAAS,SAF7C,iBAQF/I,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBAAMtG,MAAO2Y,EAAa,GAAK,CAAEpR,QAAS,SACzD/I,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP+B,EAAKiW,OAAO,KAFhB,gBAOA7Z,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP+B,EAAKiW,OAAO,KAFhB,iBAQF7Z,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,8BACf9H,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,OAChBxB,SAAU,SAAAwM,GACRzN,EAAKmW,WAAa1I,EAAEzE,OAAOjZ,SAG/BqM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKsa,kBAA1B,iBAEF9Z,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,8BACf9H,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,OAChBxB,SAAU,SAAAwM,GACRzN,EAAKqW,eAAiB5I,EAAEzE,OAAOjZ,SAGnCqM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKwa,sBAA1B,yBAxIaY,IAAM5Y,WCmZd6Y,eA9Xb,SAAAA,EAAY7c,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAqb,IACjB9c,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAynB,GAAApY,KAAAjD,KAAMxB,KAiBRgM,SAlBmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAkBR,SAAA5B,EAAOlK,EAAMmZ,EAAUxS,GAAvB,IAAAwD,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYlC,GAASvI,EAAMmZ,EAAUxS,GADrC,OAEa,KADhBwD,EADGI,EAAAG,MAEE7H,QACTqI,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAO5B,SAASzL,EAAOqN,SALlB,wBAAAjN,EAAAe,SAAApB,MAlBQ,gBAAAsC,EAAAC,EAAAe,GAAA,OAAA4J,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EA2BnBuM,aAAe,SAACzX,EAAMC,GAEpB,IAAI0G,EAAOpG,OAAAc,EAAA,EAAAd,CAAA,CACT0nB,KAAM,GACH/c,EAAKvE,SAEY,MAAlBuE,EAAK9K,UAAsC,MAAlB8K,EAAK9K,SAChCuG,EAAQ2b,UAAYpX,EAAK9K,SAChB8K,EAAK9K,WACduG,EAAQuE,EAAK9K,UAAY8K,EAAK7K,YAEhC6K,EAAKiM,SAASnX,EAAMC,EAAO0G,IAtCVuE,EAwCnBqX,SAAW,WACT7Z,GAAqBwC,EAAK4F,QAzCT5F,EAyLnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,iBACPmN,UAAW,WACXxE,MAAO,KAET,CACE3I,MAAO,UACPmN,UAAW,WAEb,CACEnN,MAAO,eACPmN,UAAW,aAEb,CACEnN,MAAO,2BACPmN,UAAW,gBAEb,CACEnN,MAAO,2BACPmN,UAAW,iBAEb,CACEnN,MAAO,2BACPmN,UAAW,SACXC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAER,OAASqO,EAAErO,SAEjC,CACEgB,MAAO,2BACPmN,UAAW,gBAEb,CACEnN,MAAO,2BACPmN,UAAW,QAEb,CACEnN,MAAO,2BACPmN,UAAW,iBACXC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEsY,eAAiBzK,EAAEyK,iBAEzC,CACE9X,MAAO,2BACPmN,UAAW,cAEb,CACEnN,MAAO,eACPmN,UAAW,SACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,IAAI+J,EACJ,OAAQ7H,GACN,IAAK,IACH6H,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,QACEA,EAAO,GAGX,OAAOrV,EAAA9C,EAAA+C,cAAA,YAAOoV,KAGlB,CACE3X,MAAO,eACPmN,UAAW,GACXxE,MAAO,IACP6G,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKqV,KAAK1f,KAArC,mBAIN,CACEgK,MAAO,2BACPmN,UAAW,cACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,YAGb,CACEnN,MAAO,2BACPmN,UAAW,aACXxE,MAAO,IACP6G,OAAQ5E,GACRwC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEuY,WAAa1K,EAAE0K,aAErC,CACE/X,MAAO,2BACPmN,UAAW,aACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,MAAa,MAATkC,GAAiBA,EAEPlF,GAAYkF,GADjB,IAGX1C,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEwY,WAAa3K,EAAE2K,aAErC,CACEhY,MAAO,eACPmN,UAAW,GACXxE,MAAO,IACP6G,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,kBAAM9D,EAAKgd,UAAUrnB,EAAQ,SACtC/C,KAAK,WAFP,mBASN,CACE+M,MAAO,2BACPmN,UAAW,GACXxE,MAAO,IACP6G,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,kBAAM9D,EAAKgd,UAAUrnB,EAAQ,UACtC/C,KAAK,WAFP,mBASN,CACE+M,MAAO,2BACPmN,UAAW,GACXxE,MAAO,IACP6G,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA2Y,GAAA,GACE7Y,QAASrM,EAAOsnB,YAChBtd,MAAOhK,EAAOc,QAAU,2BACxB0S,QAAQ,SAERlH,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY5T,KAAK,WAAjB,6BAEFqP,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,kBAAM9D,EAAKgd,UAAUrnB,EAAQ,mBACtC/C,KAAK,WAFP,iCAlVWoN,EA4VnBgd,UA5VmB,eAAAtc,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA4VP,SAAAC,EAAOlL,EAAQgB,GAAf,IAAAyR,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACVS,EAAKrJ,OAASA,EACdqJ,EAAKyb,aAAe,CAClBjpB,KAAM,GACN8Z,MAAO,EACP9W,GAAIG,EAAOc,SAGA,SAAXE,EARQ,CAAAqK,EAAAzB,KAAA,eAAAyB,EAAAzB,KAAA,EASEjJ,EAAW,EAAG,GAAIX,EAAOc,SAT3B,OAAAuK,EAAAqL,GAAArL,EAAAxB,KAAAwB,EAAAzB,KAAA,mBAUO,UAAX5I,EAVI,CAAAqK,EAAAzB,KAAA,gBAAAyB,EAAAzB,KAAA,GAWEjC,GAAW,EAAG,GAAI3H,EAAOgG,UAX3B,QAAAqF,EAAAkc,GAAAlc,EAAAxB,KAAAwB,EAAAzB,KAAA,wBAAAyB,EAAAzB,KAAA,GAYEhC,GAAW,EAAG,GAAI5H,EAAOgG,UAZ3B,QAAAqF,EAAAkc,GAAAlc,EAAAxB,KAAA,QAAAwB,EAAAqL,GAAArL,EAAAkc,GAAA,QAaS,KANb9U,EAPIpH,EAAAqL,IAaF1U,SACNqI,EAAKyb,aAAajpB,KAAO4V,EAAI5V,KAC7BwN,EAAKyb,aAAanP,MAAQlE,EAAIkE,OAEhCtM,EAAK2E,SAAS,CAAEwY,cAAc,IAjBpB,yBAAAnc,EAAAZ,SAAAS,MA5VO,gBAAA0B,EAAA8N,GAAA,OAAA3P,EAAAc,MAAAC,KAAAhP,YAAA,GAAAuN,EA+WnBqV,KA/WmB,eAAA1T,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA+WZ,SAAAgB,EAAMjM,GAAN,IAAA8F,EAAA2M,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cACD9D,EAAU,CACZshB,KAAM,EACNphB,SAAUhG,EAAOgG,UAHdkG,EAAAtC,KAAA,EAKa1B,GAAWpC,GALxB,OAMc,KADb2M,EALDvG,EAAArC,MAMG7H,QACNqI,EAAKkY,SAAW9P,EAAI5V,KAAK,GACzBwN,EAAK2E,SAAS,CAAEiT,YAAY,KAE5B7jB,EAAA,EAAQD,MAAM,4BAVX,wBAAA+N,EAAAzB,SAAAwB,MA/WY,gBAAA0O,GAAA,OAAA3O,EAAAH,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAKvE,QAAU,CACbQ,WAAY,GACZC,SAAU,GACVC,aAAc,GACdvJ,KAAM,IAERoN,EAAK9K,SAAW,GAChB8K,EAAK7K,WAAa,GAClB6K,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACVuE,gBAAgB,EAChBoF,YAAY,GAfG5X,mFA4CjByB,KAAKwK,SAAS,EAAG,GAAI,CAAE8Q,KAAM,qCAEtB,IAAAlX,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE/O,YAAY,qBACZF,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAK3Q,SAAWU,IAEpCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,YAArB,kBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,WAArB,WACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,6BATJ,YAYEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,uCACZF,MAAO,CAAE6E,MAAO,KAChBxB,SAAU,SAAAwM,GAAC,OAAKzN,EAAK1Q,WAAame,EAAEzE,OAAOjZ,SAhB/C,YAmBEqM,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACXjD,EAAKpK,QAAQQ,WAAa6M,EAAI,GAC9BjD,EAAKpK,QAAQS,SAAW4M,EAAI,MAtBlC,YA0BE7G,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE7G,aAAa,GACbpI,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAKpK,QAAQU,aAAevG,IAEhDqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,IAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,uBApCJ,YAuCEqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE7G,aAAa,GACbpI,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAKpK,QAAQ7I,KAAOgD,IAExCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,IAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,UACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,SA9CJ,YAiDEqM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM+B,EAAK0G,aAAa,EAAG,KAAK7F,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIjBkgB,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAEwU,MAAO,SAChBnU,QAAS,WACPxH,OAAOwI,SAASiO,UAElBvP,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACR3G,KAAK,QACL4G,OAAO,KACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACda,WAAY,CACVC,gBAAiBlM,KAAKmE,MAAMqI,SAC5B+E,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAK0G,aAAazX,EAAMmZ,IAE1BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAK0G,aAAa4B,EAASzH,KAG/BuM,OAAQ,CAAEC,EAAG,OAEfjR,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MACkB,UAAhB8B,KAAK9K,OACD,2BACgB,SAAhB8K,KAAK9K,OACL,2BACA,2BAEN8S,QAAShI,KAAKmE,MAAMuX,aACpBzT,SAAU,WACR7D,EAAKlB,SAAS,CAAEwY,cAAc,KAEhCxT,OAAQ,KACRrB,MAAM,OAENrG,EAAA9C,EAAA+C,cAACkb,GAAD,CACE3B,aAAcha,KAAKga,aACnB9kB,OAAQ8K,KAAK9K,UAGhB8K,KAAKmE,MAAMgS,YACV3V,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACN8J,QAAShI,KAAKmE,MAAMgS,WACpBlO,SAAU,WACR7D,EAAKlB,SAAS,CAAEiT,YAAY,KAE9BjO,OAAQ,KACRrB,MAAM,OAENrG,EAAA9C,EAAA+C,cAACmT,GAAD,CACE6C,SAAUzW,KAAKyW,SACf2D,QAAS,WACPhW,EAAKlB,SAAS,CAAEiT,YAAY,IAC5B/R,EAAK0G,2BAjLOtI,0CCGtB6Q,8CAlB0B+H,IAAM5Y,UAkBtB,CACdoZ,aAAa,EACbnX,KAAM,CAAE/O,KAAM,aAAcmmB,MAAM,GAClCnX,MAAO,aAEIoX,GAAb,SAAAC,GACE,SAAAD,EAAYtd,GAAO,IAAA4F,EAAA,OAAAxQ,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA8b,IACjB1X,EAAAxQ,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAkoB,GAAA7Y,KAAAjD,KAAMxB,KACD2F,MAAQ,GAFIC,EADrB,OAAAxQ,OAAAooB,EAAA,EAAApoB,CAAAkoB,EAAAC,GAAAnoB,OAAAqoB,EAAA,EAAAroB,CAAAkoB,EAAA,EAAAlY,IAAA,SAAAzP,MAAA,WAMI,IAAM+nB,EAAW7d,KAAKC,UAAU,CAACD,KAAKgG,MAAMrE,KAAKxB,MAAM0d,WAAY,KAAM,GAEjE7W,EAAarF,KAAKxB,MAAlB6G,SACR,OACE7E,EAAA9C,EAAA+C,cAAA,OAAKa,UAAU,eACbd,EAAA9C,EAAA+C,cAAC0b,GAAA,aAAD,CAEEhoB,MAAO+nB,EACP7W,SAAU,SAAC+W,EAAQrrB,EAAMoD,GAEvB,OAAOkR,EAAShH,KAAKC,UAAUD,KAAKgG,MAAMlQ,GAAO,MAEnDkf,QAASA,UAlBnByI,EAAA,CAAgCtZ,aCuCjB6Z,GAFSjf,EAAA,EAAKsF,QAALtF,CAlEP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACFnN,EAASsK,EAAMtK,OA2BrB,OACEsM,EAAA9C,EAAA+C,cAAArD,EAAA,GAAM+K,SAAU,CAAEC,KAAM,GAAKC,WAAW,OAAO9G,SApB1B,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAAyL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAKlL,GAAZ,IAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACxB3G,QAAQC,IAAIjD,GACPkL,EAFmB,CAAAzB,EAAAE,KAAA,cAGD,SAAjBU,EAAMtJ,SACRf,EAAMJ,GAAKG,EAAOH,IAJE6J,EAAAE,KAAA,EAMJnF,GAASxE,EAAOqK,EAAMtJ,QANlB,OAOH,KADbyR,EANgB/I,EAAAG,MAOd7H,QACN5D,EAAA,EAAQkN,QAAQ,4BAChBhB,EAAM8d,WACN9d,EAAMO,KAAK0P,eAEXnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAZP,wBAAAhC,EAAAe,SAAApB,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,MAmBEwP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,sBACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,yCACnCkX,aAA+B,QAAjBhL,EAAMtJ,OAAmB,GAAKsJ,EAAMtK,OAAOwB,MAF1D2L,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,mBACdjH,EAAkB,WAAY,CAC7B7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,sCACnCkX,aAA+B,QAAjBhL,EAAMtJ,OAAmB,GAAKsJ,EAAMtK,OAAOwE,UAF1D2I,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,mBACdjH,EAAkB,WAAY,CAC7B7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,uCADpC+O,CAGkB,QAAjB7C,EAAMtJ,OACJsL,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,SAEvBrG,EAAA9C,EAAA+C,cAAC8b,GAAD,CAAYL,SAAU1d,EAAMtK,OAAOgoB,YAGvC1b,EAAA9C,EAAA+C,cAAA,QAAMuB,MAAwB,QAAjBxD,EAAMtJ,OAAmB,CAAEqU,QAAS,QAAW,IAA5D,sPAIF/I,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUoR,SAAS,UAAhC,oBCuIOia,eApLb,SAAAA,EAAYhe,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAwc,IACjBje,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA4oB,GAAAvZ,KAAAjD,KAAMxB,KASRie,eAVmB,eAAAhS,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAUF,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAqT,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGrF,GAAWpF,EAAMC,GADpB,OAEI,KADbqT,EADS/I,EAAAG,MAEP7H,OACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KACV8Z,MAAOlE,EAAIkE,QAGbvY,EAAA,EAAQD,MAAMsU,EAAI/G,KARL,wBAAAhC,EAAAe,SAAApB,MAVE,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EA0GnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,KACPmN,UAAW,MAEb,CACEnN,MAAO,qBACPmN,UAAW,QAEb,CACEnN,MAAO,kBACPmN,UAAW,YAEb,CACEnN,MAAO,qBACPmN,UAAW,WACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,IAEV,CACE5K,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUkR,QAAS,kBAAM9D,EAAKqV,KAAK1f,IAAS+Q,KAAK,SAA9D,gBADF,eAKEzE,EAAA9C,EAAA+C,cAAA8P,GAAA,GACErS,MAAM,wCACNsS,UAAW,kBAAMjS,EAAK2a,SAAShlB,IAC/Boc,OAAO,eACPG,WAAW,gBAEXjQ,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,SAAS8T,KAAK,SAA3B,sBAhJS1G,EAwJnBme,SAxJmB9oB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAwJR,SAAAC,IAAA,IAAA1G,EAAAiO,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACLpF,EAAW6F,EAAKsD,MAAMA,MAAM1N,MADvBoL,EAAAzB,KAAA,EAESrF,GAAW,EAAG,GAAIC,GAF3B,OAEHiO,EAFGpH,EAAAxB,KAGTQ,EAAK2E,SAAS,CAAEnS,KAAM4V,EAAI5V,KAAM8Z,MAAOlE,EAAIkE,QAHlC,wBAAAtL,EAAAZ,SAAAS,MAxJQb,EA6JnB2a,SA7JmB,eAAAhZ,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA6JR,SAAAgB,EAAMjM,GAAN,IAAAyS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACOnF,GAAS,CAAE5E,GAAIG,EAAOH,IAAM,OADnC,OAEU,KADf4S,EADKvG,EAAArC,MAED7H,QACN5D,EAAA,EAAQkN,QAAQ,4BAAUmH,EAAI/G,KAC9BrB,EAAKke,eAAele,EAAK4F,MAAM9Q,KAAMkL,EAAK4F,MAAMqI,WAEhDla,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KANpB,wBAAAQ,EAAAzB,SAAAwB,MA7JQ,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EAsKnBoe,MAtKmB/oB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAsKX,SAAA4P,IAAA,OAAAtR,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,OACNS,EAAKrJ,OAAS,MACdqJ,EAAK2E,SAAS,CACZ6D,gBAAgB,IAHZ,wBAAAiI,EAAArQ,SAAAoQ,MAtKWxQ,EA4KnBqV,KA5KmB,eAAA1E,EAAAtb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA4KZ,SAAAgQ,EAAMjb,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,OACLS,EAAKrJ,OAAS,OACdqJ,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CACZ6D,gBAAgB,IAJb,wBAAAqI,EAAAzQ,SAAAwQ,MA5KY,gBAAArO,GAAA,OAAAoO,EAAAnP,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACPxX,KAAM,EACNmZ,SAAU,GACVzF,gBAAgB,GAPDxI,mFAsBjByB,KAAKyc,eAAe,EAAG,qCAEhB,IAAArY,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,KAChB3E,YAAY,oCACZiP,IAAK,SAAAC,GACHhN,EAAKvC,MAAQuP,KALnB,eASE5Q,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,UACL9T,KAAK,UACLkR,QAASrC,KAAK0c,SACd3a,KAAK,WAbT,eAgBEvB,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY5T,KAAK,UAAUkR,QAASrC,KAAK2c,MAAO1X,KAAK,WAArD,iBAKJoM,MACE7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMxH,OAAOwI,SAASiO,UAAUrM,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIfqP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiB,GACjBqF,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKlB,SAAS,CACZ7P,KAAMA,IAER+Q,EAAKqY,eAAeppB,EAAMmZ,IAE5BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAKqY,eAAe/P,EAASzH,OAKlCjF,KAAKmE,MAAM4C,gBACVvG,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAuB,QAAhB8B,KAAK9K,OAAmB,2BAAS,2BACxC8S,QAAShI,KAAKmE,MAAM4C,eACpBkB,SAAU,WACR7D,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElCmB,OAAQ,KACRrB,MAAM,OAENrG,EAAA9C,EAAA+C,cAACmc,GAAD,CACEN,SAAU,WACRlY,EAAKqY,eAAerY,EAAKD,MAAM9Q,KAAM+Q,EAAKD,MAAMqI,UAChDpI,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElC7S,OAAQ8L,KAAKwS,eACbtd,OAAQ8K,KAAK9K,kBApGNsN,aC+CN6Z,GAFSjf,EAAA,EAAKsF,QAALtF,CA1DP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACFnN,EAASsK,EAAMtK,OACjBxC,EAAS2M,KAAKgG,MAAMnQ,EAAOxC,QA0B/B,OACE8O,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,kBACM/O,EAAOsD,QADb,kCAC4BtD,EAAOwL,OADnC,gBAEoB,WAAjBsB,EAAMtJ,OAAsB,eAAO,gBAEtCsL,EAAA9C,EAAA+C,cAAArD,EAAA,GACE+K,SAAU,CAAEC,KAAM,GAClBC,WAAW,OACX9G,SAjCiB,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAAyL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAKlL,GAAZ,IAAAC,EAAAuS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBuB,EADmB,CAAAzB,EAAAE,KAAA,eAElB1J,EAAM,CACRyoB,WAAY3oB,EAAOH,GACnB+oB,eAAgB5oB,EAAOxC,OACvBqrB,eAAgB,GAEG,WAAjBve,EAAMtJ,SACRd,EAAI,oBAAsBD,EAAM6oB,OAChC5oB,EAAI,gBAAkB,GATFwJ,EAAAE,KAAA,EAWJ/E,GAAkB3E,GAXd,OAYH,KADbuS,EAXgB/I,EAAAG,MAYd7H,QACN5D,EAAA,EAAQkN,QAAQ,2BAASmH,EAAI/G,KAC7BpB,EAAM8d,WACN9d,EAAMO,KAAK0P,eAEXnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAjBP,wBAAAhC,EAAAe,SAAApB,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,MAiCIwP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAEuH,QAA0B,WAAjB/K,EAAMtJ,OAAsB,QAAU,SAEvDmM,EAAkB,SAAU,CAC3BmI,aAAc9X,EAAOsrB,QADtB3b,CAEEb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO4H,SAAP,CAAgBC,SAAU,CAAEC,QAAS,EAAGC,QAAS,QAGtDpJ,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUoR,SAAS,UAAhC,qBC0OK0a,eA5Qb,SAAAA,EAAYze,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAid,IACjB1e,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAqpB,GAAAha,KAAAjD,KAAMxB,KASRie,eAVmB,eAAAhS,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAUF,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAqT,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGhF,GAAUzF,EAAMC,GADnB,OAEI,KADbqT,EADS/I,EAAAG,MAEP7H,OACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KACV8Z,MAAOlE,EAAIkE,QAGbvY,EAAA,EAAQD,MAAMsU,EAAI/G,KARL,wBAAAhC,EAAAe,SAAApB,MAVE,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EA8HnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,iBACPmN,UAAW,MAEb,CACEnN,MAAO,2BACPmN,UAAW,SACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEyR,SAAU,aAAcC,UAAW,cAC9C1F,KAIP,CACE9P,MAAO,2BACPmN,UAAW,YACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACsB,IAAnBwI,SAAS+E,GACN,mDACmB,IAAnB/E,SAAS+E,GACT,+DACmB,IAAnB/E,SAAS+E,GACT,uCACA,MAIV,CACE9P,MAAO,iCACPmN,UAAW,iBAEb,CACEnN,MAAO,iCACPmN,UAAW,eAEb,CACEnN,MAAO,2BACPmN,UAAW,aACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,aACXxE,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,SACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,IAAInF,EACJ,OAAQqH,GACN,KAAK,EACHrH,EACEnG,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQ5C,QAAS,kBAAM9D,EAAK8b,OAAOnmB,KAApD,gBAGAsM,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL9T,KAAK,SACLkR,QAAS,kBAAM9D,EAAK2e,OAAOhpB,KAH7B,iBASJ,MACF,KAAK,EACHyS,EAAMnG,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,sBACN,MACF,KAAK,EACH0B,EACEnG,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQ9T,KAAK,UAA9B,4BAQN,OAAOwV,MAlNMpI,EAsNnBme,SAtNmB9oB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAsNR,SAAAC,IAAA,IAAAjL,EAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACL3J,EAAQ,CACVqG,WAAY+D,EAAK/D,YAAc,GAC/BC,SAAU8D,EAAK9D,UAAY,GAE3B0iB,cAAe5e,EAAKsD,MAAMA,MAAM1N,OAAS,IAEvCoK,EAAKrI,SACP/B,EAAM+B,OAASqI,EAAKrI,QARbqJ,EAAAzB,KAAA,EAUShF,GAAUyF,EAAK4F,MAAM9Q,KAAMkL,EAAK4F,MAAMqI,SAAUrY,GAVzD,OAUHwS,EAVGpH,EAAAxB,KAWTQ,EAAK2E,SAAS,CAAEnS,KAAM4V,EAAI5V,KAAM8Z,MAAOlE,EAAIkE,QAXlC,wBAAAtL,EAAAZ,SAAAS,MAtNQb,EAmOnB8b,OAnOmB,eAAAna,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAmOV,SAAAgB,EAAMjM,GAAN,IAAAC,EAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,UACkB,IAArB5J,EAAOS,UADJ,CAAAyL,EAAAtC,KAAA,eAED3J,EAAQ,CACVJ,GAAIG,EAAOH,GACXrC,OAAQwC,EAAOxC,OACfwE,OAAQ,GALLkK,EAAAtC,KAAA,EAOa9E,GAAW7E,GAPxB,OAQc,KADbwS,EAPDvG,EAAArC,MAQG7H,QACN5D,EAAA,EAAQkN,QAAQ,2BAASmH,EAAI/G,KAC7BrB,EAAKme,YAELpqB,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAZxBQ,EAAAtC,KAAA,gBAeLS,EAAKrJ,OAAS,SACdqJ,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CAAE6D,gBAAgB,IAjB3B,yBAAA3G,EAAAzB,SAAAwB,MAnOU,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EAuPnB2e,OAvPmB,eAAApO,EAAAlb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAuPV,SAAA4P,EAAM7a,GAAN,IAAAC,EAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,UACkB,IAArB5J,EAAOS,UADJ,CAAAqa,EAAAlR,KAAA,eAED3J,EAAQ,CACVJ,GAAIG,EAAOH,GACXrC,OAAQwC,EAAOxC,OACfwE,OAAQ,GALL8Y,EAAAlR,KAAA,EAOa9E,GAAW7E,GAPxB,OAQc,KADbwS,EAPDqI,EAAAjR,MAQG7H,QACN5D,EAAA,EAAQkN,QAAQ,2BAASmH,EAAI/G,KAC7BrB,EAAKme,YAELpqB,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAZxBoP,EAAAlR,KAAA,gBAeLS,EAAKrJ,OAAS,SACdqJ,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CAAE6D,gBAAgB,IAjB3B,yBAAAiI,EAAArQ,SAAAoQ,MAvPU,gBAAAjO,GAAA,OAAAgO,EAAA/O,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACPxX,KAAM,EACNmZ,SAAU,GACVzF,gBAAgB,GAPDxI,mFAsBjByB,KAAKyc,eAAe,EAAG,qCAEhB,IAAArY,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACXjD,EAAK5J,WAAa6M,EAAI,GACtBjD,EAAK3J,SAAW4M,EAAI,MAJ1B,eAQE7G,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE/O,YAAY,2BACZF,MAAO,CAAE6E,MAAO,KAChBxB,SAAU,SAAAlR,GAAK,OAAKiQ,EAAKlO,OAAS/B,IAElCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,6BAfJ,eAkBEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,KAChB3E,YAAY,mDACZiP,IAAK,SAAAC,GACHhN,EAAKvC,MAAQuP,KAtBnB,eA0BE5Q,EAAA9C,EAAA+C,cAACsE,GAAD,CACE5T,KAAK,UACLkR,QAASrC,KAAK0c,SACd3a,KAAK,SACLkD,KAAK,YAIXoM,MACE7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMxH,OAAOwI,SAASiO,UAAUrM,KAAK,UACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIfqP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiB,GACjBqF,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKlB,SACH,CACE7P,KAAMA,GAER,WACE+Q,EAAKsY,cAIXjQ,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SACH,CACEsJ,SAAUvH,GAEZ,WACEb,EAAKsY,eAKblL,OAAQ,CAAEC,EAAG,QAEdzR,KAAKmE,MAAM4C,gBACVvG,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAuB,WAAhB8B,KAAK9K,OAAsB,eAAO,eACzC8S,QAAShI,KAAKmE,MAAM4C,eACpBkB,SAAU,WACR7D,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElCmB,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAC2c,GAAD,CACEd,SAAU,WACRlY,EAAKqY,eAAerY,EAAKD,MAAM9Q,KAAM+Q,EAAKD,MAAMqI,UAChDpI,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElC7S,OAAQ8L,KAAKwS,eACbtd,OAAQ8K,KAAK9K,kBAxHPsN,aC0ELyX,GArFE,SAAAzb,GACf,IAAMzN,EAAOyN,EAAMtK,OAQnB,IAAIkX,EAAc,CAChB,CACElN,MAAO,2BACPmN,UAAW,OACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,IAAInF,EACJ,OAAQqH,GACN,KAAK,EACHrH,EAAM,eACN,MACF,KAAK,EACHA,EAAM,SACN,MACF,KAAK,EACHA,EAAM,qBACN,MACF,KAAK,EACHA,EAAM,eACN,MACF,KAAK,EACHA,EAAM,qBACN,MACF,QACEA,EAAM,GAGV,OAAOnG,EAAA9C,EAAA+C,cAAA,YAAOkG,KAGlB,CACEzI,MAAO,qBACPmN,UAAW,gBAEb,CACEnN,MAAO,eACPmN,UAAW,eAEb,CACEnN,MAAO,qBACPmN,UAAW,aAEb,CACEnN,MAAO,qBACPmN,UAAW,UACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,GAAIkC,GAAQA,EAAK/c,OAAS,EACxB,OACEuP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAtD/B,SAAqBnO,GACnBmM,EAAA,EAAMb,QAAQ,CACZtB,MAAO,qBACPqC,QAAUC,EAAA9C,EAAA+C,cAAA,WAAKD,EAAA9C,EAAA+C,cAACmG,GAAAlJ,EAAD,CAAQvJ,MAAOD,EAAOmpB,WACrCxW,MAAO,MAkD0ByW,CAAYppB,KAAvC,kBAKR,CACEgK,MAAO,+CACPmN,UAAW,UAEb,CACEnN,MAAO,2BACPmN,UAAW,cAEb,CACEnN,MAAO,2BACPmN,UAAW,eAGf,OACE7K,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAYhb,EACZib,QAASZ,EACTnG,KAAK,WC+GIsY,eA9Lb,SAAAA,EAAY/e,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAud,IACjBhf,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA2pB,GAAAta,KAAAjD,KAAMxB,KASRie,eAVmB,eAAAhS,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAUF,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAqT,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACG7E,GAAe5F,EAAMC,GADxB,OAEI,KADbqT,EADS/I,EAAAG,MAEP7H,OACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KACV8Z,MAAO5B,SAAStC,EAAIkE,SAGtBvY,EAAA,EAAQD,MAAMsU,EAAI/G,KARL,wBAAAhC,EAAAe,SAAApB,MAVE,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAiHnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,UACPmN,UAAW,WAEb,CACEnN,MAAO,eACPmN,UAAW,aAEb,CACEnN,MAAO,2BACPmN,UAAW,gBAEb,CACEnN,MAAO,2BACPmN,UAAW,iBAEb,CACEnN,MAAO,uCACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL5C,QAAS,WACP9D,EAAKrF,cAAchF,KAHvB,kBAUJ,CACEgK,MAAO,2BACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL5C,QAAS,WACP9D,EAAKif,aAAatpB,KAHtB,oBApJaqK,EA+JnBme,SA/JmB9oB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA+JR,SAAAC,IAAA,IAAAjL,EAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACL3J,EAAQ,CACVa,QAASuJ,EAAKsD,MAAMA,MAAM1N,OAFnBoL,EAAAzB,KAAA,EAIS7E,GAChBsF,EAAK4F,MAAM9Q,KACXkL,EAAK4F,MAAMqI,SACXrY,GAPO,OAIHwS,EAJGpH,EAAAxB,KASTQ,EAAK2E,SAAS,CAAEnS,KAAM4V,EAAI5V,KAAM8Z,MAAO5B,SAAStC,EAAIkE,SAT3C,wBAAAtL,EAAAZ,SAAAS,MA/JQb,EA0KnBrF,cA1KmB,eAAAgH,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA0KH,SAAAgB,EAAMjM,GAAN,IAAAyS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACI5E,GAAchF,EAAOc,SADzB,OAEK,KADb2R,EADQvG,EAAArC,MAEN7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KAEpBtN,EAAA,EAAQD,MAAMsU,EAAI/G,KALN,wBAAAQ,EAAAzB,SAAAwB,MA1KG,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EAkLnBif,aAlLmB,eAAA1O,EAAAlb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAkLJ,SAAA4P,EAAM7a,GAAN,IAAAyS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,cAAAkR,EAAAlR,KAAA,EACK3E,GAAYjF,EAAOc,SADxB,OACP2R,EADOqI,EAAAjR,KAEbQ,EAAKiU,eAAiB7L,EAAI5V,KACP,IAAf4V,EAAIzQ,QACN5D,EAAA,EAAQD,MAAMsU,EAAI/G,KAEpBrB,EAAK2E,SAAS,CAAE6D,gBAAgB,IANnB,wBAAAiI,EAAArQ,SAAAoQ,MAlLI,gBAAAjO,GAAA,OAAAgO,EAAA/O,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACPxX,KAAM,EACNmZ,SAAU,GACVzF,gBAAgB,GAPDxI,mFAsBjByB,KAAKyc,eAAe,EAAG,qCAEhB,IAAArY,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAwQ,GAAA,GAAQ7G,aAAa,UAAUpI,MAAO,CAAE6E,MAAO,MAC7CrG,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,WAArB,YAFJ,eAKEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,KAChB3E,YAAY,4BACZiP,IAAK,SAAAC,GACHhN,EAAKvC,MAAQuP,KATnB,eAaE5Q,EAAA9C,EAAA+C,cAACsE,GAAD,CACE5T,KAAK,UACLkR,QAASrC,KAAK0c,SACd3a,KAAK,YAIXsP,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAEwU,MAAO,SAChBnU,QAAS,kBAAMxH,OAAOwI,SAASiO,UAC/BvP,KAAK,aASXvB,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiB,GACjBqF,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKlB,SAAS,CACZ7P,KAAMA,IAER+Q,EAAKqY,eAAeppB,EAAMmZ,IAE5BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAKqY,eAAe/P,EAASzH,OAKlCjF,KAAKmE,MAAM4C,gBACVvG,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,yDACN8J,QAAShI,KAAKmE,MAAM4C,eACpBkB,SAAU,WACR7D,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElCF,MAAM,MACNqB,OAAQ,MAER1H,EAAA9C,EAAA+C,cAACgd,GAAD,CACEnB,SAAU,WACRlY,EAAKqY,eAAerY,EAAKD,MAAM9Q,KAAM+Q,EAAKD,MAAMqI,UAChDpI,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElC7S,OAAQ8L,KAAKwS,eACbtd,OAAQ8K,KAAK9K,kBA3GDsN,aCkEXyX,GArEE,SAAAzb,GACf,IAAMzN,EAAOyN,EAAMtK,QAAQ,GAEvBkX,EAAc,GAClB,OAFe5M,EAAMtJ,QAGnB,IAAK,SACHkW,EAAc,CACZ,CACElN,MAAO,UACPmN,UAAW,WAEb,CACEnN,MAAO,2BACPmN,UAAW,IAEb,CACEnN,MAAO,2BACPmN,UAAW,IAEb,CACEnN,MAAO,2BACPmN,UAAW,KAGf,MACF,IAAK,QACHD,EAAc,CACZ,CACElN,MAAO,qBACPmN,UAAW,eAEb,CACEnN,MAAO,2BACPmN,UAAW,YACXqC,OAAQ5E,KAGZ,MACF,IAAK,iBACHsC,EAAc,CACZ,CACElN,MAAO,qBACPmN,UAAW,eAEb,CACEnN,MAAO,eACPmN,UAAW,WAEb,CACEnN,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,KAOhB,OACEtI,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAYhb,EACZib,QAASZ,EACTnG,KAAK,WCiWIgY,eA9Yb,SAAAA,EAAYze,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAid,IACjB1e,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAqpB,GAAAha,KAAAjD,KAAMxB,KAURie,eAXmB,eAAAhS,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAWF,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAqT,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACG1E,GAAkB/F,EAAMC,GAD3B,OAEI,KADbqT,EADS/I,EAAAG,MAEP7H,OACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KACV8Z,MAAOlE,EAAIkE,QAGbvY,EAAA,EAAQD,MAAMsU,EAAI/G,KARL,wBAAAhC,EAAAe,SAAApB,MAXE,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EA2InB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,KACPmN,UAAW,MAEb,CACEnN,MAAO,UACPmN,UAAW,WAEb,CACEnN,MAAO,eACPmN,UAAW,YACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,gBAEb,CACEnN,MAAO,2BACPmN,UAAW,iBAEb,CACEnN,MAAO,2BACPmN,UAAW,kBAEb,CACEnN,MAAO,iCACPmN,UAAW,QAEb,CACEnN,MAAO,uCACPmN,UAAW,aAEb,CACEnN,MAAO,iCACPmN,UAAW,YAEb,CACEnN,MAAO,eACPmN,UAAW,SACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,IAAInF,EACJ,OAAQsC,SAAS+E,IACf,KAAK,EACHrH,EACEnG,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,4BACAzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,6BAGJ,MACF,KAAK,EACH0B,EACEnG,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,4BACAzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,SAAjB,6BAGJ,MACF,KAAK,EACH0B,EAAMnG,EAAA9C,EAAA+C,cAAA,wCACN,MACF,KAAK,EACHkG,EAAMnG,EAAA9C,EAAA+C,cAAA,kCACN,MACF,KAAK,EACHkG,EAAMnG,EAAA9C,EAAA+C,cAAA,wCACN,MACF,KAAK,EACHkG,EAAMnG,EAAA9C,EAAA+C,cAAA,kCAKV,OAAOkG,IAGX,CACEzI,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,IAEV,CACE5K,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQ9T,KAAK,UAA9B,gBAGAqP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQ9T,KAAK,UAA9B,+BAMN,CACE+M,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQ5C,QAAS,kBAAM9D,EAAKqV,KAAK1f,KAAlD,gBAGAsM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAYE,KAAK,QAAQ5C,QAAS,kBAAM9D,EAAKmf,YAAYxpB,EAAQ,YAAjE,mBAMN,CACEgK,MAAO,2BACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL9T,KAAK,UACLkR,QAAS,kBAAM9D,EAAKmf,YAAYxpB,EAAQ,WAH1C,mBAUN,CACEgK,MAAO,2BACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL9T,KAAK,UACLkR,QAAS,kBAAM9D,EAAKmf,YAAYxpB,EAAQ,gBAH1C,4BAOAsM,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL9T,KAAK,UACLkR,QAAS,kBAAM9D,EAAKmf,YAAYxpB,EAAQ,oBAH1C,iCArRWqK,EAgSnBme,SAhSmB9oB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAgSR,SAAAC,IAAA,IAAAjL,EAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACL3J,EADKP,OAAAC,EAAA,EAAAD,CAAA,CAEP6G,SAAU8D,EAAK/D,YAAc,GAC7BA,WAAY+D,EAAK/D,YAAc,GAC/BtE,OAAQqI,EAAKrI,QAAU,IACtBqI,EAAKvC,MAAQuC,EAAKsD,MAAMA,MAAM1N,OALxBoL,EAAAzB,KAAA,EAOS1E,GAChBmF,EAAK4F,MAAM9Q,KACXkL,EAAK4F,MAAMqI,SACXrY,GAVO,OAOHwS,EAPGpH,EAAAxB,KAYTQ,EAAK2E,SAAS,CAAEnS,KAAM4V,EAAI5V,KAAM8Z,MAAOlE,EAAIkE,QAZlC,wBAAAtL,EAAAZ,SAAAS,MAhSQb,EA8SnBqV,KA9SmB,eAAA1T,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA8SZ,SAAAgB,EAAMjM,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACLuC,EAAA,EAAMC,KAAK,CACTpC,MAAO,eACPoS,OAAQ,eACRqN,OAAQ,UACR9W,MAAO,MACPtG,QACEC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,sDACAD,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,OAChB3E,YAAY,uFACZiP,IAAK,SAAAC,GACH7S,EAAKqf,gBAAkBxM,KAG3B5Q,EAAA9C,EAAA+C,cAAA,4BACAD,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP9D,EAAKsf,YAAY3pB,EAAQ,KAF7B,iBAQFsM,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,sDACAD,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,OAChB3E,YAAY,mGACZiP,IAAK,SAAAC,GACH7S,EAAKuf,oBAAsB1M,KAG/B5Q,EAAA9C,EAAA+C,cAAA,4BACAD,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP9D,EAAKsf,YAAY3pB,EAAQ,KAF7B,oBArCH,wBAAAkM,EAAAzB,SAAAwB,MA9SY,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EA+VnBsf,YA/VmB,eAAA/O,EAAAlb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA+VL,SAAA4P,EAAO7a,EAAQiI,GAAf,IAAAhI,EAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,cACR3J,EAAQ,CACVJ,GAAIG,EAAOH,GACXmI,QACkB,IAAhBC,EACIoC,EAAKqf,gBAAgB/b,MAAM1N,MAC3BoK,EAAKuf,oBAAoBjc,MAAM1N,MACrCgI,YAAaA,GAEK,IAAhBA,IACFhI,EAAMhD,KAAO,GAVH6d,EAAAlR,KAAA,EAYMzE,GAAYlF,GAZlB,OAaO,KADbwS,EAZMqI,EAAAjR,MAaJ7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KAEpBtN,EAAA,EAAQD,MAAMsU,EAAI/G,KAhBR,wBAAAoP,EAAArQ,SAAAoQ,MA/VK,gBAAAjO,EAAA8N,GAAA,OAAAE,EAAA/O,MAAAC,KAAAhP,YAAA,GAAAuN,EAkXnBmf,YAlXmB,eAAAxO,EAAAtb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAkXL,SAAAgQ,EAAOjb,EAAQgB,GAAf,IAAAyR,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,UACG,eAAX5I,EADQ,CAAAka,EAAAtR,KAAA,QAEVuC,EAAA,EAAMC,KAAK,CACTpC,MAAK,6BAAA4H,OAAW5R,EAAOH,GAAlB,wCACLwM,QAASC,EAAA9C,EAAA+C,cAAA,WAAMvM,EAAOsnB,aAAa,UACnClL,OAAO,iBALClB,EAAAtR,KAAA,gBAAAsR,EAAAxE,GASF1V,EATEka,EAAAtR,KAUH,WAVGsR,EAAAxE,GAAA,EAaH,UAbGwE,EAAAxE,GAAA,GAgBH,mBAhBGwE,EAAAxE,GAAA,0BAAAwE,EAAAtR,KAAA,EAWMxE,GAAiB,EAAG,IAAKpF,EAAOH,IAXtC,cAWN4S,EAXMyI,EAAArR,KAAAqR,EAAApE,OAAA,2BAAAoE,EAAAtR,KAAA,GAcMvE,GAAY,EAAG,IAAKrF,EAAOH,IAdjC,eAcN4S,EAdMyI,EAAArR,KAAAqR,EAAApE,OAAA,2BAAAoE,EAAAtR,KAAA,GAiBMtE,GAAY,EAAG,IAAKtF,EAAOH,IAjBjC,eAiBN4S,EAjBMyI,EAAArR,KAAAqR,EAAApE,OAAA,2BAAAoE,EAAApE,OAAA,oBAsBVzM,EAAKiU,eAAiB7L,EAAI5V,KAC1BwN,EAAKrJ,OAASA,EACdqJ,EAAK2E,SAAS,CAAE6D,gBAAgB,IAxBtB,yBAAAqI,EAAAzQ,SAAAwQ,MAlXK,gBAAAN,EAAAI,GAAA,OAAAC,EAAAnP,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACPxX,KAAM,EACNmZ,SAAU,GACVzF,gBAAgB,GAElBxI,EAAKvC,MAAQ,KATIuC,mFAuBjByB,KAAKyc,eAAe,EAAG,qCAEhB,IAAArY,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACXjD,EAAK5J,WAAa6M,EAAI,GACtBjD,EAAK3J,SAAW4M,EAAI,MAJ1B,eAQE7G,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE7G,aAAa,KACbpI,MAAO,CAAE6E,MAAO,KAChBxB,SAAU,SAAAlR,GAAK,OAAKiQ,EAAKpI,MAAQ7H,IAEjCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,MAArB,MACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,WAArB,WACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,UAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,SAArB,6BAhBJ,eAmBEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,KAChB3E,YAAY,mDACZiP,IAAK,SAAAC,GACHhN,EAAKvC,MAAQuP,KAvBnB,eA2BE5Q,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE7G,aAAa,GACbpI,MAAO,CAAE6E,MAAO,KAChBxB,SAAU,SAAAlR,GAAK,OAAKiQ,EAAKlO,OAAS/B,IAElCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,IAArB,gBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,uBAtCJ,eAyCEqM,EAAA9C,EAAA+C,cAACsE,GAAD,CACE5T,KAAK,UACLkR,QAASrC,KAAK0c,SACd3a,KAAK,YAIXsP,MACE7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMxH,OAAOwI,SAASiO,WACzC9Q,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIfqP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiB,GACjBqF,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOpD,SAASjJ,KAAKmE,MAAM0G,OAC3BxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKlB,SAAS,CACZ7P,KAAMA,IAER+Q,EAAKqY,eAAeppB,EAAMmZ,IAE5BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAKqY,eAAe/P,EAASzH,KAGjCuM,OAAQ,CAAEC,EAAG,QAEdzR,KAAKmE,MAAM4C,gBACVvG,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MACkB,WAAhB8B,KAAK9K,OACD,eACgB,UAAhB8K,KAAK9K,OACL,2BACA,uCAEN8S,QAAShI,KAAKmE,MAAM4C,eACpBkB,SAAU,WACR7D,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElCmB,OAAQ,MAER1H,EAAA9C,EAAA+C,cAACsd,GAAD,CACEzB,SAAU,WACRlY,EAAKqY,eAAerY,EAAKD,MAAM9Q,KAAM+Q,EAAKD,MAAMqI,UAChDpI,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElC7S,OAAQ8L,KAAKwS,eACbtd,OAAQ8K,KAAK9K,kBArIPsN,aC0CL6Z,GAFSjf,EAAA,EAAKsF,QAALtF,CA1DP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACFnN,EAASsK,EAAMtK,OACjBxC,EAAS2M,KAAKgG,MAAMnQ,EAAOxC,QA0B/B,OACE8O,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,kBACM/O,EAAOsD,QADb,kCAC4BtD,EAAOwL,OADnC,gBAEoB,WAAjBsB,EAAMtJ,OAAsB,eAAO,gBAEtCsL,EAAA9C,EAAA+C,cAAArD,EAAA,GACE+K,SAAU,CAAEC,KAAM,GAClBC,WAAW,OACX9G,SAjCiB,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAAyL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAKlL,GAAZ,IAAAC,EAAAuS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBuB,EADmB,CAAAzB,EAAAE,KAAA,eAElB1J,EAAM,CACRyoB,WAAY3oB,EAAOH,GACnB+oB,eAAgB5oB,EAAOxC,OACvBqrB,eAAgB,GAEG,WAAjBve,EAAMtJ,SACRd,EAAI,oBAAsBD,EAAM6oB,OAChC5oB,EAAI,gBAAkB,GATFwJ,EAAAE,KAAA,EAWJ/E,GAAkB3E,GAXd,OAYH,KADbuS,EAXgB/I,EAAAG,MAYd7H,QACN5D,EAAA,EAAQkN,QAAQ,2BAASmH,EAAI/G,KAC7BpB,EAAM8d,WACN9d,EAAMO,KAAK0P,eAEXnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAjBP,wBAAAhC,EAAAe,SAAApB,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,MAiCIwP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAEuH,QAA0B,WAAjB/K,EAAMtJ,OAAsB,QAAU,SAEvDmM,EAAkB,SAAU,CAC3BmI,aAAc9X,EAAOsrB,QADtB3b,CAEEb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO4H,SAAP,CAAgBC,SAAU,CAAEC,QAAS,EAAGC,QAAS,QAGtDpJ,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUoR,SAAS,UAAhC,qBC0JK0a,eAtMb,SAAAA,EAAYze,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAid,IACjB1e,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAqpB,GAAAha,KAAAjD,KAAMxB,KASRie,eAVmB,eAAAhS,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAUF,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAqT,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGrE,GAAkBpG,EAAMC,GAD3B,OAEI,KADbqT,EADS/I,EAAAG,MAEP7H,QACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KACV8Z,MAAOlE,EAAIkE,QALA,wBAAAjN,EAAAe,SAAApB,MAVE,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAmHnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,iBACPmN,UAAW,IAEb,CACEnN,MAAO,KACPmN,UAAW,IAEb,CACEnN,MAAO,iBACPmN,UAAW,IAEb,CACEnN,MAAO,2BACPmN,UAAW,IAEb,CACEnN,MAAO,iBACPmN,UAAW,IAEb,CACEnN,MAAO,2BACPmN,UAAW,IAEb,CACEnN,MAAO,2BACPmN,UAAW,IAEb,CACEnN,MAAO,2BACPmN,UAAW,IAEb,CACEnN,MAAO,2BACPmN,UAAW,IAEb,CACEnN,MAAO,2BACPmN,UAAW,IAEb,CACEnN,MAAO,2BACPmN,UAAW,IAEb,CACEnN,MAAO,2BACPmN,UAAW,IAEb,CACEnN,MAAO,eACPmN,UAAW,IAEb,CACEnN,MAAO,2BACPmN,UAAW,IAEb,CACEnN,MAAO,2BACPmN,UAAW,MA9KI9M,EA2LnB8b,OA3LmB,eAAApb,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA2LV,SAAAC,EAAMlL,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACPS,EAAKrJ,OAAS,SACdqJ,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CAAE6D,gBAAgB,IAHzB,wBAAAxH,EAAAZ,SAAAS,MA3LU,gBAAAyB,GAAA,OAAA5B,EAAAc,MAAAC,KAAAhP,YAAA,GAAAuN,EAgMnB2e,OAhMmB,eAAAhd,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAgMV,SAAAgB,EAAMjM,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACPS,EAAKrJ,OAAS,SACdqJ,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CAAE6D,gBAAgB,IAHzB,wBAAA3G,EAAAzB,SAAAwB,MAhMU,gBAAAW,GAAA,OAAAZ,EAAAH,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACPxX,KAAM,EACNmZ,SAAU,GACVzF,gBAAgB,GAPDxI,mFAoBjByB,KAAKyc,eAAe,EAAG,qCAEhB,IAAArY,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACXjD,EAAK5J,WAAa6M,EAAI,GACtBjD,EAAK3J,SAAW4M,EAAI,MAJ1B,eAQE7G,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE/O,YAAY,2BACZF,MAAO,CAAE6E,MAAO,KAChBxB,SAAU,SAAAlR,GAAK,OAAKiQ,EAAKlO,OAAS/B,IAElCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,6BAfJ,eAkBEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,KAChB3E,YAAY,mDACZiP,IAAK,SAAAC,GACHhN,EAAKvC,MAAQuP,KAtBnB,eA0BE5Q,EAAA9C,EAAA+C,cAACsE,GAAD,CACE5T,KAAK,UACLkR,QAASrC,KAAK0c,SACd3a,KAAK,YAIXsP,MACE7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMxH,OAAOwI,SAASiO,WACzC9Q,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIfqP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiB,GACjBqF,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKlB,SAAS,CACZ7P,KAAMA,IAER+Q,EAAKqY,eAAeppB,EAAMmZ,IAE5BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAKqY,eAAe/P,EAASzH,KAGjCuM,OAAQ,CAAEC,EAAG,QAEdzR,KAAKmE,MAAM4C,gBACVvG,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAuB,WAAhB8B,KAAK9K,OAAsB,eAAO,eACzC8S,QAAShI,KAAKmE,MAAM4C,eACpBkB,SAAU,WACR7D,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElCmB,OAAQ,MAER1H,EAAA9C,EAAA+C,cAACud,GAAD,CACE1B,SAAU,WACRlY,EAAKqY,eAAerY,EAAKD,MAAM9Q,KAAM+Q,EAAKD,MAAMqI,UAChDpI,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElC7S,OAAQ8L,KAAKwS,eACbtd,OAAQ8K,KAAK9K,kBA7GPsN,aCyGL6Z,GAFSjf,EAAA,EAAKsF,QAALtF,CA3GP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACFnN,EAASsK,EAAMtK,OACfgB,EAASsJ,EAAMtJ,OAmBrB,OACEsL,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAArD,EAAA,GACE+K,SAAU,CAAEC,KAAM,GAClBC,WAAW,OACX9G,SAvBiB,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAAyL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAKlL,GAAZ,IAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBuB,EADmB,CAAAzB,EAAAE,KAAA,cAEP,SAAX5I,IACFf,EAAMJ,GAAKG,EAAOH,IAHE6J,EAAAE,KAAA,EAKJnE,GAAmBxF,GALf,OAMH,KADbwS,EALgB/I,EAAAG,MAMd7H,QACN5D,EAAA,EAAQkN,QAAQ,2BAASmH,EAAI/G,KAC7BpB,EAAM8d,WACN9d,EAAMO,KAAK0P,eAEXnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAXP,wBAAAhC,EAAAe,SAAApB,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,MAuBIwP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAOwB,MAF9C2L,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,aAAc,CAC/B7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAOO,YAF9C4M,CAICb,EAAA9C,EAAA+C,cAAAwQ,GAAA,GAAQjP,MAAO,CAAE6E,MAAO,QACtBrG,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,qCAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,WAAY,CAC7B7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAO+pB,UAF9C5c,CAICb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAM,KAAb,gBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAM,KAAb,mBAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,wCACdjH,EAAkB,cAAe,CAChC7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAOgqB,aAF9C7c,CAICb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAM,KAAb,UACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAM,KAAb,aAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,8CACdjH,EAAkB,gBAAiB,CAClC7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAOiqB,eAF9C9c,CAICb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAM,KAAb,UACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAM,KAAb,aAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,WAAY,CAC7B7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAOkqB,UAF9C/c,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAOoM,MAF9Ce,CAICb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO4H,SAAP,CACEzH,MAAO,CAAE6E,MAAO,OAChB6C,SAAU,CAAEE,QAAS,QAK3BpJ,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUoR,SAAS,UAAhC,qBC4HKgb,eAxNb,SAAAA,EAAY/e,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAud,IACjBhf,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA2pB,GAAAta,KAAAjD,KAAMxB,KASRie,eAVmB,eAAAhS,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAUF,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAqT,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGpE,GAAmBrG,EAAMC,GAD5B,OAEI,KADbqT,EADS/I,EAAAG,MAEP7H,OACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KACV8Z,MAAO5B,SAAStC,EAAIkE,SAGtBvY,EAAA,EAAQD,MAAMsU,EAAI/G,KARL,wBAAAhC,EAAAe,SAAApB,MAVE,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAqHnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,KACPmN,UAAW,MAEb,CACEnN,MAAO,2BACPmN,UAAW,QAEb,CACEnN,MAAO,iBACPmN,UAAW,cAEb,CACEnN,MAAO,2BACPmN,UAAW,WACXqC,OAAQ,SAAAM,GAAI,OAAIxN,EAAA9C,EAAA+C,cAAA,YAAgB,MAATuN,EAAe,eAAO,kBAE/C,CACE9P,MAAO,uCACPmN,UAAW,cACXqC,OAAQ,SAAAM,GAAI,OAAIxN,EAAA9C,EAAA+C,cAAA,YAAgB,MAATuN,EAAe,SAAM,YAE9C,CACE9P,MAAO,6CACPmN,UAAW,gBACXqC,OAAQ,SAAAM,GAAI,OAAIxN,EAAA9C,EAAA+C,cAAA,YAAgB,MAATuN,EAAe,SAAM,YAE9C,CACE9P,MAAO,2BACPmN,UAAW,OACXxE,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,YAEb,CACEnN,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,IAEV,CACE5K,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL5C,QAAS,WACP9D,EAAKqV,KAAK1f,KAHd,gBAQAsM,EAAA9C,EAAA+C,cAAA8P,GAAA,GACErS,MAAM,wCACNsS,UAAW,kBAAMjS,EAAKmZ,OAAOxjB,IAC7Boc,OAAO,eACPG,WAAW,gBAEXjQ,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY5T,KAAK,SAAS8T,KAAK,SAA/B,sBAlLS1G,EA0LnBme,SA1LmB9oB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA0LR,SAAAC,IAAA,IAAAjL,EAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACL3J,EAAQ,CACVa,QAASuJ,EAAKsD,MAAMA,MAAM1N,OAFnBoL,EAAAzB,KAAA,EAISpE,GAChB6E,EAAK4F,MAAM9Q,KACXkL,EAAK4F,MAAMqI,SACXrY,GAPO,OAIHwS,EAJGpH,EAAAxB,KASTQ,EAAK2E,SAAS,CAAEnS,KAAM4V,EAAI5V,KAAM8Z,MAAO5B,SAAStC,EAAIkE,SAT3C,wBAAAtL,EAAAZ,SAAAS,MA1LQb,EAqMnBkH,IArMmB,eAAAvF,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAqMb,SAAAgB,EAAMjM,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACJS,EAAKrJ,OAAS,MACdqJ,EAAK2E,SAAS,CAAE6D,gBAAgB,IAF5B,wBAAA3G,EAAAzB,SAAAwB,MArMa,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EAyMnBqV,KAzMmB,eAAA9E,EAAAlb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAyMZ,SAAA4P,EAAM7a,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,OACLS,EAAKrJ,OAAS,OACdqJ,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CAAE6D,gBAAgB,IAH3B,wBAAAiI,EAAArQ,SAAAoQ,MAzMY,gBAAAjO,GAAA,OAAAgO,EAAA/O,MAAAC,KAAAhP,YAAA,GAAAuN,EA8MnBmZ,OA9MmB,eAAAxI,EAAAtb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA8MV,SAAAgQ,EAAMjb,GAAN,IAAAyS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,cAAAsR,EAAAtR,KAAA,EACWlE,GAAkB1F,EAAOH,IADpC,OAEY,KADb4S,EADCyI,EAAArR,MAEC7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KAEpBtN,EAAA,EAAQD,MAAMsU,EAAI/G,KAEpBrB,EAAKke,eAAe,EAAG,IAPhB,wBAAArN,EAAAzQ,SAAAwQ,MA9MU,gBAAAP,GAAA,OAAAM,EAAAnP,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACPxX,KAAM,EACNmZ,SAAU,GACVzF,gBAAgB,GAPDxI,mFAsBjByB,KAAKyc,eAAe,EAAG,qCAEhB,IAAArY,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACXjD,EAAKlB,SAAS,CACZ1I,WAAY6M,EAAI,GAChB5M,SAAU4M,EAAI,QALtB,eAUE7G,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,KAChB3E,YAAY,mCACZiP,IAAK,SAAAC,GACHhN,EAAKvC,MAAQuP,KAdnB,eAkBE5Q,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAASrC,KAAK0c,SACd3a,KAAK,SACLkD,KAAK,YArBT,eAwBEzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKyF,IAAKR,KAAK,WAApC,iBAKJoM,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAEwU,MAAO,SAChBnU,QAAS,kBAAMxH,OAAOwI,SAASiO,UAC/BvP,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiB,GACjBqF,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKlB,SAAS,CACZ7P,KAAMA,IAER+Q,EAAKqY,eAAeppB,EAAMmZ,IAE5BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAKqY,eAAe/P,EAASzH,OAIlCjF,KAAKmE,MAAM4C,gBACVvG,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAuB,QAAhB8B,KAAK9K,OAAmB,eAAO,eACtC8S,QAAShI,KAAKmE,MAAM4C,eACpBkB,SAAU,WACR7D,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElCmB,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAC4d,GAAD,CACE/B,SAAU,WACRlY,EAAKqY,eAAerY,EAAKD,MAAM9Q,KAAM+Q,EAAKD,MAAMqI,UAChDpI,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElC7S,OAAQ8L,KAAKwS,eACbtd,OAAQ8K,KAAK9K,kBA/GDsN,aCkKX+a,eAlKb,SAAAA,EAAY/e,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAud,IACjBhf,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA2pB,GAAAta,KAAAjD,KAAMxB,KAQRie,eATmB,eAAAhS,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KASF,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAqT,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGhE,GAAazG,EAAMC,GADtB,OAEI,KADbqT,EADS/I,EAAAG,MAEP7H,OACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KACV8Z,MAAO5B,SAAStC,EAAIkE,SAGtBvY,EAAA,EAAQD,MAAM,iEARD,wBAAAuL,EAAAe,SAAApB,MATE,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EA+FnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,KACPmN,UAAW,MAEb,CACEnN,MAAO,UACPmN,UAAW,WAEb,CACEnN,MAAO,iBACPmN,UAAW,eAEb,CACEnN,MAAO,2BACPmN,UAAW,iBAEb,CACEnN,MAAO,iBACPmN,UAAW,cAEb,CACEnN,MAAO,2BACPmN,UAAW,gBAEb,CACEnN,MAAO,2BACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL5C,QAAS,WACP9D,EAAK+f,MAAMpqB,KAHf,mBAWN,CACEgK,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,MA3IOvK,EA8InB+f,MAAQ,SAAApqB,GACNmM,EAAA,EAAMC,KAAK,CACTpC,MAAO,2BACPqC,QAASrM,EAAOqqB,gBAjJDhgB,EAoJnBme,SApJmB9oB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAoJR,SAAAC,IAAA,IAAAjL,EAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACL3J,EAAQ,CACVa,QAASuJ,EAAKsD,MAAMA,MAAM1N,MAC1BqG,WAAY+D,EAAK/D,WACjBC,SAAU8D,EAAK9D,UAJR8E,EAAAzB,KAAA,EAMShE,GAAayE,EAAK4F,MAAM9Q,KAAMkL,EAAK4F,MAAMqI,SAAUrY,GAN5D,OAOU,KADbwS,EANGpH,EAAAxB,MAOD7H,OACNqI,EAAK2E,SAAS,CAAEnS,KAAM4V,EAAI5V,KAAM8Z,MAAO5B,SAAStC,EAAIkE,SAEpDvY,EAAA,EAAQD,MAAM,iEAVP,wBAAAkN,EAAAZ,SAAAS,MAlJTb,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACPxX,KAAM,EACNmZ,SAAU,IANKjO,mFAqBjByB,KAAKyc,eAAe,EAAG,qCAEhB,IAAArY,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACXjD,EAAK5J,WAAa6M,EAAI,GACtBjD,EAAK3J,SAAW4M,EAAI,MAJ1B,eAQE7G,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,KAChB3E,YAAY,4BACZiP,IAAK,SAAAC,GACHhN,EAAKvC,MAAQuP,KAZnB,eAgBE5Q,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAASrC,KAAK0c,SACd3a,KAAK,SACLkD,KAAK,YAnBT,eAsBEzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKyF,IAAKR,KAAK,WAApC,iBAKJoM,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAEwU,MAAO,SAChBnU,QAAS,kBAAMxH,OAAOwI,SAASiO,UAC/BvP,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiB,GACjBqF,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKlB,SAAS,CACZ7P,KAAMA,IAER+Q,EAAKqY,eAAeppB,EAAMmZ,IAE5BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAKqY,eAAe/P,EAASzH,eAzFjBzC,aCyGX6Z,GAFSjf,EAAA,EAAKsF,QAALtF,CA3GP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACFnN,EAASsK,EAAMtK,OACfgB,EAASsJ,EAAMtJ,OAmBrB,OACEsL,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAArD,EAAA,GACE+K,SAAU,CAAEC,KAAM,GAClBC,WAAW,OACX9G,SAvBiB,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAAyL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAKlL,GAAZ,IAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBuB,EADmB,CAAAzB,EAAAE,KAAA,cAEP,SAAX5I,IACFf,EAAMJ,GAAKG,EAAOH,IAHE6J,EAAAE,KAAA,EAKJnE,GAAmBxF,GALf,OAMH,KADbwS,EALgB/I,EAAAG,MAMd7H,QACN5D,EAAA,EAAQkN,QAAQ,2BAASmH,EAAI/G,KAC7BpB,EAAM8d,WACN9d,EAAMO,KAAK0P,eAEXnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAXP,wBAAAhC,EAAAe,SAAApB,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,MAuBIwP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAOwB,MAF9C2L,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,aAAc,CAC/B7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAOO,YAF9C4M,CAICb,EAAA9C,EAAA+C,cAAAwQ,GAAA,GAAQjP,MAAO,CAAE6E,MAAO,QACtBrG,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,qCAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,WAAY,CAC7B7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAO+pB,UAF9C5c,CAICb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAM,KAAb,gBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAM,KAAb,mBAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,wCACdjH,EAAkB,cAAe,CAChC7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAOgqB,aAF9C7c,CAICb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAM,KAAb,UACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAM,KAAb,aAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,8CACdjH,EAAkB,gBAAiB,CAClC7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAOiqB,eAF9C9c,CAICb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAM,KAAb,UACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAM,KAAb,aAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,WAAY,CAC7B7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAOkqB,UAF9C/c,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CAAC,CAAEgK,UAAU,IACpBgI,aAAyB,QAAXtU,EAAmB,GAAKhB,EAAOoM,MAF9Ce,CAICb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO4H,SAAP,CACEzH,MAAO,CAAE6E,MAAO,OAChB6C,SAAU,CAAEE,QAAS,QAK3BpJ,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUoR,SAAS,UAAhC,qBCsHKgb,eAnNb,SAAAA,EAAY/e,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAud,IACjBhf,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA2pB,GAAAta,KAAAjD,KAAMxB,KASRie,eAVmB,eAAAhS,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAUF,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAqT,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGjE,GAAgBxG,EAAMC,GADzB,OAEI,KADbqT,EADS/I,EAAAG,MAEP7H,OACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KACV8Z,MAAO5B,SAAStC,EAAIkE,SAGtBvY,EAAA,EAAQD,MAAM,iEARD,wBAAAuL,EAAAe,SAAApB,MAVE,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAqHnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,KACPmN,UAAW,MAEb,CACEnN,MAAO,uBACPmN,UAAW,IAEb,CACEnN,MAAO,iCACPmN,UAAW,IAEb,CACEnN,MAAO,iBACPmN,UAAW,GACXqC,OAAQ,SAAAM,GAAI,OAAIxN,EAAA9C,EAAA+C,cAAA,YAAgB,MAATuN,EAAe,eAAO,kBAE/C,CACE9P,MAAO,OACPmN,UAAW,GACXqC,OAAQ,SAAAM,GAAI,OAAIxN,EAAA9C,EAAA+C,cAAA,YAAgB,MAATuN,EAAe,SAAM,YAE9C,CACE9P,MAAO,2BACPmN,UAAW,GACXqC,OAAQ,SAAAM,GAAI,OAAIxN,EAAA9C,EAAA+C,cAAA,YAAgB,MAATuN,EAAe,SAAM,YAE9C,CACE9P,MAAO,2BACPmN,UAAW,GACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,YAEb,CACEnN,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,GAAP,OACNsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACEE,KAAK,QACL5C,QAAS,WACP9D,EAAKqV,KAAK1f,KAHd,gBAQAsM,EAAA9C,EAAA+C,cAAA8P,GAAA,GACErS,MAAM,wCACNsS,UAAW,kBAAMjS,EAAKmZ,OAAOxjB,IAC7Boc,OAAO,eACPG,WAAW,gBAEXjQ,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY5T,KAAK,SAAS8T,KAAK,SAA/B,sBA7KS1G,EAqLnBme,SArLmB9oB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAqLR,SAAAC,IAAA,IAAAjL,EAAAwS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACL3J,EAAQ,CACVa,QAASuJ,EAAKsD,MAAMA,MAAM1N,OAFnBoL,EAAAzB,KAAA,EAISjE,GAChB0E,EAAK4F,MAAM9Q,KACXkL,EAAK4F,MAAMqI,SACXrY,GAPO,OAIHwS,EAJGpH,EAAAxB,KASTQ,EAAK2E,SAAS,CAAEnS,KAAM4V,EAAI5V,KAAM8Z,MAAO5B,SAAStC,EAAIkE,SAT3C,wBAAAtL,EAAAZ,SAAAS,MArLQb,EAgMnBkH,IAhMmB,eAAAvF,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAgMb,SAAAgB,EAAMjM,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACJS,EAAKrJ,OAAS,MACdqJ,EAAK2E,SAAS,CAAE6D,gBAAgB,IAF5B,wBAAA3G,EAAAzB,SAAAwB,MAhMa,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EAoMnBqV,KApMmB,eAAA9E,EAAAlb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAoMZ,SAAA4P,EAAM7a,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,OACLS,EAAKrJ,OAAS,OACdqJ,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CAAE6D,gBAAgB,IAH3B,wBAAAiI,EAAArQ,SAAAoQ,MApMY,gBAAAjO,GAAA,OAAAgO,EAAA/O,MAAAC,KAAAhP,YAAA,GAAAuN,EAyMnBmZ,OAzMmB,eAAAxI,EAAAtb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAyMV,SAAAgQ,EAAMjb,GAAN,IAAAyS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,cAAAsR,EAAAtR,KAAA,EACWlE,GAAkB1F,EAAOH,IADpC,OAEY,KADb4S,EADCyI,EAAArR,MAEC7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KAEpBtN,EAAA,EAAQD,MAAMsU,EAAI/G,KAEpBrB,EAAKke,eAAe,EAAG,IAPhB,wBAAArN,EAAAzQ,SAAAwQ,MAzMU,gBAAAP,GAAA,OAAAM,EAAAnP,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACPxX,KAAM,EACNmZ,SAAU,GACVzF,gBAAgB,GAPDxI,mFAsBjByB,KAAKyc,eAAe,EAAG,qCAEhB,IAAArY,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACXjD,EAAKlB,SAAS,CACZ1I,WAAY6M,EAAI,GAChB5M,SAAU4M,EAAI,QALtB,eAUE7G,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,KAChB3E,YAAY,mCACZiP,IAAK,SAAAC,GACHhN,EAAKvC,MAAQuP,KAdnB,eAkBE5Q,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAASrC,KAAK0c,SACd3a,KAAK,SACLkD,KAAK,YArBT,eAwBEzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKyF,IAAKR,KAAK,WAApC,iBAKJoM,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAEwU,MAAO,SAChBnU,QAAS,kBAAMxH,OAAOwI,SAASiO,UAC/BvP,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiB,GACjBqF,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKlB,SAAS,CACZ7P,KAAMA,IAER+Q,EAAKqY,eAAeppB,EAAMmZ,IAE5BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAKqY,eAAe/P,EAASzH,OAIlCjF,KAAKmE,MAAM4C,gBACVvG,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAuB,QAAhB8B,KAAK9K,OAAmB,eAAO,eACtC8S,QAAShI,KAAKmE,MAAM4C,eACpBkB,SAAU,WACR7D,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElCmB,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAC+d,GAAD,CACElC,SAAU,WACRlY,EAAKqY,eAAerY,EAAKD,MAAM9Q,KAAM+Q,EAAKD,MAAMqI,UAChDpI,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElC7S,OAAQ8L,KAAKwS,eACbtd,OAAQ8K,KAAK9K,kBA/GDsN,aCuFX+H,eAzFb,SAAAA,EAAY/L,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAuK,IACjBhM,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA2W,GAAAtH,KAAAjD,KAAMxB,KAiBR4M,YAAc,WACZ,MAA0B,UAAtB7M,EAAKC,MAAMtJ,OACN,CACL,CACEgJ,MAAO,qBACPmN,UAAW,eAEb,CACEnN,MAAO,2BACPmN,UAAW,YACXqC,OAAQ5E,KAGmB,SAAtBvK,EAAKC,MAAMtJ,OACb,CACL,CACEgJ,MAAO,UACPmN,UAAW,MAEb,CACEnN,MAAO,2BACPmN,UAAW,oBAGb,CACEnN,MAAO,mCACPmN,UAAW,iBAEb,CACEnN,MAAO,2BACPmN,UAAW,YAEXC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAE8N,cAAgBD,EAAEC,gBAExC,CACEtN,MAAO,eACPmN,UAAW,OAEb,CACEnN,MAAO,mCACPmN,UAAW,uBAEb,CACEnN,MAAO,eACPmN,UAAW,cAEb,CACEnN,MAAO,2BACPmN,UAAW,gBAIR,CACL,CACEnN,MAAO,qBACPmN,UAAW,eAEb,CACEnN,MAAO,eACPmN,UAAW,WAEb,CACEnN,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,MAhFdvK,EAAK4F,MAAQ,GAFI5F,wEAIV,IACCxN,EAASiP,KAAKxB,MAAMwb,aAApBjpB,KAGR,OAFAoG,QAAQC,IAAIrG,GAGVyP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAO4X,GAAR,SAAAhG,OAAmBgG,IAC3BC,WAAYhb,EACZib,QAAShM,KAAKoL,cACdnG,KAAK,iBAfYzC,aCuCVyX,eAvCb,SAAAA,EAAYzb,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAia,IACjB1b,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAqmB,GAAAhX,KAAAjD,KAAMxB,KA4BR2b,YA7BmB,eAAA1P,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA6BL,SAAA5B,EAAMrJ,GAAN,IAAAyS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMlB,GAChB1I,EAAOgG,SACPhG,EAAOc,QACPuJ,EAAK4F,MAAMtH,eAJD,OACN8J,EADM/I,EAAAG,KAMZzL,EAAA,EAAQgO,KAAKqG,EAAI/G,KANL,wBAAAhC,EAAAe,SAAApB,MA7BK,gBAAAsC,GAAA,OAAA4K,EAAA1K,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXtH,cAAe,IAHA0B,wEAMV,IAAA6F,EAAApE,KACD9L,EAAS8L,KAAKxB,MAAMtK,OAC1B,OACEsM,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,6BAAWvM,EAAOgG,UAClBsG,EAAA9C,EAAA+C,cAAA,6BAAWvM,EAAOc,SAClBwL,EAAA9C,EAAA+C,cAAA,2BAASvM,EAAOgJ,QAChBsD,EAAA9C,EAAA+C,cAAA,uCAEED,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,CACE9N,SAAU,SAAAwM,GACRzN,EAAKlB,SAAS,CAAErG,cAAegV,EAAEzE,OAAOjZ,SAE1CA,MAAO6L,KAAKmE,MAAMtH,eAElB2D,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,sBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,uBAEFqM,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQD,QAAS,kBAAM+B,EAAK+V,YAAYjmB,KAAxC,yBAzBasO,aCiXR6Y,eApWb,SAAAA,EAAY7c,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAqb,IACjB9c,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAynB,GAAApY,KAAAjD,KAAMxB,KAiBRgM,SAlBmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAkBR,SAAA5B,EAAOlK,EAAMmZ,EAAUxS,GAAvB,IAAAwD,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYlC,GAASvI,EAAMmZ,EAAUxS,GADrC,OACHwD,EADGI,EAAAG,KAETQ,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAO5B,SAASzL,EAAOqN,SAJhB,wBAAAjN,EAAAe,SAAApB,MAlBQ,gBAAAsC,EAAAC,EAAAe,GAAA,OAAA4J,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAyBnBuM,aAAe,SAACzX,EAAMC,GAEpB,IAAI0G,EAAOpG,OAAAc,EAAA,EAAAd,CAAA,CACT0nB,KAAM,GACH/c,EAAKvE,SAEY,MAAlBuE,EAAK9K,UAAsC,MAAlB8K,EAAK9K,SAChCuG,EAAQ2b,UAAYpX,EAAK9K,SAChB8K,EAAK9K,WACduG,EAAQuE,EAAK9K,UAAY8K,EAAK7K,YAEhC6K,EAAKiM,SAASnX,EAAMC,EAAO0G,IApCVuE,EAsCnBqX,SAAW,WACT7Z,GAAqBwC,EAAK4F,QAvCT5F,EAuKnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,iBACPmN,UAAW,WACXxE,MAAO,KAET,CACE3I,MAAO,UACPmN,UAAW,UACXxE,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,YACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,SACXxE,MAAO,IACPyE,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAER,OAASqO,EAAErO,SAEjC,CACEgB,MAAO,2BACPmN,UAAW,eACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,OACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,iBACXxE,MAAO,IACPyE,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEsY,eAAiBzK,EAAEyK,iBAEzC,CACE9X,MAAO,2BACPmN,UAAW,aACXxE,MAAO,KAET,CACE3I,MAAO,uBACPmN,UAAW,aACXxE,MAAO,KAET,CACE3I,MAAO,iCACPmN,UAAW,eACXxE,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,SACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,IAAI+J,EACJ,OAAQ7H,GACN,IAAK,IACH6H,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,QACEA,EAAO,GAGX,OAAOrV,EAAA9C,EAAA+C,cAAA,YAAOoV,KAGlB,CACE3X,MAAO,2BACPmN,UAAW,eACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,gBACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,aACXxE,MAAO,IACP6G,OAAQ5E,GACRwC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEuY,WAAa1K,EAAE0K,aAErC,CACE/X,MAAO,2BACPmN,UAAW,aACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,MAAa,MAATkC,GAAiBA,EAEPlF,GAAYkF,GADjB,IAGX1C,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEwY,WAAa3K,EAAE2K,aAErC,CACEhY,MAAO,eACPmN,UAAW,GACXxE,MAAO,IACP6G,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKqV,KAAK1f,KAArC,mBAIN,CACEgK,MAAO,2BACPmN,UAAW,GACXxE,MAAO,IACP6G,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,kBAAM9D,EAAKgd,UAAUrnB,EAAQ,UACtC/C,KAAK,WAFP,mBASN,CACE+M,MAAO,2BACPmN,UAAW,GACXqC,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA2Y,GAAA,GACE7Y,QAASrM,EAAOsnB,YAChBtd,MAAOhK,EAAOc,QAAU,2BACxB0S,QAAQ,SAERlH,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY5T,KAAK,WAAjB,6BAEFqP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKgd,UAAUrnB,EAAQ,mBAAmB/C,KAAK,WAA1E,iCA1TWoN,EAiUnBkgB,mBAAqB,SAACjmB,EAAM6R,GAC1B,IAAIU,EAAYV,EAAW,GAAK,YAC5BY,EAAUZ,EAAW,GAAK,YAC9B9L,EAAK2E,SAAS,CACZ1I,WAAYuQ,EACZtQ,SAAUwQ,KAtUK1M,EAyUnBgd,UAzUmB,eAAAtc,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAyUP,SAAAC,EAAOlL,EAAQgB,GAAf,IAAAyR,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACVS,EAAKrJ,OAASA,EACdqJ,EAAKyb,aAAe,CAClBjpB,KAAM,GACN8Z,MAAO,EACP9W,GAAIG,EAAOc,SAGA,SAAXE,EARQ,CAAAqK,EAAAzB,KAAA,eAAAyB,EAAAzB,KAAA,EASEjJ,EAAW,EAAG,GAAIX,EAAOc,SAT3B,OAAAuK,EAAAqL,GAAArL,EAAAxB,KAAAwB,EAAAzB,KAAA,mBAUO,UAAX5I,EAVI,CAAAqK,EAAAzB,KAAA,gBAAAyB,EAAAzB,KAAA,GAWEjC,GAAW,EAAG,GAAI3H,EAAOgG,UAX3B,QAAAqF,EAAAkc,GAAAlc,EAAAxB,KAAAwB,EAAAzB,KAAA,wBAAAyB,EAAAzB,KAAA,GAYEhC,GAAW,EAAG,GAAI5H,EAAOgG,UAZ3B,QAAAqF,EAAAkc,GAAAlc,EAAAxB,KAAA,QAAAwB,EAAAqL,GAAArL,EAAAkc,GAAA,QAaS,KANb9U,EAPIpH,EAAAqL,IAaF1U,SACNqI,EAAKyb,aAAajpB,KAAO4V,EAAI5V,KAC7BwN,EAAKyb,aAAanP,MAAQlE,EAAIkE,OAEhCtM,EAAK2E,SAAS,CAAEwY,cAAc,IAjBpB,yBAAAnc,EAAAZ,SAAAS,MAzUO,gBAAA0B,EAAA8N,GAAA,OAAA3P,EAAAc,MAAAC,KAAAhP,YAAA,GAAAuN,EA4VnBqV,KAAO,SAAA1f,GACLiD,QAAQC,IAAI,KAEZmH,EAAKmgB,WAAaxqB,EAClBqK,EAAK2E,SAAS,CAAE6D,gBAAgB,KA9VhCxI,EAAKvE,QAAU,CACbQ,WAAY,GACZC,SAAU,GACVC,aAAc,GACdvJ,KAAM,GAERoN,EAAK9K,SAAW,GAChB8K,EAAK7K,WAAa,GAClB6K,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACVuE,gBAAgB,EAChBhK,gBAAgB,GAfDxI,mFA0CjByB,KAAKwK,SAAS,EAAG,GAAI,CAAE8Q,KAAM,qCAEtB,IAAAlX,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE/O,YAAY,qBACZF,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAK3Q,SAAWU,IAEpCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,YAArB,kBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,WAArB,WACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,cAArB,wBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,6BAVJ,YAaEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,uCACZF,MAAO,CAAE6E,MAAO,KAChBxB,SAAU,SAAAwM,GAAC,OAAKzN,EAAK1Q,WAAame,EAAEzE,OAAOjZ,SAjB/C,YAoBEqM,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACXjD,EAAKpK,QAAQQ,WAAa6M,EAAI,GAC9BjD,EAAKpK,QAAQS,SAAW4M,EAAI,MAvBlC,YA2BE7G,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE7G,aAAa,GACbpI,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAKpK,QAAQU,aAAevG,IAEhDqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,IAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,uBArCJ,YAwCEqM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM+B,EAAK0G,aAAa,EAAG,KAAK7F,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIjBkgB,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAEwU,MAAO,SAChBnU,QAAS,WACPxH,OAAOwI,SAASiO,UAElBvP,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACR3G,KAAK,QACL4G,OAAO,KACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACda,WAAY,CACVC,gBAAiBlM,KAAKmE,MAAMqI,SAC5B+E,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAK0G,aAAazX,EAAMmZ,IAE1BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAK0G,aAAa4B,EAASzH,KAG/BuM,OAAQ,CAAEC,EAAG,KAAMC,EAAG,UAExBlR,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MACkB,UAAhB8B,KAAK9K,OACD,2BACgB,SAAhB8K,KAAK9K,OACL,2BACA,2BAEN8S,QAAShI,KAAKmE,MAAMuX,aACpBzT,SAAU,WACR7D,EAAKlB,SAAS,CAAEwY,cAAc,KAEhCxT,OAAQ,KACRrB,MAAM,OAENrG,EAAA9C,EAAA+C,cAACke,GAAD,CACE3E,aAAcha,KAAKga,aACnB9kB,OAAQ8K,KAAK9K,UAGhB8K,KAAKmE,MAAM4C,gBACVvG,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACN8J,QAAShI,KAAKmE,MAAM4C,eACpBkB,SAAU,WACR7D,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElCmB,OAAQ,KACRrB,MAAM,OAENrG,EAAA9C,EAAA+C,cAACme,GAAD,CAAU1qB,OAAQ8L,KAAK0e,sBAlKPlc,aCVtBqc,eACJ,SAAAA,EAAYrgB,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA6e,IACjBtgB,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAirB,GAAA5b,KAAAjD,KAAMxB,KAGRgM,SAJmB5W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAIR,SAAA5B,IAAA,IAAAvD,EAAA2M,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACL9D,EAAU,CACZtB,SAAU,YACVomB,QAAS,GAHFlhB,EAAAE,KAAA,EAKSxB,GAActC,GALvB,OAMU,KADb2M,EALG/I,EAAAG,MAMD7H,OACNqI,EAAKwgB,QAAUpY,EAAI5V,KAEnBuB,EAAA,EAAQD,MAAMsU,EAAI/G,KATX,wBAAAhC,EAAAe,SAAApB,MAJQgB,EAkInBK,aAAe,SAAAiT,GACbA,EAAE/S,iBACFP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAKlL,GAAZ,IAAA6qB,EAAAjrB,EAAA2B,EAAAwmB,EAAAxjB,EAAAsB,EAAA2M,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UAC7B3G,QAAQC,IAAIjD,GACPkL,EAFwB,CAAAE,EAAAzB,KAAA,gBAG3B3G,QAAQC,IAAImH,EAAKwgB,SAHUC,EAIczgB,EAAKwgB,QAAtChrB,EAJmBirB,EAInBjrB,GAAI2B,EAJespB,EAIftpB,KAAMwmB,EAJS8C,EAIT9C,SAAUxjB,EAJDsmB,EAICtmB,SACxBsB,EALuBpG,OAAAc,EAAA,EAAAd,CAAA,CAMzBG,KACA2B,QACGvB,EARsB,CASzBe,OAAQ,OACRwD,WACAumB,UAAW/C,EACXgD,QAAS,SAZgB3f,EAAAzB,KAAA,EAeTf,GAAc/C,GAfL,OAgBR,KADb2M,EAfqBpH,EAAAxB,MAgBnB7H,QACN5D,EAAA,EAAQkN,QAAQ,4BAAUmH,EAAI/G,KAC9BrB,EAAKiM,YAELlY,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KApBFL,EAAAzB,KAAA,iBAuB3BxL,EAAA,EAAQD,MAAM,4BAvBa,yBAAAkN,EAAAZ,SAAAS,MAA/B,gBAAAS,EAAAC,GAAA,OAAAb,EAAAc,MAAAC,KAAAhP,YAAA,KAlIAuN,EAAK4F,MAAQ,GAFI5F,mFAiBjByB,KAAKwK,4CAEE,IAAAlD,EACsCtH,KAAKxB,MAAMO,KAAhDsC,EADDiG,EACCjG,kBAAmBkG,EADpBD,EACoBC,cAC3B,OACE/G,EAAA9C,EAAA+C,cAAAiL,GAAA,GACE2F,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEN,MAAO,CAAEwU,MAAO,SAChBzU,KAAK,SACLM,QAAS,WACPxH,OAAOwI,SAASiO,cAMxB9Q,EAAA9C,EAAA+C,cAAArD,EAAA,GACE+K,SAAU,CAAEC,KAAM,GAClBsO,WAAY,CAAEtO,KAAM,IACpB7G,SAAUvB,KAAKpB,cAEf4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,aAAc,GAAhCA,CAKCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,4BACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,qCAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,WAAY,CAC7BmI,aAAc,GADfnI,CAGCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,gBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,mBAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEmL,MAAM,2BACNtG,MAAO,CAAEuH,QAAS,eAAgB1C,MAAO,OACzCsB,SAAU,CAAEC,KAAM,EAAGoP,OAAQ,GAC7Bd,WAAY,CAAEtO,KAAM,IAEnB/G,EAAkB,aAAc,CAC/B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,wCAEX,CACE6P,UAAW,SAACnB,EAAM7M,EAAO8M,GACnB9M,EAAQ,GACV8M,EAAS,wCAEN9M,GACH8M,IAEFA,QAdPI,CAkBEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,MAAO3B,YAAa,MAC9C1E,EAAA9C,EAAA+C,cAAA,kBAEFD,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAEuH,QAAS,eAAgB1C,MAAO,OACzC6P,WAAY,CAAEtO,KAAM,IAEnB/G,EAAkB,aAAc,CAC/B7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,wCAEX,CACE6P,UAAW,SAACnB,EAAM7M,EAAO8M,GAClB9M,GACH8M,IAEE9M,EAAQoT,EAAc,eACxBtG,EAAS,gEAEP9M,EAAQ,GACV8M,EAAS,wCAEXA,QAjBPI,CAqBEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWuZ,WAAY,CAAEc,OAAQ,IAC/BhX,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEnR,KAAK,UACLoR,SAAS,SACTjB,UAAU,oBACV6Z,UAAQ,GAJV,0BAtHU3Y,aAiKhB2c,GAAiB/hB,EAAA,EAAKsF,QAALtF,CAAcyhB,IAEtB/Z,eAAWqa,ICwCX9D,eArMb,SAAAA,EAAY7c,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAqb,IACjB9c,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAynB,GAAApY,KAAAjD,KAAMxB,KAQRgM,SATmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KASR,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAkK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYd,GAAU3J,EAAMC,EAAO,GADnC,OACHkK,EADGI,EAAAG,KAETQ,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KAAKmd,UAClBrD,MAAO5B,SAASzL,EAAOqN,SAJhB,wBAAAjN,EAAAe,SAAApB,MATQ,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAgBnBuM,aAhBmBlX,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAgBJ,SAAAC,IAAA,IAAAjL,EAAAqJ,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACT3J,EADSP,OAAAC,EAAA,EAAAD,CAAA,GAEV2K,EAAKvC,MAAQuC,EAAKsD,MAAMA,MAAM1N,OAFpBoL,EAAAzB,KAAA,EAIQd,GAAU,EAAG,GAAI,EAAG7I,GAJ5B,OAIPqJ,EAJO+B,EAAAxB,KAKbQ,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KAAKmd,UAClBrD,MAAO5B,SAASzL,EAAOqN,SAPZ,wBAAAtL,EAAAZ,SAAAS,MAhBIb,EA8EnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,UACPmN,UAAW,MAEb,CACEnN,MAAO,eACPmN,UAAW,aAEb,CACEnN,MAAO,2BACPmN,UAAW,aAEb,CACEnN,MAAO,2BACPmN,UAAW,GACXqC,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAK+f,MAAMpqB,KAAtC,qBAhGWqK,EAqGnB6gB,aAAe,WACb,MAAO,CACL/Z,SAAU,SAACga,EAAiBC,GAC1B/gB,EAAK+gB,aAAeA,GAEtBC,iBAAkB,SAAArrB,GAAM,MAAK,MA1GdqK,EAgHnB+f,MAhHmB,eAAApe,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAgHX,SAAAgB,EAAMjM,GAAN,IAAAyS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACYlJ,EAAYV,EAAOH,IAD/B,OACA4S,EADAvG,EAAArC,KAENzL,EAAA,EAAQgO,KAAKqG,EAAI5V,KAAK,GAAGwc,WAFnB,wBAAAnN,EAAAzB,SAAAwB,MAhHW,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EAoHnBtK,WApHmBL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAoHN,SAAA4P,IAAA,OAAAtR,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,OACNS,EAAK+gB,cAAiB/gB,EAAK+gB,aAAa,IAG3CnoB,QAAQC,IAAImH,EAAK+gB,cACjBjf,EAAA,EAAMiG,QAAQ,CACZpI,MAAO,uCACPoS,OAAQ,eACRqN,OAAQ,UACR9W,MAAO,MACPN,KAAM,WAAM,IAAAyK,EACiBzS,EAAK4F,MAA1Bqb,EADIxO,EACJwO,QAASC,EADLzO,EACKyO,QACXD,GAAWC,EACTD,EAAUC,EACZntB,EAAA,EAAQD,MAAM,sEAEdkM,EAAKmhB,SAASF,EAASC,GAGzBntB,EAAA,EAAQD,MAAM,yCAGlBkO,QACEC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,6CACAD,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL6Q,MAAO,CAAE6E,MAAO,OAChB3E,YAAY,2BAKZyd,OAAQ,SAAA9N,GAAC,OAAItT,EAAK2E,SAAS,CAAEsc,QAAS3N,EAAEzE,OAAOjZ,WAVnD,KAcEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL6Q,MAAO,CAAE6E,MAAO,OAChB3E,YAAY,2BACZyd,OAAQ,SAAA9N,GAAC,OAAItT,EAAK2E,SAAS,CAAEuc,QAAS5N,EAAEzE,OAAOjZ,eAvCvD7B,EAAA,EAAQD,MAAM,yEAFL,wBAAA2c,EAAArQ,SAAAoQ,MApHMxQ,EAqKnBmhB,SArKmB,eAAAxQ,EAAAtb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAqKR,SAAAgQ,EAAOqQ,EAASC,GAAhB,IAAAviB,EAAAiJ,EAAAnR,EAAA2R,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,OACLZ,EAASqB,EAAKqhB,QAAQJ,EAASC,GAC1BtZ,EAAI,EAFJ,YAEOA,EAAI5H,EAAK+gB,aAAaruB,QAF7B,CAAAme,EAAAtR,KAAA,gBAGH9I,EAAUuJ,EAAK+gB,aAAanZ,GAAGpS,GAH5Bqb,EAAAtR,KAAA,EAIWb,GAA0BjI,EAASkI,GAJ9C,OAIDyJ,EAJCyI,EAAArR,KAKPzL,EAAA,EAAQgO,KAAKqG,EAAI/G,KALV,OAEqCuG,IAFrCiJ,EAAAtR,KAAA,gBAOTS,EAAKiM,SAAS,EAAG,IAPR,yBAAA4E,EAAAzQ,SAAAwQ,MArKQ,gBAAArO,EAAA8N,GAAA,OAAAM,EAAAnP,MAAAC,KAAAhP,YAAA,GAAAuN,EA8KnBqhB,QAAU,SAACle,EAAKC,GACdD,EAAMuH,SAASvH,GAEf,IAAIme,GADJle,EAAMsH,SAAStH,IACGD,EACdoe,EAAOC,KAAKC,SAEhB,OADUte,EAAMqe,KAAKE,MAAMH,EAAOD,IAnLjBthB,EAsLnB2hB,eAtLmBtsB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAsLF,SAAAwQ,IAAA,IAAAxJ,EAAApS,EAAAC,EAAA2S,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAkS,GAAA,cAAAA,EAAAhS,KAAAgS,EAAA/R,MAAA,WACXS,EAAK+gB,eAAgB/gB,EAAK+gB,aAAa,GAD5B,CAAAzP,EAAA/R,KAAA,SAEJqI,EAAI,EAFA,YAEGA,EAAI5H,EAAK+gB,aAAaruB,QAFzB,CAAA4e,EAAA/R,KAAA,gBAGL/J,EAAOwK,EAAK+gB,aAAanZ,GAAzBpS,GACFC,EAAY,MAAQuK,EAAKqhB,QAAQ,IAAQ,QAJlC/P,EAAA/R,KAAA,EAKOhK,EAAoBC,EAAIC,GAL/B,OAKL2S,EALKkJ,EAAA9R,KAMXzL,EAAA,EAAQgO,KAAKqG,EAAI/G,KANN,OAEiCuG,IAFjC0J,EAAA/R,KAAA,gBAQbS,EAAKiM,SAAS,EAAG,IARJqF,EAAA/R,KAAA,iBAUbxL,EAAA,EAAQD,MAAM,yEAVD,yBAAAwd,EAAAlR,SAAAgR,MApLfpR,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2U,QAAS,GACTC,QAAS,IANMlhB,mFA2BjByB,KAAKwK,SAAS,EAAG,qCAEV,IAAApG,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE/O,YAAY,qBACZF,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAKpI,MAAQ7H,IAEjCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,aAArB,gBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,WAArB,YAPJ,YAUEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,uCACZF,MAAO,CAAE6E,MAAO,KAChBsK,IAAK,SAAAC,GAAK,OAAKhN,EAAKvC,MAAQuP,MAIlCC,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAEwU,MAAO,SAChBnU,QAAS,WACPxH,OAAOwI,SAASiO,UAElBvP,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK/L,YAA1B,wCACAuM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKkgB,gBAA1B,wCACA1f,EAAA9C,EAAA+C,cAAA,WACAD,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEyT,aAAcpf,KAAKof,eACnBxT,UAAQ,EACR3G,KAAK,QACL4G,OAAO,KACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,wBA1EI5I,aCyDb6Z,GAFSjf,EAAA,EAAKsF,QAALtF,CA7DP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACFnN,EAASsK,EAAMtK,OA0BrB,OACEsM,EAAA9C,EAAA+C,cAAArD,EAAA,GAAM+K,SAAU,CAAEC,KAAM,GAAKC,WAAW,OAAO9G,SA1B1B,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAAyL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAKlL,GAAZ,IAAAC,EAAAuS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBuB,EADmB,CAAAzB,EAAAE,KAAA,eAElB1J,EAAM,CACRO,UAAW,EACXwrB,kBAAmBjsB,EAAOH,GAC1BqsB,iBAAkBjsB,EAAM+I,OACxBmjB,iBAAkBlsB,EAAM6oB,OACxBsD,oBAAqBpsB,EAAOH,GAC5BwsB,wBAAyBrsB,EAAOma,UAChCmS,qBAAsBtsB,EAAOO,YAE/B0C,QAAQC,IAAI,wCAAyChD,GAX/BwJ,EAAAE,KAAA,EnD0eE/M,EmD9dWqD,EnD+dlCvD,EACL0B,EAAO,mBADEqB,OAAAc,EAAA,EAAAd,CAAA,GAGJ7C,EAHI,CAIP0B,UAEF,QmDjf0B,OAaH,KADbkU,EAZgB/I,EAAAG,MAad7H,QACN5D,EAAA,EAAQkN,QAAQ,2BAASmH,EAAI/G,KAC7BpB,EAAMkU,SACNlU,EAAMO,KAAK0P,eAEXnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAlBP,wBAAAhC,EAAAe,OnD0eE,IAAA5N,GmD1eFwM,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,MAyBEwP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,SAAU,CAC3B7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,oFADpC+O,CAGCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEK,YAAY,iFACZF,MAAO,CAAE6E,MAAO,WAItBrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,SAAU,CAC3B7J,MAAO,CAAC,CAAEgK,UAAU,KADrBH,CAGCb,EAAA9C,EAAA+C,cAAAoB,EAAA,EAAO4H,SAAP,CACEvH,YAAY,iCACZue,SAAU,CAAE9W,QAAS,EAAGC,QAAS,IACjC5H,MAAO,CAAE6E,MAAO,WAKtBrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUoR,SAAS,UAAhC,oBCiHOme,eAlKb,SAAAA,EAAYliB,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA0gB,IACjBniB,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA8sB,GAAAzd,KAAAjD,KAAMxB,KAMRsM,aAPmB,eAAAL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAOJ,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAqtB,EAAAha,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACT6iB,EAAU,CAAEttB,OAAMC,QAAO+a,UAAW9P,EAAKC,MAAMoiB,KADtChjB,EAAAE,KAAA,EAEKlF,GAAiB+nB,GAFtB,OAGM,KADbha,EAFO/I,EAAAG,MAGL7H,QAAgByQ,EAAI5V,MAC1BwN,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KAAKod,WACftD,MAAO5B,SAAStC,EAAIkE,SANX,wBAAAjN,EAAAe,SAAApB,MAPI,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAwEnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,KACPmN,UAAW,MAEb,CACEnN,MAAO,eACPmN,UAAW,cAEb,CACEnN,MAAO,iBACPmN,UAAW,aAEb,CACEnN,MAAO,qDACPmN,UAAW,UACXyB,OAAQ,SAAC5Y,EAAQ6Y,GACf,MAAO,CACL1K,QAAS,SAAAxD,GACPN,EAAKsiB,cAAc3sB,IAErB+Y,cAAe,SAAApO,KACfqO,cAAe,SAAArO,KACfsO,aAAc,SAAAtO,GACZA,EAAMuO,OAAOpL,MAAMqL,OAAS,WAE9BC,aAAc,SAAAzO,QAIpB,CACEX,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE5T,KAAK,UACLkR,QAAS,kBAAM9D,EAAKuiB,UAAU5sB,IAC9B+Q,KAAK,SAHP,gBADF,eASEzE,EAAA9C,EAAA+C,cAACsE,GAAD,CACE5T,KAAK,UACL8T,KAAK,QACL5C,QAAS,kBAAM9D,EAAKwiB,UAAU7sB,KAHhC,qBAnHWqK,EA8HnBuiB,UAAY,SAAA5sB,GACVqK,EAAK2E,SAAS,CACZ4Q,eAAe,IAEjBvV,EAAKqiB,IAAM1sB,EAAOH,IAlIDwK,EAoInBwiB,UAAY,SAAA7sB,GACVmM,EAAA,EAAMiG,QAAQ,CACZpI,MAAO,uCACPqC,QACEC,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE8d,OAAQ,SAAA9N,GAAC,OAAItT,EAAK2E,SAAS,CAAE8d,kBAAmBnP,EAAEzE,OAAOjZ,WAG7DoS,KAAI,eAAAyN,EAAApgB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAAE,SAAAC,IAAA,IAAAuH,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACcjF,GAAwB,CACxC9E,GAAIG,EAAOH,GACXS,cAAe+J,EAAK4F,MAAM6c,oBAHxB,OAKe,KAJbra,EADFpH,EAAAxB,MAKI7H,OACN5D,EAAA,EAAQkN,QAAQ,2BAASmH,EAAI/G,KAE7BtN,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KARzB,wBAAAL,EAAAZ,SAAAS,MAAF,yBAAA4U,EAAAjU,MAAAC,KAAAhP,YAAA,MA5IWuN,EAyJnBsiB,cAAgB,SAAA3sB,GACdqK,EAAK0iB,QAAU/sB,EAAOH,GACtBwK,EAAKrK,OAASA,EACdqK,EAAK2E,SAAS,CACZge,qBAAqB,KA3JvB3iB,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,IAJQtM,mFAkBjByB,KAAK8K,aAAa,EAAG,qCAEd,IAAA1G,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,OACElL,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiB,GACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAK0G,aAAazX,EAAMmZ,OAI9BhM,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAK,OAAA4H,OAAS9F,KAAK4gB,IAAd,yCACL5Y,QAAShI,KAAKmE,MAAM2P,cACpB9R,MAAO,CAAEmf,IAAKnhB,KAAKxB,MAAM4iB,YAAc,IACvCnZ,SAAU,WACR7D,EAAKlB,SAAS,CAAE4Q,eAAe,KAEjC5L,OAAQ,KACRmZ,MAAM,EACNC,cAAc,EACdza,MAAM,OAENrG,EAAA9C,EAAA+C,cAAC8gB,GAAD,CAAQX,IAAK5gB,KAAK4gB,IAAKQ,YAAaphB,KAAKxB,MAAM4iB,YAAc,MAE/D5gB,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAK,iBAAA4H,OAAS9F,KAAKihB,QAAd,6BACLjZ,QAAShI,KAAKmE,MAAM+c,oBACpBjZ,SAAU,WACR7D,EAAKlB,SAAS,CAAEge,qBAAqB,KAEvChZ,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAC+gB,GAAD,CACEttB,OAAQ8L,KAAK9L,OACbwe,OAAQ,WACNtO,EAAKlB,SAAS,CAAEge,qBAAqB,gBAlE3B1e,aCmMTif,eAlMb,SAAAA,EAAYjjB,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAyhB,IACjBljB,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA6tB,GAAAxe,KAAAjD,KAAMxB,KAMRsM,aAPmB,eAAAL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAOJ,SAAA5B,EAAOlK,EAAMC,GAAb,IAAAS,EAAA2tB,EAAAf,EAAAha,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAET/J,EAAKwK,EAAKsD,MAAMA,MAAM1N,MAEtButB,EAAM,IAAIC,OAAO,YAChB5tB,GAAO2tB,EAAIxgB,KAAKnN,GALR,CAAA6J,EAAAE,KAAA,QAMXxL,EAAA,EAAQD,MAAM,oCANHuL,EAAAE,KAAA,uBAQP6iB,EAAU,CAAEttB,OAAMC,QAAOS,GAAIA,GARtB6J,EAAAE,KAAA,EASOlF,GAAiB+nB,GATxB,OAUQ,KADbha,EATK/I,EAAAG,MAUH7H,QACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KAAKod,WACftD,MAAO5B,SAAStC,EAAIkE,SAbb,yBAAAjN,EAAAe,SAAApB,MAPI,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAwGnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,KACPmN,UAAW,MAEb,CACEnN,MAAO,eACPmN,UAAW,cAEb,CACEnN,MAAO,iBACPmN,UAAW,aAEb,CACEnN,MAAO,qDACPmN,UAAW,UACXyB,OAAQ,SAAC5Y,EAAQ6Y,GACf,MAAO,CACL1K,QAAS,SAAAxD,GACPN,EAAKsiB,cAAc3sB,IAErB+Y,cAAe,SAAApO,KACfqO,cAAe,SAAArO,KACfsO,aAAc,SAAAtO,GACZA,EAAMuO,OAAOpL,MAAMqL,OAAS,WAE9BC,aAAc,SAAAzO,QAIpB,CACEX,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEnR,KAAK,UACLkR,QAAS,kBAAM9D,EAAKuiB,UAAU5sB,IAC9B+Q,KAAK,SAHP,gBADF,eASEzE,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEnR,KAAK,UACL8T,KAAK,QACL5C,QAAS,kBAAM9D,EAAKwiB,UAAU7sB,KAHhC,qBAnJWqK,EA8JnBuiB,UAAY,SAAA5sB,GACVqK,EAAK2E,SAAS,CACZ4Q,eAAe,IAEjBvV,EAAKqiB,IAAM1sB,EAAOH,IAlKDwK,EAoKnBwiB,UAAY,SAAA7sB,GACVmM,EAAA,EAAMiG,QAAQ,CACZpI,MAAO,uCACPqC,QACEC,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE8d,OAAQ,SAAA9N,GAAC,OAAItT,EAAK2E,SAAS,CAAE8d,kBAAmBnP,EAAEzE,OAAOjZ,WAG7DoS,KAAI,eAAAyN,EAAApgB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAAE,SAAAC,IAAA,IAAAuH,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACcjF,GAAwB,CACxC9E,GAAIG,EAAOH,GACXS,cAAe+J,EAAK4F,MAAM6c,oBAHxB,OAKe,KAJbra,EADFpH,EAAAxB,MAKI7H,OACN5D,EAAA,EAAQkN,QAAQ,2BAASmH,EAAI/G,KAE7BtN,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KARzB,wBAAAL,EAAAZ,SAAAS,MAAF,yBAAA4U,EAAAjU,MAAAC,KAAAhP,YAAA,MA5KWuN,EAyLnBsiB,cAAgB,SAAA3sB,GACdqK,EAAK0iB,QAAU/sB,EAAOH,GACtBwK,EAAKrK,OAASA,EACdqK,EAAK2E,SAAS,CACZge,qBAAqB,KA3LvB3iB,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,IAJQtM,wEA4BV,IAAA6F,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,mCACZF,MAAO,CAAE6E,MAAO,KAChBsK,IAAK,SAAAtP,GAAK,OAAKuC,EAAKvC,MAAQA,KALhC,YAQErB,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM+B,EAAK0G,aAAa,EAAG,KAAK7F,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIjBkgB,MACE7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMxH,OAAOwI,SAASiO,UAAUrM,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIfqP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiB,GACjBC,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAK0G,aAAazX,EAAMmZ,OAI9BhM,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAK,OAAA4H,OAAS9F,KAAK4gB,IAAd,yCACL5Y,QAAShI,KAAKmE,MAAM2P,cACpB9R,MAAO,CAAEmf,IAAK,IACdlZ,SAAU,WACR7D,EAAKlB,SAAS,CAAE4Q,eAAe,KAEjC5L,OAAQ,KACRmZ,MAAM,EACNC,cAAc,EAKdza,MAAM,OAENrG,EAAA9C,EAAA+C,cAAC8gB,GAAD,CAAWX,IAAK5gB,KAAK4gB,IAAKQ,YAAa,MAEzC5gB,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAK,iBAAA4H,OAAS9F,KAAKihB,QAAd,6BACLjZ,QAAShI,KAAKmE,MAAM+c,oBACpBjZ,SAAU,WACR7D,EAAKlB,SAAS,CAAEge,qBAAqB,KAEvChZ,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAC+gB,GAAD,CACEttB,OAAQ8L,KAAK9L,OACbwe,OAAQ,WACNtO,EAAKlB,SAAS,CAAEge,qBAAqB,gBAlGxB1e,aCuFZ+H,eAzFb,SAAAA,EAAY/L,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAuK,IACjBhM,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA2W,GAAAtH,KAAAjD,KAAMxB,KAiBR4M,YAAc,WACZ,MAA0B,UAAtB7M,EAAKC,MAAMtJ,OACN,CACL,CACEgJ,MAAO,qBACPmN,UAAW,eAEb,CACEnN,MAAO,2BACPmN,UAAW,YACXqC,OAAQ5E,KAGmB,SAAtBvK,EAAKC,MAAMtJ,OACb,CACL,CACEgJ,MAAO,UACPmN,UAAW,MAEb,CACEnN,MAAO,2BACPmN,UAAW,oBAGb,CACEnN,MAAO,mCACPmN,UAAW,iBAEb,CACEnN,MAAO,2BACPmN,UAAW,YAEXC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAE8N,cAAgBD,EAAEC,gBAExC,CACEtN,MAAO,eACPmN,UAAW,OAEb,CACEnN,MAAO,mCACPmN,UAAW,uBAEb,CACEnN,MAAO,eACPmN,UAAW,cAEb,CACEnN,MAAO,2BACPmN,UAAW,gBAIR,CACL,CACEnN,MAAO,qBACPmN,UAAW,eAEb,CACEnN,MAAO,eACPmN,UAAW,WAEb,CACEnN,MAAO,2BACPmN,UAAW,aACXqC,OAAQ5E,MAhFdvK,EAAK4F,MAAQ,GAFI5F,wEAIV,IACCxN,EAASiP,KAAKxB,MAAMwb,aAApBjpB,KAGR,OAFAoG,QAAQC,IAAIrG,GAGVyP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAO4X,GAAR,SAAAhG,OAAmBgG,IAC3BC,WAAYhb,EACZib,QAAShM,KAAKoL,cACdnG,KAAK,iBAfYzC,aCgNVyX,eA9Mb,SAAAA,EAAYzb,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAia,IACjB1b,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAqmB,GAAAhX,KAAAjD,KAAMxB,KA0IR0b,kBA3ImBtmB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA2IC,SAAA5B,IAAA,IAAAxM,EAAAiJ,EAAA,OAAAyD,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACZ/M,EAAOwN,EAAKC,MAAMiY,SACnBlY,EAAK4b,YAFQ,CAAAvc,EAAAE,KAAA,QAGhBxL,EAAA,EAAQD,MAAM,oDAHEuL,EAAAE,KAAA,uBAKZ9D,EAAU,CACZE,SAAUnJ,EAAKmJ,SACf2C,cAAe0B,EAAK4b,YACpBnlB,QAASjE,EAAKiE,QACdoF,YAAa,EACb0C,QAAS,GAVKc,EAAAE,KAAA,EAYEzB,GAAoBrC,GAZtB,OAaG,IAbH4D,EAAAG,KAaR7H,OACN5D,EAAA,EAAQkN,QAAQ,4BAEhBlN,EAAA,EAAQD,MAAM,4BAEhBkM,EAAKC,MAAM4b,UAlBK,yBAAAxc,EAAAe,SAAApB,MA3IDgB,EAgKnB8b,OAhKmB,eAAApb,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAgKV,SAAAC,EAAMtC,GAAN,IAAA/L,EAAAiJ,EAAA2M,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACD/M,EAAOwN,EAAKC,MAAMiY,SACpBzc,EAAU,CACZE,SAAUnJ,EAAKmJ,SACf2C,cAAe9L,EAAK8L,cACpB7H,QAASjE,EAAKiE,QACdoF,YAAa,EACb0C,QAASA,GAPJyC,EAAAzB,KAAA,EASWzB,GAAoBrC,GAT/B,OAUY,KADb2M,EATCpH,EAAAxB,MAUC7H,OACN5D,EAAA,EAAQgO,KAAKqG,EAAI/G,KAEjBtN,EAAA,EAAQD,MAAM,4BAEhBkM,EAAKC,MAAM4b,UAfJ,wBAAA7a,EAAAZ,SAAAS,MAhKU,gBAAAS,GAAA,OAAAZ,EAAAc,MAAAC,KAAAhP,YAAA,GAAAuN,EAiLnB+b,iBAjLmB1mB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAiLA,SAAAgB,IAAA,IAAApP,EAAA4V,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,UACjB3G,QAAQC,IAAImH,EAAKgc,YACXxpB,EAAOwN,EAAKC,MAAMiY,SACnBlY,EAAKgc,WAHO,CAAAna,EAAAtC,KAAA,QAIfxL,EAAA,EAAQD,MAAM,oDAJC+N,EAAAtC,KAAA,uBAAAsC,EAAAtC,KAAA,EAMG7B,GAAelL,EAAKmJ,SAAUqE,EAAKgc,WAAY,GANlD,OAOI,KADb5T,EANSvG,EAAArC,MAOP7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KAEpBtN,EAAA,EAAQD,MAAMsU,EAAI/G,KAVL,yBAAAQ,EAAAzB,SAAAwB,MAjLA5B,EA+LnBic,qBA/LmB5mB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA+LI,SAAA4P,IAAA,IAAAhe,EAAA4V,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,UACrB3G,QAAQC,IAAImH,EAAKkc,gBACX1pB,EAAOwN,EAAKC,MAAMiY,SACnBlY,EAAKkc,eAHW,CAAAzL,EAAAlR,KAAA,QAInBxL,EAAA,EAAQD,MAAM,oDAJK2c,EAAAlR,KAAA,uBAAAkR,EAAAlR,KAAA,EAMD7B,GAAelL,EAAKmJ,SAAUqE,EAAKgc,WAAY,GAN9C,OAOA,KADb5T,EANaqI,EAAAjR,MAOX7H,OACN5D,EAAA,EAAQkN,QAAQmH,EAAI/G,KAEpBtN,EAAA,EAAQD,MAAMsU,EAAI/G,KAVD,yBAAAoP,EAAArQ,SAAAoQ,MA7LrBxQ,EAAK4F,MAAQ,GAFI5F,wEAIV,IAIHmc,EACFC,EACAC,EACAC,EACAC,EACAC,EATK3W,EAAApE,KACDjP,EAAOiP,KAAKxB,MAAMiY,SACpB5Z,EAAgBoM,SAASlY,EAAK8L,eAWlC,OAVaoM,SAASlY,EAAKmF,SAWzB,KAAK,EACHwkB,GAAkB,EAClBE,GAAoB,EACpBE,GAAe,EACfC,GAAY,EACZ,MACF,KAAK,EAMH,OALAL,GAAkB,EAClBC,GAAa,EACbE,GAAc,EACdC,GAAe,EACfC,GAAY,EACJle,GACN,KAAK,EACHge,GAAc,EACd,MACF,KAAK,EACHC,GAAe,EACf,MACF,KAAK,EACHC,GAAY,EAKhB,MACF,KAAK,EACHL,GAAkB,EAClBE,GAAoB,EACpBC,GAAc,EAKlB,OACEra,EAAA9C,EAAA+C,cAAArD,EAAA,GAAM+K,SAAU,CAAEC,KAAM,GAAKC,WAAW,QACtC7H,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,kBACf9H,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,OAChB1S,MAAOpD,EAAKmJ,SACZ+Y,UAAQ,KAGZzS,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,kBACf9H,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,OAAS1S,MAAOpD,EAAKiE,QAASie,UAAQ,KAE/DzS,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACf9H,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,OAAS1S,MAAOpD,EAAKmM,OAAQ+V,UAAQ,KAG9DzS,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEmL,MAAM,4BACNtG,MAAO0Y,EAAkB,GAAK,CAAEnR,QAAS,SAEzC/I,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,CACE/I,aAAcvN,EACdwI,SAAU,SAAAwM,GAAC,OAAKzN,EAAK+V,YAActI,EAAEzE,OAAOjZ,QAE5CqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GACE/e,MAAO,EACPgnB,SAAUN,EACVxI,aAjER2I,GA8DM,kCAOAxa,EAAA9C,EAAA+C,cAAAyS,GAAA,GACE/e,MAAO,EACPgnB,SAAUL,EACVzI,aAvER4I,GAoEM,sBAOAza,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,EAAGgnB,SAAUJ,EAAW1I,aA1E5C6I,GA0EM,uBAIF1a,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAASrC,KAAKka,kBACdlY,MAAO4Y,EAAoB,GAAK,CAAErR,QAAS,SAF7C,iBAQF/I,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBAAMtG,MAAO2Y,EAAa,GAAK,CAAEpR,QAAS,SACzD/I,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP+B,EAAKiW,OAAO,KAFhB,gBAOA7Z,EAAA9C,EAAA+C,cAACsE,GAAD,CACE1C,QAAS,WACP+B,EAAKiW,OAAO,KAFhB,iBAQF7Z,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,8BACf9H,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,OAChBxB,SAAU,SAAAwM,GACRzN,EAAKmW,WAAa1I,EAAEzE,OAAOjZ,SAG/BqM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKsa,kBAA1B,iBAEF9Z,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,8BACf9H,EAAA9C,EAAA+C,cAAAoB,EAAA,GACEG,MAAO,CAAE6E,MAAO,OAChBxB,SAAU,SAAAwM,GACRzN,EAAKqW,eAAiB5I,EAAEzE,OAAOjZ,SAGnCqM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAKwa,sBAA1B,yBAvIaY,IAAM5Y,WCuYdof,eAjXb,SAAAA,EAAYpjB,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA4hB,IACjBrjB,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAguB,GAAA3e,KAAAjD,KAAMxB,KAgBRgM,SAjBmB,eAAAC,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAiBR,SAAA5B,EAAOlK,EAAMmZ,EAAUxS,GAAvB,IAAAwD,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYlC,GAASvI,EAAMmZ,EAAUxS,GADrC,OACHwD,EADGI,EAAAG,KAETQ,EAAK2E,SAAS,CACZnS,KAAMyM,EAAOzM,KACb8Z,MAAO5B,SAASzL,EAAOqN,SAJhB,wBAAAjN,EAAAe,SAAApB,MAjBQ,gBAAAsC,EAAAC,EAAAe,GAAA,OAAA4J,EAAA1K,MAAAC,KAAAhP,YAAA,GAAAuN,EAwBnBuM,aAAe,SAACzX,EAAMC,GAEpB,IAAI0G,EAAOpG,OAAAc,EAAA,EAAAd,CAAA,CACT0nB,KAAM,GACH/c,EAAKvE,SAEY,MAAlBuE,EAAK9K,UAAsC,MAAlB8K,EAAK9K,SAChCuG,EAAQ2b,UAAYpX,EAAK9K,SAChB8K,EAAK9K,WACduG,EAAQuE,EAAK9K,UAAY8K,EAAK7K,YAEhC6K,EAAKiM,SAASnX,EAAMC,EAAO0G,IAnCVuE,EAqCnBqX,SAAW,WACT7Z,GAAqBwC,EAAK4F,QAtCT5F,EA2KnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,iBACPmN,UAAW,WACXxE,MAAO,KAET,CACE3I,MAAO,UACPmN,UAAW,UACXxE,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,YACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,eACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,gBACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,SACXxE,MAAO,IACPyE,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAER,OAASqO,EAAErO,SAEjC,CACEgB,MAAO,2BACPmN,UAAW,gBACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,iBACXxE,MAAO,IACPyE,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEsY,eAAiBzK,EAAEyK,iBAEzC,CACE9X,MAAO,2BACPmN,UAAW,aACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,cACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,WACXxE,MAAO,KAET,CACE3I,MAAO,eACPmN,UAAW,SACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,IAAI+J,EACJ,OAAQ7H,GACN,IAAK,IACH6H,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,IAAK,IACHA,EAAO,qBACP,MACF,QACEA,EAAO,GAGX,OAAOrV,EAAA9C,EAAA+C,cAAA,YAAOoV,KAGlB,CACE3X,MAAO,eACPmN,UAAW,GACXxE,MAAO,IACP6G,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKqV,KAAK1f,KAArC,mBAIN,CACEgK,MAAO,iBACPmN,UAAW,aACXxE,MAAO,KAET,CACE3I,MAAO,2BACPmN,UAAW,aACXxE,MAAO,IACP6G,OAAQ5E,GACRwC,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEuY,WAAa1K,EAAE0K,aAErC,CACE/X,MAAO,2BACPmN,UAAW,aACXxE,MAAO,IACP6G,OAAQ,SAACM,EAAM9Z,EAAQ4X,GACrB,MAAa,MAATkC,GAAiBA,EAEPlF,GAAYkF,GADjB,IAGX1C,OAAQ,SAAC5N,EAAG6N,GAAJ,OAAU7N,EAAEwY,WAAa3K,EAAE2K,aAErC,CACEhY,MAAO,eACPmN,UAAW,GACXxE,MAAO,IACP6G,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY5T,KAAK,UAAUkR,QAAS,kBAAM9D,EAAKgd,UAAUrnB,EAAQ,UAAjE,mBAMN,CACEgK,MAAO,2BACPmN,UAAW,GACXxE,MAAO,IACP6G,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKgd,UAAUrnB,EAAQ,UAAU/C,KAAK,WAAjE,mBAMN,CACE+M,MAAO,2BACPmN,UAAW,GACXqC,OAAQ,SAAAxZ,GAAM,OACZsM,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA2Y,GAAA,GACE7Y,QAASrM,EAAOsnB,YAChBtd,MAAOhK,EAAOc,QAAU,2BACxB0S,QAAQ,SAERlH,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY5T,KAAK,WAAjB,6BAEFqP,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKgd,UAAUrnB,EAAQ,mBAAmB/C,KAAK,WAA1E,iCAvUWoN,EA8UnBgd,UA9UmB,eAAAtc,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA8UP,SAAAC,EAAOlL,EAAQgB,GAAf,IAAAyR,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACVS,EAAKrJ,OAASA,EACdqJ,EAAKyb,aAAe,CAClBjpB,KAAM,GACN8Z,MAAO,EACP9W,GAAIG,EAAOc,SAGA,SAAXE,EARQ,CAAAqK,EAAAzB,KAAA,eAAAyB,EAAAzB,KAAA,EASEjJ,EAAW,EAAG,GAAIX,EAAOc,SAT3B,OAAAuK,EAAAqL,GAAArL,EAAAxB,KAAAwB,EAAAzB,KAAA,mBAUO,UAAX5I,EAVI,CAAAqK,EAAAzB,KAAA,gBAAAyB,EAAAzB,KAAA,GAWEjC,GAAW,EAAG,GAAI3H,EAAOgG,UAX3B,QAAAqF,EAAAkc,GAAAlc,EAAAxB,KAAAwB,EAAAzB,KAAA,wBAAAyB,EAAAzB,KAAA,GAYEhC,GAAW,EAAG,GAAI5H,EAAOgG,UAZ3B,QAAAqF,EAAAkc,GAAAlc,EAAAxB,KAAA,QAAAwB,EAAAqL,GAAArL,EAAAkc,GAAA,QAaS,KANb9U,EAPIpH,EAAAqL,IAaF1U,SACNqI,EAAKyb,aAAajpB,KAAO4V,EAAI5V,KAC7BwN,EAAKyb,aAAanP,MAAQlE,EAAIkE,OAEhCtM,EAAK2E,SAAS,CAAEwY,cAAc,IAjBpB,yBAAAnc,EAAAZ,SAAAS,MA9UO,gBAAA0B,EAAA8N,GAAA,OAAA3P,EAAAc,MAAAC,KAAAhP,YAAA,GAAAuN,EAiWnBqV,KAjWmB,eAAA1T,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAiWZ,SAAAgB,EAAMjM,GAAN,IAAA8F,EAAA2M,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cACD9D,EAAU,CACZshB,KAAM,EACNnqB,KAAM,EACN+I,SAAUhG,EAAOgG,UAJdkG,EAAAtC,KAAA,EAMa1B,GAAWpC,GANxB,OAOc,KADb2M,EANDvG,EAAArC,MAOG7H,QACNqI,EAAKkY,SAAW9P,EAAI5V,KAAK,GACzBwN,EAAK2E,SAAS,CAAEiT,YAAY,KAE5B7jB,EAAA,EAAQD,MAAM,4BAXX,wBAAA+N,EAAAzB,SAAAwB,MAjWY,gBAAA0O,GAAA,OAAA3O,EAAAH,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAKvE,QAAU,CACbQ,WAAY,GACZC,SAAU,GACVC,aAAc,GACdvJ,KAAM,GAERoN,EAAK9K,SAAW,GAChB8K,EAAK7K,WAAa,GAClB6K,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP2B,SAAU,GACVuE,gBAAgB,GAdDxS,mFAyCjByB,KAAKwK,SAAS,EAAG,GAAI,CAAE8Q,KAAM,qCAEtB,IAAAlX,EAAApE,KACP,OACEQ,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACXjD,EAAKpK,QAAQQ,WAAa6M,EAAI,GAC9BjD,EAAKpK,QAAQS,SAAW4M,EAAI,MAJlC,YAQE7G,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE/O,YAAY,qBACZF,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAK3Q,SAAWU,IAEpCqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,YAArB,kBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,WAArB,WACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,cAArB,kBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,6BAjBJ,YAoBEqM,EAAA9C,EAAA+C,cAAAoB,EAAA,GACE1Q,KAAK,OACL+Q,YAAY,uCACZF,MAAO,CAAE6E,MAAO,KAChBxB,SAAU,SAAAwM,GAAC,OAAKzN,EAAK1Q,WAAame,EAAEzE,OAAOjZ,SAxB/C,YA2BEqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE7G,aAAa,GACbpI,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAKpK,QAAQU,aAAevG,IAEhDqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,IAArB,4BACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,sBACAqM,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,uBArCJ,YAwCEqM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM+B,EAAK0G,aAAa,EAAG,KAAK7F,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIjBkgB,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CACE/C,MAAO,CAAEwU,MAAO,SAChBnU,QAAS,WACPxH,OAAOwI,SAASiO,UAElBvP,KAAK,SACLkD,KAAK,cAKXzE,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACR3G,KAAK,QACL4G,OAAO,KACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACda,WAAY,CACVC,gBAAiBlM,KAAKmE,MAAMqI,SAC5B+E,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAK0G,aAAazX,EAAMmZ,IAE1BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKlB,SAAS,CACZsJ,SAAUvH,IAEZb,EAAK0G,aAAa4B,EAASzH,KAG/BuM,OAAQ,CAAEC,EAAG,KAAMC,EAAG,UAExBlR,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MACkB,UAAhB8B,KAAK9K,OACD,2BACgB,SAAhB8K,KAAK9K,OACL,2BACA,2BAEN8S,QAAShI,KAAKmE,MAAMuX,aACpBzT,SAAU,WACR7D,EAAKlB,SAAS,CAAEwY,cAAc,KAEhCxT,OAAQ,KACRrB,MAAM,OAENrG,EAAA9C,EAAA+C,cAACohB,GAAD,CACE7H,aAAcha,KAAKga,aACnB9kB,OAAQ8K,KAAK9K,UAGhB8K,KAAKmE,MAAMgS,YACV3V,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACN8J,QAAShI,KAAKmE,MAAMgS,WACpBlO,SAAU,WACR7D,EAAKlB,SAAS,CAAEiT,YAAY,KAE9BjO,OAAQ,KACRrB,MAAM,OAENrG,EAAA9C,EAAA+C,cAACqhB,GAAD,CACErL,SAAUzW,KAAKyW,SACf2D,QAAS,WACPhW,EAAKlB,SAAS,CAAEiT,YAAY,gBApKxB3T,mDCZdqc,eACJ,SAAAA,EAAYrgB,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA6e,IACjBtgB,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAirB,GAAA5b,KAAAjD,KAAMxB,KAKRgM,SANmB5W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAMR,SAAA5B,IAAA,IAAAvD,EAAA2M,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACL9D,EAAU,CACZtB,SAAU,wBACVomB,QAAS,GAHFlhB,EAAAE,KAAA,EAKSxB,GAActC,GALvB,OAMU,KADb2M,EALG/I,EAAAG,MAMD7H,QAAgByQ,EAAI5V,MAC1BwN,EAAKwjB,YAAcpb,EAAI5V,KACvBwN,EAAK2E,SAAS,CAAEnS,KAAMsN,KAAKgG,MAAMsC,EAAI5V,KAAKmrB,aAE1C5pB,EAAA,EAAQD,MAAMsU,EAAI/G,KAVX,wBAAAhC,EAAAe,SAAApB,MANQgB,EAwTnBK,aAAe,SAAAiT,GACbA,EAAE/S,iBACFP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAKlL,GAAZ,IAAA6tB,EAAAjuB,EAAA2B,EAAAtB,EAAAwP,EAAA+C,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OAW7B,IAAW8F,KAXkBoe,EACVzjB,EAAKwjB,YAAlBhuB,EADuBiuB,EACvBjuB,GAAI2B,EADmBssB,EACnBtsB,KACNtB,EAAM,GACVD,EAAM8tB,SAASC,QAAQnsB,QAAQ,SAACkI,EAAM6N,GACpC,IAAK,IAAMlI,KAAO3F,EAChB7J,EAAG,qBAAA0R,OAAsBgG,EAAtB,MAAAhG,OAAgClC,EAAhC,MAA0C3F,EAAK2F,KAItDxP,EAAI,sBAAwBD,EAAM8tB,SAAShE,SAAW,KAAO,MAC7D7pB,EAAI,oBAAsBD,EAAMguB,OAAOlE,SAAW,KAAO,MACvC9pB,EAAMiuB,WACtBhuB,EAAG,cAAA0R,OAAelC,EAAf,MAAyBzP,EAAMiuB,WAAWxe,GAZlB,GAcxBvE,EAdwB,CAAAE,EAAAzB,KAAA,gBAAAyB,EAAAzB,KAAA,EAeTvB,GAAoBxI,EAAI2B,EAAMtB,GAfrB,OAgBR,KADbuS,EAfqBpH,EAAAxB,MAgBnB7H,QACN5D,EAAA,EAAQkN,QAAQ,4BAAUmH,EAAI/G,KAC9BzI,QAAQC,IAAIuP,GACZpI,EAAKiM,YAELlY,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KArBFL,EAAAzB,KAAA,iBAwB3BxL,EAAA,EAAQD,MAAM,4BAxBa,yBAAAkN,EAAAZ,SAAAS,MAA/B,gBAAAS,EAAAC,GAAA,OAAAb,EAAAc,MAAAC,KAAAhP,YAAA,KAxTAuN,EAAK4F,MAAQ,CACXpT,KAAM,IAHSwN,mFAoBjByB,KAAKwK,4CAEE,IACCnJ,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBACFtQ,EAAOiP,KAAKmE,MAAMpT,KACxB,OACEyP,EAAA9C,EAAA+C,cAAAiL,GAAA,GACE2F,MACE7Q,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEN,MAAO,CAAEwU,MAAO,SAChBzU,KAAK,SACLM,QAAS,WACPxH,OAAOwI,SAASiO,cAMxB9Q,EAAA9C,EAAA+C,cAAArD,EAAA,GACE+K,SAAU,CAAEC,KAAM,GAClBsO,WAAY,CAAEtO,KAAM,IACpB7G,SAAUvB,KAAKpB,cAEf4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,kCACdjH,EAAkB,mBAAoB,CACrCmI,aACkB,IAAhBzY,EAAKE,QAAyC,IAAzBF,EAAKoxB,OAAOlE,SACnCoE,cAAe,WAHhBhhB,CAIEb,EAAA9C,EAAA+C,cAAA6hB,GAAA,GAAQC,gBAAgB,KAAKC,kBAAkB,UAEpDhiB,EAAA9C,EAAA+C,cAAAgiB,GAAA,QACAjiB,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,kCACdjH,EAAkB,qBAAsB,CACvCmI,aAA8B,IAAhBzY,EAAKE,QAA2C,IAA3BF,EAAKkxB,SAAShE,SACjDoE,cAAe,WAFhBhhB,CAGEb,EAAA9C,EAAA+C,cAAA6hB,GAAA,GAAQC,gBAAgB,KAAKC,kBAAkB,UAEpDhiB,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,8CACdjH,EAAkB,iCAAkC,CACnDmI,aAA8B,IAAhBzY,EAAKE,QAAgBgY,SAASlY,EAAKkxB,SAASC,QAAQ,GAAGjE,WADtE5c,CAGCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,gBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,mBAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,qCAAsC,CACvD7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKkxB,SAASC,QAAQ,GAAGQ,cAP7DrhB,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEmL,MAAM,2BACNtG,MAAO,CAAEuH,QAAS,eAAgB1C,MAAO,OACzCsB,SAAU,CAAEC,KAAM,EAAGoP,OAAQ,GAC7Bd,WAAY,CAAEtO,KAAM,IAEnB/G,EAAkB,mCAAoC,CACrD7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKkxB,SAASC,QAAQ,GAAGrL,YAP7DxV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,MAAO3B,YAAa,MAC9C1E,EAAA9C,EAAA+C,cAAA,kBAEFD,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAEuH,QAAS,eAAgB1C,MAAO,OACzC6P,WAAY,CAAEtO,KAAM,IAEnB/G,EAAkB,mCAAoC,CACrD7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKkxB,SAASC,QAAQ,GAAGpL,YAP7DzV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,6BAA8B,CAC/C7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKkxB,SAASC,QAAQ,GAAGhL,MAP7D7V,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,8CACdjH,EAAkB,iCAAkC,CACnDmI,aAA8B,IAAhBzY,EAAKE,QAAgBgY,SAASlY,EAAKkxB,SAASC,QAAQ,GAAGjE,WADtE5c,CAGCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,gBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,mBAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,qCAAsC,CACvD7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKkxB,SAASC,QAAQ,GAAGQ,cAP7DrhB,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEmL,MAAM,2BACNtG,MAAO,CAAEuH,QAAS,eAAgB1C,MAAO,OACzCsB,SAAU,CAAEC,KAAM,EAAGoP,OAAQ,GAC7Bd,WAAY,CAAEtO,KAAM,IAEnB/G,EAAkB,mCAAoC,CACrD7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKkxB,SAASC,QAAQ,GAAGrL,YAP7DxV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,MAAO3B,YAAa,MAC9C1E,EAAA9C,EAAA+C,cAAA,kBAEFD,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAEuH,QAAS,eAAgB1C,MAAO,OACzC6P,WAAY,CAAEtO,KAAM,IAEnB/G,EAAkB,mCAAoC,CACrD7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKkxB,SAASC,QAAQ,GAAGpL,YAP7DzV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,6BAA8B,CAC/C7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKkxB,SAASC,QAAQ,GAAGhL,MAP7D7V,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,sBACdjH,EAAkB,iCAAkC,CACnDmI,aAA8B,IAAhBzY,EAAKE,QAAgBgY,SAASlY,EAAKkxB,SAASC,QAAQ,GAAGjE,WADtE5c,CAGCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,gBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,mBAINqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,qCAAsC,CACvD7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKkxB,SAASC,QAAQ,GAAGQ,cAP7DrhB,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEmL,MAAM,2BACNtG,MAAO,CAAEuH,QAAS,eAAgB1C,MAAO,OACzCsB,SAAU,CAAEC,KAAM,EAAGoP,OAAQ,GAC7Bd,WAAY,CAAEtO,KAAM,IAEnB/G,EAAkB,mCAAoC,CACrD7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKkxB,SAASC,QAAQ,GAAGrL,YAP7DxV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,MAAO3B,YAAa,MAC9C1E,EAAA9C,EAAA+C,cAAA,kBAEFD,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAEuH,QAAS,eAAgB1C,MAAO,OACzC6P,WAAY,CAAEtO,KAAM,IAEnB/G,EAAkB,mCAAoC,CACrD7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKkxB,SAASC,QAAQ,GAAGpL,YAP7DzV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,6BAA8B,CAC/C7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKkxB,SAASC,QAAQ,GAAGhL,MAP7D7V,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAG5BrG,EAAA9C,EAAA+C,cAAAgiB,GAAA,QACAjiB,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,uBAAwB,CACzCmI,aACgB,IAAhBzY,EAAKE,QAA6C,IAA7BF,EAAKqxB,WAAWnE,SACrCoE,cAAe,WAHhBhhB,CAIEb,EAAA9C,EAAA+C,cAAA6hB,GAAA,GAAQC,gBAAgB,KAAKC,kBAAkB,UAEpDhiB,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACEmL,MAAM,2BACNtG,MAAO,CAAEuH,QAAS,eAAgB1C,MAAO,OACzCsB,SAAU,CAAEC,KAAM,EAAGoP,OAAQ,GAC7Bd,WAAY,CAAEtO,KAAM,IAEnB/G,EAAkB,yBAA0B,CAC3C7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKqxB,WAAWvL,YAPpDxV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,MAAO3B,YAAa,MAC9C1E,EAAA9C,EAAA+C,cAAA,kBAEFD,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CACE6E,MAAO,CAAEuH,QAAS,eAAgB1C,MAAO,OACzC6P,WAAY,CAAEtO,KAAM,IAEnB/G,EAAkB,yBAA0B,CAC3C7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKqxB,WAAWtL,YAPpDzV,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAE5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,gBACdjH,EAAkB,mBAAoB,CACrC7J,MAAO,CACL,CACEgK,UAAU,EACVlP,QAAS,yCAGbkX,aAA8B,IAAhBzY,EAAKE,QAAgBF,EAAKqxB,WAAWnL,MAPpD5V,CAQEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,WAG5BrG,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWuZ,WAAY,CAAEc,OAAQ,IAC/BhX,EAAA9C,EAAA+C,cAAA6B,EAAA,GACEnR,KAAK,UACLoR,SAAS,SACTjB,UAAU,qBAHZ,0BA7SUkB,aAwVhB2c,GAAiB/hB,EAAA,EAAKsF,QAALtF,CAAcyhB,IAEtB/Z,eAAWqa,wCClWLwD,4LACV,IAAApkB,EAAAyB,KACP,OAEEQ,EAAA9C,EAAA+C,cAAAmiB,GAAA,GAAKthB,UAAU,aACbd,EAAA9C,EAAA+C,cAAAoiB,GAAA,GAAKza,KAAM,GAAI9G,UAAU,SACzBd,EAAA9C,EAAA+C,cAAAoiB,GAAA,GAAKza,KAAM,GAAI9G,UAAU,SACvBd,EAAA9C,EAAA+C,cAAA,iBACAD,EAAA9C,EAAA+C,cAAA,sFACAD,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUkR,QAAS,kBAAM9D,EAAKC,MAAMC,QAAQC,QAAQ,WAAjE,sCAV0B8D,cCuCvBsgB,GAxCQ,SAAAtkB,GA2BrB,OACEgC,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAYvN,EAAMzN,KAClBib,QA/BoB,CACtB,CACE9N,MAAO,eACPmN,UAAW,aAEb,CACEnN,MAAO,iCACPmN,UAAW,sBACXxE,MAAO,KAET,CACE3I,MAAO,iCACPmN,UAAW,uBACXxE,MAAO,KAET,CACE3I,MAAO,iCACPmN,UAAW,kBACXxE,MAAO,KAET,CACE3I,MAAO,qBACPmN,UAAW,kBACXxE,MAAO,MASP5B,KAAK,WCgII8d,eA9Jb,SAAAA,EAAYvkB,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA+iB,IACjBxkB,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAmvB,GAAA9f,KAAAjD,KAAMxB,KAkCR4M,YAAc,WACZ,GAA0B,kBAAtB7M,EAAKC,MAAMtJ,OA0Fb,MAzFkB,CAChB,CACEgJ,MAAO,eACPmN,UAAW,QAEb,CACEnN,MAAO,2BACPmN,UAAW,qBAEb,CACEnN,MAAO,2BACPmN,UAAW,sBAEb,CACEnN,MAAO,uCACPmN,UAAW,yBAEb,CACEnN,MAAO,uCACPmN,UAAW,yBAEb,CACEnN,MAAO,uCACPmN,UAAW,mBAEb,CACEnN,MAAO,uCACPmN,UAAW,mBAEb,CACEnN,MAAO,uCACPmN,UAAW,6BAEb,CACEnN,MAAO,uCACPmN,UAAW,6BAEb,CACEnN,MAAO,uCACPmN,UAAW,uBAEb,CACEnN,MAAO,uCACPmN,UAAW,uBAEb,CACEnN,MAAO,uCACPmN,UAAW,wBAEb,CACEnN,MAAO,uCACPmN,UAAW,wBAEb,CACEnN,MAAO,uCACPmN,UAAW,4BAEb,CACEnN,MAAO,uCACPmN,UAAW,4BAEb,CACEnN,MAAO,iCACPmN,UAAW,uBAEb,CACEnN,MAAO,iCACPmN,UAAW,wBAEb,CACEnN,MAAO,iCACPmN,UAAW,mBAEb,CACEnN,MAAO,qBACPmN,UAAW,mBAEb,CACEnN,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQ2C,KAAK,QAAQ5C,QAAS,kBAAM9D,EAAKykB,cAAc9uB,KAAvD,qBAvHOqK,EAiInB0kB,WAAa,SAAA5vB,GAEX,OADA8D,QAAQC,IAAI/D,GAEVmN,EAAA9C,EAAA+C,cAAA,UACED,EAAA9C,EAAA+C,cAAA,0BACAD,EAAA9C,EAAA+C,cAAA,MAAIuB,MAAO,CAAE6E,MAAO,KAApB,qBACArG,EAAA9C,EAAA+C,cAAA,+BACAD,EAAA9C,EAAA+C,cAAA,+BACAD,EAAA9C,EAAA+C,cAAA,+BACAD,EAAA9C,EAAA+C,cAAA,iCA1IalC,EA8InBykB,cA9ImB,eAAAvY,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA8IH,SAAA5B,EAAMrJ,GAAN,IAAAyS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIvF,GAChB,EACA,GACAgG,EAAKC,MAAM/J,WACXP,EAAOsE,MALK,OACRmO,EADQ/I,EAAAG,KAOdQ,EAAKC,MAAM6F,MAAMsC,GACjBpI,EAAK2E,SAAS,CACZ1K,KAAMtE,EAAOsE,KACb0qB,kBAAkB,EAClBC,cAAexc,EAAI5V,OAXP,wBAAA6M,EAAAe,SAAApB,MA9IG,gBAAAsC,GAAA,OAAA4K,EAAA1K,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACX3L,KAAM,GACN0qB,kBAAkB,EAClBC,cAAe,IALA5kB,wEAQV,IAAA6F,EAAApE,KACCjP,EAASiP,KAAKxB,MAAM4kB,WAApBryB,KACR,OACEyP,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAYhb,EACZib,QAAShM,KAAKoL,cACdnG,KAAK,QACLuM,OAAQ,CAAEC,EAAG,OAGfjR,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAO8B,KAAKmE,MAAM3L,KAAO,4BACzBqO,MAAM,MACNmB,QAAShI,KAAKmE,MAAM+e,iBACpBjb,SAAU,WACR7D,EAAKlB,SAAS,CAAEggB,kBAAkB,KAEpChb,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAC4iB,GAAD,CAAgBtyB,KAAMiP,KAAKmE,MAAMgf,yBA/BlB3gB,aCubV8gB,eA/ab,SAAAA,EAAY9kB,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAsjB,IACjB/kB,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAA0vB,GAAArgB,KAAAjD,KAAMxB,KAURie,eAXmB7oB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAWF,SAAA5B,IAAA,IAAAoJ,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGlI,IADH,OAGI,KAFb+Q,EADS/I,EAAAG,MAGP7H,QACNqI,EAAK2E,SAAS,CAEZtN,YAAa+Q,EAAI5V,OANN,wBAAA6M,EAAAe,SAAApB,MAXEgB,EAoHnB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,eACPmN,UAAW,gBAEb,CACEnN,MAAO,2BACPmN,UAAW,qBAEb,CACEnN,MAAO,2BACPmN,UAAW,sBAEb,CACEnN,MAAO,uCACPmN,UAAW,yBAEb,CACEnN,MAAO,uCACPmN,UAAW,yBAEb,CACEnN,MAAO,uCACPmN,UAAW,mBAEb,CACEnN,MAAO,uCACPmN,UAAW,mBAEb,CACEnN,MAAO,uCACPmN,UAAW,6BAEb,CACEnN,MAAO,uCACPmN,UAAW,6BAEb,CACEnN,MAAO,uCACPmN,UAAW,uBAEb,CACEnN,MAAO,uCACPmN,UAAW,uBAEb,CACEnN,MAAO,uCACPmN,UAAW,wBAEb,CACEnN,MAAO,uCACPmN,UAAW,wBAEb,CACEnN,MAAO,uCACPmN,UAAW,4BAEb,CACEnN,MAAO,uCACPmN,UAAW,4BAEb,CACEnN,MAAO,iCACPmN,UAAW,uBAEb,CACEnN,MAAO,iCACPmN,UAAW,wBAEb,CACEnN,MAAO,iCACPmN,UAAW,mBAEb,CACEnN,MAAO,qBACPmN,UAAW,mBAEb,CACEnN,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKglB,cAAcrvB,KAA9C,gBAGAsM,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAM9D,EAAKykB,cAAc9uB,KAA9C,qBAzMWqK,EAgNnBuM,aAhNmBlX,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAgNJ,SAAAC,IAAA,IAAAuH,EAAA6c,EAAA,OAAA/lB,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACRS,EAAKwM,WAAcxM,EAAK9J,WADhB,CAAA8K,EAAAzB,KAAA,eAEXxL,EAAA,EAAQgO,KAAK,gEAFFf,EAAAyL,OAAA,wBAAAzL,EAAAzB,KAAA,EAKK3F,GAChB,EACA,GACAoG,EAAK9J,WACL8J,EAAKwM,UACLxM,EAAK0M,SAVM,OAKPtE,EALOpH,EAAAxB,KAYPylB,EAASjlB,EAAKklB,UAAU9c,GAC9BpI,EAAK2E,SAAS,CAAEnS,KAAMyyB,EAAOzyB,KAAM8Z,MAAO2Y,EAAO3Y,QAbpC,wBAAAtL,EAAAZ,SAAAS,MAhNIb,EA+NnBklB,UAAY,SAAA9c,GACVxP,QAAQC,IAAI,OAAQuP,GACpB,IAAI1V,EAAS,EACTyyB,EAAc,GAyElB,OAxEmB,IAAf/c,EAAIzQ,QAAgByQ,EAAI5V,OAEtB4V,EAAI5V,KAAK4yB,MACXhd,EAAI5V,KAAK4yB,KACNvd,OAAO,SAAAyL,GAAC,OAAIA,GAAKA,EAAE8G,MACnB9Q,IACC,SAAAgK,GAAC,OAAMA,EAAEpd,WAAawU,SAAS4I,EAAE8G,IAAIlkB,mBAAqBod,EAAE8G,MAI9DhS,EAAI5V,KAAK6yB,QACXjd,EAAI5V,KAAK6yB,MACNxd,OAAO,SAAAyL,GAAC,OAAIA,GAAKA,EAAE8G,MACnB9Q,IACC,SAAAgK,GAAC,OACEA,EAAEgS,sBAAwBhS,EAAEiS,eAAe7yB,OAC3C4gB,EAAEkS,gBAAkBlS,EAAEmS,SAAS/yB,OAC/B4gB,EAAEoS,0BAA4BpS,EAAEqS,mBAAmBjzB,OACnD4gB,EAAEsS,oBAAsBtS,EAAEuS,aAAanzB,OACvC4gB,EAAEwS,qBAAuBxS,EAAEyS,cAAcrzB,OACzC4gB,EAAE0S,yBAA2B1S,EAAE2S,kBAAkBvzB,OACjD4gB,EAAEpd,WAAawU,SAAS4I,EAAE8G,IAAIlkB,mBACxBod,EAAE8G,MAIfhS,EAAI5V,KAAK4yB,KAAK9b,IAAI,SAAAgK,GAAC,OACjBje,OAAOoR,OACL6M,EACAlL,EAAI5V,KAAK6yB,MAAMngB,KAAK,SAAAghB,GAAC,OAAIA,EAAEhwB,aAAeod,EAAEpd,iBAM9CkS,EAAI5V,KAAK2zB,OACX/d,EAAI5V,KAAK2zB,KACNte,OAAO,SAAAyL,GAAC,OAAIA,GAAKA,EAAE8G,MACnB9Q,IACC,SAAAgK,GAAC,OACEA,EAAE8S,kBACA5E,KAAK6E,IAAI/S,EAAEgT,sBAAwBhT,EAAEiT,sBACrCjT,EAAEiT,oBAAsB/E,KAAK6E,IAAI/S,EAAEgT,wBACpC9O,QAAQ,GACTlE,EAAEiT,oBACD/E,KAAKE,MAA8B,IAAxBpO,EAAEiT,qBAA+B,IAC7CjT,EAAEgT,qBACD9E,KAAKE,MAA+B,IAAzBpO,EAAEgT,sBAAgC,IAC9ChT,EAAEkT,gBACDhF,KAAKE,MAED,KADDpO,EAAEiT,oBAAsB/E,KAAK6E,IAAI/S,EAAEgT,wBAElC,IACLhT,EAAEpd,WAAawU,SAAS4I,EAAE8G,IAAIlkB,mBACxBod,EAAE8G,MAKfhS,EAAI5V,KAAK4yB,KAAK9b,IAAI,SAAAgK,GAAC,OACjBje,OAAOoR,OACL6M,EACAlL,EAAI5V,KAAK2zB,KAAKjhB,KAAK,SAAAghB,GAAC,OAAIA,EAAEhwB,aAAeod,EAAEpd,iBAKjDxD,EAAS0V,EAAI5V,KAAK4yB,KAAK1yB,OACvByyB,EAAc/c,EAAI5V,KAAK4yB,KACvBxsB,QAAQC,IAAI,6BAAyBuP,EAAI5V,KAAK4yB,OAGzC,CACLqB,KAAMre,EAAIqe,KACVplB,IAAK+G,EAAI/G,IACTiL,MAAO5Z,EACPF,KAAM2yB,IA/SSnlB,EAkTnB0mB,cAAgB,SAAAte,GACdxP,QAAQC,IAAIuP,GACZ,IAAI1V,EAAS,EACTyyB,EAAc,GAqElB,OApEmB,IAAf/c,EAAIzQ,QAAgByQ,EAAI5V,OAEtB4V,EAAI5V,KAAK4yB,MACXhd,EAAI5V,KAAK4yB,KAAK9b,IAAI,SAAAgK,GAAC,OAAMA,EAAErZ,KAAOqZ,EAAE8G,IAAI/K,kBAAoBiE,EAAE8G,MAG5DhS,EAAI5V,KAAK6yB,QAEXjd,EAAI5V,KAAK6yB,MACNxd,OAAO,SAAAyL,GAAC,OAAIA,GAAKA,EAAE8G,MACnB9Q,IACC,SAAAgK,GAAC,OACEA,EAAEgS,sBAAwBhS,EAAEiS,eAAe7yB,OAC3C4gB,EAAEkS,gBAAkBlS,EAAEmS,SAAS/yB,OAC/B4gB,EAAEoS,0BAA4BpS,EAAEqS,mBAAmBjzB,OACnD4gB,EAAEsS,oBAAsBtS,EAAEuS,aAAanzB,OACvC4gB,EAAEwS,qBAAuBxS,EAAEyS,cAAcrzB,OACzC4gB,EAAE0S,yBAA2B1S,EAAE2S,kBAAkBvzB,OACjD4gB,EAAErZ,KAAOqZ,EAAE8G,IAAIkB,mBACThI,EAAE8G,MAIfhS,EAAI5V,KAAK4yB,KAAK9b,IAAI,SAAAgK,GAAC,OACjBje,OAAOoR,OAAO6M,EAAGlL,EAAI5V,KAAK6yB,MAAMngB,KAAK,SAAAghB,GAAC,OAAIA,EAAEjsB,OAASqZ,EAAErZ,WAIvDmO,EAAI5V,KAAK2zB,OAEX/d,EAAI5V,KAAK2zB,KACNte,OAAO,SAAAyL,GAAC,OAAIA,GAAKA,EAAE8G,MACnB9Q,IACC,SAAAgK,GAAC,OACEA,EAAE8S,kBACA5E,KAAK6E,IAAI/S,EAAEgT,sBAAwBhT,EAAEiT,sBACrCjT,EAAEiT,oBAAsB/E,KAAK6E,IAAI/S,EAAEgT,wBACpC9O,QAAQ,GACTlE,EAAEiT,oBACD/E,KAAKE,MAA8B,IAAxBpO,EAAEiT,qBAA+B,IAC7CjT,EAAEgT,qBACD9E,KAAKE,MAA+B,IAAzBpO,EAAEgT,sBAAgC,IAC9ChT,EAAEkT,gBACDhF,KAAKE,MAED,KADDpO,EAAEiT,oBAAsB/E,KAAK6E,IAAI/S,EAAEgT,wBAElC,IACLhT,EAAErZ,KAAOqZ,EAAE8G,IAAIkB,mBACThI,EAAE8G,MAKfhS,EAAI5V,KAAK4yB,KAAK9b,IAAI,SAAAgK,GAAC,OACjBje,OAAOoR,OAAO6M,EAAGlL,EAAI5V,KAAK2zB,KAAKjhB,KAAK,SAAAghB,GAAC,OAAIA,EAAEjsB,OAASqZ,EAAErZ,WAK1DmO,EAAI5V,KAAK4yB,KAAKzM,KACZ,SAACxZ,EAAG6N,GAAJ,OACEtC,SAASsC,EAAE/S,KAAKkG,QAAQ,KAAM,KAC9BuK,SAASvL,EAAElF,KAAKkG,QAAQ,KAAM,OAElCzN,EAAS0V,EAAI5V,KAAK4yB,KAAK1yB,OACvByyB,EAAc/c,EAAI5V,KAAK4yB,KACvBxsB,QAAQC,IAAIuP,EAAI5V,KAAK4yB,OAEhB,CACLqB,KAAMre,EAAIqe,KACVplB,IAAK+G,EAAI/G,IACTiL,MAAO5Z,EACPF,KAAM2yB,IA9XSnlB,EAiYnB2mB,cAAgB,SAAAve,GACdxP,QAAQC,IAAIuP,GAEO,IAAfA,EAAIzQ,QAAgByQ,EAAI5V,MAC1B4V,EAAI5V,KAAK8W,IACP,SAAAgK,GAAC,OACEA,EAAE8S,kBACA5E,KAAK6E,IAAI/S,EAAEgT,sBAAwBhT,EAAEiT,sBACrCjT,EAAEiT,oBAAsB/E,KAAK6E,IAAI/S,EAAEgT,wBACpC9O,QAAQ,GACTlE,EAAEiT,oBACD/E,KAAKE,MAA8B,IAAxBpO,EAAEiT,qBAA+B,IAC7CjT,EAAEgT,qBACD9E,KAAKE,MAA+B,IAAzBpO,EAAEgT,sBAAgC,IAC9ChT,EAAEkT,gBACDhF,KAAKE,MAC0D,KAA5DpO,EAAEiT,oBAAsB/E,KAAK6E,IAAI/S,EAAEgT,wBAClC,OAlZKtmB,EAuZnBglB,cAvZmB,eAAArjB,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAuZH,SAAAgB,EAAMjM,GAAN,IAAAyS,EAAAyc,EAAA,OAAA3lB,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACI1F,GAChB,EACA,GACAlE,EAAOO,WACP8J,EAAKwM,UACLxM,EAAK0M,SANO,OACRtE,EADQvG,EAAArC,KAQRqlB,EAAa7kB,EAAK0mB,cAActe,GACtCpI,EAAK6kB,WAAaA,EAClB7kB,EAAKrJ,OAAS,gBACdqJ,EAAK2E,SAAS,CAAEiiB,aAAa,IAXf,wBAAA/kB,EAAAzB,SAAAwB,MAvZG,gBAAAN,GAAA,OAAAK,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EAoanBykB,cApamB,eAAAlU,EAAAlb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAoaH,SAAA4P,EAAM7a,GAAN,IAAAyS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,cAAAkR,EAAAlR,KAAA,EACIxF,GAAW,EAAG,GAAIiG,EAAK9J,WAAYP,EAAOsE,MAD9C,OACRmO,EADQqI,EAAAjR,KAEdQ,EAAK2mB,cAAcve,GACnBpI,EAAK2E,SAAS,CACZ1K,KAAMtE,EAAOsE,KACb0qB,kBAAkB,EAClBC,cAAexc,EAAI5V,OANP,wBAAAie,EAAArQ,SAAAoQ,MApaG,gBAAAjP,GAAA,OAAAgP,EAAA/O,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXpT,KAAM,GACN6E,YAAa,GACbiV,MAAO,EACP2B,SAAU,GACV2Y,aAAa,EACbjC,kBAAkB,GARH3kB,mFAsBjByB,KAAKyc,kDAEE,IAAArY,EAAApE,KACDolB,EAAcplB,KAAKmE,MAAMvO,YAAYiS,IAAI,SAAA5J,GAC7C,OACEuC,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAO8J,EAAKlK,GAAI6P,IAAK3F,EAAKlK,IACtCkK,EAAKvI,QAIZ,OACE8K,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAACsJ,GAAD,CACEO,YAAa,SAAAjD,GACI6B,KAAO7B,EAAI,IAAIoE,KAAKvC,KAAO7B,EAAI,IAAK,QACpC,EACb/U,EAAA,EAAQD,MAAM,kEAEd+R,EAAK2G,UAAY1D,EAAI,GACrBjD,EAAK6G,QAAU5D,EAAI,OAR3B,YAaE7G,EAAA9C,EAAA+C,cAAAwQ,GAAA,GACE/O,YAAY,qBACZF,MAAO,CAAE6E,MAAO,KAChBwN,SAAU,SAAAlgB,GAAK,OAAKiQ,EAAK3P,WAAaN,IAErCixB,GAlBL,YAqBE5kB,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAASrC,KAAK8K,aAAc7F,KAAK,WAC3CzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,YAtBf,eA6BJqP,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAEqjB,aAAc,GAAIC,gBAAiB,SAC/C9kB,EAAA9C,EAAA+C,cAAA,QAAMuB,MAAO,CAAEujB,OAAQ,mBACrB/kB,EAAA9C,EAAA+C,cAAA,uFAFJ,mBAKED,EAAA9C,EAAA+C,cAAA,QAAMuB,MAAO,CAAEujB,OAAQ,mBACrB/kB,EAAA9C,EAAA+C,cAAA,uFANJ,mBASED,EAAA9C,EAAA+C,cAAA,QAAMuB,MAAO,CAAEujB,OAAQ,mBACrB/kB,EAAA9C,EAAA+C,cAAA,wJAGJD,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAO,aACPE,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLuM,OAAQ,CAAEC,EAAG,QAEfjR,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,iCACN2I,MAAM,MACNmB,QAAShI,KAAKmE,MAAMghB,YACpBld,SAAU,WACR7D,EAAKlB,SAAS,CAAEiiB,aAAa,KAE/Bjd,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAC+kB,GAAD,CACEpC,WAAYpjB,KAAKojB,WACjBluB,OAAQ8K,KAAK9K,OACbT,WAAYuL,KAAKvL,WACjB4P,MAAOrE,KAAKklB,iBAGhB1kB,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,2BACN2I,MAAM,MACNmB,QAAShI,KAAKmE,MAAM+e,iBACpBjb,SAAU,WACR7D,EAAKlB,SAAS,CAAEggB,kBAAkB,KAEpChb,OAAQ,MAER1H,EAAA9C,EAAA+C,cAAC4iB,GAAD,CAAgBtyB,KAAMiP,KAAKmE,MAAMgf,yBAhHjB3gB,aCoFX6Z,GAFSjf,EAAA,EAAKsF,QAALtF,CA7FP,SAAAoB,GAAS,IAChB6C,EAAsB7C,EAAMO,KAA5BsC,kBACFtQ,EAAOyN,EAAMzN,KAqBnB,OACEyP,EAAA9C,EAAA+C,cAAArD,EAAA,GAAM+K,SAAU,CAAEC,KAAM,GAAKC,WAAW,OAAO9G,SArB1B,SAAA1C,GACrBA,EAAMC,iBACNN,EAAMO,KAAKC,eAAX,eAAAyL,EAAA7W,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA0B,SAAA5B,EAAO8B,EAAKlL,GAAZ,IAAAyP,EAAA+C,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBuB,EADmB,CAAAzB,EAAAE,KAAA,QAEtB,IAAW8F,KAAOzP,OACGjD,IAAfiD,EAAMyP,KACRzP,EAAMyP,GAAO,IAJK,OAAAhG,EAAAE,KAAA,EAOJ7G,GAASlG,EAAKgD,GAAII,GAPd,OAQH,KADbwS,EAPgB/I,EAAAG,MAQd7H,QACN5D,EAAA,EAAQkN,QAAQ,4BAChBhB,EAAM8d,WACN9d,EAAMO,KAAK0P,eAEXnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAbP,wBAAAhC,EAAAe,SAAApB,MAA1B,gBAAAsC,EAAAC,GAAA,OAAA2K,EAAA1K,MAAAC,KAAAhP,YAAA,MAoBEwP,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,MAAO,CACxB7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,mCACnCkX,aAAczY,EAAK6vB,KAFpBvf,CAICb,EAAA9C,EAAA+C,cAAAwQ,GAAA,GAAQjP,MAAO,CAAE6E,MAAO,QACtBrG,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAO,GAAtB,4BACCqK,EAAM4mB,eAIb5kB,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,sBACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,yCACnCkX,aAAczY,EAAK2E,KAAKgJ,QAAQ,UAAW,KAF5C2C,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,OAAS3E,YAAY,yBAEjD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,sBACdjH,EAAkB,SAAU,CAAEmI,aAAczY,EAAK00B,QAAjDpkB,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,OAAS3E,YAAY,yBAGhD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,sBACdjH,EAAkB,SAAU,CAAEmI,aAAczY,EAAKmE,QAAjDmM,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,OAAS3E,YAAY,yBAGhD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,OAAQ,CAAEmI,aAAczY,EAAK20B,MAA/CrkB,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,OAAS3E,YAAY,+BAGhD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,mBACdjH,EAAkB,MAAO,CAAEmI,aAAczY,EAAK40B,YAA9CtkB,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,OAAS3E,YAAY,sBAGhD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,oBACdjH,EAAkB,OAAQ,CAAEmI,aAAczY,EAAKgR,MAA/CV,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,OAAS3E,YAAY,uBAGhD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,OAAQ,CACzB7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,yCACnCkX,aAAczY,EAAKmmB,MAFpB7V,CAGEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,OAAS3E,YAAY,+BAEjD1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,CAAWmL,MAAM,4BACdjH,EAAkB,SAAU,CAC3BmI,aAAczY,EAAKmF,QADpBmL,CAGCb,EAAA9C,EAAA+C,cAAAyS,GAAA,EAAOC,MAAP,KACE3S,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,gBACAqM,EAAA9C,EAAA+C,cAAAyS,GAAA,GAAO/e,MAAO,GAAd,yBAKNqM,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUoR,SAAS,SAASjB,UAAU,qBAAnD,oBCvEFskB,eACJ,SAAAA,EAAYpnB,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAA4lB,IACjBrnB,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAgyB,GAAA3iB,KAAAjD,KAAMxB,KAORie,eARmB7oB,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAQF,SAAA5B,IAAA,IAAAoJ,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACG/G,IADH,OAEI,KADb4P,EADS/I,EAAAG,MAEP7H,OACNqI,EAAK2E,SAAS,CACZnS,KAAM4V,EAAI5V,KACV8Z,MAAOlE,EAAIkE,QAGbvY,EAAA,EAAQD,MAAMsU,EAAI/G,KARL,wBAAAhC,EAAAe,SAAApB,MAREgB,EA8InB6M,YAAc,iBAAM,CAClB,CACElN,MAAO,qBACPmN,UAAW,OACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YAAOvM,EAAOwB,KAAKgJ,QAAQ,UAAW,QAG1C,CACER,MAAO,qBACPmN,UAAW,UAEb,CACEnN,MAAO,qBACPmN,UAAW,UAEb,CACEnN,MAAO,2BACPmN,UAAW,QAEb,CACEnN,MAAO,kBACPmN,UAAW,cAEb,CACEnN,MAAO,mBACPmN,UAAW,QAEb,CACEnN,MAAO,eACPmN,UAAW,SACXqC,OAAQ,SAAAM,GAAI,OAAIxN,EAAA9C,EAAA+C,cAAA,YAAgB,IAATuN,EAAa,SAAM,YAE5C,CACE9P,MAAO,2BACPmN,UAAW,QAEb,CACEnN,MAAO,eACPmN,UAAW,GACXqC,OAAQ,SAACM,EAAM9Z,EAAQ4X,GAAf,OACNtL,EAAA9C,EAAA+C,cAAA,YACED,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,UAAUkR,QAAS,kBAAM9D,EAAKqV,KAAK1f,IAAS+Q,KAAK,SAA9D,gBADF,eAKEzE,EAAA9C,EAAA+C,cAAA8P,GAAA,GACErS,MAAM,wCACNsS,UAAW,kBAAMjS,EAAK2a,SAAShlB,IAC/Boc,OAAO,eACPG,WAAW,gBAEXjQ,EAAA9C,EAAA+C,cAAA6B,EAAA,GAAQnR,KAAK,SAAS8T,KAAK,SAA3B,sBAlMS1G,EA0MnBK,aAAe,SAAAC,GACbA,EAAMC,iBACNP,EAAKC,MAAMO,KAAKC,eAAhB,eAAAC,EAAArL,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAA+B,SAAAC,EAAOC,EAAKlL,GAAZ,IAAAyP,EAAA+C,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACxBuB,EADwB,CAAAE,EAAAzB,KAAA,QAE3B,IAAW8F,KAAOzP,OACGjD,IAAfiD,EAAMyP,KACRzP,EAAMyP,GAAO,IAJU,OAAArE,EAAAzB,KAAA,EAOT9G,EAAQ7C,GAPC,OAQR,KADbwS,EAPqBpH,EAAAxB,MAQnB7H,QACN5D,EAAA,EAAQkN,QAAQ,4BAChBjB,EAAKke,iBACLle,EAAKC,MAAMO,KAAK0P,eAEhBnc,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KAbF,wBAAAL,EAAAZ,SAAAS,MAA/B,gBAAAS,EAAAC,GAAA,OAAAb,EAAAc,MAAAC,KAAAhP,YAAA,KA5MiBuN,EA8NnB2a,SA9NmB,eAAAhZ,EAAAtM,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KA8NR,SAAAgB,EAAMjM,GAAN,IAAAyS,EAAA,OAAAlJ,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EACOzG,GAAQnD,EAAOH,IADtB,OAEU,KADf4S,EADKvG,EAAArC,MAED7H,QACN5D,EAAA,EAAQkN,QAAQ,4BAChBjB,EAAKke,kBAELnqB,EAAA,EAAQD,MAAM,2BAASsU,EAAI/G,KANpB,wBAAAQ,EAAAzB,SAAAwB,MA9NQ,gBAAAU,GAAA,OAAAX,EAAAH,MAAAC,KAAAhP,YAAA,GAAAuN,EAuOnBqV,KAvOmB,eAAA9E,EAAAlb,OAAAsL,EAAA,EAAAtL,CAAA6J,EAAAC,EAAAyB,KAuOZ,SAAA4P,EAAM7a,GAAN,OAAAuJ,EAAAC,EAAAC,KAAA,SAAAqR,GAAA,cAAAA,EAAAnR,KAAAmR,EAAAlR,MAAA,OACLS,EAAKiU,eAAiBte,EACtBqK,EAAK2E,SAAS,CACZ6D,gBAAgB,IAHb,wBAAAiI,EAAArQ,SAAAoQ,MAvOY,gBAAAjO,GAAA,OAAAgO,EAAA/O,MAAAC,KAAAhP,YAAA,GAEjBuN,EAAK4F,MAAQ,CACXpT,KAAM,GACN8Z,MAAO,EACP9D,gBAAgB,GALDxI,mFAoBjByB,KAAKyc,kDAEE,IAAArY,EAAApE,KACCqB,EAAsBrB,KAAKxB,MAAMO,KAAjCsC,kBACF+jB,EAAcplB,KAAKmE,MAAMpT,KAAK8W,IAAI,SAAA5J,GACtC,OACEuC,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAO8J,EAAKlK,GAAI6P,IAAK3F,EAAKvI,MACtCuI,EAAKvI,KAAKgJ,QAAQ,UAAW,QAIpC,OACE8B,EAAA9C,EAAA+C,cAAAiL,GAAA,GACExN,MACEsC,EAAA9C,EAAA+C,cAAA,WACED,EAAA9C,EAAA+C,cAAArD,EAAA,GAAMyoB,OAAO,SAAStkB,SAAUvB,KAAKpB,cACnC4B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,MAAO,CACxB7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,mCACnCkX,aAAc,KAFfnI,CAICb,EAAA9C,EAAA+C,cAAAwQ,GAAA,GAAQjP,MAAO,CAAE6E,MAAO,MACtBrG,EAAA9C,EAAA+C,cAAAwQ,GAAA,EAAQtE,OAAR,CAAexY,MAAM,KAArB,4BACCixB,KAIP5kB,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,OAAQ,CACzB7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,0CADpC+O,CAEEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,KAAO3E,YAAY,yBAE/C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,SAAU,GAA5BA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,KAAO3E,YAAY,yBAG9C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,SAAU,GAA5BA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,KAAO3E,YAAY,yBAG9C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,OAAQ,GAA1BA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,KAAO3E,YAAY,+BAG9C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,MAAO,GAAzBA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,KAAO3E,YAAY,sBAG9C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,OAAQ,GAA1BA,CACCb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,KAAO3E,YAAY,uBAG9C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACGkE,EAAkB,OAAQ,CACzB7J,MAAO,CAAC,CAAEgK,UAAU,EAAMlP,QAAS,0CADpC+O,CAEEb,EAAA9C,EAAA+C,cAAAoB,EAAA,GAAOG,MAAO,CAAE6E,MAAO,KAAO3E,YAAY,+BAE/C1B,EAAA9C,EAAA+C,cAAArD,EAAA,EAAMD,KAAN,KACEqD,EAAA9C,EAAA+C,cAAA6B,EAAA,GACE2C,KAAK,UACL9T,KAAK,UACLoR,SAAS,SACTjB,UAAU,qBAJZ,mBAYR+P,MACE7Q,EAAA9C,EAAA+C,cAACsE,GAAD,CAAY1C,QAAS,kBAAMxH,OAAOwI,SAASiO,UAAUrM,KAAK,WACxDzE,EAAA9C,EAAA+C,cAAAsB,EAAA,GAAM5Q,KAAK,aAIfqP,EAAA9C,EAAA+C,cAAAkL,GAAA,GACEC,UAAQ,EACRC,OAAQ,SAAC3X,EAAQ4X,GAAT,SAAAhG,OAAsBgG,IAC9BC,WAAY/L,KAAKmE,MAAMpT,KACvBib,QAAShM,KAAKoL,cACdnG,KAAK,QACLgH,WAAY,CACVC,gBAAiB,GACjBqF,iBAAiB,EACjBpF,iBAAiB,EACjBC,UAAW,SAACC,EAAOC,GAAR,eAAAxG,OAAsBuG,EAAtB,WACXE,eAAgB,EAChBF,MAAOrM,KAAKmE,MAAM0G,MAClBxF,SAAU,SAAChS,EAAMmZ,GACfpI,EAAKqY,eAAeppB,EAAMmZ,IAE5BC,iBAAkB,SAACC,EAASzH,GAC1Bb,EAAKqY,eAAe/P,EAASzH,OAInCzE,EAAA9C,EAAA+C,cAAAJ,EAAA,GACEnC,MAAM,eACN8J,QAAShI,KAAKmE,MAAM4C,eACpBkB,SAAU,WACR7D,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElCmB,OAAQ,MAER1H,EAAA9C,EAAA+C,cAACqlB,GAAD,CACExJ,SAAU,WACRlY,EAAKqY,iBACLrY,EAAKlB,SAAS,CAAE6D,gBAAgB,KAElCqe,YAAaA,EACbr0B,KAAMiP,KAAKwS,0BAzIJhQ,aAgPJujB,GADI3oB,EAAA,EAAKsF,QAALtF,CAAcwoB,uBCzNzBI,cAAOC,gBAETxnB,GAAUynB,eAIKC,eACnB,SAAAA,EAAY3nB,GAAO,IAAAD,EAAA,OAAA3K,OAAAkP,EAAA,EAAAlP,CAAAoM,KAAAmmB,IACjB5nB,EAAA3K,OAAAmP,EAAA,EAAAnP,CAAAoM,KAAApM,OAAAoP,EAAA,EAAApP,CAAAuyB,GAAAljB,KAAAjD,KAAMxB,KACD2F,MAAQ,GAFI5F,wEAQV,IAAA6F,EAAApE,KAGP,IAFctN,aAAaD,MAGzB,OAAO+N,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAUC,GAAG,WAMtB,IAHkB,IAAI1B,MAAOC,UACNjN,aAAa+M,eAEzB,OAEU,IADPrM,EAAS,EAAG,IAChB8C,OAKN,OAJAxD,aAAa+T,WAAW,YACxB/T,aAAa+T,WAAW,SACxB/T,aAAa+T,WAAW,QACxB/T,aAAa+T,WAAW,kBACjBjG,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAUC,GAAG,WAGxB,OACEZ,EAAA9C,EAAA+C,cAAAolB,GAAA,GAAQ7jB,MAAO,CAAEokB,UAAW,SAC1B5lB,EAAA9C,EAAA+C,cAACulB,GAAD,KACExlB,EAAA9C,EAAA+C,cAAC4lB,GAAD,CACEhkB,QAAS,SAAAqD,GACPtB,EAAKkiB,OAAO7gB,KAAOrB,EAAKkiB,OAAO7gB,IAAIC,OAIzClF,EAAA9C,EAAA+C,cAAAolB,GAAA,OACErlB,EAAA9C,EAAA+C,cAAC8lB,GAAD,CAAQnf,MAAO,SAAA+J,GAAG,OAAK/M,EAAKkiB,OAASnV,GAAM1S,QAASA,IAApD,UAGA+B,EAAA9C,EAAA+C,cAACwlB,GAAD,CAASjkB,MAAO,CAAEwkB,OAAQ,EAAGlB,gBAAiB,SAC5C9kB,EAAA9C,EAAA+C,cAACgmB,GAAA,EAAD,KACEjmB,EAAA9C,EAAA+C,cAAA,OAAKuB,MAAO,CAAE0kB,OAAQ,SACpBlmB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,KACEX,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAUwlB,KAAK,IAAIC,OAAK,EAACxlB,GAAG,UAC5BZ,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,QAAQwjB,OAAK,EAACC,UAAWre,KACrChI,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,kBAAkBwjB,OAAK,GACjCpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,QACd8K,EAAA9C,EAAA+C,cAACsmB,GAAD,QAGJvmB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,iCACV5C,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,eACd8K,EAAA9C,EAAA+C,cAACumB,GAAD,QAGJxmB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,kCACLwjB,OAAK,EACLC,UAAWlN,IAEXnZ,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,iBACd8K,EAAA9C,EAAA+C,cAACwmB,GAAD,QAGJzmB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,qBACLwjB,OAAK,EACLC,UAAWrT,IAEXhT,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,qBACd8K,EAAA9C,EAAA+C,cAACymB,GAAD,QAGJ1mB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,qBAAqBwjB,OAAK,EAACC,UAAWd,IAChDvlB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,cACd8K,EAAA9C,EAAA+C,cAAC0mB,GAAD,QAGJ3mB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,qBAAqBwjB,OAAK,EAACC,UAAWzR,IAChD5U,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,QACd8K,EAAA9C,EAAA+C,cAAC2mB,GAAD,QAIJ5mB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,qBAAqBwjB,OAAK,GACpCpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,eACd8K,EAAA9C,EAAA+C,cAAC4mB,GAAD,QAIJ7mB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,sBAAsBwjB,OAAK,GACrCpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,iBACd8K,EAAA9C,EAAA+C,cAAC6mB,GAAD,QAIJ9mB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,iBAAiBwjB,OAAK,GAChCpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,gBACd8K,EAAA9C,EAAA+C,cAAC8mB,GAAD,QAGJ/mB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,uBAAuBwjB,OAAK,GACtCpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,SACd8K,EAAA9C,EAAA+C,cAAC+mB,GAAD,QAIJhnB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,qBAAqBwjB,OAAK,GACpCpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,eACd8K,EAAA9C,EAAA+C,cAACgnB,GAAD,QAGJjnB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,sBAAsBwjB,OAAK,GACrCpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,gBACd8K,EAAA9C,EAAA+C,cAACinB,GAAD,QAGJlnB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,oBAAoBwjB,OAAK,GACnCpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,cACd8K,EAAA9C,EAAA+C,cAACknB,GAAD,QAGJnnB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,iBAAiBwjB,OAAK,GAChCpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,gBACd8K,EAAA9C,EAAA+C,cAACmnB,GAAD,QAGJpnB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,oBAAoBwjB,OAAK,GACnCpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,mBACd8K,EAAA9C,EAAA+C,cAAConB,GAAD,QAGJrnB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,wBAAwBwjB,OAAK,GACvCpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,eACd8K,EAAA9C,EAAA+C,cAACqnB,GAAD,QAGJtnB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,qBAAqBwjB,OAAK,EAACC,UAAWrR,IAChDhV,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,cACd8K,EAAA9C,EAAA+C,cAACsnB,GAAD,QAGJvnB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,uBACLwjB,OAAK,EACLC,UAAW1P,IAEX3W,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,gBACd8K,EAAA9C,EAAA+C,cAACunB,GAAD,QAGJxnB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,wBACLwjB,OAAK,EACLC,UAAWpP,IAEXjX,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,iBACd8K,EAAA9C,EAAA+C,cAACwnB,GAAD,QAGJznB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,0BACLwjB,OAAK,EACLC,UAAWjP,IAEXpX,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,kBACd8K,EAAA9C,EAAA+C,cAACynB,GAAD,QAGJ1nB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,2BACLwjB,OAAK,EACLC,UAAW9O,IAEXvX,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,oBACd8K,EAAA9C,EAAA+C,cAAC0nB,GAAD,QAGJ3nB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,0BACLwjB,OAAK,EACLC,UAAWxL,IAEX7a,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,iBACd8K,EAAA9C,EAAA+C,cAAC2nB,GAAD,QAGJ5nB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CACEiC,KAAK,4BACLwjB,OAAK,EACLC,UAAWwB,IAEX7nB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,cACd8K,EAAA9C,EAAA+C,cAAC4nB,GAAD,QAGJ7nB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,oBAAoBwjB,OAAK,GACnCpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,WACd8K,EAAA9C,EAAA+C,cAAC6nB,GAAD,QAGJ9nB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,aAAawjB,OAAK,GAC5BpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,YACd8K,EAAA9C,EAAA+C,cAAC8nB,GAAD,QAGJ/nB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,gBAAgBwjB,OAAK,GAC/BpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,eACd8K,EAAA9C,EAAA+C,cAAC+nB,GAAD,QAGJhoB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,YAAYwjB,OAAK,GAC3BpmB,EAAA9C,EAAA+C,cAACqmB,GAAA,EAAD,CAAWpxB,KAAK,MACd8K,EAAA9C,EAAA+C,cAACgoB,GAAD,QAGJjoB,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAO0lB,UAAWlE,kBA3NDngB,iCC7C7BkmB,GAAe,CACnBh1B,WAAY,ICECi1B,GADDC,aDCC,WAAkC,IAAjCzkB,EAAiCnT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB03B,GAAcxzB,EAAWlE,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE3C23B,EAAWxqB,KAAKgG,MAAMhG,KAAKC,UAAU6F,IACzC,OAAQjP,EAAO/D,MACb,IAAK,eACH03B,EAASn1B,WAAawB,EAAOf,MAC7B,MACF,IAAK,gBACH00B,EAASn1B,WAAa,GAK1B,OAAOm1B,IEJYC,oLAEjB,OACEtoB,EAAA9C,EAAA+C,cAACsoB,GAAA,EAAD,CAAUJ,MAAOA,IACfnoB,EAAA9C,EAAA+C,cAACyD,EAAA,EAAD,KACE1D,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,KAEEX,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,SAASyjB,UAAWxpB,KAChCmD,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAOiC,KAAK,IAAIyjB,UAAWV,eARN3jB,kCCR3BwmB,GAAO,WACEC,GAAA,WAcX,OAAON,KAAMl3B,IAAIu3B,KAAS,ICFxBvqB,GAAUyqB,eAChBzqB,GAAQ0qB,OAAO,SAAC9lB,EAAUnO,GAEtBiC,QAAQC,IAAI,UAAUlC,EAAQmO,EAASC,SAAUD,EAASc,OAE1D9D,EAAA,EAAM+oB,eAMGH,KAKbI,IAAS3b,OAAOlN,EAAA9C,EAAA+C,cAACU,EAAA,EAAD,CAAQ1C,QAASA,IAC7B+B,EAAA9C,EAAA+C,cAAC6oB,GAAD,OACSC,SAASC,eAAe","file":"static/js/main.1a629a28.chunk.js","sourcesContent":["/*\n能发送异步ajax请求的函数模块\n封装axios库\n函数的返回值是promise对象\n1. 优化1: 统一处理请求异常?\n    在外层包一个自己创建的promise对象\n    在请求出错时, 不reject(error), 而是显示错误提示\n2. 优化2: 异步得到不是reponse, 而是response.data\n   在请求成功resolve时: resolve(response.data)\n */\n\nimport axios from \"axios\";\nimport { message } from \"antd\";\n\n//设置axios为form-data\n\nexport default function ajax(url, data = {}, type = \"GET\") {\n  // axios.interceptors.request.use((config) => {\n  //   if (['/user/login', '/user/register'].indexOf(config.url) === -1) {\n  //     const token = localStorage.getItem('token')\n  //     if (token) {\n  //       config.headers.Authorization = token\n  //     }\n  //   }\n  //   return config\n  // })\n  return new Promise((resolve, reject) => {\n    let promise;\n    // 1. 执行异步ajax请求\n    if (type === \"GET\") {\n      // 发GET请求\n      promise = axios.get(url, {\n        // 配置对象\n        params: data // 指定请求参数\n      });\n    } else {\n      // 发POST请求\n      axios.defaults.headers.post[\"Content-Type\"] =\n        \"application/x-www-form-urlencoded\";\n      axios.defaults.transformRequest = [\n        function(data) {\n          let ret = \"\";\n          for (let it in data) {\n            ret +=\n              encodeURIComponent(it) + \"=\" + encodeURIComponent(data[it]) + \"&\";\n          }\n          return ret;\n        }\n      ];\n      promise = axios.post(url, data);\n    }\n    // 2. 如果成功了, 调用resolve(value)\n    promise\n      .then(response => {\n        resolve(response.data);\n        // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\n      })\n      .catch(error => {\n        // reject(error)\n        message.error(\"请求出错了: \" + error.message);\n      });\n  });\n}","import ajax from \"./ajax\";\n//import storageUtils from \"../utils/storageUtils\";\n// import token from '../pages/login'\n//import memory from\n\nconst BASE = process.env.REACT_APP_HOST;\n\nvar token = localStorage.token || \"\";\n//登陆成功后赋值token\nexport const setToken = () => {\n  token = localStorage.token;\n};\n\n// 登陆\nexport const reqLogin = (username, password, authcode) =>\n  ajax(BASE + \"/login/login\", { username, password, authcode }, \"POST\");\n\n// 获取authCode\nexport const reqAuthCode = (username, password) =>\n  ajax(BASE + \"/login/authCode\", { username, password }, \"POST\");\n\n// 获取菜单\nexport const navList = () => {\n  const token = localStorage.token;\n  return ajax(BASE + \"/acl/navList\", { token }, \"POST\");\n};\n//安全码设置\nexport const getAuthCode = () =>\n  ajax(BASE + \"/index/getAuthCode\", { token }, \"POST\");\n//修改密码\nexport const editPass = password =>\n  ajax(BASE + \"/acl/editPass\", { token, password }, \"POST\");\n//用户列表\nexport const reqUsers = (page, limit, start, end, inputKey, inputValue) => {\n  return ajax(\n    BASE + \"/user/index\",\n    { page, limit, start, end, [inputKey]: inputValue, token },\n    \"POST\"\n  );\n};\n\nexport const setGameUserNickName = (id, game_nick) =>\n  ajax(BASE + \"/user/setGameUserNickName\", { token, id, game_nick }, \"POST\");\nexport const changeGold = (record, value) => {\n  let obj = {};\n  let str = \"params[user_id]\";\n  obj[str] = record.id;\n  str = \"params[amount]\";\n  obj[str] = value.gold;\n  str = \"params[reason]\";\n  obj[str] = value.desc;\n  str = \"params[user_name]\";\n  obj[str] = record.game_nick;\n  str = \"params[proxy_user_id]\";\n  obj[str] = record.proxy_user_id;\n  str = \"params[package_id]\";\n  obj[str] = record.package_id;\n  return ajax(\n    BASE + \"/user/changeGold\",\n    { token, task_type: 0, ...obj },\n    \"POST\"\n  );\n};\nexport const reqLoadGold = id => {\n  return ajax(\n    BASE + \"/user/getGameUser\",\n    {\n      page: 1,\n      limit: 10,\n      token,\n      id\n    },\n    \"POST\"\n  );\n};\nexport const userDetail = (page, limit, id, goldDetails) => {\n  return ajax(\n    BASE + \"/user/userDetail\",\n    {\n      page,\n      limit,\n      token,\n      id,\n      ...goldDetails\n    },\n    \"POST\"\n  );\n};\nexport const bindInfo = (page, limit, id) => {\n  return ajax(\n    BASE + \"/user/bindInfo\",\n    {\n      page,\n      limit,\n      token,\n      user_id: id\n    },\n    \"POST\"\n  );\n};\nexport const saveUserBlack = (user_id, action) => {\n  return ajax(\n    BASE + \"/trade/saveUserBlack\",\n    {\n      token,\n      type: 1,\n      user_id,\n      action\n    },\n    \"POST\"\n  );\n};\nexport const createTask = (user_id, resetpwd) => {\n  return ajax(\n    BASE + \"/tasks/createTask\",\n    {\n      token,\n      task_type: 2,\n      \"params[id]\": user_id,\n      \"params[account_pass]\": resetpwd\n    },\n    \"POST\"\n  );\n};\nexport const setCustomer = id => {\n  return ajax(\n    BASE + \"/user/setCustomer \",\n    {\n      token,\n      id\n    },\n    \"POST\"\n  );\n};\n//后台管理-账户列表\nexport const reqAdminList = (page, limit) => {\n  return ajax(\n    BASE + \"/acl/index\",\n    {\n      page,\n      limit,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const searchAdminData = name => {\n  return ajax(\n    BASE + \"/acl/index\",\n    {\n      page: 1,\n      limit: 20,\n      token,\n      name\n    },\n    \"POST\"\n  );\n};\n\nexport const roleList = () => {\n  return ajax(\n    BASE + \"/acl/roleList\",\n    {\n      token\n    },\n    \"POST\"\n  );\n};\nexport const packageList = () => {\n  return ajax(\n    BASE + \"/user/packageList\",\n    {\n      token\n    },\n    \"POST\"\n  );\n};\nexport const addUser = formValue => {\n  let obj = {};\n  formValue.packageList.forEach(element => {\n    let str = \"group[\" + element + \"]\";\n    obj[str] = element;\n  });\n  let newobj = {\n    username: formValue.username,\n    status: formValue.userStatus,\n    group_id: formValue.userGroup,\n    source: formValue.proxy ? formValue.proxy : [],\n    ...obj,\n    use_money: formValue.loadGold,\n    pass: formValue.password,\n    repass: formValue.confirmPssword,\n    token\n  };\n  return ajax(BASE + \"/acl/addUser\", newobj, \"POST\");\n};\nexport const editUser = (formValue, id) => {\n  let obj = {};\n  formValue.packageList.forEach(element => {\n    let str = \"group[\" + element + \"]\";\n    obj[str] = element;\n  });\n  let newobj = {\n    id,\n    username: formValue.username,\n    status: formValue.userStatus,\n    group_id: formValue.userGroup,\n    source: formValue.proxy ? formValue.proxy : [],\n    ...obj,\n    use_money: formValue.loadGold,\n    pass: formValue.password ? formValue.password : [],\n    token\n  };\n  return ajax(BASE + \"/acl/editUser\", newobj, \"POST\");\n};\nexport const resetAuthCode = id => {\n  return ajax(\n    BASE + \"/acl/resetAuthCode\",\n    {\n      id,\n      token\n    },\n    \"POST\"\n  );\n};\n//后台管理-权限列表\nexport const ruleList = () => {\n  return ajax(\n    BASE + \"/acl/ruleList\",\n    {\n      token\n    },\n    \"POST\"\n  );\n};\nexport const addRule = value => {\n  return ajax(\n    BASE + \"/acl/addRule\",\n    {\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const editRule = (rule_id, value) => {\n  console.log(value);\n\n  return ajax(BASE + \"/acl/editRule\", { ...value, rule_id, token }, \"POST\");\n};\nexport const ruleDel = id => {\n  return ajax(\n    BASE + \"/acl/ruleDel\",\n    {\n      id,\n      token\n    },\n    \"POST\"\n  );\n};\n//后台管理-角色管理\nexport const getRoleList = (page, limit) => {\n  return ajax(\n    BASE + \"/acl/roleList\",\n    {\n      page,\n      limit,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const getRuleList = () => {\n  return ajax(\n    BASE + \"/acl/ruleList\",\n    {\n      page: 1,\n      limit: 10,\n      token,\n      flag: 1\n    },\n    \"POST\"\n  );\n};\n\nexport const addRole = (name, rules, desc) => {\n  let obj = {};\n  rules.forEach(element => {\n    let str = \"rules[\" + element + \"]\";\n    obj[str] = element;\n  });\n  let newobj = {\n    name,\n    ...obj,\n    desc,\n    token\n  };\n  return ajax(BASE + \"/acl/addRole\", newobj, \"POST\");\n};\nexport const editRole = (name, rules, desc, id) => {\n  let obj = {};\n  rules.forEach(element => {\n    let str = \"rules[\" + element + \"]\";\n    obj[str] = element;\n  });\n  let newobj = {\n    role_name: name,\n    role_id: id,\n    ...obj,\n    desc,\n    token\n  };\n  return ajax(BASE + \"/acl/editRole\", newobj, \"POST\");\n};\n//客服-公告设置\nexport const getList = (page, limit) => {\n  return ajax(\n    BASE + \"/notice/getList\",\n    {\n      page,\n      limit,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const addNotice = formData => {\n  return ajax(\n    BASE + \"/notice/addNotice\",\n    {\n      token,\n      ...formData\n    },\n    \"POST\"\n  );\n};\nexport const updateNotice = (formData, id) => {\n  return ajax(\n    BASE + \"/notice/updateNotice\",\n    {\n      token,\n      id,\n      ...formData\n    },\n    \"POST\"\n  );\n};\nexport const delNotice = id => {\n  return ajax(\n    BASE + \"/notice/delNotice\",\n    {\n      token,\n      id\n    },\n    \"POST\"\n  );\n};\n//客服-代充账号\nexport const customerList = (page, limit, user_id) => {\n  return ajax(\n    BASE + \"/customer/customerList\",\n    {\n      page,\n      limit,\n      token,\n      user_id: user_id ? user_id : \"\"\n    },\n    \"POST\"\n  );\n};\nexport const saveCustomerService = (formData, action, user_id) => {\n  if (user_id) {\n    formData.user_id = user_id;\n  }\n  return ajax(\n    BASE + \"/customer/saveCustomerService\",\n    {\n      token,\n      ...formData,\n      action\n    },\n    \"POST\"\n  );\n};\n//报表-日常运营\nexport const dailyReportInit = (page, limit) => {\n  return ajax(\n    BASE + \"/report/dailyReport\",\n    {\n      page,\n      limit,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const dailyReport = (page, limit, package_id, start = \"\", end = \"\") => {\n  return ajax(\n    BASE + \"/report/dailyReport\",\n    {\n      page,\n      limit,\n      token,\n      package_id,\n      start,\n      end\n    },\n    \"POST\"\n  );\n};\nexport const dateReport = (page, limit, package_id, start = \"\", end = \"\") => {\n  return ajax(\n    BASE + \"/report/dateReport\",\n    {\n      page,\n      limit,\n      token,\n      package_id,\n      start,\n      end,\n      group_by: \"date\"\n    },\n    \"POST\"\n  );\n};\nexport const gameReport = (page, limit, package_id, start = \"\", end = \"\") => {\n  return ajax(\n    BASE + \"/report/gameReport\",\n    {\n      page,\n      limit,\n      token,\n      package_id,\n      start,\n      end,\n      group_by: \"game_id\"\n    },\n    \"POST\"\n  );\n};\nexport const oneDayGameReport = (page, limit, package_id, date) => {\n  return ajax(\n    BASE + \"/report/gameReport\",\n    {\n      page,\n      limit,\n      token,\n      package_id,\n      date,\n      group_by: \"game_id\"\n    },\n    \"POST\"\n  );\n};\n//游戏设置-配置项\nexport const configList = (page, limit, conf_key) => {\n  return ajax(\n    BASE + \"/config/list\",\n    {\n      page,\n      limit,\n      token,\n      conf_key: conf_key ? conf_key : \"\"\n    },\n    \"POST\"\n  );\n};\nexport const saveConf = (value, action) => {\n  return ajax(\n    BASE + \"/config/saveConf\",\n    {\n      ...value,\n      action,\n      token\n    },\n    \"POST\"\n  );\n};\n//代理系统\nexport const getProxyUserList = data => {\n  return ajax(\n    BASE + \"/user/getProxyUserList\",\n    {\n      ...data,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const changeProxyUserProxyPid = data => {\n  return ajax(\n    BASE + \"/user/changeProxyUserProxyPid\",\n    {\n      ...data,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const proxy_changeGold = data => {\n  return ajax(\n    BASE + \"/user/changeGold\",\n    {\n      ...data,\n      token\n    },\n    \"POST\"\n  );\n};\n//消息中心-任务列表\nexport const tasksList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/tasks/tasksList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\n\nexport const changeUserBalance = value => {\n  return ajax(\n    BASE + \"/tasks/changeUserBalance\",\n    {\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const reviewTask = value => {\n  return ajax(\n    BASE + \"/tasks/reviewTask\",\n    {\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\n//交易所-收付款管理\nexport const allAccountList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/trade/allAccountList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const resetPassword = user_id => {\n  return ajax(\n    BASE + \"/trade/resetPassword\",\n    {\n      user_id,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const accountList = user_id => {\n  return ajax(BASE + \"/trade/accountList\", { user_id, token }, \"POST\");\n};\n\n//交易所-申请上架历史\nexport const sellGoldApplyList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/trade/sellGoldApplyList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const tradeRemark = value => {\n  return ajax(\n    BASE + \"/trade/tradeRemark\",\n    {\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const sellGoldInfoList = (page, limit, user_id) => {\n  return ajax(\n    BASE + \"/order/sellGoldInfoList\",\n    {\n      page,\n      limit,\n      user_id,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const reviewInfo2 = (page, limit, id) => {\n  return ajax(\n    BASE + \"/order/reviewInfo\",\n    {\n      page,\n      limit,\n      id,\n      type: 3,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const remarkInfo2 = (page, limit, id) => {\n  return ajax(\n    BASE + \"/order/remarkInfo\",\n    {\n      page,\n      limit,\n      id,\n      type: 6,\n      token\n    },\n    \"POST\"\n  );\n};\n//交易所-交易订单\nexport const sellGoldOrderList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/trade/sellGoldOrderList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\n//活动-活动列表\nexport const activityConfigList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/activity/activityConfigList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const saveActivityConfig = value => {\n  return ajax(\n    BASE + \"/activity/saveActivityConfig\",\n    {\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const delActivityConfig = id => {\n  return ajax(\n    BASE + \"/activity/delActivityConfig\",\n    {\n      id,\n      token\n    },\n    \"POST\"\n  );\n};\n\n//活动-礼金券领取列表\nexport const giftVoucherList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/activity/giftVoucherList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\n//活动-活动领取列表\nexport const activityList = (page, limit, value) => {\n  return ajax(\n    BASE + \"/activity/activityList\",\n    {\n      page,\n      limit,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\n//充值-充值订单\nexport const reqOrder_list = (page, limit, reqData) => {\n  return ajax(\n    BASE + \"/order/recharge\",\n    { page, limit, token, ...reqData },\n    \"POST\"\n  );\n};\nexport const reqLostOrder_list = (page, limit, user_id, order_id) => {\n  return ajax(\n    BASE + \"/order/recharge\",\n    { page, limit, order_id, user_id, token },\n    \"POST\"\n  );\n};\nexport const orderReview = (user_id, order_id) => {\n  return ajax(\n    BASE + \"/order/orderReview\",\n    { user_id, order_id, status: 7, review_type: 1, token },\n    \"POST\"\n  );\n};\nexport const orderReviewEdit = (user_id, order_id, type) => {\n  return ajax(\n    BASE + \"/order/orderReview\",\n    { user_id, order_id, status: 8, review_type: 2, token, type },\n    \"POST\"\n  );\n};\nexport const downloadList = searchData => {\n  let {\n    start_time,\n    end_time,\n    order_status,\n    type,\n    inputParam,\n    paramKey\n  } = searchData;\n  if (!paramKey || paramKey === \"\") {\n    paramKey = 0;\n  }\n  let params =\n    \"token=\" +\n    token +\n    \"&filed=\" +\n    paramKey +\n    \"&keyword=\" +\n    inputParam +\n    \"&start_time=\" +\n    start_time +\n    \"&end_time=\" +\n    end_time +\n    \"&order_status=\" +\n    order_status +\n    \"&type=\" +\n    type;\n  let url = BASE + \"/order/recharge/?export=2&\" + params;\n  if (paramKey) {\n    switch (paramKey) {\n      case \"user_id\":\n        url = url + \"&user_id=\" + inputParam;\n        break;\n      case \"order_id\":\n        url = url + \"&order_id=\" + inputParam;\n        break;\n      case \"create_time\":\n        url = url + \"&time_type=1\";\n        break;\n      case \"arrival_time\":\n        url = url + \"&time_type=2\";\n        break;\n      default:\n        break;\n    }\n  }\n  window.open(url);\n};\nexport const getChannelList = (page, limit, name) => {\n  return ajax(\n    BASE + \"/order/channelList\",\n    {\n      page,\n      limit,\n      token,\n      name: name ? name : \"\"\n    },\n    \"POST\"\n  );\n};\nexport const addChannel = value => {\n  return ajax(\n    BASE + \"/order/addChannel\",\n    {\n      ...value,\n      token,\n      action: \"add\"\n    },\n    \"POST\"\n  );\n};\nexport const editPayChannel = (value, id) => {\n  return ajax(\n    BASE + \"/order/editPayChannel\",\n    {\n      ...value,\n      token,\n      id,\n      action: \"edit\"\n    },\n    \"POST\"\n  );\n};\n//充值-古都银行卡\nexport const bankList = (page, limit) => {\n  return ajax(\n    BASE + \"/order/bankList\",\n    {\n      page,\n      limit,\n      token\n    },\n    \"POST\"\n  );\n};\n\nexport const saveBankCard = (searchData, id) => {\n  if (id) {\n    searchData.id = id;\n  }\n  return ajax(\n    BASE + \"/order/saveBankCard\",\n    {\n      ...searchData,\n      action: id ? \"edit\" : \"add\",\n      token\n    },\n    \"POST\"\n  );\n};\nexport const deleteBankCard = id => {\n  return ajax(\n    BASE + \"/order/saveBankCard\",\n    {\n      id,\n      action: \"del\",\n      token\n    },\n    \"POST\"\n  );\n};\n//充值-代充订单\nexport const rechargeOrder = (\n  page,\n  limit,\n  start_time,\n  end_time,\n  order_status,\n  inputKey,\n  inputValue\n) => {\n  return ajax(\n    BASE + \"/order/rechargeOrder\",\n    {\n      page,\n      limit,\n      token,\n      type: 14,\n      start_time,\n      end_time,\n      order_status,\n      [inputKey]: inputValue\n    },\n    \"POST\"\n  );\n};\nexport const cancelOrder = reqData => {\n  return ajax(\n    BASE + \"/order/cancelOrder\",\n    {\n      ...reqData,\n      token\n    },\n    \"POST\"\n  );\n};\n//充值-渠道配置\nexport const getChannel = (page, limit) => {\n  return ajax(\n    BASE + \"/order/getChannel\",\n    {\n      page,\n      limit,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const getChannelInfo = channel_id => {\n  return ajax(\n    BASE + \"/order/getChannelInfo\",\n    {\n      page: 1,\n      limit: 20,\n      token,\n      channel_id\n    },\n    \"POST\"\n  );\n};\n\nexport const editChannelInfo = (id, pay_code) => {\n  return ajax(\n    BASE + \"/order/editChannelInfo\",\n    {\n      id,\n      token,\n      pay_code\n    },\n    \"POST\"\n  );\n};\n//兑换-兑换订单&代提设置\nexport const withDraw = (page, limit, data) => {\n  return ajax(\n    BASE + \"/order/withDraw\",\n    {\n      page,\n      limit,\n      token,\n      ...data\n    },\n    \"POST\"\n  );\n};\nexport const reviewInfo = (page, limit, id) => {\n  return ajax(\n    BASE + \"/order/reviewInfo\",\n    {\n      page,\n      limit,\n      token,\n      id,\n      type: 2\n    },\n    \"POST\"\n  );\n};\nexport const remarkInfo = (page, limit, id) => {\n  return ajax(\n    BASE + \"/order/remarkInfo\",\n    {\n      page,\n      limit,\n      token,\n      id,\n      type: 2\n    },\n    \"POST\"\n  );\n};\nexport const downloadWithdrawList = searchData => {\n  let {\n    start_time,\n    end_time,\n    order_status,\n    type,\n    inputParam,\n    filed\n  } = searchData;\n  let params =\n    \"token=\" +\n    token +\n    \"&filed=\" +\n    filed +\n    \"&keyword=\" +\n    inputParam +\n    \"&start_time=\" +\n    start_time +\n    \"&end_time=\" +\n    end_time +\n    \"&order_status=\" +\n    order_status +\n    \"&type=\" +\n    type;\n  let url = BASE + \"/order/withDraw/?export=2&flag=2&\" + params;\n  if (filed) {\n    switch (filed) {\n      case \"user_id\":\n        url = url + \"&user_id=\" + inputParam;\n        break;\n      case \"order_id\":\n        url = url + \"&order_id=\" + inputParam;\n        break;\n      case \"create_time\":\n        url = url + \"&time_type=1\";\n        break;\n      case \"arrival_time\":\n        url = url + \"&time_type=2\";\n        break;\n      case \"replace_id\":\n        url = url + \"&replace_id=\" + inputParam;\n        break;\n      default:\n        break;\n    }\n  }\n  window.open(url);\n};\nexport const withDrawRemark = (id, temarks, remark_type) => {\n  return ajax(\n    BASE + \"/order/withDrawRemark\",\n    {\n      token,\n      id,\n      temarks,\n      remark_type,\n      type: 2\n    },\n    \"POST\"\n  );\n};\nexport const auditOrder = reqData => {\n  return ajax(\n    BASE + \"/order/withDraw\",\n    {\n      ...reqData,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const orderWithDrawReview = reqData => {\n  return ajax(\n    BASE + \"/order/withDrawReview\",\n    {\n      ...reqData,\n      token\n    },\n    \"POST\"\n  );\n};\n\n//兑换-第三方提款设置\nexport const getConfigList = reqData => {\n  return ajax(\n    BASE + \"/config/list\",\n    {\n      ...reqData,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const saveWithDrawChannel = (id, name, value) => {\n  return ajax(\n    BASE + \"/config/saveWithDrawChannel\",\n    {\n      id,\n      name,\n      ...value,\n      \"alipay[name]\": \"支付宝\",\n      \"alipay[withdraw_type]\": 1,\n      \"bankcard[name]\": \"银行卡\",\n      \"bankcard[withdraw_type]\": 2,\n      conf_key: \"withdraw_channel_info\",\n      action: \"edit\",\n      token\n    },\n    \"POST\"\n  );\n};\n//赠送-赠送订单\nexport const withDrawReview = (order_id, user_id, review_status) => {\n  return ajax(\n    BASE + \"/order/withDraw\",\n    {\n      token,\n      order_id,\n      review_status,\n      user_id,\n      review_type: 1,\n      is_pass: 1\n    },\n    \"POST\"\n  );\n};\nexport const setGiftConfig = reqData => {\n  return ajax(\n    BASE + \"/config/setGiftConfig\",\n    {\n      ...reqData,\n      token\n    },\n    \"POST\"\n  );\n};\n//AI\nexport const getAIList = (page, limit, package_id, value) => {\n  return ajax(\n    BASE + \"/user/index\",\n    {\n      page,\n      limit,\n      package_id,\n      ...value,\n      token\n    },\n    \"POST\"\n  );\n};\nexport const changeInternalUserBalance = (user_id, amount) => {\n  return ajax(\n    BASE + \"/user/changeInternalUserBalance\",\n    {\n      user_id,\n      amount,\n      token\n    },\n    \"POST\"\n  );\n};\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Icon, Input, Button, Modal, message } from \"antd\";\nimport \"./login.less\";\nimport { reqLogin, reqAuthCode, navList, setToken } from \"../../api\";\n\nconst Item = Form.Item;\n\n/*\n登陆的路由组件\n */\nclass Login extends Component {\n  getMenuList = async () => {\n    const result = await navList();\n    if (result.status === 0) {\n      let { data } = result;\n      data.forEach(element => {\n        if (element.children) {\n          element.children.forEach(item => {\n            item.title = item.title.slice(24);\n          });\n        }\n      });\n      localStorage.menuList = JSON.stringify(data);\n      // 跳转到管理界面 (不需要再回退回到登陆)\n      this.props.history.replace(\"/\");\n\n      // setTimeout(() => this.props.history.replace(\"/\"), 300);\n    }\n  };\n  handleSubmit = event => {\n    // 阻止事件的默认行为\n    event.preventDefault();\n\n    // 对所有表单字段进行检验\n    this.props.form.validateFields(async (err, values) => {\n      // 检验成功\n      if (!err) {\n        // 请求登陆\n        const { username, password, authcode } = values;\n        const result = await reqLogin(username, password, authcode);\n\n        if (result.status === 0) {\n          // 登陆成功\n          message.success(\"登陆成功\");\n          localStorage.token = result.data.token;\n          localStorage.name = result.data.name;\n          localStorage.tokenTimeStamp = new Date().getTime();\n          setToken();\n          this.getMenuList();\n        } else {\n          // 登陆失败\n          // 提示错误信息\n          message.error(result.msg);\n        }\n      } else {\n        console.log(\"检验失败!\");\n      }\n    });\n  };\n\n  handleClick = () => {\n    this.props.form.validateFields(async (err, values) => {\n      // 检验成功\n      if (!err) {\n        // 请求登陆\n        const { username, password } = values;\n        const result = await reqAuthCode(username, password);\n        // console.log(\"请求成功\", result);\n        if (result.status === 0 && result.data) {\n          // 登陆成功\n          Modal.info({\n            title: \"首次登录扫码获取验证码\",\n            content: (\n              <div>\n                <img src={result.data.qrurl} alt=\"验证码\" />\n              </div>\n            )\n          });\n        } else {\n          // 登陆失败\n          // 提示错误信息\n          message.error(result.msg);\n        }\n      } else {\n        console.log(\"检验失败!\");\n      }\n    });\n\n    // 得到form对象\n    // const form = this.props.form\n    // // 获取表单项的输入数据\n    // const values = form.getFieldsValue()\n    // console.log('handleSubmit()', values)\n  };\n  /*\n  对密码进行自定义验证\n  */\n  /*\n   用户名/密码的的合法性要求\n     1). 必须输入\n     2). 必须大于等于4位\n     3). 必须小于等于12位\n     4). 必须是英文、数字或下划线组成\n    */\n  validatePwd = (rule, value, callback) => {\n    console.log(\"validatePwd()\", rule, value);\n    if (!value) {\n      callback(\"密码必须输入\");\n    } else if (value.length < 4) {\n      callback(\"密码长度不能小于4位\");\n    } else if (value.length > 12) {\n      callback(\"密码长度不能大于12位\");\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n      callback(\"密码必须是英文、数字或下划线组成\");\n    } else {\n      callback(); // 验证通过\n    }\n    // callback('xxxx') // 验证失败, 并指定提示的文本\n  };\n\n  render() {\n    // 如果用户已经登陆, 自动跳转到管理界面\n    const token = localStorage.token;\n    if (token) {\n      return <Redirect to=\"/\" />;\n    }\n    // 得到具强大功能的form对象\n    const form = this.props.form;\n    const { getFieldDecorator } = form;\n\n    return (\n      <div className=\"login\">\n        <header className=\"login-header\">\n          <h1>QGame: 后台管理系统</h1>\n        </header>\n        <section className=\"login-content\">\n          <h2>用户登陆</h2>\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Item>\n              {/*\n              用户名/密码的的合法性要求\n                1). 必须输入\n                2). 必须大于等于4位\n                3). 必须小于等于12位\n                4). 必须是英文、数字或下划线组成\n               */}\n              {getFieldDecorator(\"username\", {\n                // 配置对象: 属性名是特定的一些名称\n                // 声明式验证: 直接使用别人定义好的验证规则进行验证\n                rules: [\n                  {\n                    required: true,\n                    whitespace: true,\n                    message: \"用户名必须输入\"\n                  },\n                  { min: 3, message: \"用户名至少3位\" },\n                  { max: 12, message: \"用户名最多12位\" },\n                  {\n                    pattern: /^[a-zA-Z0-9_]+$/,\n                    message: \"用户名必须是英文、数字或下划线组成\"\n                  }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"用户名\"\n                />\n              )}\n            </Item>\n            <Form.Item>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  {\n                    validator: this.validatePwd\n                  }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"密码\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"authcode\", {\n                rules: [\n                  //{ required: true, whitespace: true, message: '验证码必须输入' },\n                  //{ min: 4, message: '验证码至少4位' }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"qrcode\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"验证码\"\n                />\n              )}\n            </Form.Item>\n            <span style={{ marginTop: 5 }} onClick={this.handleClick}>\n              首次登录，手机下载Google Authenticator\n              安装，点击此处扫码获取验证码\n            </span>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n              >\n                登陆\n              </Button>\n            </Form.Item>\n          </Form>\n        </section>\n      </div>\n    );\n  }\n}\nconst WrapLogin = Form.create()(Login);\nexport default WrapLogin;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Menu, message } from \"antd\";\nimport { navList } from \"../../api\";\nimport \"./index.less\";\n\nconst SubMenu = Menu.SubMenu;\n// 左侧导航的组件\nclass LeftNav extends Component {\n  constructor() {\n    super();\n    this.state = { data: [], openKey: \"\" };\n  }\n  getMenuList = async () => {\n    const result = await navList();\n\n    if (result.status === 0) {\n      //登陆成功\n      this.setState({\n        data: result.data\n      });\n    } else {\n      // 提示错误信息\n      message.error(result.msg);\n    }\n  };\n  /*\n   获取左侧菜单导航栏\n    */\n  getMenuList = async () => {\n    const result = await navList();\n    if (result.status === 0) {\n      this.setState({\n        data: result.data\n      });\n    } else {\n      message.error(\"网络问题，请重新登陆\");\n    }\n  };\n\n  /*\n  根据menu的数据数组生成对应的标签数组\n  使用reduce() + 递归调用\n  */\n  getMenuNodes = menuList => {\n    // 得到当前请求的路由路径\n    const path = this.props.location.pathname;\n    return menuList.reduce((pre, item) => {\n      // 向pre添加<Menu.Item>\n      // if (item.key) {\n        //按需渲染侧边栏，必须已经在后台-权限管理中设置了路由key才能渲染\n        if (!item.children) {\n          pre.push(\n            <Menu.Item\n              key={item.key}\n              onClick={() => {\n                this.props.onClick(item);\n                this.openMenu = item.key;\n              }}\n            >\n              <Link to={item.key}>\n                {/* <Icon type={item.icon} /> */}\n                <span>{item.title}</span>\n              </Link>\n            </Menu.Item>\n          );\n        } else {\n          // 查找一个与当前请求路径匹配的子Item\n          const cItem = item.children.find(\n            currentValue => path.indexOf(currentValue.key) === 0\n          );\n          // 如果存在, 说明当前item的子列表需要打开\n          if (cItem) {\n            this.openKey = item.key;\n            // this.setState({ openKey: item.key });\n          }\n          pre.push(\n            <SubMenu\n              key={item.key}\n              title={\n                <span>\n                  <span>{item.title}</span>\n                </span>\n              }\n              onClick={() => {\n                this.openMenu = item.key;\n                // console.log(this.openMenu);\n              }}\n            >\n              {item.children.reduce((cpre, ele) => {\n                cpre.push(\n                  <Menu.Item\n                    key={ele.key}\n                    onClick={() => {\n                      this.props.onClick(ele);\n                    }}\n                  >\n                    <Link to={ele.key}>\n                      <span>{ele.title}</span>\n                    </Link>\n                  </Menu.Item>\n                );\n                return cpre;\n              }, [])}\n            </SubMenu>\n          );\n        }\n      // }\n      return pre;\n    }, []);\n  };\n  componentDidMount() {\n    this.setState({openKey:this.openKey})\n  }\n  render() {\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\n    const menuNodes = this.getMenuNodes(menuList);\n    // 得到当前请求的路由路径\n    let path = this.props.location.pathname;\n    // 得到需要打开菜单项的key\n    // const openKey = this.openKey;\n\n    return (\n      <div className=\"left-nav\">\n        <Link\n          to=\"/\"\n          className=\"left-nav-header\"\n          style={{ justifyContent: \"center\" }}\n        >\n          <h1>QGame后台管理</h1>\n        </Link>\n        <Menu\n          mode=\"inline\"\n          theme=\"dark\"\n          selectedKeys={[path]}\n          // defaultOpenKeys={[this.openKey]}\n          onOpenChange={key => {\n            console.log(key);\n            if (key[1] && key[0] !== key[1]) {\n              this.setState({ openKey: key[1] });\n            } else {\n              this.setState({ openKey: null });\n            }\n          }}\n          openKeys={[this.state.openKey]}\n        >\n          {menuNodes}\n        </Menu>\n      </div>\n    );\n  }\n}\n\n/*\nwithRouter高阶组件:\n包装非路由组件, 返回一个新的组件\n新的组件向非路由组件传递3个属性: history/location/match\n */\nexport default withRouter(LeftNav);\n","import React from \"react\";\nimport { Button } from \"antd\";\nexport default function LinkButton(props) {\n  return (\n    <Button\n      type=\"primary\"\n      size='small'\n      style={{ marginRight: 10}}\n      {...props}\n    ></Button>\n  );\n}\n","import React, { Component } from \"react\";\n// import { browserHistory } from \"react-router\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport {\n  Modal,\n  Tabs,\n  Dropdown,\n  Menu,\n  Icon,\n  Button,\n  message,\n  Input,\n  Form\n} from \"antd\";\n\nimport LinkButton from \"../link-button\";\n// import memoryUtils from \"../../utils/memoryUtils\";\n// import storageUtils from \"../../utils/storageUtils\";\nimport { getAuthCode, editPass } from \"../../api\";\nimport QRCode from \"qrcode.react\";\nimport \"./index.less\";\nconst { TabPane } = Tabs;\n/*\n左侧导航的组件\n */\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.newTabIndex = 0;\n    const panes = [\n      {\n        title: \"首页\",\n        content: \"Content of Tab 1\",\n        key: \"1\",\n        closable: false,\n        path: \"/home\"\n      }\n    ];\n    this.state = {\n      activeKey: panes[0].key,\n      panes,\n      isEditFormShow: false\n    };\n  }\n  onChange = activeKey => {\n    this.setState({ activeKey });\n  };\n\n  onEdit = (targetKey, action) => {\n    this[action](targetKey);\n  };\n\n  add = tabConfig => {\n    // console.log(\"tabConfig\", tabConfig);\n    const { panes } = this.state;\n    let isTabExist = false;\n    let oldKey;\n    panes.forEach(item => {\n      if (item.title === tabConfig.title) {\n        isTabExist = true;\n        oldKey = item.key;\n      }\n    });\n    if (isTabExist) {\n      this.onChange(oldKey);\n    } else {\n      const activeKey = `newTab${this.newTabIndex++}`;\n      panes.push({\n        title: tabConfig.title,\n        content: \"Content of new Tab\",\n        key: activeKey,\n        path: tabConfig.key\n      });\n      this.onChange(activeKey);\n      this.setState({ panes, activeKey });\n    }\n  };\n\n  remove = targetKey => {\n    let { activeKey } = this.state;\n    let lastIndex;\n    this.state.panes.forEach((pane, i) => {\n      if (pane.key === targetKey) {\n        lastIndex = i - 1;\n      }\n    });\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n    if (panes.length && activeKey === targetKey) {\n      if (lastIndex >= 0) {\n        activeKey = panes[lastIndex].key;\n        // browserHistory.push(panes[lastIndex].path);\n        this.props.history.push(panes[lastIndex].path);\n      } else {\n        activeKey = panes[0].key;\n      }\n    }\n    this.setState({ panes, activeKey });\n  };\n\n  //退出LOG OUT\n  logout = () => {\n    // 显示确认框\n    Modal.confirm({\n      content: \"确定退出吗?\",\n      onOk: () => {\n        console.log(\"OK\", this);\n        // 删除保存的user数据\n        // storageUtils.removeUser();\n        // memoryUtils.user = {};\n        // localStorage={}\n        localStorage.removeItem(\"menuList\");\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"name\");\n        localStorage.removeItem(\"tokenTimeStamp\");\n        // 跳转到login\n        this.props.history.replace(\"/login\");\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    // 清除定时器\n    clearInterval(this.intervalId);\n  }\n  componentDidMount() {\n    this.props.onRef && this.props.onRef(this);\n    let data = this.state;\n    const path = this.props.location.pathname;\n    let title;\n    if (path !== \"/home\" && path !== \"/\") {\n      const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\n      menuList.forEach(item => {\n        if (!item.children && item.key === path) {\n          title = item.title;\n        } else if (item.children) {\n          item.children.forEach(val => {\n            if (val.key === path) {\n              title = val.title;\n            }\n          });\n        }\n      });\n      data.activeKey = \"2\";\n      data.panes.push({\n        title: title,\n        key: \"2\",\n        path: path\n      });\n      this.setState({\n        ...data\n      });\n    }\n  }\n\n  render() {\n    const username = localStorage.getItem(\"name\");\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    return (\n      <div className=\"header\">\n        <div className=\"header-top\">\n          <Dropdown\n            overlay={\n              <Menu>\n                <Menu.Item key=\"0\">\n                  <Button type=\"link\" onClick={this.authCode}>\n                    安全码设置\n                  </Button>\n                </Menu.Item>\n                <Menu.Item key=\"1\">\n                  <Button type=\"link\" onClick={this.resetPWD}>\n                    修改密码\n                  </Button>\n                </Menu.Item>\n              </Menu>\n            }\n            trigger={[\"click\"]}\n          >\n            <Button type=\"link\">\n              {username} <Icon type=\"down\" />\n            </Button>\n          </Dropdown>\n          <LinkButton onClick={this.logout} size=\"default\">\n            退出\n          </LinkButton>\n        </div>\n        <div className=\"header-bottom\">\n          {/* <div className=\"header-bottom-left\">{title}</div> */}\n          <Tabs\n            onChange={this.onChange}\n            activeKey={this.state.activeKey}\n            type=\"editable-card\"\n            onEdit={this.onEdit}\n            hideAdd\n          >\n            {this.state.panes.map(pane => (\n              <TabPane\n                tab={<Link to={pane.path}>{pane.title}</Link>}\n                key={pane.key}\n                closable={pane.closable}\n                forceRender\n              />\n            ))}\n          </Tabs>\n        </div>\n        {this.state.isEditFormShow && (\n          <Modal\n            title=\"编辑\"\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <Form\n              labelCol={{ span: 6 }}\n              labelAlign=\"left\"\n              onSubmit={this.handleEditSubmit}\n            >\n              <Form.Item label=\"新密码\">\n                {getFieldDecorator(\"editPass\", {\n                  rules: [\n                    { required: true, message: \"密码不能为空\" },\n                    { whitespace: true },\n                    { min: 6, message: \"密码至少6位\" },\n                    { max: 16, message: \"密码最多16位\" }\n                    // {\n                    //   pattern: /^[a-zA-Z0-9_]+$/,\n                    //   message: \"用户名必须是英文、数字或下划线组成\"\n                    // }\n                  ]\n                })(\n                  <Input\n                    style={{ width: \"40%\" }}\n                    type=\"password\"\n                    placeholder=\"6到16个字符\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item label=\"重复密码\">\n                {getFieldDecorator(\"repeat\", {\n                  rules: [\n                    { required: true },\n                    {\n                      validator: (rule, value, callback) => {\n                        if (!value) {\n                          callback(); //如果还没填写，则不进行一致性验证\n                        }\n                        if (value === getFieldValue(\"editPass\")) {\n                          callback();\n                        } else {\n                          callback(\"两次密码不一致\");\n                        }\n                      }\n                    }\n                  ]\n                })(\n                  <Input\n                    style={{ width: \"40%\" }}\n                    type=\"password\"\n                    placeholder=\"6到16个字符\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  提交\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n  authCode = async () => {\n    const res = await getAuthCode();\n    if (res.status === 0) {\n      Modal.info({\n        title: \"扫码获取验证码\",\n        content: <QRCode value={res.data.qrurl}></QRCode>,\n        width: 300\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  resetPWD = () => {\n    this.setState({ isEditFormShow: true });\n  };\n  handleEditSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      if (!err) {\n        const res = await editPass(value.editPass);\n        if (res.status === 0) {\n          message.success(res.msg);\n        } else {\n          message.error(res.msg);\n        }\n      }\n    });\n  };\n}\nconst WrappedHeader = Form.create()(Header);\nexport default withRouter(WrappedHeader);\n","import React, { Component } from \"react\";\n// import ElasticText from \"../../components/elasticText\";\n// import { Icon} from \"antd\";\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      res: \"\"\n    };\n    this.i = 0;\n    this.timer = 0;\n    this.str = \"欢迎您来到QGame后台管理系统\";\n  }\n  typing = () => {\n    if (this.i <= this.str.length) {\n      this.setState(\n        {\n          res: this.str.slice(0, this.i++) + \"__\"\n        },\n        () => {\n          this.timer = setTimeout(() => this.typing(), 200);\n        }\n      );\n    } else {\n      this.setState({\n        res: this.str\n      });\n      clearTimeout(this.timer);\n    }\n  };\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  componentDidMount() {\n    this.typing();\n  }\n  render() {\n    return <span style={{ fontSize: \"20px\" }}>{this.state.res}</span>;\n    // <ElasticText></ElasticText>\n  }\n}\n","import moment from \"moment\";\n/*\n包含n个日期时间处理的工具函数模块\n*/\n\n/*\n  格式化日期\n*/\nexport function formateDate(time) {\n  if (!time) return \"\";\n  let timeStamp = parseInt(time);\n  if (timeStamp === 0) return \"\";\n  return moment(timeStamp * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n  // let date = new Date(time * 1000);\n  // return (\n  //   date.getFullYear() +\n  //   \"-\" +\n  //   (date.getMonth() + 1) +\n  //   \"-\" +\n  //   date.getDate() +\n  //   \" \" +\n  //   date.getHours() +\n  //   \":\" +\n  //   date.getMinutes() +\n  //   \":\" +\n  //   date.getSeconds()\n  // );\n}\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input } from \"antd\";\n\nconst FormItem = Form.Item;\nclass NormalLoginForm extends Component {\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { isNickModal } = this.props;\n    return (\n      <Form className=\"login-form\">\n        <FormItem style={isNickModal ? {} : { display: \"none\" }}>\n          {getFieldDecorator(\"name\", {\n            rules: [\n              {\n                required: isNickModal,\n                message: \"Please input your username!\"\n              }\n            ],\n            initialValue: this.props.val\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"请输入昵称\"\n            />\n          )}\n        </FormItem>\n        <FormItem label=\"金额\" style={isNickModal ? { display: \"none\" } : {}}>\n          {getFieldDecorator(\"gold\", {\n            rules: [\n              {\n                required: !isNickModal,\n                whitespace: true,\n                pattern: /^\\d+(\\.\\d+)?$/,\n                message: \"必须为数字，减少时金额为负\"\n              }\n            ],\n          })(<Input placeholder=\"必须为数字，减少时金额为负\" />)}\n        </FormItem>\n        <FormItem label=\"备注\" style={isNickModal ? { display: \"none\" } : {}}>\n          {getFieldDecorator(\"desc\", {\n            rules: [\n              { max: 400, message: \"最多400字\" },\n              {\n                required: !isNickModal\n              }\n            ]\n          })(\n            <Input.TextArea\n              placeholder=\"请输入文字\"\n              autosize={{ minRows: 2, maxRows: 6 }}\n            />\n          )}\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nexport default WrappedNormalLoginForm;\n","import React from \"react\";\nimport { DatePicker, ConfigProvider } from \"antd\";\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\nimport \"moment/locale/zh-cn\";\nimport moment from \"moment\";\nconst { RangePicker } = DatePicker;\nexport default function MyDatePicker(props) {\n  return (\n    <ConfigProvider locale={zh_CN}>\n      <RangePicker\n        // defaultValue={[moment().locale(\"zh-cn\")]}\n        style={{ width: 300 }}\n        showTime={{\n          format: \"HH:mm\",\n          defaultValue: [\n            moment(\"00:00\", \"HH:mm\"),\n            moment(\"00:00\", \"HH:mm\")\n          ]\n        }}\n        format=\"YYYY-MM-DD HH:mm:00\"\n        placeholder={[\"开始日期\", \"结束日期\"]}\n        onChange={(data, dateString) => {\n          props.handleValue(dateString);\n        }}\n        // disabledDate={disabledDate}\n        // disabledTime={disabledRangeTime}\n        {...props}\n      />\n    </ConfigProvider>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Table, Card, Icon, message } from \"antd\";\nimport MyDatePicker from \"../../components/MyDatePicker\";\nimport LinkButton from \"../../components/link-button/index\";\nimport moment from \"moment\";\nimport { userDetail, bindInfo } from \"../../api/index\";\nclass GoldDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.startTime = \"\";\n    this.endTime = \"\";\n    this.state = {\n      data: [],\n      count: 0\n    };\n  }\n  getUsers = async (page, limit) => {\n    let isBindInfo = this.props.isBindInfo;\n    let id = this.props.recordID;\n    const res = !isBindInfo\n      ? await userDetail(page, limit, id)\n      : await bindInfo(page, limit, id);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    }\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  onSearchData = async (page, limit) => {\n    if (!this.startTime || !this.package_id) {\n      message.error(\"请选择有效的时间日期\");\n      return;\n    }\n    let reqData = {\n      start: this.startTime,\n      end: this.endTime,\n      funds_type: 0\n    };\n    let id = this.props.GoldDetailRecord.id;\n    const res = await userDetail(page, limit, id, reqData);\n    if (res.status === 0) {\n      this.setState({ data: res.data, count: res.count });\n    } else {\n      message.info(\"没有更多数据\");\n    }\n  };\n  render() {\n    // const { data } = this.props.GoldDetailRecord;\n    let title;\n    if (!this.props.isBindInfo) {\n      title = (\n        <span>\n          <MyDatePicker\n            handleValue={val => {\n              let diffDays = moment(val[1]).diff(moment(val[0]), \"days\");\n              if (diffDays > 1) {\n                message.error(\"请选择时间范围不大于1天\");\n              } else {\n                this.startTime = val[0];\n                this.endTime = val[1];\n              }\n            }}\n          />\n          &nbsp; &nbsp;\n          <LinkButton onClick={() => this.onSearchData(1, 20)} size=\"default\">\n            <Icon type=\"search\" />\n          </LinkButton>\n        </span>\n      );\n    }\n    return (\n      <Card title={title}>\n        <Table\n          bordered\n          size=\"small\"\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: 20,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.onSearchData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.onSearchData(current, size);\n            }\n          }}\n        />\n      </Card>\n    );\n  }\n  initColumns = () => {\n    if (this.props.isBindInfo) {\n      return [\n        {\n          title: \"支付宝账号\",\n          dataIndex: \"alipay_account\"\n        },\n        {\n          title: \"绑定支付宝时间\",\n          dataIndex: \"bind_alipay_at\"\n        },\n\n        {\n          title: \"开户人姓名\",\n          dataIndex: \"card_name\"\n        },\n        {\n          title: \"银行名称\",\n          dataIndex: \"bank_name\"\n        },\n        {\n          title: \"银行卡号\",\n          dataIndex: \"bank_num\"\n        },\n        {\n          title: \"绑定银行卡时间\",\n          dataIndex: \"bind_bank_at\"\n        },\n        {\n          title: \"是否灰名单\",\n          dataIndex: \"is_gray\"\n        },\n        {\n          title: \"灰名单备注\",\n          dataIndex: \"black_remark\"\n        },\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"remark_at\"\n        },\n        {\n          title: \"操作\",\n          dataIndex: \"option\"\n        }\n      ];\n    } else {\n      return [\n        {\n          title: \"user_id\",\n          dataIndex: \"id\"\n        },\n        {\n          title: \"产生来源\",\n          dataIndex: \"pay_account_name\"\n        },\n\n        {\n          title: \"余额(变动前)\",\n          dataIndex: \"total_balance\"\n        },\n        {\n          title: \"变动金额\",\n          dataIndex: \"final_pay\",\n\n          sorter: (a, b) => a.total_balance - b.total_balance\n        },\n        {\n          title: \"税收\",\n          dataIndex: \"tax\"\n        },\n        {\n          title: \"余额(变动后)\",\n          dataIndex: \"total_final_balance\"\n        },\n        {\n          title: \"备注\",\n          dataIndex: \"pay_reason\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"create_time\"\n        }\n      ];\n    }\n  };\n}\n\nexport default GoldDetail;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Select,\n  Input,\n  Popconfirm,\n  Button\n} from \"antd\";\nimport { formateDate } from \"../../utils/dateUtils\";\nimport LinkButton from \"../../components/link-button/index\";\nimport {\n  reqUsers,\n  setGameUserNickName,\n  changeGold,\n  reqLoadGold,\n  saveUserBlack,\n  createTask,\n  setCustomer\n} from \"../../api/index\";\nimport WrappedNormalLoginForm from \"././user-nick\";\nimport WrappedComponent from \"./gold_details\";\nimport MyDatePicker from \"../../components/MyDatePicker\";\n\nconst { Option } = Select;\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isNickShow: false,\n      isGoldShow: false,\n      isGoldDetailShow: false,\n      isBindInfoShow: false,\n      isResetPwdShow: false,\n      resetpwd: \"\",\n      game_nick: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      loading: false\n    };\n    this.inputKey = \"id\";\n    this.inputValue = \"\";\n  }\n\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"id\",\n      key: \"id\",\n      fixed: \"left\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"game_nick\",\n      key: \"game_nick\",\n      fixed: \"left\",\n      width: 100,\n      onCell: (record, rowIndex) => {\n        return {\n          onClick: event => {\n            this.game_nick = record.game_nick;\n            this.id = record.id;\n            this.rowIndex = rowIndex;\n            this.setState({\n              isNickShow: true\n            });\n          }, // 点击行\n          onDoubleClick: event => {},\n          onContextMenu: event => {},\n          onMouseEnter: event => {\n            event.target.style.cursor = \"pointer\";\n          }, // 鼠标移入行\n          onMouseLeave: event => {}\n        };\n      }\n    },\n\n    {\n      title: \"账户余额\",\n      dataIndex: \"game_gold\",\n      key: \"game_gold\",\n      sorter: (a, b) => a.game_gold - b.game_gold,\n      width: 150,\n      onCell: (record, rowIndex) => {\n        return {\n          onClick: event => {\n            this.goldRecord = record;\n            this.setState({\n              isGoldShow: true\n            });\n          }, // 点击行\n          onDoubleClick: event => {},\n          onContextMenu: event => {},\n          onMouseEnter: event => {\n            event.target.style.cursor = \"pointer\";\n          }, // 鼠标移入行\n          onMouseLeave: event => {}\n        };\n      }\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      key: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_nick\",\n      key: \"proxy_nick\",\n      width: 150\n    },\n    {\n      title: \"手机\",\n      dataIndex: \"phone_number\",\n      key: \"phone_number\",\n      width: 150\n    },\n    {\n      title: \"账号\",\n      dataIndex: \"role_name\",\n      key: \"role_name\",\n      width: 100\n    },\n    {\n      title: \"注册IP\",\n      dataIndex: \"regin_ip\",\n      key: \"regin_ip\",\n      width: 150\n    },\n    {\n      title: \"注册时间\",\n      dataIndex: \"regin_time\",\n      render: formateDate,\n      key: \"regin_time\",\n      sorter: (a, b) => a.regin_time - b.regin_time,\n      width: 200\n    },\n    {\n      title: \"登录IP\",\n      dataIndex: \"login_ip\",\n      key: \"login_ip\",\n      width: 150\n    },\n    {\n      title: \"登陆时间\",\n      dataIndex: \"login_time\",\n      render: formateDate,\n      sorter: (a, b) => a.login_time - b.login_time,\n      width: 200\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 200,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getGoldDetail(record)} type=\"default\">\n            资金明细\n          </LinkButton>\n          <LinkButton onClick={() => this.getMoreDetail(record)}>\n            更多\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"实时余额\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton type=\"default\" onClick={() => this.getLoadGold(record)}>\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"是否为客服账号\",\n      dataIndex: \"game_user_type\",\n      render: (text, record, index) => (\n        <span>{parseInt(text) === 4 ? \"是\" : \"\"}</span>\n      )\n    }\n  ];\n\n  getUsers = async (page, limit) => {\n    const result = await reqUsers(\n      page,\n      limit,\n      this.state.startTime,\n      this.state.endTime,\n      this.inputKey,\n      this.inputValue\n    );\n    if (result.status === 0) {\n      const { game_user, proxy_user } = result.data;\n      game_user.forEach(element => {\n        proxy_user.forEach(item => {\n          if (element.id === item.id) {\n            element.proxy_nick = item.proxy_pid;\n            // element.proxy_user_type = item.proxy_user_type;\n          }\n        });\n      });\n      this.setState({\n        data: game_user,\n        count: result.count\n      });\n    } else {\n      message.error(result.msg + \"接口异常,未检索到数据\");\n    }\n  };\n  changeNickName = () => {\n    let form = this.refs.getFormValue; //通过refs属性可以获得对话框内form对象\n    form.validateFields(async (err, value) => {\n      if (!err) {\n        this.setState({ isNickShow: false });\n        if (value.name !== this.game_nick) {\n          const result = await setGameUserNickName(this.id, value.name);\n          if (result.status === 0) {\n            message.success(\"修改成功!\");\n            // 首先拿到索引, 也可以从参数中传递过来\n            let index = this.rowIndex;\n            // 然后根据索引修改\n            this.state.data[index][`game_nick`] = value.name;\n            // 这个时候并不会更新视图, 需要 setState更新 arr\n            this.setState({\n              data: this.state.data\n            });\n          }\n        }\n      }\n      form.resetFields();\n    });\n  };\n  onChangeGold = () => {\n    this.setState({ loading: true });\n    //这里直接复用了user-nick的模态框，所以取input的值时用value.name\n    let form = this.refs.getFormValue;\n    let goldRecord = this.goldRecord;\n    form.validateFields(async (err, value) => {\n      const res = await changeGold(goldRecord, value);\n      if (res.status === 0) {\n        message.success(res.msg);\n        this.setState({ isGoldShow: false, loading: false });\n      } else {\n        this.setState({ loading: false });\n        message.error(res.msg);\n      }\n      form.resetFields();\n    });\n  };\n  handleChange(event) {\n    let data = Object.assign({}, this.state.inputParam, {\n      val: event.target.value\n    });\n    this.setState({ inputParam: data });\n  }\n  getLoadGold = async record => {\n    const id = record.id;\n    const result = await reqLoadGold(id);\n    if (result.status === 0) {\n      Modal.success({\n        title: \"实时余额\",\n        content: `用户${record.id}实时余额是 : ${result.data[0].game_gold}`\n      });\n    }\n  };\n  getGoldDetail = async (record, isBindInfo) => {\n    if (this.moreModal) {\n      this.moreModal.destroy();\n    }\n    this.isBindInfo = isBindInfo;\n    this.recordID = record.id;\n    this.setState({ isGoldDetailShow: true });\n  };\n  saveUserBlack = async (record, isAdd) => {\n    let action = isAdd ? \"add\" : \"remove\";\n    const res = await saveUserBlack(record.id, action);\n    if (res.status === 0) {\n      message.success(\"操作成功！\");\n    } else {\n      message.success(\"操作失败:\" + res.msg);\n    }\n  };\n  resetPwd = record => {\n    if (this.moreModal) {\n      this.moreModal.destroy();\n    }\n    this.setState({ isResetPwdShow: true });\n    this.resetPwdId = record.id;\n  };\n  handleResetpwd = async () => {\n    const res = await createTask(this.resetPwdId, this.state.resetpwd);\n    if (res.status === 0) {\n      message.success(\"操作成功！\");\n      this.setState({ resetpwd: \"\", isResetPwdShow: false });\n    } else {\n      message.success(\"操作失败:\" + res.msg);\n    }\n  };\n  getMoreDetail = record => {\n    this.moreModal = Modal.info({\n      title: \"更多\",\n      okText: \"关闭\",\n      width: \"50%\",\n      content: (\n        <div>\n          <LinkButton\n            onClick={() => this.getGoldDetail(record, true)}\n            size=\"small\"\n          >\n            查看绑定信息\n          </LinkButton>\n          <Popconfirm\n            title=\"交易所黑名单\"\n            onConfirm={() => this.saveUserBlack(record, true)}\n            onCancel={() => this.saveUserBlack(record, false)}\n            okText=\"添加\"\n            cancelText=\"移除\"\n          >\n            <LinkButton size=\"small\">交易所黑名单</LinkButton>\n          </Popconfirm>\n          <LinkButton onClick={() => this.resetPwd(record)} size=\"small\">\n            重置密码\n          </LinkButton>\n          <Popconfirm\n            title=\"确定要设置为客户账号吗？\"\n            onConfirm={() => this.setCustomerAccount(record)}\n            okText=\"确定\"\n            cancelText=\"取消\"\n          >\n            <LinkButton size=\"small\">设置客户账号</LinkButton>\n          </Popconfirm>\n        </div>\n      )\n    });\n  };\n  setCustomerAccount = async record => {\n    let id = record.id;\n    const res = await setCustomer(id);\n    if (res.status === 0) {\n      message.success(res.msg + \"操作成功\");\n    } else {\n      message.error(res.msg + \"操作失败\");\n    }\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    const { data, count } = this.state;\n    const title = (\n      <span>\n        <MyDatePicker\n          handleValue={val => {\n            this.setState({\n              startTime: val[0],\n              endTime: val[1]\n            });\n          }}\n        />\n        &nbsp; &nbsp;\n        <Select\n          style={{ width: 200 }}\n          placeholder=\"Select a person\"\n          defaultValue=\"id\"\n          onChange={val => {\n            this.inputKey = val;\n          }}\n        >\n          <Option value=\"id\">user_id</Option>\n          <Option value=\"game_nick\">昵称</Option>\n          <Option value=\"phone_number\">手机号</Option>\n          <Option value=\"role_name\">账号</Option>\n          <Option value=\"proxy_nick\">所属代理</Option>\n          <Option value=\"package_nick\">所属品牌</Option>\n          <Option value=\"regin_ip\">注册IP</Option>\n        </Select>\n        &nbsp; &nbsp;\n        <Input\n          type=\"text\"\n          placeholder=\"请输入关键字搜索\"\n          style={{ width: 150 }}\n          ref={Input => (this.input = Input)}\n        />\n        &nbsp; &nbsp;\n        <LinkButton\n          onClick={() => {\n            this.inputValue = this.input.input.value;\n            this.getUsers(1, this.state.pageSize);\n          }}\n          size=\"default\"\n        >\n          <Icon type=\"search\" />\n        </LinkButton>\n      </span>\n    );\n    const extra = (\n      <LinkButton\n        onClick={() => {\n          window.location.reload();\n        }}\n        size=\"default\"\n      >\n        <Icon type=\"reload\" />\n      </LinkButton>\n    );\n    return (\n      <Card title={title} extra={extra}>\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 2000, y: \"65vh\" }}\n        />\n        {this.state.isNickShow && (\n          <Modal\n            title=\"修改昵称\"\n            visible={this.state.isNickShow}\n            onOk={this.changeNickName}\n            onCancel={() => {\n              this.setState({ isNickShow: false });\n            }}\n          >\n            <WrappedNormalLoginForm\n              ref=\"getFormValue\"\n              val={this.game_nick}\n              isNickModal\n            />\n          </Modal>\n        )}\n        {this.state.isGoldShow && (\n          <Modal\n            title=\"修改金额\"\n            visible={this.state.isGoldShow}\n            onCancel={() => {\n              this.setState({ isGoldShow: false });\n            }}\n            footer={[\n              <Button\n                key=\"back\"\n                onClick={() => {\n                  this.setState({ isGoldShow: false });\n                }}\n              >\n                取消\n              </Button>,\n              <Button\n                key=\"submit\"\n                type=\"primary\"\n                loading={this.state.loading}\n                onClick={this.onChangeGold}\n              >\n                确定\n              </Button>\n            ]}\n          >\n            <WrappedNormalLoginForm\n              ref=\"getFormValue\"\n              goldRecord={this.goldRecord}\n            />\n          </Modal>\n        )}\n        {this.state.isGoldDetailShow && (\n          <Modal\n            title={this.isBindInfo ? \"查看绑定信息\" : \"资金明细\"}\n            visible={this.state.isGoldDetailShow}\n            onCancel={() => {\n              this.setState({ isGoldDetailShow: false });\n            }}\n            footer={null}\n            width=\"80%\"\n          >\n            <WrappedComponent\n              recordID={this.recordID}\n              isBindInfo={this.isBindInfo}\n            />\n          </Modal>\n        )}\n        <Modal\n          title=\"重置密码\"\n          visible={this.state.isResetPwdShow}\n          onOk={this.handleResetpwd}\n          onCancel={() => {\n            this.setState({ isResetPwdShow: false });\n          }}\n        >\n          <span>重置密码</span>\n          <Input\n            value={this.state.resetpwd}\n            onChange={e => this.setState({ resetpwd: e.target.value })}\n          />\n        </Modal>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Icon,\n  Input,\n  Radio,\n  Select,\n  Checkbox,\n  Button,\n  message\n} from \"antd\";\nimport { addUser, editUser } from \"../../../api\";\n\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBan: 1,\n      checkedList: [],\n      indeterminate: true,\n      checkAll: false\n    };\n  }\n  checkboxOnChange = checkedList => {\n    // console.log(checkedList);\n    this.setState({\n      checkedList,\n      indeterminate:\n        !!checkedList.length &&\n        checkedList.length < this.props.packageList.length,\n      checkAll: checkedList.length === this.props.packageList.length\n    });\n  };\n  onCheckAllChange = e => {\n    let list = this.props.packageList.map(item => {\n      return item.value;\n    });\n    this.setState(\n      {\n        checkedList: e.target.checked ? list : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      },\n      () => {\n        this.props.form.setFieldsValue({\n          packageList: this.state.checkedList\n        });\n      }\n    );\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      if (!err) {\n        const res = !this.props.isEdit\n          ? await addUser(value)\n          : await editUser(value, this.props.editDataRecord.id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n  componentDidMount() {\n    if (this.props.isEdit && this.props.editDataRecord.group) {\n      let defaultValue = this.props.editDataRecord.group.split(\",\");\n      this.props.form.setFieldsValue({\n        packageList: defaultValue.map(Number)\n      });\n    }\n  }\n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    const Option = this.props.optionList.map(item => (\n      <Select.Option value={item.id} key={item.id}>\n        {item.name}\n      </Select.Option>\n    ));\n    return (\n      <Form\n        labelCol={{ span: 4 }}\n        onSubmit={this.handleSubmit}\n        labelAlign=\"left\"\n      >\n        <Form.Item label=\"登录名\">\n          {getFieldDecorator(\"username\", {\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"登录名必须输入\"\n              },\n              { min: 3, message: \"用户名至少3位\" },\n              { max: 10, message: \"用户名最多10位\" },\n              {\n                pattern: /^[a-zA-Z0-9_]+$/,\n                message: \"用户名必须是英文、数字或下划线组成\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.name : \"\"\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              style={{ width: \"60%\" }}\n              placeholder=\"将会成为您唯一的登入名\"\n              readOnly={isEdit ? true : false}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"用户状态\">\n          {getFieldDecorator(\"userStatus\", {\n            initialValue: isEdit ? editDataRecord.status : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>启用</Radio>\n              <Radio value={0}>禁用</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"用户组\">\n          {getFieldDecorator(\"userGroup\", {\n            rules: [{ required: true, message: \"请选择用户组!\" }],\n            initialValue: isEdit && editDataRecord.group_id\n          })(\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择用户组\">\n              {Option}\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"授权品牌\">\n          <Checkbox\n            indeterminate={this.state.indeterminate}\n            onChange={this.onCheckAllChange}\n            checked={this.state.checkAll}\n          >\n            全选\n          </Checkbox>\n          {getFieldDecorator(\"packageList\", {\n            rules: [{ required: true, message: \"请选择授权品牌!\" }]\n          })(\n            <Checkbox.Group\n              options={this.props.packageList}\n              // value={this.state.checkedList}\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"授权代理\">\n          {getFieldDecorator(\"proxy\", {\n            rules: [\n              {\n                whitespace: true,\n                message: \"多个代理请用英文逗号分隔\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.proxy : \"\"\n          })(\n            <Input\n              style={{ width: \"60%\" }}\n              placeholder=\"多个代理请用英文逗号分隔\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"携带金额\">\n          {getFieldDecorator(\"loadGold\", {\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"请输入有效数字\"\n              },\n              {\n                pattern: /^\\d+(\\.\\d+)?$/,\n                message: \"请输入有效数字\"\n              }\n            ],\n            initialValue: isEdit && editDataRecord.use_balance\n          })(<Input style={{ width: \"60%\" }} placeholder=\"请输入数字\" />)}\n        </Form.Item>\n        <Form.Item label=\"密码\" style={isEdit ? { display: \"none\" } : {}}>\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: isEdit ? false : true,\n                whitespace: true,\n                message: \"密码不能为空\"\n              },\n              { min: 6, message: \"密码至少6位\" },\n              { max: 16, message: \"密码最多16位\" },\n              {\n                pattern: /^[a-zA-Z0-9_]+$/,\n                message: \"密码必须是英文、数字或下划线组成\"\n              }\n            ]\n          })(\n            <Input\n              type=\"password\"\n              style={{ width: \"60%\" }}\n              placeholder=\"6到16个字符\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"确认密码\" style={isEdit ? { display: \"none\" } : {}}>\n          {getFieldDecorator(\"confirmPssword\", {\n            rules: [\n              {\n                required: isEdit ? false : true,\n                whitespace: true\n              },\n              {\n                validator: (rule, value, callback) => {\n                  if (!value) {\n                    callback(); //如果还没填写，则不进行一致性验证\n                  }\n                  if (value === getFieldValue(\"password\")) {\n                    callback();\n                  } else {\n                    callback(\"两次密码不一致\");\n                  }\n                }\n              }\n            ]\n          })(\n            <Input\n              type=\"password\"\n              style={{ width: \"60%\" }}\n              placeholder=\"6到16个字符\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item\n          label=\"密码(选填)\"\n          style={!isEdit ? { display: \"none\" } : {}}\n        >\n          {getFieldDecorator(\"editPassword\", {\n            rules: [\n              {\n                whitespace: true\n              },\n              {\n                validator: (rule, value, callback) => {\n                  if (!value) {\n                    callback(); //如果还没填写，则不进行一致性验证\n                  }\n                  if (value === getFieldValue(\"password\")) {\n                    callback();\n                  } else {\n                    callback(\"两次密码不一致\");\n                  }\n                }\n              }\n            ]\n          })(\n            <Input\n              type=\"password\"\n              style={{ width: \"60%\" }}\n              placeholder=\"6到16个字符，重置密码时使用\"\n            />\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\nimport \"moment/locale/zh-cn\";\nimport WrappedAddDataForm from \"./addData\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport {\n  reqAdminList,\n  searchAdminData,\n  roleList,\n  packageList,\n  resetAuthCode\n} from \"../../../api/index\";\n\nclass Admin_manage_list extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"用户名\",\n      dataIndex: \"name\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"角色\",\n      dataIndex: \"role_name\"\n    },\n    {\n      title: \"授权品牌\",\n      dataIndex: \"group\"\n    },\n    {\n      title: \"授权代理\",\n      dataIndex: \"proxy\"\n    },\n    {\n      title: \"可使用金额\",\n      dataIndex: \"use_balance\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"更新时间\",\n      dataIndex: \"updated_at\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      align: \"center\",\n      render: (text, record, index) => (\n        <span>{text === 1 ? \"启用\" : \"禁用\"}</span>\n      )\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"handle\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n          <LinkButton onClick={() => this.resetAuthCode(record)} type=\"default\">\n            AuthCode重置\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n\n  getUsers = async (page, limit) => {\n    const result = await reqAdminList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  handleChange(event) {\n    this.setState({ inputParam: event.target.value });\n  }\n  onSearchData = async () => {\n    const result = await searchAdminData(this.state.inputParam);\n    // if (result.status === 0) {\n    this.setState({\n      data: result.data,\n      count: 1\n    });\n    // }\n  };\n  addData = async () => {\n    const res = await roleList();\n    const result = await packageList();\n    if (res.status === 0 && result.status === 0) {\n      this.optionList = res.data;\n      this.packageList = result.data.map(item => {\n        return { label: item.name, value: item.id };\n      });\n      this.setState({\n        isAddDataShow: true\n      });\n    }\n  };\n  edit = async record => {\n    console.log(record);\n    this.editDataRecord = record;\n    const res = await roleList();\n    const result = await packageList();\n    if (res.status === 0 && result.status === 0) {\n      this.optionList = res.data;\n      this.packageList = result.data.map(item => {\n        return { label: item.name, value: item.id };\n      });\n      this.setState({\n        isEditDataShow: true\n      });\n    }\n  };\n  resetAuthCode = record => {\n    Modal.confirm({\n      title: \"信息\",\n      content: \"真的要重置么?\",\n      async onOk() {\n        const res = await resetAuthCode(record.id);\n        if (res.status === 0) {\n          message.success(res.msg);\n        } else {\n          message.success(res.msg);\n        }\n      }\n    });\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <Input\n              type=\"text\"\n              placeholder=\"请输入用户名\"\n              style={{ width: 150 }}\n              value={this.state.inputParam}\n              onChange={this.handleChange}\n            />\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.addData} size=\"default\">\n              <Icon type=\"user-add\" />\n              添加账户\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n        />\n        <Modal\n          title=\"添加用户\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            optionList={this.optionList}\n            packageList={this.packageList}\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={() => this.getUsers(1, 20)}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit=\"true\"\n              optionList={this.optionList}\n              packageList={this.packageList}\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default Admin_manage_list;\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, message, Tree } from \"antd\";\nimport { addRole, editRole } from \"../../../api\";\n\nconst { TreeNode } = Tree;\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandedKeys: [],\n      selectedKeys: [],\n      checkedKeys: this.props.isEdit\n        ? this.props.editDataRecord.rules.split(\",\")\n        : [],\n      defaultCheckedKeys: []\n    };\n  }\n  //   componentDidMount() {\n  //     if (this.props.isEdit) {\n  //       if (this.props.editDataRecord.rules) {\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\n  //         this.setState({\n  //           defaultCheckedKeys: defaultValue\n  //         });\n  //       }\n  //     }\n  //   }\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\n  //解决上诉错误：\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  render() {\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\n    const treeData = this.getTreeNodes(menuList);\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form\n        labelCol={{ span: 4 }}\n        onSubmit={this.handleSubmit}\n        labelAlign=\"left\"\n      >\n        <Form.Item label=\"角色名\">\n          {getFieldDecorator(\"name\", {\n            rules: [\n              {\n                required: true,\n                message: \"角色名必须输入\"\n              },\n              { min: 3, message: \"用户名至少3位\" }\n            ],\n            initialValue: isEdit ? editDataRecord.name : \"\"\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              style={{ width: \"60%\" }}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"分配权限\">\n          <br />\n          <Tree\n            checkable\n            defaultCheckedKeys={isEdit ? editDataRecord.rules.split(\",\") : []}\n            expandedKeys={this.state.expandedKeys}\n            selectedKeys={this.state.selectedKeys}\n            onSelect={this.onSelect}\n            onCheck={this.onCheck}\n            onExpand={this.onExpand}\n          >\n            {treeData}\n          </Tree>\n        </Form.Item>\n        <Form.Item label=\"描述\">\n          {getFieldDecorator(\"desc\", {\n            rules: [{ max: 400, message: \"最多400字\" }],\n            initialValue: isEdit ? editDataRecord.description : \"\"\n          })(\n            <Input.TextArea\n              placeholder=\"请输入文字\"\n              autosize={{ minRows: 2, maxRows: 6 }}\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  getTreeNodes = menuList => {\n    return menuList.map(item => {\n      if (!item.children) {\n        return <TreeNode key={item.id} title={item.title.replace(/&nbsp;/g, \"\")} />;\n      } else {\n        return (\n          <TreeNode key={item.id} title={item.title.replace(/&nbsp;/g, \"\")}>\n            {this.getTreeNodes(item.children)}\n          </TreeNode>\n        );\n      }\n    });\n  };\n  onSelect = (selectedKeys, info) => {\n    const { node } = info;\n    const { expandedKeys } = this.state;\n    if (node.props.isLeaf) {\n      this.setState({ selectedKeys });\n    } else {\n      this.setState({\n        expandedKeys: node.props.expanded\n          ? expandedKeys.filter(k => k !== node.props.eventKey)\n          : expandedKeys.concat(node.props.eventKey)\n      });\n    }\n  };\n  onCheck = (checkedKeys, info) => {\n    // console.log(\"onCheck\", checkedKeys, info);\n    this.setState({\n      checkedKeys: checkedKeys.map(Number)\n    });\n  };\n  onExpand = (expandedKeys, info) => {\n    this.setState({ expandedKeys });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      if (!err) {\n        let { name, desc } = value;\n        let rules = this.state.checkedKeys;\n        let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\n        const res = !this.props.isEdit\n          ? await addRole(name, rules, desc)\n          : await editRole(name, rules, desc, id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n          this.setState({\n            checkedKeys: []\n          });\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\nimport WrappedAddDataForm from \"./addData\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { getRoleList, getRuleList } from \"../../../api/index\";\n\nclass Role extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"id\",\n      width: 80\n    },\n    {\n      title: \"角色名\",\n      dataIndex: \"name\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"描述\",\n      dataIndex: \"description\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      align: \"center\",\n      render: (text, record, index) => (\n        <span>{text === 1 ? \"已启用\" : \"禁用\"}</span>\n      )\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"handle\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    }\n  ];\n  getUsers = async (page, limit) => {\n    const result = await getRoleList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  addData = async () => {\n    //getRuleList的请求/acl/ruleList返回的不是树状结构的数据，所以使用缓存在本地navlist返回的menulist\n    // const res = await getRuleList();\n    // if (res.status === 0) {\n    //   this.ruleList = res.data;\n    this.setState({\n      isAddDataShow: true\n    });\n    // }\n  };\n  edit = async record => {\n    // console.log(record);\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <LinkButton onClick={this.addData} size='default'>\n              <Icon type=\"user-add\" />\n              添加账户\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size='default'>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n            // scroll={{ x: 1500, y: 550 }}\n        />\n        <Modal\n          title=\"添加角色\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={() => this.getUsers(1, 20)}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit=\"true\"\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default Role;\n","import React, { Component } from \"react\";\nimport { Table, Input, Icon, Button, message } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport { reqLostOrder_list, orderReview } from \"../../../api/index\";\n\nclass Diaodan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      user_id: \"\",\n      order_id: \"\"\n    };\n  }\n  render() {\n    return (\n      <div>\n        <Input\n          type=\"text\"\n          placeholder=\"user_id\"\n          style={{ width: 150 }}\n          value={this.state.user_id}\n          onChange={e => this.setState({ user_id: e.target.value })}\n        />\n        &nbsp; &nbsp;\n        <Input\n          type=\"text\"\n          placeholder=\"订单Id\"\n          style={{ width: 300 }}\n          value={this.state.order_id}\n          onChange={e => this.setState({ order_id: e.target.value })}\n        />\n        &nbsp; &nbsp;\n        <Button onClick={this.handleClick}>\n          <Icon type=\"search\" />\n        </Button>\n        <br></br>\n        <br></br>\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n        />\n      </div>\n    );\n  }\n  initColumns = () => {\n    return [\n      {\n        title: \"订单Id\",\n        dataIndex: \"order_id\"\n      },\n      {\n        title: \"user_id\",\n        dataIndex: \"user_id\"\n      },\n      {\n        title: \"金额\",\n        dataIndex: \"amount\"\n      },\n      {\n        title: \"下单时间\",\n        dataIndex: \"created_at\",\n        render: formateDate\n      },\n      {\n        title: \"操作\",\n        dataIndex: \"status\",\n        render: (text, record, index) => {\n          if (text !== \"6\" && text !== \"7\" && text !== \"9\") {\n            return (\n              <Button\n                size=\"small\"\n                onClick={() => this.handleRecieveSubmit(record)}\n              >\n                手动到账提交\n              </Button>\n            );\n          } else {\n            return;\n          }\n        }\n      }\n    ];\n  };\n  handleClick = async () => {\n    const res = await reqLostOrder_list(\n      1,\n      50,\n      this.state.user_id,\n      this.state.order_id\n    );\n    if (res.status === 0) {\n      this.setState({\n        data: res.data\n      });\n    } else {\n      message.error(\"未检索到数据\");\n    }\n  };\n  handleRecieveSubmit = async record => {\n    let { user_id, order_id } = record;\n    const res = await orderReview(user_id, order_id);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n    this.handleClick();\n  };\n}\n\nexport default Diaodan;\n","import React, { Component } from \"react\";\nimport { Card, Table, message, Icon, Input, Select, Modal, Button } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport {\n  reqOrder_list,\n  downloadList,\n  orderReviewEdit\n} from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport Diaodan from \"./editData\";\n\nclass Order_list extends Component {\n  constructor(props) {\n    super(props);\n    this.reqData = {\n      start_time: \"\",\n      end_time: \"\",\n      order_status: \"\",\n      type: \"\"\n    };\n    this.inputKey = \"\";\n    this.inputValue = \"\";\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isQueryShow: false,\n      isEditShow: false\n    };\n  }\n  getUsers = async (page, limit, reqData) => {\n    const result = await reqOrder_list(page, limit, reqData);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: parseInt(result.count)\n      });\n    }\n  };\n  PlayerLossOrderSearch = async () => {\n    this.setState({ isQueryShow: true });\n  };\n  onSearchData = (page, limit) => {\n    //处理要发送的数据\n    let reqData = {\n      ...this.reqData\n    };\n    if (this.inputKey === \"1\" || this.inputKey === \"2\") {\n      reqData.time_type = this.inputKey;\n    } else if (this.inputKey) {\n      reqData[this.inputKey] = this.inputValue;\n    }\n    this.getUsers(page, limit, reqData);\n  };\n  download = () => {\n    let data = {\n      ...this.reqData,\n      inputParam: this.inputValue,\n      paramKey: this.inputKey\n    };\n    downloadList(data);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <div>\n              <Select\n                placeholder=\"请选择\"\n                style={{ width: 120 }}\n                onSelect={value => (this.inputKey = value)}\n              >\n                <Select.Option value=\"order_id\">订单id</Select.Option>\n                <Select.Option value=\"user_id\">user_id</Select.Option>\n                <Select.Option value=\"1\">创建时间</Select.Option>\n                <Select.Option value=\"2\">到账时间</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <Input\n                type=\"text\"\n                placeholder=\"请输入关键字\"\n                style={{ width: 150 }}\n                onChange={e => (this.inputValue = e.target.value)}\n              />\n              &nbsp; &nbsp;\n              <MyDatePicker\n                handleValue={val => {\n                  this.reqData.start_time = val[0];\n                  this.reqData.end_time = val[1];\n                }}\n              />\n              &nbsp; &nbsp;\n              <Select\n                defaultValue=\"\"\n                style={{ width: 200 }}\n                onSelect={value => (this.reqData.order_status = value)}\n              >\n                <Select.Option value=\"\">订单状态</Select.Option>\n                <Select.Option value=\"0\">全部</Select.Option>\n                <Select.Option value=\"1\">未支付</Select.Option>\n                <Select.Option value=\"4\">已撤销</Select.Option>\n                <Select.Option value=\"5\">已支付</Select.Option>\n                <Select.Option value=\"6\">已完成</Select.Option>\n                <Select.Option value=\"7\">补单初审通过</Select.Option>\n                <Select.Option value=\"8\">补单初审拒绝</Select.Option>\n                <Select.Option value=\"9\">补单复审通过</Select.Option>\n                <Select.Option value=\"10\">补单复审拒绝</Select.Option>\n                <Select.Option value=\"11\">充值失败</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <Select\n                defaultValue=\"\"\n                style={{ width: 120 }}\n                onSelect={value => (this.reqData.type = value)}\n              >\n                <Select.Option value=\"\">订单类型</Select.Option>\n                <Select.Option value=\"0\">全部</Select.Option>\n                <Select.Option value=\"1\">alipay</Select.Option>\n                <Select.Option value=\"2\">银行卡转账</Select.Option>\n                <Select.Option value=\"3\">人工代充</Select.Option>\n                <Select.Option value=\"4\">人工代提</Select.Option>\n                <Select.Option value=\"6\">微信支付</Select.Option>\n                <Select.Option value=\"7\">银联支付</Select.Option>\n                <Select.Option value=\"8\">网银支付</Select.Option>\n                <Select.Option value=\"9\">快捷支付</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <LinkButton\n                onClick={() => this.onSearchData(1, 20)}\n                size=\"default\"\n              >\n                <Icon type=\"search\" />\n              </LinkButton>\n              &nbsp; &nbsp;\n            </div>\n            <div style={{ marginTop: 10 }}>\n              <LinkButton onClick={this.PlayerLossOrderSearch} size=\"default\">\n                <Icon type=\"search\" />\n                玩家掉单查询\n              </LinkButton>\n            </div>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n              size=\"default\"\n            />\n            <br />\n            <br />\n            <LinkButton\n              size=\"default\"\n              style={{ float: \"right\" }}\n              onClick={this.download}\n              icon=\"download\"\n            ></LinkButton>\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.onSearchData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.onSearchData(current, size);\n            }\n          }}\n          scroll={{ x: 2000 }}\n        />\n        <Modal\n          title=\"玩家调单查询\"\n          visible={this.state.isQueryShow}\n          onCancel={() => {\n            this.setState({ isQueryShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <Diaodan />\n        </Modal>\n        <Modal\n          title=\"编辑\"\n          visible={this.state.isEditShow}\n          onCancel={() => {\n            this.setState({ isEditShow: false });\n          }}\n          footer={null}\n          width=\"50%\"\n        >\n          <div>\n            <div>用户ID：{this.state.editUser_id}</div>\n            <br />\n            <div>金额：{this.state.editMount}</div>\n            <br />\n            <div>\n              手动到账复审：<Button type=\"primary\">通过</Button>{\" \"}\n              <Button type=\"primary\" onClick={this.editRefused}>\n                拒绝\n              </Button>\n            </div>\n          </div>\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 320\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\"\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\"\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\"\n    },\n    {\n      title: \"支付渠道\",\n      dataIndex: \"channel_type\",\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"0\":\n            word = record.replace_id;\n            break;\n          case \"5\":\n            word = \"充提UC\";\n            break;\n          case \"12\":\n            word = \"onePay\";\n            break;\n          case \"11\":\n            word = \"古都\";\n            break;\n          case [\"10\", \"13\", \"14\", \"15\", \"16\"]:\n            word = \"聚鑫\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"支付类型\",\n      dataIndex: \"type\",\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"alipay\";\n            break;\n          case \"2\":\n            word = \"银行卡转账\";\n            break;\n          case \"3\":\n            word = \"人工代充\";\n            break;\n          case \"4\":\n            word = \"人工代提\";\n            break;\n          case \"5\":\n            word = \"被赠送\";\n            break;\n          case \"6\":\n            word = \"微信支付\";\n            break;\n          case \"7\":\n            word = \"银联支付\";\n            break;\n          case \"8\":\n            word = \"网银支付\";\n            break;\n          case \"9\":\n            word = \"快捷支付\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      sorter: (a, b) => a.amount - b.amount,\n      render: text => {\n        text = parseInt(text).toFixed(2);\n        return <span>{text}</span>;\n      }\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount,\n      render: text => {\n        text = parseInt(text).toFixed(2);\n        return <span>{text}</span>;\n      }\n    },\n    {\n      title: \"订单状态\",\n      dataIndex: \"status\",\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"未支付\";\n            break;\n          case \"2\":\n            word = \"已过期\";\n            break;\n          case \"3\":\n            word = \"已分配\";\n            break;\n          case \"4\":\n            word = \"已撤销\";\n            break;\n          case \"5\":\n            word = \"已支付\";\n            break;\n          case \"6\":\n            word = \"已完成\";\n            break;\n          case \"7\":\n            word = \"补单初审通过\";\n            break;\n          case \"8\":\n            word = \"初审拒绝\";\n            break;\n          case \"9\":\n            word = \"补单复审通过\";\n            break;\n          case \"10\":\n            word = \"复审拒绝\";\n            break;\n          case \"11\":\n            word = \"充值失败\";\n            break;\n          case \"12\":\n            word = \"客服拒绝\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      render: formateDate,\n      width: 200,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 200,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => {\n        if (record.status === \"7\") {\n          return (\n            <LinkButton size=\"small\" onClick={() => this.edit(record)}>\n              编辑\n            </LinkButton>\n          );\n        } else {\n          return;\n        }\n      }\n    },\n    {\n      title: \"备注\",\n      dataIndex: \"remark\"\n    }\n  ];\n  edit = record => {\n    this.setState({\n      isEditShow: true,\n      editUser_id: record.user_id,\n      editMount: record.amount\n    });\n    this.user_id = record.user_id;\n    this.order_id = record.order_id;\n    this.editType = record.type;\n  };\n  editRefused = async () => {\n    const res = await orderReviewEdit(\n      this.user_id,\n      this.order_id,\n      this.editType\n    );\n    if (res.status === 0) {\n      message.success(res.msg);\n      this.setState({\n        isEditShow: false\n      });\n      this.getUsers(1, this.pageSize);\n    } else {\n      message.error(res.msg);\n    }\n  };\n}\n\nexport default Order_list;\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\nimport { addChannel, editPayChannel } from \"../../../api\";\n\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //   componentDidMount() {\n  //     if (this.props.isEdit) {\n  //       if (this.props.editDataRecord.rules) {\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\n  //         this.setState({\n  //           defaultCheckedKeys: defaultValue\n  //         });\n  //       }\n  //     }\n  //   }\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\n  //解决上诉错误：\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form\n        labelCol={{ span: 7 }}\n        wrapperCol={{ span: 17 }}\n        onSubmit={this.handleSubmit}\n      >\n        <Form.Item label=\"支付名称\">\n          {getFieldDecorator(\"name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"所属渠道ID\">\n          {getFieldDecorator(\"channel_id\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.channel_id : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"支付名称\">\n          {getFieldDecorator(\"nick_name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"状态\">\n          {getFieldDecorator(\"status\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>开启</Radio>\n              <Radio value={0}>关闭</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"支付方式\">\n          {getFieldDecorator(\"pay_type\", {\n            rules: [{ required: true, message: \"请选择支付方式!\" }],\n            initialValue: isEdit && editDataRecord.pay_type\n          })(\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择支付方式\">\n              <Select.Option value=\"7\">支付宝H5</Select.Option>\n              <Select.Option value=\"8\">支付宝扫码</Select.Option>\n              <Select.Option value=\"2\">快捷支付</Select.Option>\n              <Select.Option value=\"4\">微信H5</Select.Option>\n              <Select.Option value=\"5\">微信扫码</Select.Option>\n              <Select.Option value=\"1\">网银支付</Select.Option>\n              <Select.Option value=\"13\">银联扫码</Select.Option>\n              <Select.Option value=\"17\">转账银行卡</Select.Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"支付限额最小面值\">\n          {getFieldDecorator(\"min_amount\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.min_amount : \"\"\n          })(<Input style={{ width: \"30%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"支付限额最大面值\">\n          {getFieldDecorator(\"max_amount\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.max_amount : \"\"\n          })(<Input style={{ width: \"30%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"固定面值\">\n          {getFieldDecorator(\"span_amount\", {\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"请输入有效数字\"\n              }\n            ],\n            initialValue: isEdit && editDataRecord.span_amount\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"单笔间隔\">\n          {getFieldDecorator(\"seed\", {\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"请输入有效数字\"\n              }\n            ],\n            initialValue: isEdit && editDataRecord.seed\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"玩家承担费率%\">\n          {getFieldDecorator(\"rate\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit && editDataRecord.rate\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"显示排序\">\n          {getFieldDecorator(\"sort\", {\n            initialValue: isEdit ? editDataRecord.sort : \"0\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\n      if (!err) {\n        const res = !this.props.isEdit\n          ? await addChannel(value)\n          : await editPayChannel(value,id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { getChannelList, getRuleList } from \"../../../api/index\";\nimport WrappedAddDataForm from \"./addorEdit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass Channel_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await getChannelList(page, limit);\n    if (result.status === 0 && result.data) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  onSearchData = async () => {\n    const res = await getChannelList(1, 20, this.state.inputParam);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  addData = () => {\n    this.setState({\n      isAddDataShow: true\n    });\n  };\n  edit = async record => {\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  refreshPage = () => {\n    this.setState({\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    });\n    this.getUsers(1, 20);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <Input\n              type=\"text\"\n              placeholder=\"请输入支付名称\"\n              style={{ width: 150 }}\n              value={this.state.inputParam}\n              onChange={e => this.setState({ inputParam: e.target.value })}\n            />\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData}>\n              <Icon type=\"search\" />\n            </LinkButton>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.addData}>\n              <Icon type=\"user-add\" />\n              添加\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()}>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 1900, y: \"60vh\" }}\n        />\n        <Modal\n          title=\"添加角色\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={this.refreshPage}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      width: 80\n    },\n    {\n      title: \"支付名称\",\n      dataIndex: \"name\",\n      width: 120\n    },\n    {\n      title: \"渠道昵称\",\n      dataIndex: \"nick_name\",\n      width: 100\n    },\n    {\n      title: \"单笔-最小限额\",\n      dataIndex: \"min_amount\",\n      width: 120\n    },\n    {\n      title: \"单笔-最大限额\",\n      dataIndex: \"max_amount\",\n      width: 120\n    },\n    {\n      title: \"单笔间隔\",\n      dataIndex: \"seed\",\n      width: 100\n    },\n    {\n      title: \"玩家承担的费率%\",\n      dataIndex: \"rate\",\n      width: 150\n    },\n    {\n      title: \"固定面值\",\n      dataIndex: \"span_amount\",\n      width: 250\n    },\n    {\n      title: \"支付方式\",\n      dataIndex: \"pay_type\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"7\":\n            word = \"支付宝H5\";\n            break;\n          case \"8\":\n            word = \"支付宝扫码\";\n            break;\n          case \"2\":\n            word = \"快捷支付\";\n            break;\n          case \"4\":\n            word = \"微信H5\";\n            break;\n          case \"5\":\n            word = \"微信扫码\";\n            break;\n          case \"1\":\n            word = \"网银支付\";\n            break;\n          case \"13\":\n            word = \"银联扫码\";\n            break;\n          case \"17\":\n            word = \"转账银行卡\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 80,\n      render: (text, record, index) => {\n        return <span>{text === \"1\" ? \"开启\" : \"关闭\"}</span>;\n      }\n    },\n    {\n      title: \"显示顺序\",\n      width: 100,\n      dataIndex: \"sort\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 200,\n      render: formateDate\n    },\n    {\n      title: \"修改时间\",\n      dataIndex: \"updated_at\",\n      width: 200,\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    }\n  ];\n}\n\nexport default Channel_list;\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\nimport { saveBankCard } from \"../../../api\";\n\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //   componentDidMount() {\n  //     if (this.props.isEdit) {\n  //       if (this.props.editDataRecord.rules) {\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\n  //         this.setState({\n  //           defaultCheckedKeys: defaultValue\n  //         });\n  //       }\n  //     }\n  //   }\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\n  //解决上诉错误：\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form\n        labelCol={{ span: 7 }}\n        wrapperCol={{ span: 17 }}\n        onSubmit={this.handleSubmit}\n      >\n        <Form.Item label=\"开户人\">\n          {getFieldDecorator(\"card_name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.card_name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"银行名称\">\n          {getFieldDecorator(\"bank_name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.bank_name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"卡号\">\n          {getFieldDecorator(\"card_num\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              },\n              {\n                min: 15,\n                max: 20,\n                message: \"请输入15-20位正确卡号\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.card_num : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"用途\">\n          {getFieldDecorator(\"type\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>收款卡</Radio>\n              <Radio value={0}>出款卡</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"状态\">\n          {getFieldDecorator(\"status\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 2\n          })(\n            <Radio.Group>\n              <Radio value={1}>空闲</Radio>\n              <Radio value={2}>使用中</Radio>\n              <Radio value={3}>停用</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"支付密码\">\n          {getFieldDecorator(\"pay_password\", {})(\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\n          )}\n        </Form.Item>\n        <Form.Item label=\"查询密码\">\n          {getFieldDecorator(\"query_password\", {})(\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\n          )}\n        </Form.Item>\n        <Form.Item label=\"U盾密码\">\n          {getFieldDecorator(\"u_code\", {})(\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\n          )}\n        </Form.Item>\n        <Form.Item wrapperCol={{ offset: 18 }}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\n      if (!err) {\n        const res = !this.props.isEdit\n          ? await saveBankCard(value)\n          : await saveBankCard(value, id);\n        if (res.status === 0) {\n          message.success(\"提交成功:\" + res.msg);\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input, Popconfirm } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { bankList, deleteBankCard } from \"../../../api/index\";\nimport WrappedAddDataForm from \"./addorEdit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nclass Bankcard_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await bankList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题:\" + result.msg);\n    }\n  };\n  addData = () => {\n    this.setState({\n      isAddDataShow: true\n    });\n  };\n  edit = async record => {\n    // console.log(record);\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  delete = async record => {\n    const result = await deleteBankCard(record.id);\n    if (result.status === 0) {\n      message.success(result.msg);\n      this.refreshPage(1, 20);\n    } else {\n      message.error(\"网络问题:\" + result.msg);\n    }\n  };\n  refreshPage = () => {\n    this.setState({\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    });\n    this.getUsers(1, 20);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <LinkButton onClick={this.addData}>\n              <Icon type=\"user-add\" />\n              添加\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()}>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 1000, y: \"60vh\" }}\n        />\n        <Modal\n          title=\"添加角色\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={this.refreshPage}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      width: 50\n    },\n    {\n      title: \"卡使用类型\",\n      dataIndex: \"type\",\n      width: 100,\n      render: (text, record, index) => (\n        <span>{text === \"1\" ? \"收款卡\" : \"出款卡\"}</span>\n      )\n    },\n    {\n      title: \"银行卡号\",\n      dataIndex: \"card_num\",\n      width: 200\n    },\n    {\n      title: \"开户人姓名\",\n      dataIndex: \"card_name\",\n      width: 100,\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"银行名称\",\n      dataIndex: \"bank_name\",\n      width: 100\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record, index) => (\n        <span>{text === \"1\" ? \"空闲\" : text === \"2\" ? \"使用中\" : \"停用\"}</span>\n      )\n    },\n    {\n      title: \"修改时间\",\n      dataIndex: \"updated_at\",\n      width: 200,\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 150,\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n          <Popconfirm\n            title=\"确定要删除吗\"\n            onConfirm={() => this.delete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <LinkButton type=\"danger\">删除</LinkButton>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n}\n\nexport default Bankcard_list;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Icon,\n  Input,\n  Select,\n  Button,\n  Popconfirm,\n  message\n} from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport \"moment/locale/zh-cn\";\nimport { rechargeOrder, downloadList, cancelOrder } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\n\nclass Recharge_order extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      start_time: \"\",\n      end_time: \"\",\n      type: \"14\",\n      paramKey: \"\",\n      inputParam: \"\",\n      user_id: \"\",\n      order_id: \"\"\n    };\n    this.inputKey = \"\";\n    this.inputValue = \"\";\n    this.order_status = \"\";\n  }\n  getUsers = async (page, limit) => {\n    const result = await rechargeOrder(\n      page,\n      limit,\n      this.state.start_time,\n      this.state.end_time,\n      this.order_status,\n      this.inputKey,\n      this.inputValue\n    );\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  handleChange(event) {\n    this.setState({ inputParam: event.target.value });\n  }\n  download = () => {\n    downloadList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <div>\n              <MyDatePicker\n                handleValue={val => {\n                  this.setState({\n                    start_time: val[0],\n                    end_time: val[1]\n                  });\n                }}\n              />\n              &nbsp; &nbsp;\n              <Select\n                placeholder=\"请选择\"\n                style={{ width: 120 }}\n                onSelect={value => (this.inputKey = value)}\n              >\n                <Select.Option value=\"order_id\">订单id</Select.Option>\n                <Select.Option value=\"user_id\">user_id</Select.Option>\n                <Select.Option value=\"package_nick\">所属品牌</Select.Option>\n                <Select.Option value=\"proxy_pid\">所属代理</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <Input\n                type=\"text\"\n                placeholder=\"请输入关键字\"\n                style={{ width: 150 }}\n                ref={Input => (this.input = Input)}\n              />\n              &nbsp; &nbsp;\n              <Select\n                defaultValue=\"\"\n                style={{ width: 100 }}\n                onSelect={value => (this.order_status = value)}\n              >\n                <Select.Option value=\"\">状态</Select.Option>\n                <Select.Option value=\"1\">未支付</Select.Option>\n                <Select.Option value=\"4\">已撤销</Select.Option>\n                <Select.Option value=\"5\">已支付</Select.Option>\n                <Select.Option value=\"6\">已完成</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <LinkButton\n                onClick={() => {\n                  this.inputValue = this.input.input.value;\n                  this.getUsers(1, this.state.pageSize);\n                }}\n                size=\"default\"\n              >\n                <Icon type=\"search\" />\n              </LinkButton>\n              &nbsp; &nbsp;\n            </div>\n          </div>\n        }\n        extra={\n          <span>\n            <Button\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 1850, y: \"60vh\" }}\n        />\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 320\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 150\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 150\n    },\n    {\n      title: \"代充ID\",\n      dataIndex: \"replace_id\",\n      width: 150\n    },\n    {\n      title: \"代充昵称\",\n      dataIndex: \"replace_name\",\n      width: 100\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 150,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 150,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 150,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"未支付\";\n            break;\n          case \"2\":\n            word = \"已过期\";\n            break;\n          case \"3\":\n            word = \"已分配\";\n            break;\n          case \"4\":\n            word = \"已撤销\";\n            break;\n          case \"5\":\n            word = \"已支付\";\n            break;\n          case \"6\":\n            word = \"已完成\";\n            break;\n          case \"7\":\n            word = \"补单初审通过\";\n            break;\n          case \"8\":\n            word = \"初审拒绝\";\n            break;\n          case \"9\":\n            word = \"补单复审通过\";\n            break;\n          case \"10\":\n            word = \"复审拒绝\";\n            break;\n          case \"11\":\n            word = \"充值失败\";\n            break;\n          case \"12\":\n            word = \"客服拒绝\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 200,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 200,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => {\n        if (record.status == 1 || record.status == 5) {\n          return (\n            <Popconfirm\n              title=\"确定要删除吗?\"\n              onConfirm={() => this.handleWithdraw(record)}\n              okText=\"确定\"\n              cancelText=\"取消\"\n            >\n              <LinkButton>协助玩家撤销</LinkButton>\n            </Popconfirm>\n          );\n        } else {\n          return;\n        }\n      }\n    }\n  ];\n  handleWithdraw = async record => {\n    let reqData = {\n      order_id: record.order_id,\n      user_id: record.user_id,\n      form_type: 2\n    };\n    const res = await cancelOrder(reqData);\n    if (res.status === 0) {\n      message.info(res.msg || \"操作成功\");\n      window.location.reload();\n    } else {\n      message.error(res.msg || \"操作失败\");\n    }\n  };\n}\n\nexport default Recharge_order;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Input,\n  Button,\n} from \"antd\";\nimport { getChannel, getChannelInfo,editChannelInfo } from \"../../../api/index\";\n\nclass Recharge_channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      childData: [],\n      expandedRowKeys: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isEditDataShow: false,\n      recordId: \"\"\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await getChannel(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: parseInt(result.count)\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        extra={\n          <span>\n            <Button\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"middle\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          expandedRowRender={this.expandedRowRender}\n          expandRowByClick\n          onExpand={this.onExpandRow}\n          expandedRowKeys={this.state.expandedRowKeys}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n        />\n        <Modal\n          title=\"修改\"\n          visible={this.state.isEditDataShow}\n          onOk={this.handleEditData}\n          onCancel={() => {\n            this.setState({ isEditDataShow: false });\n          }}\n        >\n          <span>pay_code:</span>\n          <Input\n            type=\"text\"\n            value={this.state.inputParam}\n            onChange={event =>\n              this.setState({ inputParam: event.target.value })\n            }\n          />\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"渠道名\",\n      dataIndex: \"name\"\n    },\n    {\n      title: \"商户号\",\n      dataIndex: \"member_id\"\n    }\n  ];\n  expandedRowRender = (record, index, indent, expanded) => {\n    const columns = [\n      {\n        title: \"支付方式名称\",\n        dataIndex: \"pay_name\",\n        width: 200\n      },\n      {\n        title: \"所属支付渠道\",\n        dataIndex: \"channel_name\",\n        width: 200\n      },\n      {\n        title: \"pay_code\",\n        dataIndex: \"pay_code\",\n        width: 200\n      },\n      {\n        title: \"操作\",\n        dataIndex: \"action\",\n        render: (text, record, index) => (\n          <Button onClick={() => this.edit(record)}>修改pay_code</Button>\n        )\n      }\n    ];\n    return (\n      <Table\n        columns={columns}\n        dataSource={this.state.childData}\n        pagination={false}\n      />\n    );\n  };\n  onExpandRow = async (expanded, record) => {\n    let keys = [];\n    if (expanded) {\n      keys.push(record.id);\n      this.setState({\n        expandedRowKeys: keys\n      });\n      const result = await getChannelInfo(record.id);\n      if (result.status === 0) {\n        result.data.forEach((element, index) => {\n          element.key = index;\n        });\n        this.setState({\n          childData: result.data\n        });\n      } else {\n        message.error(\"网络问题\");\n        this.setState({\n          childData: []\n        });\n      }\n    } else {\n      this.setState({\n        expandedRowKeys: []\n      });\n    }\n  };\n  edit = record => {\n    console.log(record.pay_code);\n    this.setState({\n      recordId: record.id,\n      inputParam: record.pay_code,\n      isEditDataShow: true\n    });\n  };\n  handleEditData = async () => {\n    const result = await editChannelInfo(this.state.recordId, this.state.inputParam);\n    if (result.status === 0) {\n      message.success(result.msg);\n      this.setState({\n        isEditDataShow: false,\n        expandedRowKeys:[],\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n}\nexport default Recharge_channel;\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Radio,\n  Checkbox,\n  DatePicker,\n  message\n} from \"antd\";\nimport { packageList, addNotice, updateNotice } from \"../../../api\";\nimport moment from \"moment\";\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      checkedList: this.props.isEdit\n        ? this.props.editDataRecord.package_ids\n        : []\n    };\n  }\n  getPackageList = async () => {\n    let res = await packageList();\n    if (res.status === 0) {\n      let arr = [];\n      res.data.forEach(element => {\n        arr.push({ label: element.name, value: element.id });\n      });\n      this.setState({\n        options: arr\n      });\n    }\n  };\n  componentDidMount() {\n    this.getPackageList();\n  }\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\n  //解决上诉错误：\n  // componentWillUnmount() {\n  //   this.setState = (state, callback) => {\n  //     return;\n  //   };\n  // }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"开关\">\n          {getFieldDecorator(\"is_open\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.is_open) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>开启</Radio>\n              <Radio value={0}>关闭</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"标题\">\n          {getFieldDecorator(\"title\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.title : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"品牌\">\n          {getFieldDecorator(\"packageList\", {\n            rules: [{ required: true, message: \"请选择品牌!\" }],\n            initialValue: isEdit && editDataRecord.package_ids\n          })(\n            <Checkbox.Group\n              options={this.state.options}\n              // defaultValue={editDataRecord.package_ids}\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"公告类型\">\n          {getFieldDecorator(\"type\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>活动</Radio>\n              <Radio value={2}>公告</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"是否跑马灯\">\n          {getFieldDecorator(\"is_slider\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>是</Radio>\n              <Radio value={0}>否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"排序\">\n          {getFieldDecorator(\"sort\", {\n            rules: [{ required: true }],\n            initialValue: isEdit && editDataRecord.sort\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"内容\">\n          {getFieldDecorator(\"words\", {\n            rules: [{ required: true }],\n            initialValue: isEdit ? editDataRecord.words : \"\"\n          })(\n            <Input.TextArea\n              autosize={{ minRows: 2, maxRows: 6 }}\n              style={{ width: \"60%\" }}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"开始日期\">\n          {getFieldDecorator(\"start_time\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit && moment(editDataRecord.start_time * 1000)\n          })(<DatePicker showTime format={\"YYYY-MM-DD HH:mm:ss\"} />)}\n        </Form.Item>\n        <Form.Item label=\"截止日期\">\n          {getFieldDecorator(\"end_time\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit && moment(editDataRecord.end_time * 1000)\n          })(<DatePicker showTime format={\"YYYY-MM-DD HH:mm:ss\"} />)}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      console.log(value);\n      let id = this.props.editDataRecord\n        ? this.props.editDataRecord._id.$oid\n        : \"\";\n      if (!err) {\n        value.packageList.forEach(item => {\n          let str = \"group[\" + item + \"]\";\n          value[str] = item;\n        });\n        value.start_time = value.start_time.format(\"YYYY-MM-DD HH:mm:ss\");\n        value.end_time = value.end_time.format(\"YYYY-MM-DD HH:mm:ss\");\n        delete value.packageList;\n        const res = !this.props.isEdit\n          ? await addNotice(value)\n          : await updateNotice(value, id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n  checkboxOnChange = checkedList => {\n    this.setState({\n      checkedList: checkedList\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Button,\n  Popover,\n  Popconfirm\n} from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { getList, delNotice } from \"../../../api/index\";\nimport WrappedAddDataForm from \"./addorEdit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass Notice_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n  }\n  getUsers = async (page, limit) => {\n    const result = await getList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  // onSearchData = async () => {\n  //   const res = await getChannelList(1, 20, this.state.inputParam);\n  //   if (res.status === 0) {\n  //     this.setState({\n  //       data: res.data,\n  //       count: parseInt(res.count)\n  //     });\n  //   } else {\n  //     message.error(\"网络问题\");\n  //   }\n  // };\n  addData = () => {\n    this.setState({\n      isAddDataShow: true\n    });\n  };\n  edit = async record => {\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  onDelete = async record => {\n    let res = await delNotice(record._id.$oid);\n    if (res.status === 0) {\n      message.success(\"删除成功\");\n      this.refreshPage();\n    } else {\n      message.error(\"出错了：\" + res.msg);\n    }\n  };\n  refreshPage = () => {\n    this.setState({\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    });\n    this.getUsers(1, 20);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <LinkButton onClick={this.addData} size='default'>添加</LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size='default'>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={record => record._id.$oid}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 2000 }}\n        />\n        <Modal\n          title=\"新增公告\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={this.refreshPage}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"标题\",\n      dataIndex: \"title\"\n    },\n    {\n      title: \"品牌\",\n      dataIndex: \"package_ids\",\n      render: (text, record) => <span>{text.join(\",\")}</span>\n    },\n    {\n      title: \"代理\",\n      dataIndex: \"proxy_user_id\"\n    },\n    {\n      title: \"公告类型\",\n      dataIndex: \"type\",\n      render: (text, record) => (\n        <span>{text === \"1\" || text === 1 ? \"活动\" : \"公告\"}</span>\n      )\n    },\n    {\n      title: \"是否跑马灯\",\n      dataIndex: \"is_slider\",\n      render: (text, record) => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"公告内容\",\n      dataIndex: \"words\",\n      render: (text, record) => (\n        <Popover content={text} trigger=\"click\" overlayStyle={{ width: \"30%\" }}>\n          <div\n            style={{\n              width: \"100px\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\"\n            }}\n          >\n            {text}\n          </div>\n        </Popover>\n      ),\n      onCell: (record, rowIndex) => {\n        return {\n          onClick: event => {}, // 点击行\n          onDoubleClick: event => {},\n          onContextMenu: event => {},\n          onMouseEnter: event => {\n            event.target.style.cursor = \"pointer\";\n          }, // 鼠标移入行\n          onMouseLeave: event => {}\n        };\n      }\n    },\n    {\n      title: \"开始时间\",\n      dataIndex: \"start_time\",\n      render: formateDate\n    },\n    {\n      title: \"截止时间\",\n      dataIndex: \"end_time\",\n      render: formateDate\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"create_time\",\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\n            编辑\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.onDelete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <Button type=\"danger\" size=\"small\">\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n}\n\nexport default Notice_list;\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Radio,\n  Checkbox,\n  DatePicker,\n  message\n} from \"antd\";\nimport { packageList, saveCustomerService} from \"../../../api\";\nimport moment from \"moment\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      checkedList: this.props.isEdit\n        ? this.props.editDataRecord.package_ids.split(\",\").map(Number)\n        : []\n    };\n  }\n  getPackageList = async () => {\n    let res = await packageList();\n    if (res.status === 0) {\n      let arr = [];\n      res.data.forEach(element => {\n        arr.push({ label: element.name, value: element.id });\n      });\n      this.setState({\n        options: arr\n      });\n    }\n  };\n  componentDidMount() {\n    this.getPackageList();\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"账号\">\n          {getFieldDecorator(\"user_id\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.user_id) : ''\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"昵称\">\n          {getFieldDecorator(\"nick_name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"授权品牌\">\n          {getFieldDecorator(\"package_ids\", {\n            rules: [{ required: true, message: \"请选择品牌!\" }],\n            initialValue:\n              isEdit && editDataRecord.package_ids.split(\",\").map(Number)\n          })(\n            <Checkbox.Group\n              options={this.state.options}\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"账号类型\">\n          {getFieldDecorator(\"user_type\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.user_type) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>人工充值</Radio>\n              <Radio value={2}>人工兑换</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"是否显示\">\n          {getFieldDecorator(\"status\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>是</Radio>\n              <Radio value={0}>否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"显示排序\">\n          {getFieldDecorator(\"sort\", {\n            rules: [{ required: true }],\n            initialValue: isEdit && editDataRecord.sort\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      let id = this.props.editDataRecord\n        ? this.props.editDataRecord.user_id\n        : \"\";\n      if (!err) {\n        value.package_ids.forEach(item => {\n          let str = \"group[\" + item + \"]\";\n          value[str] = item;\n        });\n        delete value.package_ids;\n        const res = !this.props.isEdit\n          ? await saveCustomerService(value, \"add\")\n          : await saveCustomerService(value, \"edit\", id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n  checkboxOnChange = checkedList => {\n    this.setState({\n      checkedList: checkedList\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Popconfirm,\n  Button\n} from \"antd\";\nimport { customerList, saveCustomerService } from \"../../../api/index\";\nimport WrappedAddDataForm from \"./addorEdit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport LinkButton from \"../../../components/link-button\";\n\nclass Customer_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await customerList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  onSearchData = async () => {\n    const res = await customerList(1, 20, this.input.input.value);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    }\n  };\n  addData = () => {\n    this.setState({\n      isAddDataShow: true\n    });\n  };\n  edit = async record => {\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  onDelete = async record => {\n    let user_id = record.user_id;\n    let res = await saveCustomerService({ user_id }, \"del\");\n    if (res.status === 0) {\n      message.success(\"删除成功\");\n      this.refreshPage();\n    } else {\n      message.error(\"出错了：\" + res.msg);\n    }\n  };\n  refreshPage = () => {\n    this.setState({\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isAddDataShow: false,\n      isEditDataShow: false\n    });\n    this.getUsers(1, 20);\n    this.input.handleReset();\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <Input\n              type=\"text\"\n              placeholder=\"请输入代充账号\"\n              style={{ width: 150 }}\n              ref={input => (this.input = input)}\n            />\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.addData} size=\"default\">\n              <Icon type=\"user-add\" />\n              添加\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"user_id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 1300, y: \"60vh\" }}\n        />\n        <Modal\n          title=\"新增\"\n          visible={this.state.isAddDataShow}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={this.refreshPage}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"账号\",\n      dataIndex: \"user_id\",\n      width: 150\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"nick_name\",\n      width: 150\n    },\n    {\n      title: \"品牌ID\",\n      dataIndex: \"package_ids\",\n      width: 100\n    },\n    {\n      title: \"是否显示\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record) => (text === 1 ? \"是\" : \"否\")\n    },\n    {\n      title: \"账号类型\",\n      dataIndex: \"user_type\",\n      width: 100,\n      render: text => (parseInt(text) === 1 ? \"人工充值\" : \"人工兑换\")\n    },\n    {\n      title: \"排序\",\n      dataIndex: \"sort\",\n      width: 100\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"create_time\",\n      width: 200,\n      render: (text, record) => (\n        <span>{formateDate(record.create_time / 1000)}</span>\n      )\n    },\n    {\n      title: \"修改时间\",\n      dataIndex: \"update_time\",\n      width: 200,\n      render: (text, record) => (\n        <span>{formateDate(record.update_time / 1000)}</span>\n      )\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\n            编辑\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.onDelete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <Button type=\"danger\" size=\"small\">\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n}\n\nexport default Customer_list;\n","import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass GoldDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { data } = this.props.detailRecord;\n    return (\n      <Table\n        bordered\n        rowKey={(record,index)=>`${index}`}\n        dataSource={data}\n        columns={this.initColumns()}\n        size=\"small\"\n      />\n    );\n  }\n  initColumns = () => {\n    if (this.props.action === \"check\") {\n      return [\n        {\n          title: \"审核人\",\n          dataIndex: \"review_name\"\n        },\n        {\n          title: \"审核时间\",\n          dataIndex: \"review_at\",\n          render: formateDate\n        }\n      ];\n    } else if (this.props.action === \"risk\") {\n      return [\n        {\n          title: \"user_id\",\n          dataIndex: \"id\"\n        },\n        {\n          title: \"产生来源\",\n          dataIndex: \"pay_account_name\"\n        },\n\n        {\n          title: \"余额(变动前)\",\n          dataIndex: \"total_balance\"\n        },\n        {\n          title: \"变动金额\",\n          dataIndex: \"final_pay\",\n\n          sorter: (a, b) => a.total_balance - b.total_balance\n        },\n        {\n          title: \"税收\",\n          dataIndex: \"tax\"\n        },\n        {\n          title: \"余额(变动后)\",\n          dataIndex: \"total_final_balance\"\n        },\n        {\n          title: \"备注\",\n          dataIndex: \"pay_reason\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"create_time\"\n        }\n      ];\n    } else {\n      return [\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"内容\",\n          dataIndex: \"content\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"created_at\",\n          render: formateDate\n        }\n      ];\n    }\n  };\n}\n\nexport default GoldDetail;\n","import React from \"react\";\nimport { Form, Input, Radio, message } from \"antd\";\nimport { orderWithDrawReview, withDrawRemark } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\n\nclass EditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const data = this.props.editData;\n    let review_status = parseInt(data.review_status);\n    let status = parseInt(data.status);\n    let orderStatusShow,\n      reviewShow,\n      confirmButtonShow,\n      submitRadio,\n      successRadio,\n      failRadio,\n      submitRadioChecked,\n      successRadioChecked,\n      failRadioChecked;\n    switch (status) {\n      case 1:\n        orderStatusShow = true;\n        confirmButtonShow = true;\n        break;\n      case 2:\n        orderStatusShow = true;\n        reviewShow = true;\n        switch (review_status) {\n          case 1:\n            successRadio = true;\n            failRadio = true;\n            submitRadioChecked = true;\n            break;\n          case 2:\n            submitRadio = true;\n            failRadio = true;\n            successRadioChecked = true;\n            break;\n          case 3:\n            successRadio = true;\n            submitRadio = true;\n            failRadioChecked = true;\n            break;\n          default:\n            break;\n        }\n        break;\n      case 3:\n        orderStatusShow = true;\n        confirmButtonShow = true;\n        submitRadio = true;\n        break;\n      default:\n        break;\n    }\n    return (\n      <Form labelCol={{ span: 4 }} labelAlign=\"left\">\n        <Form.Item label=\"订单ID\">\n          <Input\n            style={{ width: \"60%\" }}\n            value={data.order_id}\n            readOnly\n          ></Input>\n        </Form.Item>\n        <Form.Item label=\"用户ID\">\n          <Input style={{ width: \"60%\" }} value={data.user_id} readOnly></Input>\n        </Form.Item>\n        <Form.Item label=\"金额\">\n          <Input style={{ width: \"60%\" }} value={data.amount} readOnly></Input>\n        </Form.Item>\n\n        <Form.Item\n          label=\"订单状态:\"\n          style={orderStatusShow ? {} : { display: \"none\" }}\n        >\n          <Radio.Group\n            defaultValue={review_status}\n            onChange={e => (this.orderStatus = e.target.value)}\n          >\n            <Radio\n              value={1}\n              disabled={submitRadio}\n              checked={submitRadioChecked}\n            >\n              提交第三方\n            </Radio>\n            <Radio\n              value={2}\n              disabled={successRadio}\n              checked={successRadioChecked}\n            >\n              已成功\n            </Radio>\n            <Radio value={3} disabled={failRadio} checked={failRadioChecked}>\n              已失败\n            </Radio>\n          </Radio.Group>\n          <LinkButton\n            onClick={this.sumbitOrderStatus}\n            style={confirmButtonShow ? {} : { display: \"none\" }}\n          >\n            确认\n          </LinkButton>\n        </Form.Item>\n\n        <Form.Item label=\"复审:\" style={reviewShow ? {} : { display: \"none\" }}>\n          <LinkButton\n            onClick={() => {\n              this.review(1);\n            }}\n          >\n            通过\n          </LinkButton>\n          <LinkButton\n            onClick={() => {\n              this.review(2);\n            }}\n          >\n            拒绝\n          </LinkButton>\n        </Form.Item>\n        <Form.Item label=\"备注[用户]\">\n          <Input\n            style={{ width: \"60%\" }}\n            onChange={e => {\n              this.remarkUser = e.target.value;\n            }}\n          ></Input>\n          <LinkButton onClick={this.sumbitRemarkUser}>确认</LinkButton>\n        </Form.Item>\n        <Form.Item label=\"备注[运营]\">\n          <Input\n            style={{ width: \"60%\" }}\n            onChange={e => {\n              this.remarkOperator = e.target.value;\n            }}\n          ></Input>\n          <LinkButton onClick={this.sumbitRemarkOperator}>确认</LinkButton>\n        </Form.Item>\n      </Form>\n    );\n  }\n  sumbitOrderStatus = async () => {\n    const data = this.props.editData;\n    if (!this.orderStatus) {\n      message.error(\"请选择订单状态！\");\n    } else {\n      let reqData = {\n        order_id: data.order_id,\n        review_status: this.orderStatus,\n        user_id: data.user_id,\n        review_type: 1,\n        is_pass: 1\n      };\n      const res = await orderWithDrawReview(reqData);\n      if (res.status === 0) {\n        message.success(res.msg);\n      } else {\n        message.error(\"操作失败\");\n      }\n      this.props.onclose();\n    }\n  };\n  review = async is_pass => {\n    const data = this.props.editData;\n    let reqData = {\n      order_id: data.order_id,\n      review_status: data.review_status,\n      user_id: data.user_id,\n      review_type: 2,\n      is_pass: is_pass\n    };\n    const res = await orderWithDrawReview(reqData);\n    if (res.status === 0) {\n      message.info(res.msg);\n    } else {\n      message.error(\"操作失败\");\n    }\n    this.props.onclose();\n  };\n  sumbitRemarkUser = async () => {\n    console.log(this.remarkUser);\n    const data = this.props.editData;\n    if (!this.remarkUser) {\n      message.error(\"请输入有效内容！\");\n    } else {\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 1);\n      if (res.status === 0) {\n        message.success(res.msg);\n      } else {\n        message.error(res.msg);\n      }\n    }\n  };\n  sumbitRemarkOperator = async () => {\n    console.log(this.remarkOperator);\n    const data = this.props.editData;\n    if (!this.remarkOperator) {\n      message.error(\"请输入有效内容！\");\n    } else {\n      const res = await withDrawRemark(data.order_id, this.remarkOperator, 2);\n      if (res.status === 0) {\n        message.success(res.msg);\n      } else {\n        message.error(res.msg);\n      }\n    }\n  };\n}\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  Icon,\n  Input,\n  Select,\n  Popover,\n  message\n} from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport {\n  withDraw,\n  downloadWithdrawList,\n  userDetail,\n  reviewInfo,\n  remarkInfo,\n  auditOrder\n} from \"../../../api\";\nimport WrappedComponent from \"./details\";\nimport WrappedEdit from \"./edit\";\n\nclass Withdraw_list extends Component {\n  constructor(props) {\n    super(props);\n    this.reqData = {\n      start_time: \"\",\n      end_time: \"\",\n      order_status: \"\",\n      type: \"\"\n    };\n    this.inputKey = \"\";\n    this.inputValue = \"\";\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isBindInfoShow: false,\n      isEditShow: false\n    };\n  }\n  getUsers = async (page, pageSize, reqData) => {\n    const result = await withDraw(page, pageSize, reqData);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: parseInt(result.count)\n      });\n    }\n  };\n  onSearchData = (page, limit) => {\n    //处理要发送的数据\n    let reqData = {\n      flag: 3,\n      ...this.reqData\n    };\n    if (this.inputKey === \"1\" || this.inputKey === \"2\") {\n      reqData.time_type = this.inputKey;\n    } else if (this.inputKey) {\n      reqData[this.inputKey] = this.inputValue;\n    }\n    this.getUsers(page, limit, reqData);\n  };\n  download = () => {\n    downloadWithdrawList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20, { flag: 3 });\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 150 }}\n              onSelect={value => (this.inputKey = value)}\n            >\n              <Select.Option value=\"order_id\">订单id</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n              <Select.Option value=\"1\">创建时间</Select.Option>\n              <Select.Option value=\"2\">到账时间</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Input\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n              style={{ width: 150 }}\n              onChange={e => (this.inputValue = e.target.value)}\n            />\n            &nbsp; &nbsp;\n            <MyDatePicker\n              handleValue={val => {\n                this.reqData.start_time = val[0];\n                this.reqData.end_time = val[1];\n              }}\n            />\n            &nbsp; &nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onSelect={value => (this.reqData.order_status = value)}\n            >\n              <Select.Option value=\"\">订单状态</Select.Option>\n              <Select.Option value=\"1\">待审核</Select.Option>\n              <Select.Option value=\"2\">处理中</Select.Option>\n              <Select.Option value=\"3\">已提交</Select.Option>\n              <Select.Option value=\"4\">已成功</Select.Option>\n              <Select.Option value=\"5\">已失败</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onSelect={value => (this.reqData.type = value)}\n            >\n              <Select.Option value=\"\">兑换方式</Select.Option>\n              <Select.Option value=\"1\">alipay</Select.Option>\n              <Select.Option value=\"2\">bank</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <LinkButton onClick={() => this.onSearchData(1, 20)} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => {\n                window.location.reload();\n              }}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.onSearchData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.onSearchData(current, size);\n            }\n          }}\n          scroll={{ x: 3000 }}\n        />\n        <Modal\n          title={\n            this.action === \"check\"\n              ? \"审核信息\"\n              : this.action === \"risk\"\n              ? \"资金明细\"\n              : \"运营备注\"\n          }\n          visible={this.state.isDetailShow}\n          onCancel={() => {\n            this.setState({ isDetailShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <WrappedComponent\n            detailRecord={this.detailRecord}\n            action={this.action}\n          />\n        </Modal>\n        {this.state.isEditShow && (\n          <Modal\n            title=\"编辑\"\n            visible={this.state.isEditShow}\n            onCancel={() => {\n              this.setState({ isEditShow: false });\n            }}\n            footer={null}\n            width=\"50%\"\n          >\n            <WrappedEdit\n              editData={this.editData}\n              onclose={() => {\n                this.setState({ isEditShow: false });\n                this.onSearchData();\n                // window.location.reload();\n              }}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 330\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\"\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\"\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\"\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"申请费率\",\n      dataIndex: \"handling_fee\"\n    },\n    {\n      title: \"实际费率\",\n      dataIndex: \"gold\"\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"兑换方式\",\n      dataIndex: \"order_type\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"待审核\";\n            break;\n          case \"2\":\n            word = \"处理中\";\n            break;\n          case \"3\":\n            word = \"已提交\";\n            break;\n          case \"4\":\n            word = \"已成功\";\n            break;\n          case \"5\":\n            word = \"已失败\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 120,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"兑换账号\",\n      dataIndex: \"pay_account\",\n      width: 250\n    },\n    {\n      title: \"账号名称\",\n      dataIndex: \"pay_name\"\n    },\n\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 200,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 200,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"风控\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton\n            onClick={() => this.getDetail(record, \"risk\")}\n            type=\"default\"\n          >\n            风控\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"审核详情\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton\n            onClick={() => this.getDetail(record, \"check\")}\n            type=\"default\"\n          >\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"备注内容\",\n      dataIndex: \"\",\n      width: 200,\n      render: record => (\n        <span>\n          <Popover\n            content={record.user_remark}\n            title={record.user_id + \"用户备注\"}\n            trigger=\"click\"\n          >\n            <LinkButton type=\"default\">用户备注</LinkButton>\n          </Popover>\n          <LinkButton\n            onClick={() => this.getDetail(record, \"operatorRemark\")}\n            type=\"default\"\n          >\n            运营备注\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  getDetail = async (record, action) => {\n    this.action = action;\n    this.detailRecord = {\n      data: [],\n      count: 0,\n      id: record.user_id\n    };\n    const res =\n      action === \"risk\"\n        ? await userDetail(1, 20, record.user_id)\n        : action === \"check\"\n        ? await reviewInfo(1, 20, record.order_id)\n        : await remarkInfo(1, 20, record.order_id);\n    if (res.status === 0) {\n      this.detailRecord.data = res.data;\n      this.detailRecord.count = res.count;\n    }\n    this.setState({ isDetailShow: true });\n  };\n  edit = async record => {\n    let reqData = {\n      flag: 3,\n      order_id: record.order_id\n    };\n    const res = await auditOrder(reqData);\n    if (res.status === 0) {\n      this.editData = res.data[0];\n      this.setState({ isEditShow: true });\n    } else {\n      message.error(\"操作失败\");\n    }\n  };\n}\n\nexport default Withdraw_list;\n","import React, { Component } from \"react\";\nimport { Progress } from \"antd\";\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/addon/lint/lint.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/mode/javascript/javascript.js\";\nimport \"codemirror/addon/lint/lint.js\";\nimport \"codemirror/addon/lint/json-lint.js\";\nimport \"codemirror/theme/rubyblue.css\";\n\nexport class MyProgress extends React.Component {\n  state = {\n    percent: 0\n  };\n  handle;\n  render() {\n    return (\n      <Progress\n        type=\"circle\"\n        strokeColor={{\n          \"0%\": \"#108ee9\",\n          \"100%\": \"#87d068\"\n        }}\n        percent={this.state.percent}\n      />\n    );\n  }\n}\nconst options = {\n  lineNumbers: true, //显示行号\n  mode: { name: \"javascript\", json: true }, //定义mode\n  theme: \"rubyblue\" //选中的theme\n};\nexport class CodeEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const conf_val = JSON.stringify([JSON.parse(this.props.conf_val)], null, 2);\n    //使用默认传过来的onChange事件\n    const { onChange } = this.props;\n    return (\n      <div className=\"json-editor\">\n        <CodeMirror\n          // ref=\"editor-sql\"\n          value={conf_val}\n          onChange={(editor, data, value) => {\n            //返回value值给edit中的form\n            return onChange(JSON.stringify(JSON.parse(value)[0]));\n          }}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { saveConf } from \"../../../api/index\";\nimport { CodeEditor } from \"../../../components/myComponents\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  let getValueFromEvent = e => {\n    console.log(\"Upload event:\", e);\n    // if (Array.isArray(e)) {\n    //   return e;\n    // }\n    // return e && e.fileList;\n  };\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      console.log(value);\n      if (!err) {\n        if (props.action === \"edit\") {\n          value.id = record.id;\n        }\n        const res = await saveConf(value, props.action);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <Form labelCol={{ span: 3 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\n      <Form.Item label=\"配置名\">\n        {getFieldDecorator(\"name\", {\n          rules: [{ required: true, message: \"请输入配置名\" }],\n          initialValue: props.action === \"add\" ? \"\" : props.record.name\n        })(<Input style={{ width: \"50%\" }} />)}\n      </Form.Item>\n      <Form.Item label=\"配置Key\">\n        {getFieldDecorator(\"conf_key\", {\n          rules: [{ required: true, message: \"请输入配置Key\" }],\n          initialValue: props.action === \"add\" ? \"\" : props.record.conf_key\n        })(<Input style={{ width: \"50%\" }} />)}\n      </Form.Item>\n      <Form.Item label=\"配置Val\">\n        {getFieldDecorator(\"conf_val\", {\n          rules: [{ required: true, message: \"请输入配置Val\" }]\n        })(\n          props.action === \"add\" ? (\n            <Input style={{ width: \"50%\" }} />\n          ) : (\n            <CodeEditor conf_val={props.record.conf_val} />\n          )\n        )}\n        <span style={props.action === \"add\" ? { display: \"none\" } : {}}>\n          请注意首尾中括号【】为代码编辑器携带符号，实际参数不带首尾中括号,请勿修改删除【】\n        </span>\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Popconfirm,\n  Button\n} from \"antd\";\nimport { configList, saveConf } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass Config extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await configList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Input\n              style={{ width: 120 }}\n              placeholder=\"请输入配置Key\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              size=\"default\"\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton type=\"primary\" onClick={this.onAdd} size=\"default\">\n              添加\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          // scroll={{ y: \"100%\" }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"add\" ? \"添加配置\" : \"编辑配置\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n            width=\"50%\"\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"配置名\",\n      dataIndex: \"name\"\n    },\n    {\n      title: \"配置Key\",\n      dataIndex: \"conf_key\"\n    },\n    {\n      title: \"配置值\",\n      dataIndex: \"conf_val\",\n      width: 600\n    },\n    {\n      title: \"更新时间\",\n      dataIndex: \"created_at\",\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\n            编辑\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.onDelete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <Button type=\"danger\" size=\"small\">\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let conf_key = this.input.input.value;\n    const res = await configList(1, 20, conf_key);\n    this.setState({ data: res.data, count: res.count });\n  };\n  onDelete = async record => {\n    let res = await saveConf({ id: record.id }, \"del\");\n    if (res.status === 0) {\n      message.success(\"删除成功:\" + res.msg);\n      this.getInitialData(this.state.page, this.state.pageSize);\n    } else {\n      message.error(\"出错了：\" + res.msg);\n    }\n  };\n  onAdd = async () => {\n    this.action = \"add\";\n    this.setState({\n      isEditFormShow: true\n    });\n  };\n  edit = async record => {\n    this.action = \"edit\";\n    this.editDataRecord = record;\n    this.setState({\n      isEditFormShow: true\n    });\n  };\n}\nexport default Config;\n","import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { changeUserBalance } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  let params = JSON.parse(record.params);\n\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        let obj = {\n          \"data[id]\": record.id,\n          \"data[params]\": record.params,\n          \"data[status]\": 2\n        };\n        if (props.action === \"review\") {\n          obj[\"data[pay_reason]\"] = value.reason;\n          obj[\"data[status]\"] = 1;\n        }\n        const res = await changeUserBalance(obj);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <div>\n      <span>\n        ID:{params.user_id} 资金变动：{params.amount} 复审\n        {props.action === \"review\" ? \"备注\" : \"拒绝\"}\n      </span>\n      <Form\n        labelCol={{ span: 4 }}\n        labelAlign=\"left\"\n        onSubmit={handleEditSubmit}\n      >\n        <Form.Item\n          style={{ display: props.action === \"review\" ? \"block\" : \"none\" }}\n        >\n          {getFieldDecorator(\"reason\", {\n            initialValue: params.reason\n          })(<Input.TextArea autosize={{ minRows: 5, maxRows: 10 }} />)}\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Popconfirm,\n  Button,\n  Select\n} from \"antd\";\nimport { tasksList, saveConf, reviewTask } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await tasksList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.start_time = val[0];\n                this.end_time = val[1];\n              }}\n            ></MyDatePicker>\n            &nbsp;&nbsp;&nbsp;\n            <Select\n              placeholder=\"任务状态\"\n              style={{ width: 150 }}\n              onChange={value => (this.status = value)}\n            >\n              <Select.Option value=\"0\">待操作</Select.Option>\n              <Select.Option value=\"1\">已复审</Select.Option>\n              <Select.Option value=\"2\">复审拒绝</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入创建人昵称\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n              size=\"normal\"\n            ></LinkButton>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size=\"normal\">\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState(\n                {\n                  page: page\n                },\n                () => {\n                  this.onSearch();\n                }\n              );\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState(\n                {\n                  pageSize: size\n                },\n                () => {\n                  this.onSearch();\n                }\n              );\n            }\n          }}\n          scroll={{ x: 1400 }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"review\" ? \"复审\" : \"拒绝\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"任务ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"任务信息\",\n      dataIndex: \"params\",\n      width: 500,\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"任务来源\",\n      dataIndex: \"task_type\",\n      width: 150,\n      render: (text, record, index) => (\n        <span>\n          {parseInt(text) === 0\n            ? \"用户列表资金变动\"\n            : parseInt(text) === 1\n            ? \"代理配置列表资金变动\"\n            : parseInt(text) === 2\n            ? \"用户重置密码\"\n            : \"\"}\n        </span>\n      )\n    },\n    {\n      title: \"创建人昵称\",\n      dataIndex: \"operator_nick\"\n    },\n    {\n      title: \"复审人昵称\",\n      dataIndex: \"review_nick\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 200\n    },\n    {\n      title: \"更新时间\",\n      dataIndex: \"updated_at\",\n      width: 200\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      render: (text, record, index) => {\n        let res;\n        switch (text) {\n          case 0:\n            res = (\n              <div>\n                <LinkButton size=\"small\" onClick={() => this.review(record)}>\n                  复审\n                </LinkButton>\n                <LinkButton\n                  size=\"small\"\n                  type=\"danger\"\n                  onClick={() => this.refuse(record)}\n                >\n                  拒绝\n                </LinkButton>\n              </div>\n            );\n            break;\n          case 1:\n            res = <LinkButton size=\"small\">已复审</LinkButton>;\n            break;\n          case 2:\n            res = (\n              <LinkButton size=\"small\" type=\"danger\">\n                复审拒绝\n              </LinkButton>\n            );\n            break;\n          default:\n            break;\n        }\n        return res;\n      }\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      start_time: this.start_time || \"\",\n      end_time: this.end_time || \"\",\n      // status: this.status || \"\",\n      operator_nick: this.input.input.value || \"\"\n    };\n    if (this.status) {\n      value.status = this.status;\n    }\n    const res = await tasksList(this.state.page, this.state.pageSize, value);\n    this.setState({ data: res.data, count: res.count });\n  };\n  review = async record => {\n    if (record.task_type === 2) {\n      let value = {\n        id: record.id,\n        params: record.params,\n        status: 1\n      };\n      const res = await reviewTask(value);\n      if (res.status === 0) {\n        message.success(\"提交成功\" + res.msg);\n        this.onSearch();\n      } else {\n        message.error(\"出错了：\" + res.msg);\n      }\n    } else {\n      this.action = \"review\";\n      this.editDataRecord = record;\n      this.setState({ isEditFormShow: true });\n    }\n  };\n  refuse = async record => {\n    if (record.task_type === 2) {\n      let value = {\n        id: record.id,\n        params: record.params,\n        status: 2\n      };\n      const res = await reviewTask(value);\n      if (res.status === 0) {\n        message.success(\"提交成功\" + res.msg);\n        this.onSearch();\n      } else {\n        message.error(\"出错了：\" + res.msg);\n      }\n    } else {\n      this.action = \"refuse\";\n      this.editDataRecord = record;\n      this.setState({ isEditFormShow: true });\n    }\n  };\n}\nexport default Tasks;\n","import React from \"react\";\nimport { Modal, Table } from \"antd\";\nimport {} from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport QRCode from \"qrcode.react\";\n\nconst EditForm = props => {\n  const data = props.record;\n  function checkQrcode(record) {\n    Modal.success({\n      title: \"收款码\",\n      content: (<div><QRCode value={record.pay_url}></QRCode></div>),\n      width: 250\n    });\n  }\n  let initColumns = [\n    {\n      title: \"账号类型\",\n      dataIndex: \"type\",\n      render: (text, record, index) => {\n        let res;\n        switch (text) {\n          case 1:\n            res = \"微信\";\n            break;\n          case 2:\n            res = \"alipay\";\n            break;\n          case 3:\n            res = \"银行卡\";\n            break;\n          case 4:\n            res = \"花呗\";\n            break;\n          case 5:\n            res = \"信用卡\";\n            break;\n          default:\n            res = \"\";\n            break;\n        }\n        return <span>{res}</span>;\n      }\n    },\n    {\n      title: \"账户名\",\n      dataIndex: \"account_name\"\n    },\n    {\n      title: \"账号\",\n      dataIndex: \"account_num\"\n    },\n    {\n      title: \"开户行\",\n      dataIndex: \"bank_name\"\n    },\n    {\n      title: \"收款码\",\n      dataIndex: \"pay_url\",\n      render: (text, record, index) => {\n        if (text && text.length > 0) {\n          return (\n            <LinkButton onClick={() => checkQrcode(record)}>预览</LinkButton>\n          );\n        }\n      }\n    },\n    {\n      title: \"状态[收款码审核]\",\n      dataIndex: \"status\"\n    },\n    {\n      title: \"绑定时间\",\n      dataIndex: \"created_at\"\n    },\n    {\n      title: \"修改时间\",\n      dataIndex: \"updated_at\"\n    }\n  ];\n  return (\n    <Table\n      bordered\n      rowKey={(record, index) => `${index}`}\n      dataSource={data}\n      columns={initColumns}\n      size=\"small\"\n    />\n  );\n};\n\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message,  Input, Select } from \"antd\";\nimport { allAccountList, resetPassword, accountList } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\n\nclass AccountList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await allAccountList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Select defaultValue=\"user_id\" style={{ width: 150 }}>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入user_id\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n            />\n            {/* <br />\n            <br />\n            <LinkButton style={{ float: \"right\" }} onClick={this.download} icon=\"download\">\n            </LinkButton> */}\n          </span>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          // scroll={{ x: 1800 }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title=\"绑定收付款账户详情\"\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            width=\"60%\"\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\"\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\"\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\"\n    },\n    {\n      title: \"资金密码操作\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <LinkButton\n          size=\"small\"\n          onClick={() => {\n            this.resetPassword(record);\n          }}\n        >\n          重置\n        </LinkButton>\n      )\n    },\n    {\n      title: \"绑定账号\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <LinkButton\n          size=\"small\"\n          onClick={() => {\n            this.checkAccount(record);\n          }}\n        >\n          查看\n        </LinkButton>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      user_id: this.input.input.value\n    };\n    const res = await allAccountList(\n      this.state.page,\n      this.state.pageSize,\n      value\n    );\n    this.setState({ data: res.data, count: parseInt(res.count) });\n  };\n  resetPassword = async record => {\n    const res = await resetPassword(record.user_id);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n  };\n  checkAccount = async record => {\n    const res = await accountList(record.user_id);\n    this.editDataRecord = res.data;\n    if (res.status !== 0) {\n      message.error(res.msg);\n    }\n    this.setState({ isEditFormShow: true });\n  };\n  // download=async()=>{\n\n  // }\n}\nexport default AccountList;\n","import React from \"react\";\nimport { Table } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nconst EditForm = props => {\n  const data = props.record||[];\n  const action = props.action;\n  let initColumns = [];\n  switch (action) {\n    case \"detail\":\n      initColumns = [\n        {\n          title: \"user_id\",\n          dataIndex: \"user_id\"\n        },\n        {\n          title: \"申请数量\",\n          dataIndex: \"\"\n        },\n        {\n          title: \"成交数量\",\n          dataIndex: \"\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"\"\n        }\n      ];\n      break;\n    case \"check\":\n      initColumns = [\n        {\n          title: \"审核人\",\n          dataIndex: \"review_name\"\n        },\n        {\n          title: \"审核时间\",\n          dataIndex: \"review_at\",\n          render: formateDate\n        }\n      ];\n      break;\n    case \"operatorRemark\":\n      initColumns = [\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"内容\",\n          dataIndex: \"content\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"created_at\",\n          render: formateDate\n        }\n      ];\n      break;\n    default:\n      break;\n  }\n  return (\n    <Table\n      bordered\n      rowKey={(record, index) => `${index}`}\n      dataSource={data}\n      columns={initColumns}\n      size=\"small\"\n    />\n  );\n};\n\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Select\n} from \"antd\";\nimport {\n  sellGoldApplyList,\n  tradeRemark,\n  sellGoldInfoList,\n  reviewInfo2,\n  remarkInfo2\n} from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false,\n    };\n    this.filed = \"id\";\n  }\n  getInitialData = async (page, limit) => {\n    const res = await sellGoldApplyList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.start_time = val[0];\n                this.end_time = val[1];\n              }}\n            ></MyDatePicker>\n            &nbsp;&nbsp;&nbsp;\n            <Select\n              defaultValue=\"id\"\n              style={{ width: 150 }}\n              onChange={value => (this.filed = value)}\n            >\n              <Select.Option value=\"id\">ID</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n              <Select.Option value=\"source\">所属代理</Select.Option>\n              <Select.Option value=\"group\">所属品牌</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入关键字搜索\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onChange={value => (this.status = value)}\n            >\n              <Select.Option value=\"\">状态</Select.Option>\n              <Select.Option value=\"1\">待初审</Select.Option>\n              <Select.Option value=\"2\">初审通过</Select.Option>\n              <Select.Option value=\"3\">初审拒绝</Select.Option>\n              <Select.Option value=\"4\">复审通过</Select.Option>\n              <Select.Option value=\"5\">复审拒绝</Select.Option>\n              <Select.Option value=\"6\">已下架</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()}>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: parseInt(this.state.count),\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          scroll={{ x: 1800 }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={\n              this.action === \"detail\"\n                ? \"详情\"\n                : this.action === \"check\"\n                ? \"审核详情\"\n                : \"运营备注详情\"\n            }\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 150\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\"\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\"\n    },\n    {\n      title: \"兑换单价\",\n      dataIndex: \"exchange_price\"\n    },\n    {\n      title: \"上架金币数\",\n      dataIndex: \"gold\"\n    },\n    {\n      title: \"上架金币余额\",\n      dataIndex: \"last_gold\"\n    },\n    {\n      title: \"最低兑换额\",\n      dataIndex: \"min_gold\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      render: (text, record, index) => {\n        let res;\n        switch (parseInt(text)) {\n          case 1:\n            res = (\n              <span>\n                <LinkButton size=\"small\">初审通过</LinkButton>\n                <LinkButton size=\"small\">初审拒绝</LinkButton>\n              </span>\n            );\n            break;\n          case 2:\n            res = (\n              <span>\n                <LinkButton size=\"small\">复审通过</LinkButton>\n                <LinkButton size=\"small\">复审拒绝</LinkButton>\n              </span>\n            );\n            break;\n          case 3:\n            res = <span>一审拒绝</span>;\n            break;\n          case 4:\n            res = <span>已上架</span>;\n            break;\n          case 5:\n            res = <span>二审拒绝</span>;\n            break;\n          case 6:\n            res = <span>已下架</span>;\n            break;\n          default:\n            break;\n        }\n        return res;\n      }\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      render: formateDate\n    },\n    {\n      title: \"风控\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton size=\"small\" type=\"dashed\">\n            风控\n          </LinkButton>\n          <LinkButton size=\"small\" type=\"dashed\">\n            游戏数据\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton size=\"small\" onClick={() => this.edit(record)}>\n            编辑\n          </LinkButton>\n          <LinkButton size=\"small\" onClick={() => this.checkDetail(record, \"detail\")}>\n            详情\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"审核详情\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            type=\"default\"\n            onClick={() => this.checkDetail(record, \"check\")}\n          >\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"备注内容\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            type=\"default\"\n            onClick={() => this.checkDetail(record, \"userRemark\")}\n          >\n            用户备注\n          </LinkButton>\n          <LinkButton\n            size=\"small\"\n            type=\"default\"\n            onClick={() => this.checkDetail(record, \"operatorRemark\")}\n          >\n            运营备注\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      end_time: this.start_time || \"\",\n      start_time: this.start_time || \"\",\n      status: this.status || \"\",\n      [this.filed]: this.input.input.value\n    };\n    const res = await sellGoldApplyList(\n      this.state.page,\n      this.state.pageSize,\n      value\n    );\n    this.setState({ data: res.data, count: res.count });\n  };\n  edit = async record => {\n    Modal.info({\n      title: \"编辑\",\n      okText: \"关闭\",\n      okType: \"default\",\n      width: \"50%\",\n      content: (\n        <div>\n          <div>\n            <span>备注[用户]&nbsp;&nbsp;&nbsp;</span>\n            <Input\n              style={{ width: \"60%\" }}\n              placeholder=\"请输入备注内容，用户查看使用\"\n              ref={Input => {\n                this.userRemarkInput = Input;\n              }}\n            />\n            <span>&nbsp;&nbsp;&nbsp;</span>\n            <LinkButton\n              onClick={() => {\n                this.editComfirm(record, 1);\n              }}\n            >\n              确定\n            </LinkButton>\n          </div>\n          <br />\n          <div>\n            <span>备注[运营]&nbsp;&nbsp;&nbsp;</span>\n            <Input\n              style={{ width: \"60%\" }}\n              placeholder=\"请输入备注内容，运营人员记录使用\"\n              ref={Input => {\n                this.operatorRemarkInput = Input;\n              }}\n            />\n            <span>&nbsp;&nbsp;&nbsp;</span>\n            <LinkButton\n              onClick={() => {\n                this.editComfirm(record, 2);\n              }}\n            >\n              确定\n            </LinkButton>\n          </div>\n        </div>\n      )\n    });\n  };\n  editComfirm = async (record, remark_type) => {\n    let value = {\n      id: record.id,\n      temarks:\n        remark_type === 1\n          ? this.userRemarkInput.input.value\n          : this.operatorRemarkInput.input.value,\n      remark_type: remark_type\n    };\n    if (remark_type === 2) {\n      value.type = 6;\n    }\n    const res = await tradeRemark(value);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n  };\n  checkDetail = async (record, action) => {\n    if (action === \"userRemark\") {\n      Modal.info({\n        title: `订单ID为【${record.id}】的用户备注`,\n        content: <div>{record.user_remark||'无'}</div>,\n        okText:'关闭'\n      });\n    } else {\n      let res;\n      switch (action) {\n        case \"detail\":\n          res = await sellGoldInfoList(1, 100, record.id);\n          break;\n        case \"check\":\n          res = await reviewInfo2(1, 100, record.id);\n          break;\n        case \"operatorRemark\":\n          res = await remarkInfo2(1, 100, record.id);\n          break;\n        default:\n          break;\n      }\n      this.editDataRecord = res.data;\n      this.action = action;\n      this.setState({ isEditFormShow: true });\n    }\n  };\n}\nexport default Tasks;\n","import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { changeUserBalance } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  let params = JSON.parse(record.params);\n\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        let obj = {\n          \"data[id]\": record.id,\n          \"data[params]\": record.params,\n          \"data[status]\": 2\n        };\n        if (props.action === \"review\") {\n          obj[\"data[pay_reason]\"] = value.reason;\n          obj[\"data[status]\"] = 1;\n        }\n        const res = await changeUserBalance(obj);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <div>\n      <span>\n        ID:{params.user_id} 资金变动：{params.amount} 复审\n        {props.action === \"review\" ? \"备注\" : \"拒绝\"}\n      </span>\n      <Form\n        labelCol={{ span: 4 }}\n        labelAlign=\"left\"\n        onSubmit={handleEditSubmit}\n      >\n        <Form.Item\n          style={{ display: props.action === \"review\" ? \"block\" : \"none\" }}\n        >\n          {getFieldDecorator(\"reason\", {\n            initialValue: params.reason\n          })(<Input.TextArea autosize={{ minRows: 5, maxRows: 10 }} />)}\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input, Select } from \"antd\";\nimport { sellGoldOrderList } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await sellGoldOrderList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } \n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.start_time = val[0];\n                this.end_time = val[1];\n              }}\n            ></MyDatePicker>\n            &nbsp;&nbsp;&nbsp;\n            <Select\n              placeholder=\"任务状态\"\n              style={{ width: 150 }}\n              onChange={value => (this.status = value)}\n            >\n              <Select.Option value=\"0\">待操作</Select.Option>\n              <Select.Option value=\"1\">已复审</Select.Option>\n              <Select.Option value=\"2\">复审拒绝</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入创建人昵称\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()}>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          scroll={{ x: 1800 }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"review\" ? \"复审\" : \"拒绝\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"买家ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"买家昵称\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"卖家ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"卖家昵称\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"兑换单价\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"支付金额\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"兑换金额\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"完成时间\",\n      dataIndex: \"\"\n    }\n  ];\n  // onSearch = async () => {\n  //   let value = {\n  //     end_time: this.start_time || \"\",\n  //     start_time: this.start_time || \"\",\n  //     status: this.status || \"\",\n  //     operator_nick: this.input.input.value || \"\"\n  //   };\n  //   const res = await tasksList(this.state.page, this.state.pageSize, value);\n  //   this.setState({ data: res.data, count: res.count });\n  // };\n  review = async record => {\n    this.action = \"review\";\n    this.editDataRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n  refuse = async record => {\n    this.action = \"refuse\";\n    this.editDataRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n}\nexport default Tasks;\n","import React from \"react\";\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\nimport { saveActivityConfig } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  const action = props.action;\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        if (action === \"edit\") {\n          value.id = record.id;\n        }\n        const res = await saveActivityConfig(value);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <div>\n      <Form\n        labelCol={{ span: 6 }}\n        labelAlign=\"left\"\n        onSubmit={handleEditSubmit}\n      >\n        <Form.Item label=\"活动名称\">\n          {getFieldDecorator(\"name\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.name\n          })(<Input style={{ width: \"40%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"品牌\">\n          {getFieldDecorator(\"package_id\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.package_id\n          })(\n            <Select style={{ width: \"40%\" }}>\n              <Select.Option value=\"1\">博臣娱乐</Select.Option>\n              <Select.Option value=\"2\">机器人首领</Select.Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"状态\">\n          {getFieldDecorator(\"is_close\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.is_close\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">关闭</Radio>\n              <Radio value=\"2\">开启</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"需要绑定电话\">\n          {getFieldDecorator(\"need_mobile\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.need_mobile\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">是</Radio>\n              <Radio value=\"2\">否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"需要绑定银行卡\">\n          {getFieldDecorator(\"need_bankcard\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.need_bankcard\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">是</Radio>\n              <Radio value=\"2\">否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"排序\">\n          {getFieldDecorator(\"order_by\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.order_by\n          })(<Input style={{ width: \"40%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"活动内容\">\n          {getFieldDecorator(\"info\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.info\n          })(\n            <Input.TextArea\n              style={{ width: \"70%\" }}\n              autosize={{ maxRows: 10 }}\n            />\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Input, Popconfirm } from \"antd\";\nimport { activityConfigList, delActivityConfig } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport WrappedEditForm from \"./editForm\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass AccountList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await activityConfigList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.setState({\n                  start_time: val[0],\n                  end_time: val[1]\n                });\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入活动id\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              onClick={this.onSearch}\n              icon=\"search\"\n              size=\"default\"\n            ></LinkButton>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton onClick={this.add} size=\"default\">\n              添加\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"add\" ? \"添加\" : \"编辑\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"活动名称\",\n      dataIndex: \"name\"\n    },\n    {\n      title: \"品牌ID\",\n      dataIndex: \"package_id\"\n    },\n    {\n      title: \"活动状态\",\n      dataIndex: \"is_close\",\n      render: text => <span>{text === \"1\" ? \"关闭\" : \"开启\"}</span>\n    },\n    {\n      title: \"需要绑定电话\",\n      dataIndex: \"need_mobile\",\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"需要绑定银行卡\",\n      dataIndex: \"need_bankcard\",\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"活动内容\",\n      dataIndex: \"info\",\n      width: 600\n    },\n    {\n      title: \"排序\",\n      dataIndex: \"order_by\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            onClick={() => {\n              this.edit(record);\n            }}\n          >\n            编辑\n          </LinkButton>\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.delete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <LinkButton type=\"danger\" size=\"small\">\n              删除\n            </LinkButton>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      user_id: this.input.input.value\n    };\n    const res = await activityConfigList(\n      this.state.page,\n      this.state.pageSize,\n      value\n    );\n    this.setState({ data: res.data, count: parseInt(res.count) });\n  };\n  add = async record => {\n    this.action = \"add\";\n    this.setState({ isEditFormShow: true });\n  };\n  edit = async record => {\n    this.action = \"edit\";\n    this.editDataRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n  delete = async record => {\n    const res = await delActivityConfig(record.id);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n    this.getInitialData(1, 20);\n  };\n}\nexport default AccountList;\n","import React, { Component } from \"react\";\nimport { Card, Table, message, Input, Popconfirm, Modal } from \"antd\";\nimport { activityList } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass AccountList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await activityList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(\"接口异常,未检索到数据\");\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.start_time = val[0];\n                this.end_time = val[1];\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入user_id\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              onClick={this.onSearch}\n              icon=\"search\"\n              size=\"default\"\n            ></LinkButton>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton onClick={this.add} size=\"default\">\n              添加\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n        />\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\"\n    },\n    {\n      title: \"活动Id\",\n      dataIndex: \"activity_id\"\n    },\n    {\n      title: \"活动名称\",\n      dataIndex: \"activity_name\"\n    },\n    {\n      title: \"品牌Id\",\n      dataIndex: \"package_id\"\n    },\n    {\n      title: \"领取日期\",\n      dataIndex: \"receive_date\"\n    },\n    {\n      title: \"领取详情\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            onClick={() => {\n              this.check(record);\n            }}\n          >\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      render: formateDate\n    }\n  ];\n  check = record => {\n    Modal.info({\n      title: \"领取详情\",\n      content: record.receive_info\n    });\n  };\n  onSearch = async () => {\n    let value = {\n      user_id: this.input.input.value,\n      start_time: this.start_time,\n      end_time: this.end_time\n    };\n    const res = await activityList(this.state.page, this.state.pageSize, value);\n    if (res.status === 0) {\n      this.setState({ data: res.data, count: parseInt(res.count) });\n    } else {\n      message.error(\"接口异常,未检索到数据\");\n    }\n  };\n}\nexport default AccountList;\n","import React from \"react\";\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\nimport { saveActivityConfig } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  const action = props.action;\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        if (action === \"edit\") {\n          value.id = record.id;\n        }\n        const res = await saveActivityConfig(value);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <div>\n      <Form\n        labelCol={{ span: 6 }}\n        labelAlign=\"left\"\n        onSubmit={handleEditSubmit}\n      >\n        <Form.Item label=\"活动名称\">\n          {getFieldDecorator(\"name\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.name\n          })(<Input style={{ width: \"40%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"品牌\">\n          {getFieldDecorator(\"package_id\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.package_id\n          })(\n            <Select style={{ width: \"40%\" }}>\n              <Select.Option value=\"1\">博臣娱乐</Select.Option>\n              <Select.Option value=\"2\">机器人首领</Select.Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"状态\">\n          {getFieldDecorator(\"is_close\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.is_close\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">关闭</Radio>\n              <Radio value=\"2\">开启</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"需要绑定电话\">\n          {getFieldDecorator(\"need_mobile\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.need_mobile\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">是</Radio>\n              <Radio value=\"2\">否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"需要绑定银行卡\">\n          {getFieldDecorator(\"need_bankcard\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.need_bankcard\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">是</Radio>\n              <Radio value=\"2\">否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"排序\">\n          {getFieldDecorator(\"order_by\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.order_by\n          })(<Input style={{ width: \"40%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"活动内容\">\n          {getFieldDecorator(\"info\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.info\n          })(\n            <Input.TextArea\n              style={{ width: \"70%\" }}\n              autosize={{ maxRows: 10 }}\n            />\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Input, Popconfirm } from \"antd\";\nimport { giftVoucherList, delActivityConfig } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport WrappedEditForm from \"./editForm\";\n\nclass AccountList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await giftVoucherList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(\"接口异常,未检索到数据\");\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.setState({\n                  start_time: val[0],\n                  end_time: val[1]\n                });\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入活动id\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              onClick={this.onSearch}\n              icon=\"search\"\n              size=\"default\"\n            ></LinkButton>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton onClick={this.add} size=\"default\">\n              添加\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"add\" ? \"添加\" : \"编辑\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"领取人ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"领取人昵称\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"代理ID\",\n      dataIndex: \"\",\n      render: text => <span>{text === \"1\" ? \"关闭\" : \"开启\"}</span>\n    },\n    {\n      title: \"code\",\n      dataIndex: \"\",\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"领取金额\",\n      dataIndex: \"\",\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"\",\n      width: 200\n    },\n    {\n      title: \"领取时间\",\n      dataIndex: \"order_by\"\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            onClick={() => {\n              this.edit(record);\n            }}\n          >\n            编辑\n          </LinkButton>\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.delete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <LinkButton type=\"danger\" size=\"small\">\n              删除\n            </LinkButton>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      user_id: this.input.input.value\n    };\n    const res = await giftVoucherList(\n      this.state.page,\n      this.state.pageSize,\n      value\n    );\n    this.setState({ data: res.data, count: parseInt(res.count) });\n  };\n  add = async record => {\n    this.action = \"add\";\n    this.setState({ isEditFormShow: true });\n  };\n  edit = async record => {\n    this.action = \"edit\";\n    this.editDataRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n  delete = async record => {\n    const res = await delActivityConfig(record.id);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n    this.getInitialData(1, 20);\n  };\n}\nexport default AccountList;\n","import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass GoldDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { data } = this.props.detailRecord;\n    console.log(data);\n\n    return (\n      <Table\n        bordered\n        rowKey={(record,index)=>`${index}`}\n        dataSource={data}\n        columns={this.initColumns()}\n        size=\"small\"\n      />\n    );\n  }\n  initColumns = () => {\n    if (this.props.action === \"check\") {\n      return [\n        {\n          title: \"审核人\",\n          dataIndex: \"review_name\"\n        },\n        {\n          title: \"审核时间\",\n          dataIndex: \"review_at\",\n          render: formateDate\n        }\n      ];\n    } else if (this.props.action === \"risk\") {\n      return [\n        {\n          title: \"user_id\",\n          dataIndex: \"id\"\n        },\n        {\n          title: \"产生来源\",\n          dataIndex: \"pay_account_name\"\n        },\n\n        {\n          title: \"余额(变动前)\",\n          dataIndex: \"total_balance\"\n        },\n        {\n          title: \"变动金额\",\n          dataIndex: \"final_pay\",\n\n          sorter: (a, b) => a.total_balance - b.total_balance\n        },\n        {\n          title: \"税收\",\n          dataIndex: \"tax\"\n        },\n        {\n          title: \"余额(变动后)\",\n          dataIndex: \"total_final_balance\"\n        },\n        {\n          title: \"备注\",\n          dataIndex: \"pay_reason\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"create_time\"\n        }\n      ];\n    } else {\n      return [\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"内容\",\n          dataIndex: \"content\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"created_at\",\n          render: formateDate\n        }\n      ];\n    }\n  };\n}\n\nexport default GoldDetail;\n","import React, { Component } from \"react\";\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\nimport { withDrawReview } from \"../../../api/index\";\nclass EditForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      review_status: \"\"\n    };\n  }\n  render() {\n    const record = this.props.record;\n    return (\n      <div>\n        <div>订单ID:{record.order_id}</div>\n        <div>用户ID:{record.user_id}</div>\n        <div>金额:{record.amount}</div>\n        <div>\n          订单状态:\n          <Radio.Group\n            onChange={e => {\n              this.setState({ review_status: e.target.value });\n            }}\n            value={this.state.review_status}\n          >\n            <Radio value={2}>已成功</Radio>\n            <Radio value={3}>已失败</Radio>\n          </Radio.Group>\n          <Button onClick={() => this.orderStatus(record)}>确认</Button>\n        </div>\n      </div>\n    );\n  }\n  orderStatus = async record => {\n    const res = await withDrawReview(\n      record.order_id,\n      record.user_id,\n      this.state.review_status\n    );\n    message.info(res.msg);\n  };\n}\n\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, Icon, Input, Select, Popover } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport {\n  withDraw,\n  downloadWithdrawList,\n  userDetail,\n  reviewInfo,\n  remarkInfo\n} from \"../../../api\";\nimport WrappedComponent from \"./details\";\nimport EditForm from \"./editForm\";\n\nclass Withdraw_list extends Component {\n  constructor(props) {\n    super(props);\n    this.reqData = {\n      start_time: \"\",\n      end_time: \"\",\n      order_status: \"\",\n      type: 5\n    };\n    this.inputKey = \"\";\n    this.inputValue = \"\";\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isBindInfoShow: false,\n      isEditFormShow: false\n    };\n  }\n  getUsers = async (page, pageSize, reqData) => {\n    const result = await withDraw(page, pageSize, reqData);\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  onSearchData = (page, limit) => {\n    //处理要发送的数据\n    let reqData = {\n      flag: 1,\n      ...this.reqData\n    };\n    if (this.inputKey === \"1\" || this.inputKey === \"2\") {\n      reqData.time_type = this.inputKey;\n    } else if (this.inputKey) {\n      reqData[this.inputKey] = this.inputValue;\n    }\n    this.getUsers(page, limit, reqData);\n  };\n  download = () => {\n    downloadWithdrawList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20, { flag: 1 });\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 150 }}\n              onSelect={value => (this.inputKey = value)}\n            >\n              <Select.Option value=\"order_id\">订单id</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n              <Select.Option value=\"replace_id\">被赠人ID</Select.Option>\n              <Select.Option value=\"1\">创建时间</Select.Option>\n              <Select.Option value=\"2\">到账时间</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Input\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n              style={{ width: 150 }}\n              onChange={e => (this.inputValue = e.target.value)}\n            />\n            &nbsp; &nbsp;\n            <MyDatePicker\n              handleValue={val => {\n                this.reqData.start_time = val[0];\n                this.reqData.end_time = val[1];\n              }}\n            />\n            &nbsp; &nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onSelect={value => (this.reqData.order_status = value)}\n            >\n              <Select.Option value=\"\">订单状态</Select.Option>\n              <Select.Option value=\"1\">待审核</Select.Option>\n              <Select.Option value=\"2\">处理中</Select.Option>\n              <Select.Option value=\"3\">已提交</Select.Option>\n              <Select.Option value=\"4\">已成功</Select.Option>\n              <Select.Option value=\"5\">已失败</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <LinkButton onClick={() => this.onSearchData(1, 20)} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => {\n                window.location.reload();\n              }}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.onSearchData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.onSearchData(current, size);\n            }\n          }}\n          scroll={{ x: 2200, y: \"60vh\" }}\n        />\n        <Modal\n          title={\n            this.action === \"check\"\n              ? \"审核信息\"\n              : this.action === \"risk\"\n              ? \"资金明细\"\n              : \"运营备注\"\n          }\n          visible={this.state.isDetailShow}\n          onCancel={() => {\n            this.setState({ isDetailShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <WrappedComponent\n            detailRecord={this.detailRecord}\n            action={this.action}\n          />\n        </Modal>\n        {this.state.isEditFormShow && (\n          <Modal\n            title=\"编辑\"\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n            width=\"70%\"\n          >\n            <EditForm record={this.editRecord} />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 300\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 100\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 100,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"申请费率\",\n      dataIndex: \"handling_fee\",\n      width: 100\n    },\n    {\n      title: \"实际费率\",\n      dataIndex: \"gold\",\n      width: 100\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 100,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"兑换方式\",\n      dataIndex: \"order_type\",\n      width: 100\n    },\n    {\n      title: \"被赠人ID\",\n      dataIndex: \"replace_id\",\n      width: 100\n    },\n    {\n      title: \"被赠人昵称\",\n      dataIndex: \"replace_name\",\n      width: 100\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"待审核\";\n            break;\n          case \"2\":\n            word = \"处理中\";\n            break;\n          case \"3\":\n            word = \"已提交\";\n            break;\n          case \"4\":\n            word = \"已成功\";\n            break;\n          case \"5\":\n            word = \"已失败\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\",\n      width: 100\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 150,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 150,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"审核详情\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton\n            onClick={() => this.getDetail(record, \"check\")}\n            type=\"default\"\n          >\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"备注内容\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <Popover\n            content={record.user_remark}\n            title={record.user_id + \"用户备注\"}\n            trigger=\"click\"\n          >\n            <LinkButton type=\"default\">用户备注</LinkButton>\n          </Popover>\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")} type=\"default\">\n            运营备注\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  dataPickerOnChange = (date, dateString) => {\n    let startTime = dateString[0] + \" 00:00:00\";\n    let endTime = dateString[1] + \" 00:00:00\";\n    this.setState({\n      start_time: startTime,\n      end_time: endTime\n    });\n  };\n  getDetail = async (record, action) => {\n    this.action = action;\n    this.detailRecord = {\n      data: [],\n      count: 0,\n      id: record.user_id\n    };\n    const res =\n      action === \"risk\"\n        ? await userDetail(1, 20, record.user_id)\n        : action === \"check\"\n        ? await reviewInfo(1, 20, record.order_id)\n        : await remarkInfo(1, 20, record.order_id);\n    if (res.status === 0) {\n      this.detailRecord.data = res.data;\n      this.detailRecord.count = res.count;\n    }\n    this.setState({ isDetailShow: true });\n  };\n  edit = record => {\n    console.log(123);\n\n    this.editRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n}\n\nexport default Withdraw_list;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Card, message, Input, Button, Form, Radio, Select } from \"antd\";\nimport { getConfigList, setGiftConfig } from \"../../../api/index\";\n\nclass Channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  getUsers = async () => {\n    let reqData = {\n      conf_key: \"give_info\",\n      get_val: 1\n    };\n    const res = await getConfigList(reqData);\n    if (res.status === 0) {\n      this.resData = res.data;\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getUsers();\n  }\n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    return (\n      <Card\n        extra={\n          <span>\n            <Button\n              style={{ float: \"right\" }}\n              icon=\"reload\"\n              onClick={() => {\n                window.location.reload();\n              }}\n            />\n          </span>\n        }\n      >\n        <Form\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 20 }}\n          onSubmit={this.handleSubmit}\n        >\n          <Form.Item label=\"品牌\">\n            {getFieldDecorator(\"package_id\", {})(\n              // <Select defaultValue=\"请选择\">\n              //   <Select.Option value=\"jack\">Jack</Select.Option>\n              //   <Select.Option value=\"lucy\">Lucy</Select.Option>\n              // </Select>\n              <Radio.Group>\n                <Radio value={1}>博臣娱乐</Radio>\n                <Radio value={0}>机器人首领</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item label=\"开关\">\n            {getFieldDecorator(\"is_close\", {\n              initialValue: 1\n            })(\n              <Radio.Group>\n                <Radio value={0}>开启</Radio>\n                <Radio value={1}>关闭</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"赠送区间\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"min_amount\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                },\n                {\n                  validator: (rule, value, callback) => {\n                    if (value < 0) {\n                      callback(\"金额不能为负\"); //如果还没填写，则不进行验证\n                    }\n                    if (!value) {\n                      callback();\n                    }\n                    callback();\n                  }\n                }\n              ]\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"max_amount\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                },\n                {\n                  validator: (rule, value, callback) => {\n                    if (!value) {\n                      callback(); //如果还没填写，则不进行一致性验证\n                    }\n                    if (value < getFieldValue(\"min_amount\")) {\n                      callback(\"最大面值小于最小面值\");\n                    }\n                    if (value < 0) {\n                      callback(\"金额不能为负\");\n                    }\n                    callback();\n                  }\n                }\n              ]\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item wrapperCol={{ offset: 4 }}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              disabled\n            >\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      console.log(value);\n      if (!err) {\n        console.log(this.resData);\n        const { id, name, conf_val, conf_key } = this.resData;\n        let reqData = {\n          id,\n          name,\n          ...value,\n          action: \"edit\",\n          conf_key,\n          give_info: conf_val,\n          version: \"V2.0\"\n        };\n        // reqData.give_info = new_conf_val;\n        const res = await setGiftConfig(reqData);\n        if (res.status === 0) {\n          message.success(\"提交成功:\" + res.msg);\n          this.getUsers();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\nconst WrappedChannel = Form.create()(Channel);\n\nexport default withRouter(WrappedChannel);\n","import React, { Component } from \"react\";\nimport { Card, Table, Input, Select, message, Modal } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport {\n  getAIList,\n  reqLoadGold,\n  setGameUserNickName,\n  changeInternalUserBalance\n} from \"../../../api\";\n\nclass Withdraw_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      minGold: \"\",\n      maxGold: \"\"\n    };\n  }\n  getUsers = async (page, limit) => {\n    const result = await getAIList(page, limit, 5);\n    this.setState({\n      data: result.data.game_user,\n      count: parseInt(result.count)\n    });\n  };\n  onSearchData = async () => {\n    let value = {\n      [this.filed]: this.input.input.value\n    };\n    const result = await getAIList(1, 20, 5, value);\n    this.setState({\n      data: result.data.game_user,\n      count: parseInt(result.count)\n    });\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 150 }}\n              onSelect={value => (this.filed = value)}\n            >\n              <Select.Option value=\"game_nick\">昵称</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Input\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n              style={{ width: 150 }}\n              ref={Input => (this.input = Input)}\n            />\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => {\n                window.location.reload();\n              }}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <LinkButton onClick={this.changeGold}>批量增减金币</LinkButton>\n        <LinkButton onClick={this.changeNickname}>批量修改昵称</LinkButton>\n        <br />\n        <Table\n          rowSelection={this.rowSelection()}\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n        />\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"game_nick\"\n    },\n    {\n      title: \"账户余额\",\n      dataIndex: \"game_gold\"\n    },\n    {\n      title: \"实时余额\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.check(record)}>查看</LinkButton>\n        </span>\n      )\n    }\n  ];\n  rowSelection = () => {\n    return {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.selectedRows = selectedRows;\n      },\n      getCheckboxProps: record => ({\n        // disabled: record.name === \"Disabled User\", // Column configuration not to be checked\n        // name: record.name\n      })\n    };\n  };\n  check = async record => {\n    const res = await reqLoadGold(record.id);\n    message.info(res.data[0].game_gold);\n  };\n  changeGold = async () => {\n    if (!this.selectedRows || !this.selectedRows[0]) {\n      message.error(\"user_id为空，请至少选择1位user_id\");\n    } else {\n      console.log(this.selectedRows);\n      Modal.confirm({\n        title: \"添加金额区间\",\n        okText: \"提交\",\n        okType: \"primary\",\n        width: \"30%\",\n        onOk: () => {\n          let { minGold, maxGold } = this.state;\n          if (minGold && maxGold) {\n            if (minGold > maxGold) {\n              message.error(\"请确认最大值大于最小值\");\n            } else {\n              this.handleOk(minGold, maxGold);\n            }\n          } else {\n            message.error(\"请输入有效值\");\n          }\n        },\n        content: (\n          <div>\n            <div>金额区间：</div>\n            <Input\n              type=\"text\"\n              style={{ width: \"40%\" }}\n              placeholder=\"￥最小值\"\n              // value={this.state.minGold}\n              // onChange={e => {\n              //   this.setState({ minGold: e.target.value });\n              // }}\n              onBlur={e => this.setState({ minGold: e.target.value })}\n              // ref={Input => (this.minInput = Input)}\n            />\n            --\n            <Input\n              type=\"text\"\n              style={{ width: \"40%\" }}\n              placeholder=\"￥最大值\"\n              onBlur={e => this.setState({ maxGold: e.target.value })}\n              // ref={Input => (this.maxInput = Input)}\n            />\n          </div>\n        )\n      });\n    }\n  };\n  handleOk = async (minGold, maxGold) => {\n    let amount = this.randNum(minGold, maxGold);\n    for (let i = 0; i < this.selectedRows.length; i++) {\n      let user_id = this.selectedRows[i].id;\n      const res = await changeInternalUserBalance(user_id, amount);\n      message.info(res.msg);\n    }\n    this.getUsers(1, 20);\n  };\n  randNum = (min, max) => {\n    min = parseInt(min);\n    max = parseInt(max);\n    var Range = max - min;\n    var Rand = Math.random();\n    var num = min + Math.round(Rand * Range); //四舍五入\n    return num;\n  };\n  changeNickname = async () => {\n    if (this.selectedRows && this.selectedRows[0]) {\n      for (let i = 0; i < this.selectedRows.length; i++) {\n        let { id } = this.selectedRows[i];\n        let game_nick = \"VIP\" + this.randNum(100000, 999999);\n        const res = await setGameUserNickName(id, game_nick);\n        message.info(res.msg);\n      }\n      this.getUsers(1, 20);\n    } else {\n      message.error(\"user_id为空，请至少选择1位user_id\");\n    }\n  };\n}\n\nexport default Withdraw_list;\n","import React from \"react\";\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\nimport { proxy_changeGold } from \"../../../api/index\";\n\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        let obj = {\n          task_type: 1,\n          \"params[user_id]\": record.id,\n          \"params[amount]\": value.amount,\n          \"params[reason]\": value.reason,\n          \"params[user_name]\": record.id,\n          \"params[proxy_user_id]\": record.proxy_pid,\n          \"params[package_id]\": record.package_id\n        };\n        console.log(\"proxy_changeGold:--------------------\", obj);\n        const res = await proxy_changeGold(obj);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.cancel();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <Form labelCol={{ span: 4 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\n      <Form.Item label=\"金额\">\n        {getFieldDecorator(\"amount\", {\n          rules: [{ required: true, message: \"必须为数字，减少时金额为负\" }]\n        })(\n          <Input\n            placeholder=\"必须为数字，减少时金额为负\"\n            style={{ width: \"60%\" }}\n          />\n        )}\n      </Form.Item>\n      <Form.Item label=\"备注\">\n        {getFieldDecorator(\"reason\", {\n          rules: [{ required: true }]\n        })(\n          <Input.TextArea\n            placeholder=\"请输入内容\"\n            autoSize={{ minRows: 4, maxRows: 10 }}\n            style={{ width: \"60%\" }}\n          />\n        )}\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          确定\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, Input, message } from \"antd\";\nimport { getProxyUserList, changeProxyUserProxyPid } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport Myself from \"./nextlevel.jsx\";\nimport BalanceChanged from \"./BalanceChanged\";\n\nclass NextLevel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: \"\"\n    };\n  }\n  onSearchData = async (page, limit) => {\n    let reqdata = { page, limit, proxy_pid: this.props.pid };\n    const res = await getProxyUserList(reqdata);\n    if (res.status === 0 && res.data) {\n      this.setState({\n        data: res.data.proxy_user,\n        count: parseInt(res.count)\n      });\n    }\n  };\n  componentDidMount() {\n    this.onSearchData(1, 20);\n  }\n  render() {\n    return (\n      <Card>\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 10,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.onSearchData(page, pageSize);\n            }\n          }}\n        />\n        <Modal\n          title={`[ID:${this.pid}]直属下级列表`}\n          visible={this.state.isAddDataShow}\n          style={{ top: this.props.topDistance + 40 }}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n          mask={false}\n          maskClosable={false}\n          width=\"60%\"\n        >\n          <Myself pid={this.pid} topDistance={this.props.topDistance + 40} />\n        </Modal>\n        <Modal\n          title={`[代理:${this.proxyID}]资金变动`}\n          visible={this.state.isChangeBalanceShow}\n          onCancel={() => {\n            this.setState({ isChangeBalanceShow: false });\n          }}\n          footer={null}\n        >\n          <BalanceChanged\n            record={this.record}\n            cancel={() => {\n              this.setState({ isChangeBalanceShow: false });\n            }}\n          />\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"proxy_nick\"\n    },\n    {\n      title: \"上级ID\",\n      dataIndex: \"proxy_pid\"\n    },\n    {\n      title: \"代理余额[点击调整]\",\n      dataIndex: \"balance\",\n      onCell: (record, rowIndex) => {\n        return {\n          onClick: event => {\n            this.changeBalance(record);\n          }, // 点击行\n          onDoubleClick: event => {},\n          onContextMenu: event => {},\n          onMouseEnter: event => {\n            event.target.style.cursor = \"pointer\";\n          }, // 鼠标移入行\n          onMouseLeave: event => {}\n        };\n      }\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton\n            type=\"primary\"\n            onClick={() => this.nextLevel(record)}\n            size=\"small\"\n          >\n            下级\n          </LinkButton>\n          &nbsp;&nbsp;&nbsp;\n          <LinkButton\n            type=\"primary\"\n            size=\"small\"\n            onClick={() => this.changePid(record)}\n          >\n            转移\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  nextLevel = record => {\n    this.setState({\n      isAddDataShow: true\n    });\n    this.pid = record.id;\n  };\n  changePid = record => {\n    Modal.confirm({\n      title: \"修改上级代理\",\n      content: (\n        <Input\n          onBlur={e => this.setState({ new_proxy_user_id: e.target.value })}\n        ></Input>\n      ),\n      onOk: async () => {\n        const res = await changeProxyUserProxyPid({\n          id: record.id,\n          proxy_user_id: this.state.new_proxy_user_id\n        });\n        if (res.status === 0) {\n          message.success(\"操作成功\" + res.msg);\n        } else {\n          message.error(\"操作失败\" + res.msg);\n        }\n      }\n    });\n  };\n  changeBalance = record => {\n    this.proxyID = record.id;\n    this.record = record;\n    this.setState({\n      isChangeBalanceShow: true\n    });\n  };\n}\n\nexport default NextLevel;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, Icon, Input, Button, message } from \"antd\";\nimport { getProxyUserList, changeProxyUserProxyPid } from \"../../../api/index\";\nimport NextLevel from \"./nextlevel\";\nimport BalanceChanged from \"./BalanceChanged\";\nimport LinkButton from \"../../../components/link-button\";\n\nclass ProxySetting extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: \"\"\n    };\n  }\n  onSearchData = async (page, limit) => {\n    // let reqdata = { page, limit, id: 232843783 };\n    let id = this.input.input.value;\n    // id = 232843783;\n    var reg = new RegExp(\"^[0-9]*$\");\n    if (!id || !reg.test(id)) {\n      message.error(\"请输入有效id\");\n    } else {\n      let reqdata = { page, limit, id: id };\n      const res = await getProxyUserList(reqdata);\n      if (res.status === 0) {\n        this.setState({\n          data: res.data.proxy_user,\n          count: parseInt(res.count)\n        });\n      }\n    }\n  };\n  // componentDidMount() {\n  //   this.onSearchData(1, 20);\n  // }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <Input\n              type=\"text\"\n              placeholder=\"请输入代理ID\"\n              style={{ width: 150 }}\n              ref={input => (this.input = input)}\n            />\n            &nbsp; &nbsp;\n            <LinkButton onClick={() => this.onSearchData(1, 20)} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.onSearchData(page, pageSize);\n            }\n          }}\n        />\n        <Modal\n          title={`[ID:${this.pid}]直属下级列表`}\n          visible={this.state.isAddDataShow}\n          style={{ top: 20 }}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n          mask={false}\n          maskClosable={false}\n          // maskStyle={{\n          //   backgroundColor: \"#eee\",\n          //   color: \"#ddd\"\n          // }}\n          width=\"60%\"\n        >\n          <NextLevel pid={this.pid} topDistance={20} />\n        </Modal>\n        <Modal\n          title={`[代理:${this.proxyID}]资金变动`}\n          visible={this.state.isChangeBalanceShow}\n          onCancel={() => {\n            this.setState({ isChangeBalanceShow: false });\n          }}\n          footer={null}\n        >\n          <BalanceChanged\n            record={this.record}\n            cancel={() => {\n              this.setState({ isChangeBalanceShow: false });\n            }}\n          />\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"proxy_nick\"\n    },\n    {\n      title: \"上级ID\",\n      dataIndex: \"proxy_pid\"\n    },\n    {\n      title: \"代理余额[点击调整]\",\n      dataIndex: \"balance\",\n      onCell: (record, rowIndex) => {\n        return {\n          onClick: event => {\n            this.changeBalance(record);\n          }, // 点击行\n          onDoubleClick: event => {},\n          onContextMenu: event => {},\n          onMouseEnter: event => {\n            event.target.style.cursor = \"pointer\";\n          }, // 鼠标移入行\n          onMouseLeave: event => {}\n        };\n      }\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button\n            type=\"primary\"\n            onClick={() => this.nextLevel(record)}\n            size=\"small\"\n          >\n            下级\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={() => this.changePid(record)}\n          >\n            转移\n          </Button>\n        </span>\n      )\n    }\n  ];\n  nextLevel = record => {\n    this.setState({\n      isAddDataShow: true\n    });\n    this.pid = record.id;\n  };\n  changePid = record => {\n    Modal.confirm({\n      title: \"修改上级代理\",\n      content: (\n        <Input\n          onBlur={e => this.setState({ new_proxy_user_id: e.target.value })}\n        ></Input>\n      ),\n      onOk: async () => {\n        const res = await changeProxyUserProxyPid({\n          id: record.id,\n          proxy_user_id: this.state.new_proxy_user_id\n        });\n        if (res.status === 0) {\n          message.success(\"操作成功\" + res.msg);\n        } else {\n          message.error(\"操作失败\" + res.msg);\n        }\n      }\n    });\n  };\n  changeBalance = record => {\n    this.proxyID = record.id;\n    this.record = record;\n    this.setState({\n      isChangeBalanceShow: true\n    });\n  };\n}\n\nexport default ProxySetting;\n","import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass GoldDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { data } = this.props.detailRecord;\n    console.log(data);\n\n    return (\n      <Table\n        bordered\n        rowKey={(record,index)=>`${index}`}\n        dataSource={data}\n        columns={this.initColumns()}\n        size=\"small\"\n      />\n    );\n  }\n  initColumns = () => {\n    if (this.props.action === \"check\") {\n      return [\n        {\n          title: \"审核人\",\n          dataIndex: \"review_name\"\n        },\n        {\n          title: \"审核时间\",\n          dataIndex: \"review_at\",\n          render: formateDate\n        }\n      ];\n    } else if (this.props.action === \"risk\") {\n      return [\n        {\n          title: \"user_id\",\n          dataIndex: \"id\"\n        },\n        {\n          title: \"产生来源\",\n          dataIndex: \"pay_account_name\"\n        },\n\n        {\n          title: \"余额(变动前)\",\n          dataIndex: \"total_balance\"\n        },\n        {\n          title: \"变动金额\",\n          dataIndex: \"final_pay\",\n\n          sorter: (a, b) => a.total_balance - b.total_balance\n        },\n        {\n          title: \"税收\",\n          dataIndex: \"tax\"\n        },\n        {\n          title: \"余额(变动后)\",\n          dataIndex: \"total_final_balance\"\n        },\n        {\n          title: \"备注\",\n          dataIndex: \"pay_reason\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"create_time\"\n        }\n      ];\n    } else {\n      return [\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"内容\",\n          dataIndex: \"content\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"created_at\",\n          render: formateDate\n        }\n      ];\n    }\n  };\n}\n\nexport default GoldDetail;\n","import React from \"react\";\nimport { Form, Input, Radio, message } from \"antd\";\nimport { orderWithDrawReview, withDrawRemark } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\n\nclass EditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const data = this.props.editData;\n    let review_status = parseInt(data.review_status);\n    let status = parseInt(data.status);\n    let orderStatusShow,\n      reviewShow,\n      confirmButtonShow,\n      submitRadio,\n      successRadio,\n      failRadio,\n      submitRadioChecked,\n      successRadioChecked,\n      failRadioChecked;\n    switch (status) {\n      case 1:\n        orderStatusShow = true;\n        confirmButtonShow = true;\n        successRadio = true;\n        failRadio = true;\n        break;\n      case 2:\n        orderStatusShow = true;\n        reviewShow = true;\n        submitRadio = true;\n        successRadio = true;\n        failRadio = true;\n        switch (review_status) {\n          case 1:\n            submitRadio = false;\n            break;\n          case 2:\n            successRadio = false;\n            break;\n          case 3:\n            failRadio = false;\n            break;\n          default:\n            break;\n        }\n        break;\n      case 3:\n        orderStatusShow = true;\n        confirmButtonShow = true;\n        submitRadio = true;\n        break;\n      default:\n        break;\n    }\n    return (\n      <Form labelCol={{ span: 4 }} labelAlign=\"left\">\n        <Form.Item label=\"订单ID\">\n          <Input\n            style={{ width: \"60%\" }}\n            value={data.order_id}\n            readOnly\n          ></Input>\n        </Form.Item>\n        <Form.Item label=\"用户ID\">\n          <Input style={{ width: \"60%\" }} value={data.user_id} readOnly></Input>\n        </Form.Item>\n        <Form.Item label=\"金额\">\n          <Input style={{ width: \"60%\" }} value={data.amount} readOnly></Input>\n        </Form.Item>\n\n        <Form.Item\n          label=\"订单状态:\"\n          style={orderStatusShow ? {} : { display: \"none\" }}\n        >\n          <Radio.Group\n            defaultValue={review_status}\n            onChange={e => (this.orderStatus = e.target.value)}\n          >\n            <Radio\n              value={1}\n              disabled={submitRadio}\n              checked={submitRadioChecked}\n            >\n              提交第三方\n            </Radio>\n            <Radio\n              value={2}\n              disabled={successRadio}\n              checked={successRadioChecked}\n            >\n              已成功\n            </Radio>\n            <Radio value={3} disabled={failRadio} checked={failRadioChecked}>\n              已失败\n            </Radio>\n          </Radio.Group>\n          <LinkButton\n            onClick={this.sumbitOrderStatus}\n            style={confirmButtonShow ? {} : { display: \"none\" }}\n          >\n            确认\n          </LinkButton>\n        </Form.Item>\n\n        <Form.Item label=\"复审:\" style={reviewShow ? {} : { display: \"none\" }}>\n          <LinkButton\n            onClick={() => {\n              this.review(1);\n            }}\n          >\n            通过\n          </LinkButton>\n          <LinkButton\n            onClick={() => {\n              this.review(2);\n            }}\n          >\n            拒绝\n          </LinkButton>\n        </Form.Item>\n        <Form.Item label=\"备注[用户]\">\n          <Input\n            style={{ width: \"60%\" }}\n            onChange={e => {\n              this.remarkUser = e.target.value;\n            }}\n          ></Input>\n          <LinkButton onClick={this.sumbitRemarkUser}>确认</LinkButton>\n        </Form.Item>\n        <Form.Item label=\"备注[运营]\">\n          <Input\n            style={{ width: \"60%\" }}\n            onChange={e => {\n              this.remarkOperator = e.target.value;\n            }}\n          ></Input>\n          <LinkButton onClick={this.sumbitRemarkOperator}>确认</LinkButton>\n        </Form.Item>\n      </Form>\n    );\n  }\n  sumbitOrderStatus = async () => {\n    const data = this.props.editData;\n    if (!this.orderStatus) {\n      message.error(\"请选择订单状态！\");\n    } else {\n      let reqData = {\n        order_id: data.order_id,\n        review_status: this.orderStatus,\n        user_id: data.user_id,\n        review_type: 1,\n        is_pass: 1\n      };\n      const res = await orderWithDrawReview(reqData);\n      if (res.status === 0) {\n        message.success(\"操作成功\");\n      } else {\n        message.error(\"操作失败\");\n      }\n      this.props.onclose();\n    }\n  };\n  review = async is_pass => {\n    const data = this.props.editData;\n    let reqData = {\n      order_id: data.order_id,\n      review_status: data.review_status,\n      user_id: data.user_id,\n      review_type: 2,\n      is_pass: is_pass\n    };\n    const res = await orderWithDrawReview(reqData);\n    if (res.status === 0) {\n      message.info(res.msg);\n    } else {\n      message.error(\"操作失败\");\n    }\n    this.props.onclose();\n  };\n  sumbitRemarkUser = async () => {\n    console.log(this.remarkUser);\n    const data = this.props.editData;\n    if (!this.remarkUser) {\n      message.error(\"请输入有效内容！\");\n    } else {\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 1);\n      if (res.status === 0) {\n        message.success(res.msg);\n      } else {\n        message.error(res.msg);\n      }\n    }\n  };\n  sumbitRemarkOperator = async () => {\n    console.log(this.remarkOperator);\n    const data = this.props.editData;\n    if (!this.remarkOperator) {\n      message.error(\"请输入有效内容！\");\n    } else {\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 2);\n      if (res.status === 0) {\n        message.success(res.msg);\n      } else {\n        message.error(res.msg);\n      }\n    }\n  };\n}\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Select,\n  Popover\n} from \"antd\";\nimport \"moment/locale/zh-cn\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport {\n  withDraw,\n  downloadWithdrawList,\n  userDetail,\n  reviewInfo,\n  remarkInfo,\n  auditOrder\n} from \"../../../api\";\nimport WrappedComponent from \"./details\";\nimport WrappedEdit from \"./edit\";\n\nclass Daiti extends Component {\n  constructor(props) {\n    super(props);\n    this.reqData = {\n      start_time: \"\",\n      end_time: \"\",\n      order_status: \"\",\n      type: 3\n    };\n    this.inputKey = \"\";\n    this.inputValue = \"\";\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isBindInfoShow: false\n    };\n  }\n  getUsers = async (page, pageSize, reqData) => {\n    const result = await withDraw(page, pageSize, reqData);\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  onSearchData = (page, limit) => {\n    //处理要发送的数据\n    let reqData = {\n      flag: 1,\n      ...this.reqData\n    };\n    if (this.inputKey === \"1\" || this.inputKey === \"2\") {\n      reqData.time_type = this.inputKey;\n    } else if (this.inputKey) {\n      reqData[this.inputKey] = this.inputValue;\n    }\n    this.getUsers(page, limit, reqData);\n  };\n  download = () => {\n    downloadWithdrawList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20, { flag: 1 });\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.reqData.start_time = val[0];\n                this.reqData.end_time = val[1];\n              }}\n            />\n            &nbsp; &nbsp;\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 150 }}\n              onSelect={value => (this.inputKey = value)}\n            >\n              <Select.Option value=\"order_id\">订单id</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n              <Select.Option value=\"replace_id\">代提ID</Select.Option>\n              <Select.Option value=\"1\">创建时间</Select.Option>\n              <Select.Option value=\"2\">到账时间</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Input\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n              style={{ width: 150 }}\n              onChange={e => (this.inputValue = e.target.value)}\n            />\n            &nbsp; &nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onSelect={value => (this.reqData.order_status = value)}\n            >\n              <Select.Option value=\"\">订单状态</Select.Option>\n              <Select.Option value=\"1\">待审核</Select.Option>\n              <Select.Option value=\"2\">处理中</Select.Option>\n              <Select.Option value=\"3\">已提交</Select.Option>\n              <Select.Option value=\"4\">已成功</Select.Option>\n              <Select.Option value=\"5\">已失败</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <LinkButton onClick={() => this.onSearchData(1, 20)} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => {\n                window.location.reload();\n              }}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.onSearchData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.onSearchData(current, size);\n            }\n          }}\n          scroll={{ x: 2600, y: \"60vh\" }}\n        />\n        <Modal\n          title={\n            this.action === \"check\"\n              ? \"审核信息\"\n              : this.action === \"risk\"\n              ? \"资金明细\"\n              : \"运营备注\"\n          }\n          visible={this.state.isDetailShow}\n          onCancel={() => {\n            this.setState({ isDetailShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <WrappedComponent\n            detailRecord={this.detailRecord}\n            action={this.action}\n          />\n        </Modal>\n        {this.state.isEditShow && (\n          <Modal\n            title=\"编辑\"\n            visible={this.state.isEditShow}\n            onCancel={() => {\n              this.setState({ isEditShow: false });\n            }}\n            footer={null}\n            width=\"50%\"\n          >\n            <WrappedEdit\n              editData={this.editData}\n              onclose={() => {\n                this.setState({ isEditShow: false });\n              }}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 300\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 150\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\",\n      width: 100\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 100,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"实际费率\",\n      dataIndex: \"platform_rate\",\n      width: 100\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 100,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"兑换方式\",\n      dataIndex: \"order_type\",\n      width: 100\n    },\n    {\n      title: \"兑换账号\",\n      dataIndex: \"pay_account\",\n      width: 200\n    },\n    {\n      title: \"账号名称\",\n      dataIndex: \"pay_name\",\n      width: 100\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"待审核\";\n            break;\n          case \"2\":\n            word = \"处理中\";\n            break;\n          case \"3\":\n            word = \"已提交\";\n            break;\n          case \"4\":\n            word = \"已成功\";\n            break;\n          case \"5\":\n            word = \"已失败\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"代提ID\",\n      dataIndex: \"replace_id\",\n      width: 100\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 200,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 200,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"风控\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton type=\"default\" onClick={() => this.getDetail(record, \"risk\")}>\n            风控\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"审核详情\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getDetail(record, \"check\")} type=\"default\">\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"备注内容\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <Popover\n            content={record.user_remark}\n            title={record.user_id + \"用户备注\"}\n            trigger=\"click\"\n          >\n            <LinkButton type=\"default\">用户备注</LinkButton>\n          </Popover>\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")} type=\"default\">\n            运营备注\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  getDetail = async (record, action) => {\n    this.action = action;\n    this.detailRecord = {\n      data: [],\n      count: 0,\n      id: record.user_id\n    };\n    const res =\n      action === \"risk\"\n        ? await userDetail(1, 20, record.user_id)\n        : action === \"check\"\n        ? await reviewInfo(1, 20, record.order_id)\n        : await remarkInfo(1, 20, record.order_id);\n    if (res.status === 0) {\n      this.detailRecord.data = res.data;\n      this.detailRecord.count = res.count;\n    }\n    this.setState({ isDetailShow: true });\n  };\n  edit = async record => {\n    let reqData = {\n      flag: 1,\n      type: 3,\n      order_id: record.order_id\n    };\n    const res = await auditOrder(reqData);\n    if (res.status === 0) {\n      this.editData = res.data[0];\n      this.setState({ isEditShow: true });\n    } else {\n      message.error(\"操作失败\");\n    }\n  };\n}\n\nexport default Daiti;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Card,\n  message,\n  Input,\n  Button,\n  Form,\n  Switch,\n  Radio,\n  Divider\n} from \"antd\";\nimport { getConfigList, saveWithDrawChannel } from \"../../../api/index\";\n\nclass Channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n  getUsers = async () => {\n    let reqData = {\n      conf_key: \"withdraw_channel_info\",\n      get_val: 1\n    };\n    const res = await getConfigList(reqData);\n    if (res.status === 0 && res.data) {\n      this.initialData = res.data;\n      this.setState({ data: JSON.parse(res.data.conf_val) });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getUsers();\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const data = this.state.data;\n    return (\n      <Card\n        extra={\n          <span>\n            <Button\n              style={{ float: \"right\" }}\n              icon=\"reload\"\n              onClick={() => {\n                window.location.reload();\n              }}\n            />\n          </span>\n        }\n      >\n        <Form\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 20 }}\n          onSubmit={this.handleSubmit}\n        >\n          <Form.Item label=\"提款支付宝\">\n            {getFieldDecorator(\"alipay[is_close]\", {\n              initialValue:\n                data.length !== 0 && data.alipay.is_close === 1 ? true : false,\n              valuePropName: \"checked\"\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\n          </Form.Item>\n          <Divider></Divider>\n          <Form.Item label=\"提款银行卡\">\n            {getFieldDecorator(\"bankcard[is_close]\", {\n              initialValue: data.length !== 0 && data.bankcard.is_close === 1 ? true : false,\n              valuePropName: \"checked\"\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\n          </Form.Item>\n          <Form.Item label=\"古都银行卡状态\">\n            {getFieldDecorator(\"bankcard[channel][2][is_close]\", {\n              initialValue: data.length !== 0 && parseInt(data.bankcard.channel[0].is_close)\n            })(\n              <Radio.Group>\n                <Radio value={1}>启用</Radio>\n                <Radio value={0}>停用</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item label=\"显示名称\">\n            {getFieldDecorator(\"bankcard[channel][2][channel_name]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.bankcard.channel[0].channel_name\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item\n            label=\"提款限额\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][2][min_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.bankcard.channel[0].min_amount\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][2][max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.bankcard.channel[0].max_amount\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"渠道排序\">\n            {getFieldDecorator(\"bankcard[channel][2][sort]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.bankcard.channel[0].sort\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"第三方代付状态\">\n            {getFieldDecorator(\"bankcard[channel][3][is_close]\", {\n              initialValue: data.length !== 0 && parseInt(data.bankcard.channel[1].is_close)\n            })(\n              <Radio.Group>\n                <Radio value={1}>启用</Radio>\n                <Radio value={0}>停用</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item label=\"显示名称\">\n            {getFieldDecorator(\"bankcard[channel][3][channel_name]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.bankcard.channel[1].channel_name\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item\n            label=\"提款限额\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][3][min_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.bankcard.channel[1].min_amount\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][3][max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.bankcard.channel[1].max_amount\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"渠道排序\">\n            {getFieldDecorator(\"bankcard[channel][3][sort]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.bankcard.channel[1].sort\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"onepay状态\">\n            {getFieldDecorator(\"bankcard[channel][7][is_close]\", {\n              initialValue: data.length !== 0 && parseInt(data.bankcard.channel[2].is_close)\n            })(\n              <Radio.Group>\n                <Radio value={1}>启用</Radio>\n                <Radio value={0}>停用</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item label=\"显示名称\">\n            {getFieldDecorator(\"bankcard[channel][7][channel_name]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.bankcard.channel[2].channel_name\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item\n            label=\"提款限额\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][7][min_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.bankcard.channel[2].min_amount\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][7][max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.bankcard.channel[2].max_amount\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"渠道排序\">\n            {getFieldDecorator(\"bankcard[channel][7][sort]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.bankcard.channel[2].sort\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n\n          <Divider></Divider>\n          <Form.Item label=\"人工兑换\">\n            {getFieldDecorator(\"artificial[is_close]\", {\n              initialValue:\n              data.length !== 0 && data.artificial.is_close === 1 ? true : false,\n              valuePropName: \"checked\"\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\n          </Form.Item>\n          <Form.Item\n            label=\"提款限额\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"artificial[min_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.artificial.min_amount\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"artificial[max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.artificial.max_amount\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"费率\">\n            {getFieldDecorator(\"artificial[rate]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data.length !== 0 && data.artificial.rate\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ offset: 4 }}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      let { id, name } = this.initialData;\n      let obj = {};\n      value.bankcard.channel.forEach((item, index) => {\n        for (const key in item) {\n          obj[`bankcard[channel][${index}][${key}]`] = item[key];\n        }\n      });\n\n      obj[\"bankcard[is_close]\"] = value.bankcard.is_close ? \"on\" : \"off\";\n      obj[\"alipay[is_close]\"] = value.alipay.is_close ? \"on\" : \"off\";\n      for (const key in value.artificial) {\n        obj[`artificial[${key}]`] = value.artificial[key];\n      }\n      if (!err) {\n        const res = await saveWithDrawChannel(id, name, obj);\n        if (res.status === 0) {\n          message.success(\"提交成功:\" + res.msg);\n          console.log(res);\n          this.getUsers();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\nconst WrappedChannel = Form.create()(Channel);\n\nexport default withRouter(WrappedChannel);\n","import React, {Component} from 'react'\nimport {Button, Row, Col} from 'antd'\nimport './not-found.less'\n/*\n前台404页面\n */\nexport default class NotFound extends Component {\n  render() {\n    return (\n\n      <Row className='not-found'>\n        <Col span={12} className='left'></Col>\n        <Col span={12} className='right'>\n          <h1>404</h1>\n          <h2>抱歉，你访问的页面不存在</h2>\n          <div>\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\n              回到首页\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}","import React from \"react\";\nimport { Table} from \"antd\";\n// import {  Table,Button} from 'element-react';\n// import \"element-theme-default\";\n\nconst DateGameReport = props => {\n  let initColumns = () => [\n    {\n      title: \"游戏\",\n      dataIndex: \"game_name\"\n    },\n    {\n      title: \"玩家总赢额\",\n      dataIndex: \"win_statement_total\",\n      width: 150\n    },\n    {\n      title: \"玩家总输额\",\n      dataIndex: \"lose_statement_total\",\n      width: 150\n    },\n    {\n      title: \"玩家总流水\",\n      dataIndex: \"statement_total\",\n      width: 150\n    },\n    {\n      title: \"盈亏比\",\n      dataIndex: \"statement_ratio\",\n      width: 150\n    }\n  ];\n  return (\n    <Table\n      bordered\n      rowKey={(record, index) => `${index}`}\n      dataSource={props.data}\n      columns={initColumns()}\n      size=\"small\"\n      // scroll={{ x: 3000 }}\n      // footer={this.footerData}\n    />\n  );\n};\n\nexport default DateGameReport;\n","import React, { Component } from \"react\";\nimport { Table, Button, Modal } from \"antd\";\n// import {  Table,Button} from 'element-react';\n// import \"element-theme-default\";\nimport { oneDayGameReport } from \"../../../api/index\";\nimport DateGameReport from \"./dateGameReport\";\n\nclass MoreDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: \"\",\n      isGameReportShow: false,\n      nextLevelData: \"\"\n    };\n  }\n  render() {\n    const { data } = this.props.reportData;\n    return (\n      <div>\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={data}\n          columns={this.initColumns()}\n          size=\"small\"\n          scroll={{ x: 2000 }}\n          // footer={this.footerData}\n        />\n        <Modal\n          title={this.state.date + \"/游戏数据\"}\n          width=\"80%\"\n          visible={this.state.isGameReportShow}\n          onCancel={() => {\n            this.setState({ isGameReportShow: false });\n          }}\n          footer={null}\n        >\n          <DateGameReport data={this.state.nextLevelData} />\n        </Modal>\n      </div>\n    );\n  }\n  initColumns = () => {\n    if (this.props.action === \"getDateReport\") {\n      let tableHeader = [\n        {\n          title: \"日期\",\n          dataIndex: \"date\"\n        },\n        {\n          title: \"新增用户\",\n          dataIndex: \"regin_user_number\"\n        },\n        {\n          title: \"活跃用户\",\n          dataIndex: \"active_user_number\"\n        },\n        {\n          title: \"官方首充用户\",\n          dataIndex: \"first_pay_user_number\"\n        },\n        {\n          title: \"官方首充金额\",\n          dataIndex: \"first_pay_money_total\"\n        },\n        {\n          title: \"官方充值用户\",\n          dataIndex: \"pay_user_number\"\n        },\n        {\n          title: \"官方充值金额\",\n          dataIndex: \"pay_money_total\"\n        },\n        {\n          title: \"人工首充用户\",\n          dataIndex: \"first_pay_user_number_res\"\n        },\n        {\n          title: \"人工首充金额\",\n          dataIndex: \"first_pay_money_total_res\"\n        },\n        {\n          title: \"人工充值用户\",\n          dataIndex: \"pay_user_number_res\"\n        },\n        {\n          title: \"人工充值金额\",\n          dataIndex: \"pay_money_total_res\"\n        },\n        {\n          title: \"官方兑换用户\",\n          dataIndex: \"exchange_user_number\"\n        },\n        {\n          title: \"官方兑换金额\",\n          dataIndex: \"exchange_money_total\"\n        },\n        {\n          title: \"人工兑换用户\",\n          dataIndex: \"exchange_user_number_res\"\n        },\n        {\n          title: \"人工兑换金额\",\n          dataIndex: \"exchange_money_total_res\"\n        },\n        {\n          title: \"玩家总赢额\",\n          dataIndex: \"win_statement_total\"\n        },\n        {\n          title: \"玩家总输额\",\n          dataIndex: \"lose_statement_total\"\n        },\n        {\n          title: \"玩家总流水\",\n          dataIndex: \"statement_total\"\n        },\n        {\n          title: \"盈亏比\",\n          dataIndex: \"statement_ratio\"\n        },\n        {\n          title: \"操作\",\n          dataIndex: \"\",\n          render: (text, record, index) => (\n            <span>\n              <Button size=\"small\" onClick={() => this.getGameReport(record)}>\n                游戏\n              </Button>\n            </span>\n          )\n        }\n      ];\n      return tableHeader;\n    }\n  };\n  footerData = page => {\n    console.log(page);\n    return (\n      <tr>\n        <td>合计</td>\n        <td style={{ width: 80 }}>regin_user_number</td>\n        <td>regin_user_number</td>\n        <td>regin_user_number</td>\n        <td>regin_user_number</td>\n        <td>regin_user_number</td>\n      </tr>\n    );\n  };\n  getGameReport = async record => {\n    const res = await oneDayGameReport(\n      1,\n      20,\n      this.props.package_id,\n      record.date\n    );\n    this.props.parse(res);\n    this.setState({\n      date: record.date,\n      isGameReportShow: true,\n      nextLevelData: res.data\n    });\n  };\n}\n\nexport default MoreDetail;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Select } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport {\n  dailyReport,\n  packageList,\n  dateReport,\n  gameReport\n} from \"../../../api/index\";\nimport MoreDetail from \"./details\";\nimport moment from \"moment\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport DateGameReport from \"./dateGameReport\";\n\nclass DailyReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      packageList: [],\n      count: 0,\n      pageSize: 20,\n      reportTable: false,\n      isGameReportShow: false\n    };\n  }\n  getInitialData = async () => {\n    const res = await packageList();\n    // const result = await dailyReportInit(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        // data: result.data,\n        packageList: res.data\n      });\n    }\n  };\n  componentDidMount() {\n    this.getInitialData();\n  }\n  render() {\n    const packageNode = this.state.packageList.map(item => {\n      return (\n        <Select.Option value={item.id} key={item.id}>\n          {item.name}\n        </Select.Option>\n      );\n    });\n    return (\n      <Card\n        title={\n          <div>\n            <div>\n              <MyDatePicker\n                handleValue={val => {\n                  let diffDays = moment(val[1]).diff(moment(val[0]), \"days\");\n                  if (diffDays > 7) {\n                    message.error(\"请选择时间范围小于7天\");\n                  } else {\n                    this.startTime = val[0];\n                    this.endTime = val[1];\n                  }\n                }}\n              />\n              &nbsp; &nbsp;\n              <Select\n                placeholder=\"请选择\"\n                style={{ width: 120 }}\n                onSelect={value => (this.package_id = value)}\n              >\n                {packageNode}\n              </Select>\n              &nbsp; &nbsp;\n              <LinkButton onClick={this.onSearchData} size=\"default\">\n                <Icon type=\"search\" />\n              </LinkButton>\n              &nbsp; &nbsp;\n            </div>\n          </div>\n        }\n      >\n        <div style={{ marginBottom: 20, backgroundColor: \"#ddd\" }}>\n          <span style={{ border: \"1px solid #ddd\" }}>\n            <b>默认所选品牌7天的统计数据</b>\n          </span>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <span style={{ border: \"1px solid #ddd\" }}>\n            <b>总流水=玩家赢额+(abs)玩家输额</b>\n          </span>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <span style={{ border: \"1px solid #ddd\" }}>\n            <b>盈亏比=(玩家输额(abs) - 玩家赢额) /(玩家输额(abs) + 玩家赢额)</b>\n          </span>\n        </div>\n        <Table\n          bordered\n          rowKey=\"package_id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          scroll={{ x: 2700 }}\n        />\n        <Modal\n          title=\"按日期查看\"\n          width=\"80%\"\n          visible={this.state.reportTable}\n          onCancel={() => {\n            this.setState({ reportTable: false });\n          }}\n          footer={null}\n        >\n          <MoreDetail\n            reportData={this.reportData}\n            action={this.action}\n            package_id={this.package_id}\n            parse={this.parseGameData}\n          />\n        </Modal>\n        <Modal\n          title=\"游戏数据\"\n          width=\"80%\"\n          visible={this.state.isGameReportShow}\n          onCancel={() => {\n            this.setState({ isGameReportShow: false });\n          }}\n          footer={null}\n        >\n          <DateGameReport data={this.state.nextLevelData} />\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"品牌\",\n      dataIndex: \"package_nick\"\n    },\n    {\n      title: \"新增用户\",\n      dataIndex: \"regin_user_number\"\n    },\n    {\n      title: \"活跃用户\",\n      dataIndex: \"active_user_number\"\n    },\n    {\n      title: \"官方首充用户\",\n      dataIndex: \"first_pay_user_number\"\n    },\n    {\n      title: \"官方首充金额\",\n      dataIndex: \"first_pay_money_total\"\n    },\n    {\n      title: \"官方充值用户\",\n      dataIndex: \"pay_user_number\"\n    },\n    {\n      title: \"官方充值金额\",\n      dataIndex: \"pay_money_total\"\n    },\n    {\n      title: \"人工首充用户\",\n      dataIndex: \"first_pay_user_number_res\"\n    },\n    {\n      title: \"人工首充金额\",\n      dataIndex: \"first_pay_money_total_res\"\n    },\n    {\n      title: \"人工充值用户\",\n      dataIndex: \"pay_user_number_res\"\n    },\n    {\n      title: \"人工充值金额\",\n      dataIndex: \"pay_money_total_res\"\n    },\n    {\n      title: \"官方兑换用户\",\n      dataIndex: \"exchange_user_number\"\n    },\n    {\n      title: \"官方兑换金额\",\n      dataIndex: \"exchange_money_total\"\n    },\n    {\n      title: \"人工兑换用户\",\n      dataIndex: \"exchange_user_number_res\"\n    },\n    {\n      title: \"人工兑换金额\",\n      dataIndex: \"exchange_money_total_res\"\n    },\n    {\n      title: \"玩家总赢额\",\n      dataIndex: \"win_statement_total\"\n    },\n    {\n      title: \"玩家总输额\",\n      dataIndex: \"lose_statement_total\"\n    },\n    {\n      title: \"玩家总流水\",\n      dataIndex: \"statement_total\"\n    },\n    {\n      title: \"盈亏比\",\n      dataIndex: \"statement_ratio\"\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.getDateReport(record)}>\n            日期\n          </LinkButton>\n          <LinkButton onClick={() => this.getGameReport(record)}>\n            游戏\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  onSearchData = async () => {\n    if (!this.startTime || !this.package_id) {\n      message.info(\"请选择时间日期和品牌\");\n      return;\n    }\n    const res = await dailyReport(\n      1,\n      20,\n      this.package_id,\n      this.startTime,\n      this.endTime\n    );\n    const newRes = this.parseData(res);\n    this.setState({ data: newRes.data, count: newRes.count });\n  };\n  parseData = res => {\n    console.log(\"res:\", res);\n    var length = 0;\n    var format_data = [];\n    if (res.status === 0 && res.data) {\n      //用户  (e.active_user_number = e.login_user_number - e.regin_user_number),\n      if (res.data.user) {\n        res.data.user\n          .filter(e => e && e._id)\n          .map(\n            e => ((e.package_id = parseInt(e._id.package_id)), delete e._id)\n          );\n      }\n      //充提交易所\n      if (res.data.order) {\n        res.data.order\n          .filter(e => e && e._id)\n          .map(\n            e => (\n              (e.first_pay_user_number = e.first_pay_user.length),\n              (e.pay_user_number = e.pay_user.length),\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\n              (e.pay_user_number_res = e.pay_user_res.length),\n              (e.exchange_user_number = e.exchange_user.length),\n              (e.exchange_user_number_res = e.exchange_user_res.length),\n              (e.package_id = parseInt(e._id.package_id)),\n              delete e._id\n            )\n          );\n        // 合并\n        res.data.user.map(e =>\n          Object.assign(\n            e,\n            res.data.order.find(d => d.package_id === e.package_id)\n          )\n        );\n      }\n\n      //游戏\n      if (res.data.game) {\n        res.data.game\n          .filter(e => e && e._id)\n          .map(\n            e => (\n              (e.statement_ratio = (\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\n              ).toFixed(4)),\n              (e.win_statement_total =\n                Math.round(e.win_statement_total * 10000) / 10000),\n              (e.lose_statement_total =\n                Math.round(e.lose_statement_total * 10000) / 10000),\n              (e.statement_total =\n                Math.round(\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\n                    10000\n                ) / 10000),\n              (e.package_id = parseInt(e._id.package_id)),\n              delete e._id\n            )\n          );\n\n        // 合并\n        res.data.user.map(e =>\n          Object.assign(\n            e,\n            res.data.game.find(d => d.package_id === e.package_id)\n          )\n        );\n      }\n\n      length = res.data.user.length;\n      format_data = res.data.user;\n      console.log(\"res.data.user assign后\", res.data.user);\n    }\n\n    return {\n      code: res.code,\n      msg: res.msg,\n      count: length,\n      data: format_data\n    };\n  };\n  parseDateData = res => {\n    console.log(res);\n    var length = 0;\n    var format_data = [];\n    if (res.status === 0 && res.data) {\n      //用户 (e.active_user_number = e.login_user_number - e.regin_user_number),\n      if (res.data.user) {\n        res.data.user.map(e => ((e.date = e._id.login_time), delete e._id));\n      }\n      //充提交易所\n      if (res.data.order) {\n        //res.data.order.filter(e => (e && e._id)).map(e => ((e.exchange_money_total = Math.abs(e.exchange_money_total)), (e.date = e._id.create_time), delete e._id));\n        res.data.order\n          .filter(e => e && e._id)\n          .map(\n            e => (\n              (e.first_pay_user_number = e.first_pay_user.length),\n              (e.pay_user_number = e.pay_user.length),\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\n              (e.pay_user_number_res = e.pay_user_res.length),\n              (e.exchange_user_number = e.exchange_user.length),\n              (e.exchange_user_number_res = e.exchange_user_res.length),\n              (e.date = e._id.create_time),\n              delete e._id\n            )\n          );\n        // 合并\n        res.data.user.map(e =>\n          Object.assign(e, res.data.order.find(d => d.date === e.date))\n        );\n      }\n      //游戏\n      if (res.data.game) {\n        //四舍五入保留四位小数\n        res.data.game\n          .filter(e => e && e._id)\n          .map(\n            e => (\n              (e.statement_ratio = (\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\n              ).toFixed(4)),\n              (e.win_statement_total =\n                Math.round(e.win_statement_total * 10000) / 10000),\n              (e.lose_statement_total =\n                Math.round(e.lose_statement_total * 10000) / 10000),\n              (e.statement_total =\n                Math.round(\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\n                    10000\n                ) / 10000),\n              (e.date = e._id.create_time),\n              delete e._id\n            )\n          );\n\n        // 合并\n        res.data.user.map(e =>\n          Object.assign(e, res.data.game.find(d => d.date === e.date))\n        );\n      }\n\n      // 排序\n      res.data.user.sort(\n        (a, b) =>\n          parseInt(b.date.replace(/-/g, \"\")) -\n          parseInt(a.date.replace(/-/g, \"\"))\n      );\n      length = res.data.user.length;\n      format_data = res.data.user;\n      console.log(res.data.user);\n    }\n    return {\n      code: res.code,\n      msg: res.msg,\n      count: length,\n      data: format_data\n    };\n  };\n  parseGameData = res => {\n    console.log(res);\n    //总流水\n    if (res.status === 0 && res.data) {\n      res.data.map(\n        e => (\n          (e.statement_ratio = (\n            (Math.abs(e.lose_statement_total) - e.win_statement_total) /\n            (e.win_statement_total + Math.abs(e.lose_statement_total))\n          ).toFixed(4)),\n          (e.win_statement_total =\n            Math.round(e.win_statement_total * 10000) / 10000),\n          (e.lose_statement_total =\n            Math.round(e.lose_statement_total * 10000) / 10000),\n          (e.statement_total =\n            Math.round(\n              (e.win_statement_total + Math.abs(e.lose_statement_total)) * 10000\n            ) / 10000)\n        )\n      );\n    }\n  };\n  getDateReport = async record => {\n    const res = await dateReport(\n      1,\n      20,\n      record.package_id,\n      this.startTime,\n      this.endTime\n    );\n    const reportData = this.parseDateData(res);\n    this.reportData = reportData;\n    this.action = \"getDateReport\";\n    this.setState({ reportTable: true });\n  };\n  getGameReport = async record => {\n    const res = await gameReport(1, 20, this.package_id, record.date);\n    this.parseGameData(res);\n    this.setState({\n      date: record.date,\n      isGameReportShow: true,\n      nextLevelData: res.data\n    });\n  };\n}\n\nexport default DailyReport;\n","import React from \"react\";\nimport { Form, Input, Select, Button, message, Radio } from \"antd\";\nimport { editRule } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const data = props.data;\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        for (const key in value) {\n          if (value[key] === undefined) {\n            value[key] = \"\";\n          }\n        }\n        const res = await editRule(data.id, value);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <Form labelCol={{ span: 4 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\n      <Form.Item label=\"父级权限\">\n        {getFieldDecorator(\"pid\", {\n          rules: [{ required: true, message: \"请选择权限\" }],\n          initialValue: data.pid\n        })(\n          <Select style={{ width: \"60%\" }}>\n            <Select.Option value={0}>一级权限</Select.Option>\n            {props.packageNode}\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item label=\"菜单名\">\n        {getFieldDecorator(\"name\", {\n          rules: [{ required: true, message: \"请输入菜单名\" }],\n          initialValue: data.name.replace(/&nbsp;/g, \"\")\n        })(<Input style={{ width: \"60%\" }} placeholder=\"菜单名\" />)}\n      </Form.Item>\n      <Form.Item label=\"模块名\">\n        {getFieldDecorator(\"module\", { initialValue: data.module })(\n          <Input style={{ width: \"60%\" }} placeholder=\"模块名\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"方法名\">\n        {getFieldDecorator(\"action\", { initialValue: data.action })(\n          <Input style={{ width: \"60%\" }} placeholder=\"方法名\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"模板路径\">\n        {getFieldDecorator(\"href\", { initialValue: data.href })(\n          <Input style={{ width: \"60%\" }} placeholder=\"模板路径\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"路由key\">\n        {getFieldDecorator(\"key\", { initialValue: data.router_key })(\n          <Input style={{ width: \"60%\" }} placeholder=\"路由key\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"icon样式\">\n        {getFieldDecorator(\"icon\", { initialValue: data.icon })(\n          <Input style={{ width: \"60%\" }} placeholder=\"icon样式\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"菜单排序\">\n        {getFieldDecorator(\"sort\", {\n          rules: [{ required: true, message: \"请输入排序值\" }],\n          initialValue: data.sort\n        })(<Input style={{ width: \"60%\" }} placeholder=\"菜单排序\" />)}\n      </Form.Item>\n      <Form.Item label=\"显示状态\">\n        {getFieldDecorator(\"status\", {\n          initialValue: data.status\n        })(\n          <Radio.Group>\n            <Radio value={1}>显示</Radio>\n            <Radio value={0}>不显示</Radio>\n          </Radio.Group>\n        )}\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Popconfirm,\n  Select,\n  Button,\n  Form\n} from \"antd\";\nimport { ruleList, addRule, ruleDel } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\n\nclass Rule extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async () => {\n    const res = await ruleList();\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData();\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const packageNode = this.state.data.map(item => {\n      return (\n        <Select.Option value={item.id} key={item.name}>\n          {item.name.replace(/&nbsp;/g, \"-\")}\n        </Select.Option>\n      );\n    });\n    return (\n      <Card\n        title={\n          <div>\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n              <Form.Item>\n                {getFieldDecorator(\"pid\", {\n                  rules: [{ required: true, message: \"请选择权限\" }],\n                  initialValue: \"0\"\n                })(\n                  <Select style={{ width: 200 }}>\n                    <Select.Option value=\"0\">一级权限</Select.Option>\n                    {packageNode}\n                  </Select>\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"name\", {\n                  rules: [{ required: true, message: \"请输入菜单名\" }]\n                })(<Input style={{ width: 120 }} placeholder=\"菜单名\" />)}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"module\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"模块名\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"action\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"方法名\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"href\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"模板路径\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"key\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"路由key\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"icon\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"icon样式\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"sort\", {\n                  rules: [{ required: true, message: \"请输入排序值\" }]\n                })(<Input style={{ width: 120 }} placeholder=\"菜单排序\" />)}\n              </Form.Item>\n              <Form.Item>\n                <Button\n                  size=\"default\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                >\n                  增加\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.getInitialData(current, size);\n            }\n          }}\n        />\n        <Modal\n          title=\"编辑\"\n          visible={this.state.isEditFormShow}\n          onCancel={() => {\n            this.setState({ isEditFormShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedEditForm\n            finished={() => {\n              this.getInitialData();\n              this.setState({ isEditFormShow: false });\n            }}\n            packageNode={packageNode}\n            data={this.editDataRecord}\n          />\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"菜单名\",\n      dataIndex: \"name\",\n      render: (text, record, index) => (\n        <span>{record.name.replace(/&nbsp;/g, \"-\")}</span>\n      )\n    },\n    {\n      title: \"模块名\",\n      dataIndex: \"module\"\n    },\n    {\n      title: \"方法名\",\n      dataIndex: \"action\"\n    },\n    {\n      title: \"模板路径\",\n      dataIndex: \"href\"\n    },\n    {\n      title: \"路由key\",\n      dataIndex: \"router_key\"\n    },\n    {\n      title: \"icon样式\",\n      dataIndex: \"icon\"\n    },\n    {\n      title: \"显示\",\n      dataIndex: \"status\",\n      render: text => <span>{text === 1 ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"菜单排序\",\n      dataIndex: \"sort\"\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\n            编辑\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.onDelete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <Button type=\"danger\" size=\"small\">\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      if (!err) {\n        for (const key in value) {\n          if (value[key] === undefined) {\n            value[key] = \"\";\n          }\n        }\n        const res = await addRule(value);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.getInitialData();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  onDelete = async record => {\n    let res = await ruleDel(record.id);\n    if (res.status === 0) {\n      message.success(\"删除成功\");\n      this.getInitialData();\n    } else {\n      message.error(\"出错了：\" + res.msg);\n    }\n  };\n  edit = async record => {\n    this.editDataRecord = record;\n    this.setState({\n      isEditFormShow: true\n    });\n  };\n}\nconst RuleManage = Form.create()(Rule);\nexport default RuleManage;\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { createHashHistory } from \"history\";\nimport { reqUsers } from \"../../api/index\";\nimport { Layout } from \"antd\";\n\nimport LeftNav from \"../../components/left-nav\";\nimport Header from \"../../components/header\";\nimport Home from \"../home/home\";\nimport User from \"../user/user\";\nimport Admin_manage_list from \"../admin_manage/admin_manage_list/admin_manage_list\";\nimport Role from \"../admin_manage/role/role\";\nimport Order_list from \"../charge/order_list/order_list\";\nimport Channel_list from \"../charge/channel_list/channel_list\";\nimport Bankcard_list from \"../charge/bankcard_list/bankcard_list\";\nimport Recharge_order from \"../charge/recharge_order/recharge_order\";\nimport Recharge_channel from \"../charge/recharge_channel/recharge_channel\";\nimport NoticeList from \"../customer_service/notice_list\";\nimport Customer_list from \"../customer_service/customer_list\";\nimport Withdraw_list from \"../withdraw/withdraw_list\";\nimport WrappedConfig from \"../gameSetting/config\";\nimport Tasks from \"../messageCenter/tasks\";\nimport AccountList from \"../trade/accountList\";\nimport ApplyHistory from \"../trade/applyHistory\";\nimport TradeOrder from \"../trade/tradeOrder\";\nimport ActivityList from \"../activity/activityList\";\nimport ActivityRecieve from \"../activity/recieve\";\nimport GiftVoucher from \"../activity/giftVoucher\";\nimport GiftList from \"../gift/giftList\";\nimport GiftSetting from \"../gift/giftSetting\";\nimport AI from \"../AI/robot\";\nimport ProxySetting from \"../proxy/setting\";\n\nimport Daiti_list from \"../withdraw/Daiti_list\";\nimport Channel from \"../withdraw/Channel\";\nimport NotFound from \"../not-found/not-found\";\nimport DailyReport from \"../list/DailyReport\";\nimport RuleManage from \"../admin_manage/ruleManage\";\nimport { Provider, KeepAlive } from \"react-keep-alive\";\nconst { Sider, Content } = Layout;\n\nconst history = createHashHistory();\n/*\n后台管理的路由组件\n */\nexport default class Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //header和left-nav通过共同父组件传值\n  // onRef = ref => {\n  //   this.child1 = ref;\n  // };\n  render() {\n    const token = localStorage.token;\n    // 如果内存没有存储token ==> 当前没有登陆\n    if (!token) {\n      return <Redirect to=\"/login\" />;\n    }\n    //如果内存中存储的token超过24小时，需要验证token，如果已经延期更新时间戳，如果未延期，更新token\n    const timeStamp = new Date().getTime();\n    const tokenTimeStamp = localStorage.tokenTimeStamp;\n    let time = timeStamp - tokenTimeStamp;\n    if (time > 24 * 3600 * 1000) {\n      const res = reqUsers(1, 20);\n      if (res.status !== 0) {\n        localStorage.removeItem(\"menuList\");\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"name\");\n        localStorage.removeItem(\"tokenTimeStamp\");\n        return <Redirect to=\"/login\" />;\n      }\n    }\n    return (\n      <Layout style={{ minHeight: \"100%\" }}>\n        <Sider>\n          <LeftNav\n            onClick={tabConfig => {\n              this.child1.add && this.child1.add(tabConfig);\n            }}\n          />\n        </Sider>\n        <Layout>\n          <Header onRef={ref => (this.child1 = ref)} history={history}>\n            Header\n          </Header>\n          <Content style={{ margin: 5, backgroundColor: \"#fff\" }}>\n            <Provider>\n              <div style={{ height: \"100%\" }}>\n                <Switch>\n                  <Redirect from=\"/\" exact to=\"/home\" />\n                  <Route path=\"/home\" exact component={Home} />\n                  <Route path=\"/user/user-list\" exact>\n                    <KeepAlive name=\"User\">\n                      <User />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/customer_service/notice_list\">\n                    <KeepAlive name=\"Notice_list\">\n                      <NoticeList />\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/customer_service/customer_list\"\n                    exact\n                    component={Customer_list}\n                  >\n                    <KeepAlive name=\"Customer_list\">\n                      <Customer_list></Customer_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/admin_manage/list\"\n                    exact\n                    component={Admin_manage_list}\n                  >\n                    <KeepAlive name=\"Admin_manage_list\">\n                      <Admin_manage_list></Admin_manage_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/admin_manage/rule\" exact component={RuleManage}>\n                    <KeepAlive name=\"RuleManage\">\n                      <RuleManage></RuleManage>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/admin_manage/role\" exact component={Role}>\n                    <KeepAlive name=\"Role\">\n                      <Role></Role>\n                    </KeepAlive>\n                  </Route>\n\n                  <Route path=\"/list/daily-report\" exact>\n                    <KeepAlive name=\"DailyReport\">\n                      <DailyReport></DailyReport>\n                    </KeepAlive>\n                  </Route>\n\n                  <Route path=\"/gameSetting/config\" exact>\n                    <KeepAlive name=\"WrappedConfig\">\n                      <WrappedConfig></WrappedConfig>\n                    </KeepAlive>\n                  </Route>\n\n                  <Route path=\"/proxy/setting\" exact>\n                    <KeepAlive name=\"ProxySetting\">\n                      <ProxySetting></ProxySetting>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/messageCenter/tasks\" exact>\n                    <KeepAlive name=\"Tasks\">\n                      <Tasks></Tasks>\n                    </KeepAlive>\n                  </Route>\n\n                  <Route path=\"/trade/accountList\" exact>\n                    <KeepAlive name=\"AccountList\">\n                      <AccountList></AccountList>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/trade/applyHistory\" exact>\n                    <KeepAlive name=\"ApplyHistory\">\n                      <ApplyHistory></ApplyHistory>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/trade/tradeOrder\" exact>\n                    <KeepAlive name=\"TradeOrder\">\n                      <TradeOrder></TradeOrder>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/activity/list\" exact>\n                    <KeepAlive name=\"ActivityList\">\n                      <ActivityList />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/activity/recieve\" exact>\n                    <KeepAlive name=\"ActivityRecieve\">\n                      <ActivityRecieve />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/activity/giftVoucher\" exact>\n                    <KeepAlive name=\"giftVoucher\">\n                      <GiftVoucher />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/charge/order_list\" exact component={Order_list}>\n                    <KeepAlive name=\"Order_list\">\n                      <Order_list></Order_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/charge/channel-list\"\n                    exact\n                    component={Channel_list}\n                  >\n                    <KeepAlive name=\"Channel_list\">\n                      <Channel_list></Channel_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/charge/bankcard-list\"\n                    exact\n                    component={Bankcard_list}\n                  >\n                    <KeepAlive name=\"Bankcard_list\">\n                      <Bankcard_list></Bankcard_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/artificialcharge/order\"\n                    exact\n                    component={Recharge_order}\n                  >\n                    <KeepAlive name=\"Recharge_order\">\n                      <Recharge_order></Recharge_order>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/charge/recharge_channel\"\n                    exact\n                    component={Recharge_channel}\n                  >\n                    <KeepAlive name=\"Recharge_channel\">\n                      <Recharge_channel></Recharge_channel>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/withdraw/withdraw_list\"\n                    exact\n                    component={Withdraw_list}\n                  >\n                    <KeepAlive name=\"Withdraw_list\">\n                      <Withdraw_list></Withdraw_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/artificialWithdraw/order\"\n                    exact\n                    component={Daiti_list}\n                  >\n                    <KeepAlive name=\"Daiti_list\">\n                      <Daiti_list />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/withdraw/channel\" exact>\n                    <KeepAlive name=\"Channel\">\n                      <Channel></Channel>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/gift/list\" exact>\n                    <KeepAlive name=\"GiftList\">\n                      <GiftList></GiftList>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/gift/setting\" exact>\n                    <KeepAlive name=\"GiftSetting\">\n                      <GiftSetting></GiftSetting>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/AI/robot\" exact>\n                    <KeepAlive name=\"AI\">\n                      <AI></AI>\n                    </KeepAlive>\n                  </Route>\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n            </Provider>\n          </Content>\n          {/* <Footer style={{ textAlign: \"center\", color: \"#cccccc\", padding: 5 }}>\n            推荐使用谷歌浏览器，可以获得更佳页面操作体验\n          </Footer> */}\n        </Layout>\n      </Layout>\n    );\n  }\n}\n","const defaultState = {\n  inputValue: \"\"\n};\nexport default (state = defaultState, action) => {\n  // console.log(state, action);\n  let newState = JSON.parse(JSON.stringify(state));\n  switch (action.type) {\n    case \"change_input\":\n      newState.inputValue = action.value;\n      break;\n    case \"resetPassword\":\n      newState.inputValue = \"\";\n      break;\n    default:\n      break;\n  }\n  return newState;\n};\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer.js\";\nconst store = createStore(reducer);\nexport default store;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Login from \"./pages/login/login\";\nimport Admin from \"./pages/admin/admin\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n\n//应用的根组件\n \nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            {/*只匹配其中一个*/}\n            <Route path=\"/login\" component={Login}></Route>\n            <Route path=\"/\" component={Admin}></Route>\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n","/*\n进行local数据存储管理的工具模块\n */\nimport store from 'store'\nconst USER = 'user_key'\nexport default {\n  /*\n  保存user\n   */\n  saveUser (user) {\n    // localStorage.setItem(USER_TOKEN, JSON.stringify(user))\n    store.set(USER, user)\n  },\n\n  /*\n  读取user\n   */\n  getUser () {\n    // return JSON.parse(localStorage.getItem(USER_TOKEN) || '{}')\n    return store.get(USER) || {}\n  },\n\n  /*\n  删除user\n   */\n  removeUser () {\n    localStorage.removeItem(USER)\n    store.remove(USER)\n  }\n}","/*\n入口js\n */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport storageUtils from './utils/storageUtils'\nimport memoryUtils from './utils/memoryUtils'\n\n\n\nimport { Router } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\nimport {Modal} from 'antd';\n\n//在react-router4中监听路由变化\nconst history = createBrowserHistory()\nhistory.listen((location, action) => {\n    // location is an object like window.location\n    console.log('history',action, location.pathname, location.state)\n    //每次变化执行\n    Modal.destroyAll();\n    //使用 Modal.destroyAll() 可以销毁弹出的确认窗（即 Modal.info、Modal.success、Modal.error、Modal.warning、Modal.confirm）。通常用于路由监听当中，处理路由前进、后退不能销毁确认对话框的问题，而不用各处去使用实例的返回值进行关闭（modal.destroy() 适用于主动关闭，而不是路由这样被动关闭）\n    //注意无法销毁<Modal></Modal>创建的模态框\n  })\n\n// 读取local中保存user, 保存到内存中\nconst user = storageUtils.getUser()\nmemoryUtils.user = user\n\n\n// 将App组件标签渲染到index页面的div上\nReactDOM.render(<Router history={history}>\n    <App/>\n  </Router>, document.getElementById('root'))"],"sourceRoot":""}