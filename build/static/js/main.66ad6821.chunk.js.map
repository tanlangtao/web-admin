{"version":3,"sources":["api/ajax.js","api/index.js","pages/login/login.jsx","components/left-nav/index.jsx","components/link-button/index.jsx","utils/memoryUtils.js","utils/storageUtils.js","components/header/index.jsx","pages/home/home.jsx","utils/dateUtils.js","pages/user/user-nick.jsx","pages/user/gold_details.jsx","components/MyDatePicker.jsx","pages/user/user.jsx","pages/admin_manage/admin_manage_list/addData.jsx","pages/admin_manage/admin_manage_list/admin_manage_list.jsx","pages/admin_manage/role/addData.jsx","pages/admin_manage/role/role.jsx","pages/charge/order_list/editData.jsx","pages/charge/order_list/order_list.jsx","pages/charge/channel_list/addorEdit.jsx","pages/charge/channel_list/channel_list.jsx","pages/charge/bankcard_list/addorEdit.jsx","pages/charge/bankcard_list/bankcard_list.jsx","pages/charge/recharge_order/recharge_order.jsx","pages/charge/recharge_channel/recharge_channel.jsx","pages/customer_service/notice_list/addorEdit.jsx","pages/customer_service/notice_list/index.jsx","pages/customer_service/customer_list/addorEdit.jsx","pages/customer_service/customer_list/index.jsx","pages/withdraw/withdraw_list/details.jsx","pages/withdraw/withdraw_list/index.jsx","pages/gameSetting/config/edit.jsx","pages/gameSetting/config/index.jsx","pages/messageCenter/tasks/edit.jsx","pages/messageCenter/tasks/index.jsx","pages/trade/accountList/edit.jsx","pages/trade/accountList/index.jsx","pages/trade/applyHistory/edit.jsx","pages/trade/applyHistory/index.jsx","pages/trade/tradeOrder/edit.jsx","pages/trade/tradeOrder/index.jsx","pages/activity/activityList/editForm.jsx","pages/activity/activityList/index.jsx","pages/activity/giftVoucher/editForm.jsx","pages/activity/giftVoucher/index.jsx","pages/gift/giftList/details.jsx","pages/gift/giftList/editForm.jsx","pages/gift/giftList/index.jsx","pages/gift/giftSetting/index.jsx","pages/AI/robot/index.jsx","pages/withdraw/Daiti_list/details.jsx","pages/withdraw/Daiti_list/edit.jsx","pages/withdraw/Daiti_list/index.jsx","pages/withdraw/Channel/index.jsx","pages/not-found/not-found.jsx","pages/list/DailyReport/dateGameReport.jsx","pages/list/DailyReport/details.jsx","pages/list/DailyReport/index.jsx","pages/admin_manage/ruleManage/edit.jsx","pages/admin_manage/ruleManage/index.jsx","pages/admin/admin.jsx","store/reducer.js","store/index.js","App.js","index.js"],"names":["ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","promise","axios","get","params","defaults","headers","post","transformRequest","ret","it","encodeURIComponent","then","response","catch","error","message","BASE","process","token","localStorage","setToken","reqLogin","username","password","authcode","reqAuthCode","navList","getAuthCode","editPass","reqUsers","page","limit","start","end","inputKey","inputValue","_ajax","Object","defineProperty","setGameUserNickName","id","game_nick","changeGold","record","value","obj","str","gold","desc","proxy_user_id","package_id","objectSpread","task_type","reqLoadGold","userDetail","bindInfo","user_id","saveUserBlack","action","createTask","resetpwd","params[id]","params[account_pass]","reqAdminList","searchAdminData","name","roleList","packageList","addUser","formValue","forEach","element","newobj","status","userStatus","group_id","userGroup","source","proxy","user_money","loadGold","pass","repass","confirmPssword","editUser","resetAuthCode","ruleList","addRule","editRule","rule_id","console","log","ruleDel","getRoleList","addRole","rules","editRole","role_name","role_id","getList","addNotice","formData","updateNotice","delNotice","customerList","saveCustomerService","dailyReport","dateReport","group_by","gameReport","oneDayGameReport","date","configList","conf_key","saveConf","tasksList","changeUserBalance","allAccountList","resetPassword","accountList","sellGoldApplyList","tradeRemark","sellGoldInfoList","reviewInfo2","remarkInfo2","sellGoldOrderList","activityConfigList","saveActivityConfig","delActivityConfig","giftVoucherList","reqOrder_list","start_time","end_time","order_status","reqLostOrder_list","order_id","orderReview","review_type","orderReviewEdit","downloadList","searchData","inputParam","paramKey","window","open","getChannelList","addChannel","editPayChannel","bankList","saveBankCard","deleteBankCard","rechargeOrder","getChannel","getChannelInfo","channel_id","editChannelInfo","pay_code","withDraw","flag","filed","time_type","reviewInfo","remarkInfo","downloadWithdrawList","withDrawRemark","temarks","remark_type","getConfigList","get_val","saveWithDrawChannel","alipay[name]","alipay[withdraw_type]","bankcard[name]","bankcard[withdraw_type]","withDrawReview","review_status","is_pass","getAIList","Item","es_form","Login","getMenuList","_callee","result","regenerator_default","a","wrap","_context","prev","next","sent","children","item","title","slice","menuList","JSON","stringify","_this","props","history","replace","stop","handleSubmit","event","preventDefault","form","validateFields","_ref2","asyncToGenerator","mark","_callee2","err","values","_context2","success","msg","_x","_x2","apply","this","handleClick","_ref3","_callee3","_context3","modal","info","content","react_default","createElement","src","qrurl","alt","_x3","_x4","validatePwd","rule","callback","test","react_router","to","getFieldDecorator","className","onSubmit","required","whitespace","min","max","pattern","initialValue","input","prefix","icon","style","color","placeholder","validator","marginTop","onClick","es_button","htmlType","Component","WrapLogin","create","SubMenu","menu","LeftNav","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","getMenuNodes","path","location","pathname","reduce","pre","find","currentValue","indexOf","key","openKey","push","openMenu","cpre","ele","react_router_dom","state","_this2","parse","getItem","menuNodes","justifyContent","mode","theme","selectedKeys","onOpenChange","openKeys","withRouter","LinkButton","assign","size","marginRight","memoryUtils","user","USER","storageUtils","saveUser","store","set","getUser","removeUser","removeItem","remove","TabPane","Header","onChange","activeKey","onEdit","targetKey","add","tabConfig","oldKey","panes","isTabExist","concat","newTabIndex","lastIndex","pane","i","filter","logout","confirm","onOk","assertThisInitialized","authCode","res","lib_default","width","resetPWD","isEditFormShow","handleEditSubmit","closable","clearInterval","intervalId","onRef","val","_this$props$form","getFieldValue","dropdown","overlay","trigger","tabs","hideAdd","map","tab","forceRender","visible","onCancel","footer","labelCol","span","labelAlign","label","WrappedHeader","Home","typing","timer","setTimeout","clearTimeout","fontSize","formateDate","time","timeStamp","parseInt","moment","format","FormItem","NormalLoginForm","_this$props","isNickModal","goldRecord","display","TextArea","autosize","minRows","maxRows","WrappedNormalLoginForm","GoldDetail","initColumns","isBindInfo","dataIndex","sorter","b","total_balance","_this$props$GoldDetai","GoldDetailRecord","count","table","bordered","rowKey","dataSource","columns","RangePicker","MyDatePicker","config_provider","locale","zh_CN","showTime","dateString","handleValue","Option","User","fixed","onCell","rowIndex","isNickShow","onDoubleClick","onContextMenu","onMouseEnter","target","cursor","onMouseLeave","game_gold","isGoldShow","render","regin_time","login_time","getGoldDetail","popconfirm","onConfirm","okText","cancelText","resetPwd","getLoadGold","getUsers","_ref","_result$data","game_user","proxy_user","startTime","endTime","proxy_nick","proxy_pid","changeNickName","refs","getFormValue","index","resetFields","loading","_x5","_x6","_ref4","_callee4","_context4","_x7","_ref5","_callee5","_context5","t0","isGoldDetailShow","_x8","_x9","_ref6","_callee6","isAdd","_context6","_x10","_x11","isResetPwdShow","resetPwdId","handleResetpwd","_callee7","_context7","pageSize","isBindInfoShow","_this$state","es_select","defaultValue","user_Option","ref","Input","extra","reload","card","pagination","defaultPageSize","showSizeChanger","showQuickJumper","showTotal","total","range","defaultCurrent","onShowSizeChange","current","scroll","x","y","user_nick","gold_details","e","AddDataForm","checkboxOnChange","checkedList","indeterminate","checkAll","onCheckAllChange","list","checked","setFieldsValue","isEdit","editDataRecord","refreshPage","cancel","isBan","group","split","Number","optionList","es_radio","Group","es_checkbox","options","use_balance","WrappedAddDataForm","Admin_manage_list","text","wordWrap","wordBreak","align","edit","onSearchData","addData","isAddDataShow","isEditDataShow","_onOk","handleChange","bind","TreeNode","getTreeNodes","onSelect","node","expandedKeys","isLeaf","expanded","k","eventKey","onCheck","checkedKeys","onExpand","defaultCheckedKeys","treeData","tree","checkable","description","Role","role_addData","Diaodan","handleRecieveSubmit","Order_list","isQueryShow","download","word","replace_id","amount","arrival_amount","created_at","arrival_at","isEditShow","editUser_id","editMount","editType","editRefused","float","editData","wrapperCol","nick_name","pay_type","min_amount","max_amount","span_amount","seed","rate","sort","Channel_list","addorEdit","card_name","bank_name","card_num","offset","Bankcard_list","delete","bankcard_list_addorEdit","Recharge_order","Recharge_channel","expandedRowRender","indent","childData","onExpandRow","keys","expandedRowKeys","recordId","handleEditData","expandRowByClick","getPackageList","arr","_id","$oid","package_ids","is_open","words","date_picker","Notice_list","onDelete","join","popover","overlayStyle","textOverflow","whiteSpace","overflow","notice_list_addorEdit","Customer_list","handleReset","create_time","customer_list_addorEdit","detailRecord","Withdraw_list","getDetail","user_remark","dataPickerOnChange","t1","isDetailShow","details","WrappedEditForm","finished","conf_val","Config","getInitialData","onSearch","onAdd","data[id]","data[params]","data[status]","reason","Tasks","review","refuse","operator_nick","tasks_edit","EditForm","pay_url","checkQrcode","AccountList","checkAccount","accountList_edit","checkDetail","okType","userRemarkInput","editComfirm","operatorRemarkInput","abrupt","applyHistory_edit","tradeOrder_edit","is_close","need_mobile","need_bankcard","order_by","editForm","giftVoucher_editForm","orderStatus","editRecord","giftList_details","giftList_editForm","Channel","initialData","WrappedChannel","check","submitRemark","margin","onBlur","userRemark","operatorRemark","Daiti","Daiti_list_RangePicker","Daiti_list_details","edit_AddDataForm","_this$initialData","bankcard","channel","alipay","artificial","valuePropName","es_switch","checkedChildren","unCheckedChildren","divider","channel_name","NotFound","row","col","DateGameReport","MoreDetail","getGameReport","footerData","isGameReportShow","nextLevelData","reportData","dateGameReport","DailyReport","getDateReport","newRes","parseData","format_data","order","first_pay_user_number","first_pay_user","pay_user_number","pay_user","first_pay_user_number_res","first_pay_user_res","pay_user_number_res","pay_user_res","exchange_user_number","exchange_user","exchange_user_number_res","exchange_user_res","d","game","statement_ratio","Math","abs","lose_statement_total","win_statement_total","toFixed","round","statement_total","code","parseDateData","parseGameData","reportTable","packageNode","diff","marginBottom","backgroundColor","border","DailyReport_details","pid","module","href","router_key","Rule","layout","ruleManage_edit","RuleManage","Sider","Content","Admin","minHeight","components_left_nav","child1","components_header","Provider","height","from","exact","component","KeepAlive","user_User","notice_list","customer_list","admin_manage_list","ruleManage","role","list_DailyReport","config","tasks","trade_accountList","applyHistory","tradeOrder","activityList","giftVoucher","order_list","channel_list","bankcard_list","recharge_order","recharge_channel","withdraw_list","Daiti_list","withdraw_Channel","giftList","giftSetting","robot","defaultState","createStore","newState","App","es","createBrowserHistory","listen","destroyAll","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.66ad6821.chunk.js","sourcesContent":["/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\n//设置axios为form-data\r\n\r\nexport default function ajax(url, data = {}, type = \"GET\") {\r\n  // axios.interceptors.request.use((config) => {\r\n  //   if (['/user/login', '/user/register'].indexOf(config.url) === -1) {\r\n  //     const token = localStorage.getItem('token')\r\n  //     if (token) {\r\n  //       config.headers.Authorization = token\r\n  //     }\r\n  //   }\r\n  //   return config\r\n  // })\r\n  return new Promise((resolve, reject) => {\r\n    let promise;\r\n    // 1. 执行异步ajax请求\r\n    if (type === \"GET\") {\r\n      // 发GET请求\r\n      promise = axios.get(url, {\r\n        // 配置对象\r\n        params: data // 指定请求参数\r\n      });\r\n    } else {\r\n      // 发POST请求\r\n      axios.defaults.headers.post[\"Content-Type\"] =\r\n        \"application/x-www-form-urlencoded\";\r\n      axios.defaults.transformRequest = [\r\n        function(data) {\r\n          let ret = \"\";\r\n          for (let it in data) {\r\n            ret +=\r\n              encodeURIComponent(it) + \"=\" + encodeURIComponent(data[it]) + \"&\";\r\n          }\r\n          return ret;\r\n        }\r\n      ];\r\n      promise = axios.post(url, data);\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise\r\n      .then(response => {\r\n        resolve(response.data);\r\n        // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n      })\r\n      .catch(error => {\r\n        // reject(error)\r\n        message.error(\"请求出错了: \" + error.message);\r\n      });\r\n  });\r\n}","import ajax from \"./ajax\";\r\n//import storageUtils from \"../utils/storageUtils\";\r\n// import token from '../pages/login'\r\n//import memory from\r\n\r\nconst BASE = process.env.REACT_APP_HOST;\r\n\r\nvar token = localStorage.token || \"\";\r\n//登陆成功后赋值token\r\nexport const setToken = () => {\r\n  token = localStorage.token;\r\n};\r\n\r\n// 登陆\r\nexport const reqLogin = (username, password, authcode) =>\r\n  ajax(BASE + \"/login/login\", { username, password, authcode }, \"POST\");\r\n\r\n// 获取authCode\r\nexport const reqAuthCode = (username, password) =>\r\n  ajax(BASE + \"/login/authCode\", { username, password }, \"POST\");\r\n\r\n// 获取菜单\r\nexport const navList = () => {\r\n  const token = localStorage.token;\r\n  return ajax(BASE + \"/acl/navList\", { token }, \"POST\");\r\n};\r\n//安全码设置\r\nexport const getAuthCode = () =>\r\n  ajax(BASE + \"/index/getAuthCode\", { token }, \"POST\");\r\n//修改密码\r\nexport const editPass = password =>\r\n  ajax(BASE + \"/acl/editPass\", { token, password }, \"POST\");\r\n//用户列表\r\nexport const reqUsers = (page, limit, start, end, inputKey, inputValue) => {\r\n  return ajax(\r\n    BASE + \"/user/index\",\r\n    { page, limit, start, end, [inputKey]: inputValue, token },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const setGameUserNickName = (id, game_nick) =>\r\n  ajax(BASE + \"/user/setGameUserNickName\", { token, id, game_nick }, \"POST\");\r\nexport const changeGold = (record, value) => {\r\n  let obj = {};\r\n  let str = \"params[user_id]\";\r\n  obj[str] = record.id;\r\n  str = \"params[amount]\";\r\n  obj[str] = value.gold;\r\n  str = \"params[reason]\";\r\n  obj[str] = value.desc;\r\n  str = \"params[user_name]\";\r\n  obj[str] = record.game_nick;\r\n  str = \"params[proxy_user_id]\";\r\n  obj[str] = record.proxy_user_id;\r\n  str = \"params[package_id]\";\r\n  obj[str] = record.package_id;\r\n  return ajax(\r\n    BASE + \"/user/changeGold\",\r\n    { token, task_type: 0, ...obj },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const reqLoadGold = id => {\r\n  return ajax(\r\n    BASE + \"/user/getGameUser\",\r\n    {\r\n      page: 1,\r\n      limit: 10,\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const userDetail = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/user/userDetail\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const bindInfo = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/user/bindInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      user_id: id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveUserBlack = (user_id, action) => {\r\n  return ajax(\r\n    BASE + \"/trade/saveUserBlack\",\r\n    {\r\n      token,\r\n      type: 1,\r\n      user_id,\r\n      action\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const createTask = (user_id, resetpwd) => {\r\n  return ajax(\r\n    BASE + \"/tasks/createTask\",\r\n    {\r\n      token,\r\n      task_type: 2,\r\n      \"params[id]\": user_id,\r\n      \"params[account_pass]\": resetpwd\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//后台管理-账户列表\r\nexport const reqAdminList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/acl/index\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const searchAdminData = name => {\r\n  return ajax(\r\n    BASE + \"/acl/index\",\r\n    {\r\n      page: 1,\r\n      limit: 20,\r\n      token,\r\n      name\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const roleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/roleList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const packageList = () => {\r\n  return ajax(\r\n    BASE + \"/user/packageList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addUser = formValue => {\r\n  let obj = {};\r\n  formValue.packageList.forEach(element => {\r\n    let str = \"group[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    username: formValue.username,\r\n    status: formValue.userStatus,\r\n    group_id: formValue.userGroup,\r\n    source: formValue.proxy ? formValue.proxy : [],\r\n    ...obj,\r\n    user_money: formValue.loadGold,\r\n    pass: formValue.password,\r\n    repass: formValue.confirmPssword,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/addUser\", newobj, \"POST\");\r\n};\r\nexport const editUser = (formValue, id) => {\r\n  let obj = {};\r\n  formValue.packageList.forEach(element => {\r\n    let str = \"group[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    id,\r\n    username: formValue.username,\r\n    status: formValue.userStatus,\r\n    group_id: formValue.userGroup,\r\n    source: formValue.proxy ? formValue.proxy : [],\r\n    ...obj,\r\n    user_money: formValue.loadGold,\r\n    pass: formValue.password ? formValue.password : [],\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/editUser\", newobj, \"POST\");\r\n};\r\nexport const resetAuthCode = id => {\r\n  return ajax(\r\n    BASE + \"/acl/resetAuthCode\",\r\n    {\r\n      id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//后台管理-权限列表\r\nexport const ruleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/ruleList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addRule = value => {\r\n  return ajax(\r\n    BASE + \"/acl/addRule\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const editRule = (rule_id, value) => {\r\n  console.log(value);\r\n\r\n  return ajax(BASE + \"/acl/editRule\", { ...value, rule_id, token }, \"POST\");\r\n};\r\nexport const ruleDel = id => {\r\n  return ajax(\r\n    BASE + \"/acl/ruleDel\",\r\n    {\r\n      id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//后台管理-角色管理\r\nexport const getRoleList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/acl/roleList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const getRuleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/ruleList\",\r\n    {\r\n      page: 1,\r\n      limit: 10,\r\n      token,\r\n      flag: 1\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const addRole = (name, rules, desc) => {\r\n  let obj = {};\r\n  rules.forEach(element => {\r\n    let str = \"rules[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    name,\r\n    ...obj,\r\n    desc,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/addRole\", newobj, \"POST\");\r\n};\r\nexport const editRole = (name, rules, desc, id) => {\r\n  let obj = {};\r\n  rules.forEach(element => {\r\n    let str = \"rules[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    role_name: name,\r\n    role_id: id,\r\n    ...obj,\r\n    desc,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/editRole\", newobj, \"POST\");\r\n};\r\n//客服-公告设置\r\nexport const getList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/notice/getList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addNotice = formData => {\r\n  return ajax(\r\n    BASE + \"/notice/addNotice\",\r\n    {\r\n      token,\r\n      ...formData\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const updateNotice = (formData, id) => {\r\n  return ajax(\r\n    BASE + \"/notice/updateNotice\",\r\n    {\r\n      token,\r\n      id,\r\n      ...formData\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const delNotice = id => {\r\n  return ajax(\r\n    BASE + \"/notice/delNotice\",\r\n    {\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//客服-代充账号\r\nexport const customerList = (page, limit, user_id) => {\r\n  return ajax(\r\n    BASE + \"/customer/customerList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      user_id: user_id ? user_id : \"\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveCustomerService = (formData, action, user_id) => {\r\n  if (user_id) {\r\n    formData.user_id = user_id;\r\n  }\r\n  return ajax(\r\n    BASE + \"/customer/saveCustomerService\",\r\n    {\r\n      token,\r\n      ...formData,\r\n      action\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//报表-日常运营\r\nexport const dailyReport = (page, limit, package_id, start = \"\", end = \"\") => {\r\n  return ajax(\r\n    BASE + \"/report/dailyReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      start,\r\n      end\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const dateReport = (page, limit, package_id, start = \"\", end = \"\") => {\r\n  return ajax(\r\n    BASE + \"/report/dateReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      start,\r\n      end,\r\n      group_by: \"date\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const gameReport = (page, limit, package_id, start = \"\", end = \"\") => {\r\n  return ajax(\r\n    BASE + \"/report/gameReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      start,\r\n      end,\r\n      group_by: \"game_id\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const oneDayGameReport = (page, limit, package_id, date) => {\r\n  return ajax(\r\n    BASE + \"/report/gameReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      date,\r\n      group_by: \"game_id\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//游戏设置-配置项\r\nexport const configList = (page, limit, conf_key) => {\r\n  return ajax(\r\n    BASE + \"/config/list\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      conf_key: conf_key ? conf_key : \"\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveConf = (value, action) => {\r\n  return ajax(\r\n    BASE + \"/config/saveConf\",\r\n    {\r\n      ...value,\r\n      action,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//消息中心-任务列表\r\nexport const tasksList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/tasks/tasksList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const changeUserBalance = value => {\r\n  return ajax(\r\n    BASE + \"/tasks/changeUserBalance\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//交易所-收付款管理\r\nexport const allAccountList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/trade/allAccountList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const resetPassword = user_id => {\r\n  return ajax(\r\n    BASE + \"/trade/resetPassword\",\r\n    {\r\n      user_id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const accountList = user_id => {\r\n  return ajax(BASE + \"/trade/accountList\", { user_id, token }, \"POST\");\r\n};\r\n\r\n//交易所-申请上架历史\r\nexport const sellGoldApplyList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/trade/sellGoldApplyList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const tradeRemark = value => {\r\n  return ajax(\r\n    BASE + \"/trade/tradeRemark\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const sellGoldInfoList = (page, limit, user_id) => {\r\n  return ajax(\r\n    BASE + \"/order/sellGoldInfoList\",\r\n    {\r\n      page,\r\n      limit,\r\n      user_id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const reviewInfo2 = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/reviewInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      id,\r\n      type: 3,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const remarkInfo2 = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/remarkInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      id,\r\n      type: 6,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//交易所-交易订单\r\nexport const sellGoldOrderList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/trade/sellGoldOrderList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//活动-活动列表\r\nexport const activityConfigList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/activity/activityConfigList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveActivityConfig = value => {\r\n  return ajax(\r\n    BASE + \"/activity/saveActivityConfig\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const delActivityConfig = id => {\r\n  return ajax(\r\n    BASE + \"/activity/delActivityConfig\",\r\n    {\r\n      id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\n//活动-礼金券领取列表\r\nexport const giftVoucherList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/activity/giftVoucherList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\n//充值-充值订单\r\nexport const reqOrder_list = (\r\n  page,\r\n  limit,\r\n  start_time,\r\n  end_time,\r\n  order_status,\r\n  type,\r\n  inputKey,\r\n  inputValue\r\n) => {\r\n  if (inputKey === \"1\" || inputKey === \"2\") {\r\n    inputValue = inputKey;\r\n    inputKey = \"time_type\";\r\n  }\r\n  return ajax(\r\n    BASE + \"/order/recharge\",\r\n    { start_time, end_time, order_status, type, token, [inputKey]: inputValue },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const reqLostOrder_list = (page, limit, user_id, order_id) => {\r\n  return ajax(\r\n    BASE + \"/order/recharge\",\r\n    { page, limit, order_id, user_id, token },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const orderReview = (user_id, order_id) => {\r\n  return ajax(\r\n    BASE + \"/order/orderReview\",\r\n    { user_id, order_id, status: 7, review_type: 1, token },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const orderReviewEdit = (user_id, order_id, type) => {\r\n  return ajax(\r\n    BASE + \"/order/orderReview\",\r\n    { user_id, order_id, status: 8, review_type: 2, token, type },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const downloadList = searchData => {\r\n  let {\r\n    start_time,\r\n    end_time,\r\n    order_status,\r\n    type,\r\n    inputParam,\r\n    paramKey\r\n  } = searchData;\r\n  if (!paramKey || paramKey === \"\") {\r\n    paramKey = 0;\r\n  }\r\n  let params =\r\n    \"token=\" +\r\n    token +\r\n    \"&filed=\" +\r\n    paramKey +\r\n    \"&keyword=\" +\r\n    inputParam +\r\n    \"&start_time=\" +\r\n    start_time +\r\n    \"&end_time=\" +\r\n    end_time +\r\n    \"&order_status=\" +\r\n    order_status +\r\n    \"&type=\" +\r\n    type;\r\n  let url = BASE + \"/order/recharge/?export=2&\" + params;\r\n  if (paramKey) {\r\n    switch (paramKey) {\r\n      case \"user_id\":\r\n        url = url + \"&user_id=\" + inputParam;\r\n        break;\r\n      case \"order_id\":\r\n        url = url + \"&order_id=\" + inputParam;\r\n        break;\r\n      case \"create_time\":\r\n        url = url + \"&time_type=1\";\r\n        break;\r\n      case \"arrival_time\":\r\n        url = url + \"&time_type=2\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  window.open(url);\r\n};\r\nexport const getChannelList = (page, limit, name) => {\r\n  return ajax(\r\n    BASE + \"/order/channelList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      name: name ? name : \"\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addChannel = value => {\r\n  return ajax(\r\n    BASE + \"/order/addChannel\",\r\n    {\r\n      ...value,\r\n      token,\r\n      action: \"add\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const editPayChannel = (value, id) => {\r\n  return ajax(\r\n    BASE + \"/order/editPayChannel\",\r\n    {\r\n      ...value,\r\n      token,\r\n      id,\r\n      action: \"edit\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-古都银行卡\r\nexport const bankList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/order/bankList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const saveBankCard = (searchData, id) => {\r\n  if (id) {\r\n    searchData.id = id;\r\n  }\r\n  return ajax(\r\n    BASE + \"/order/saveBankCard\",\r\n    {\r\n      ...searchData,\r\n      action: id ? \"edit\" : \"add\",\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const deleteBankCard = id => {\r\n  return ajax(\r\n    BASE + \"/order/saveBankCard\",\r\n    {\r\n      id,\r\n      action: \"del\",\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-代充订单\r\nexport const rechargeOrder = (\r\n  page,\r\n  limit,\r\n  start_time,\r\n  end_time,\r\n  order_status,\r\n  inputKey,\r\n  inputValue\r\n) => {\r\n  return ajax(\r\n    BASE + \"/order/rechargeOrder\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      type: 14,\r\n      start_time,\r\n      end_time,\r\n      order_status,\r\n      [inputKey]: inputValue\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-渠道配置\r\nexport const getChannel = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/order/getChannel\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const getChannelInfo = channel_id => {\r\n  return ajax(\r\n    BASE + \"/order/getChannelInfo\",\r\n    {\r\n      page: 1,\r\n      limit: 20,\r\n      token,\r\n      channel_id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const editChannelInfo = (id, pay_code) => {\r\n  return ajax(\r\n    BASE + \"/order/editChannelInfo\",\r\n    {\r\n      id,\r\n      token,\r\n      pay_code\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//兑换-兑换订单&代提设置\r\nexport const withDraw = (page, limit, flag, searchData) => {\r\n  if (searchData) {\r\n    let {\r\n      start_time,\r\n      end_time,\r\n      order_status,\r\n      type,\r\n      inputParam,\r\n      filed\r\n    } = searchData;\r\n    //处理输入关键字和选择关键字，组合成传输参数\r\n    let obj = {};\r\n    if (filed !== \"create_time\" && filed !== \"arrival_time\") {\r\n      obj[filed] = inputParam;\r\n    } else if (filed !== \"create_time\") {\r\n      obj.time_type = 1;\r\n    } else if (filed !== \"arrival_time\") {\r\n      obj.time_type = 2;\r\n    }\r\n    return ajax(\r\n      BASE + \"/order/withDraw\",\r\n      {\r\n        page,\r\n        limit,\r\n        token,\r\n        start_time,\r\n        end_time,\r\n        order_status,\r\n        type,\r\n        ...obj,\r\n        flag\r\n      },\r\n      \"POST\"\r\n    );\r\n  } else {\r\n    return ajax(\r\n      BASE + \"/order/withDraw\",\r\n      {\r\n        page,\r\n        limit,\r\n        token,\r\n        flag\r\n      },\r\n      \"POST\"\r\n    );\r\n  }\r\n};\r\nexport const reviewInfo = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/reviewInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      id,\r\n      type: 2\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const remarkInfo = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/remarkInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      id,\r\n      type: 2\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const downloadWithdrawList = searchData => {\r\n  let {\r\n    start_time,\r\n    end_time,\r\n    order_status,\r\n    type,\r\n    inputParam,\r\n    filed\r\n  } = searchData;\r\n  let params =\r\n    \"token=\" +\r\n    token +\r\n    \"&filed=\" +\r\n    filed +\r\n    \"&keyword=\" +\r\n    inputParam +\r\n    \"&start_time=\" +\r\n    start_time +\r\n    \"&end_time=\" +\r\n    end_time +\r\n    \"&order_status=\" +\r\n    order_status +\r\n    \"&type=\" +\r\n    type;\r\n  let url = BASE + \"/order/withDraw/?export=2&flag=2&\" + params;\r\n  if (filed) {\r\n    switch (filed) {\r\n      case \"user_id\":\r\n        url = url + \"&user_id=\" + inputParam;\r\n        break;\r\n      case \"order_id\":\r\n        url = url + \"&order_id=\" + inputParam;\r\n        break;\r\n      case \"create_time\":\r\n        url = url + \"&time_type=1\";\r\n        break;\r\n      case \"arrival_time\":\r\n        url = url + \"&time_type=2\";\r\n        break;\r\n      case \"replace_id\":\r\n        url = url + \"&replace_id=\" + inputParam;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  window.open(url);\r\n};\r\nexport const withDrawRemark = (id, temarks, remark_type) => {\r\n  return ajax(\r\n    BASE + \"/order/withDrawRemark\",\r\n    {\r\n      token,\r\n      id,\r\n      temarks,\r\n      remark_type,\r\n      type: 2\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//兑换-第三方提款设置\r\nexport const getConfigList = () => {\r\n  return ajax(\r\n    BASE + \"/config/list\",\r\n    {\r\n      conf_key: \"withdraw_channel_info\",\r\n      get_val: 1,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveWithDrawChannel = (id, name, value) => {\r\n  return ajax(\r\n    BASE + \"/config/saveWithDrawChannel\",\r\n    {\r\n      id,\r\n      name,\r\n      ...value,\r\n      \"alipay[name]\": \"支付宝\",\r\n      \"alipay[withdraw_type]\": 1,\r\n      \"bankcard[name]\": \"银行卡\",\r\n      \"bankcard[withdraw_type]\": 2,\r\n      conf_key: \"withdraw_channel_info\",\r\n      action: \"edit\",\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//赠送-赠送订单\r\nexport const withDrawReview = (order_id, user_id, review_status) => {\r\n  return ajax(\r\n    BASE + \"/order/withDraw\",\r\n    {\r\n      token,\r\n      order_id,\r\n      review_status,\r\n      user_id,\r\n      review_type: 1,\r\n      is_pass: 1\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//AI\r\nexport const getAIList = (page, limit, package_id, value) => {\r\n  return ajax(\r\n    BASE + \"/user/index\",\r\n    {\r\n      page,\r\n      limit,\r\n      package_id,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Icon, Input, Button, Modal, message } from \"antd\";\r\nimport \"./login.less\";\r\nimport { reqLogin, reqAuthCode, navList,setToken } from \"../../api\";\r\n\r\nconst Item = Form.Item; \r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n    if (result.status === 0) {\r\n      let { data } = result;\r\n      data.forEach(element => {\r\n        if (element.children) {\r\n          element.children.forEach(item => {\r\n            item.title = item.title.slice(24);\r\n          });\r\n        }\r\n      });\r\n      localStorage.menuList = JSON.stringify(data);\r\n      // 跳转到管理界面 (不需要再回退回到登陆)\r\n      this.props.history.replace(\"/\");\r\n\r\n      // setTimeout(() => this.props.history.replace(\"/\"), 300);\r\n    }\r\n  };\r\n  handleSubmit = event => {\r\n    // 阻止事件的默认行为\r\n    event.preventDefault();\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // 请求登陆\r\n        const { username, password, authcode } = values;\r\n        const result = await reqLogin(username, password, authcode);\r\n\r\n        if (result.status === 0) {\r\n          // 登陆成功\r\n          message.success(\"登陆成功\");\r\n          // storageUtils.saveUser(result.data); // 保存到local中\r\n          localStorage.token = result.data.token;\r\n          localStorage.name = result.data.name;\r\n          setToken()\r\n          this.getMenuList();\r\n        } else {\r\n          // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"检验失败!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // 请求登陆\r\n        const { username, password } = values;\r\n        const result = await reqAuthCode(username, password);\r\n        console.log(\"请求成功\", result);\r\n        if (result.status === 0 && result.data) {\r\n          // 登陆成功\r\n          Modal.info({\r\n            title: \"首次登录扫码获取验证码\",\r\n            content: (\r\n              <div>\r\n                <img src={result.data.qrurl} alt=\"验证码\" />\r\n              </div>\r\n            )\r\n          });\r\n        } else {\r\n          // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"检验失败!\");\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  };\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    console.log(\"validatePwd()\", rule, value);\r\n    if (!value) {\r\n      callback(\"密码必须输入\");\r\n    } else if (value.length < 4) {\r\n      callback(\"密码长度不能小于4位\");\r\n    } else if (value.length > 12) {\r\n      callback(\"密码长度不能大于12位\");\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback(\"密码必须是英文、数字或下划线组成\");\r\n    } else {\r\n      callback(); // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  };\r\n\r\n  render() {\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const token = localStorage.token;\r\n    if (token) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form;\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <h1>QGame: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {/*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */}\r\n              {getFieldDecorator(\"username\", {\r\n                // 配置对象: 属性名是特定的一些名称\r\n                // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"用户名必须输入\"\r\n                  },\r\n                  { min: 3, message: \"用户名至少3位\" },\r\n                  { max: 12, message: \"用户名最多12位\" },\r\n                  {\r\n                    pattern: /^[a-zA-Z0-9_]+$/,\r\n                    message: \"用户名必须是英文、数字或下划线组成\"\r\n                  }\r\n                ],\r\n                initialValue: \"ice\" // 初始值\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"用户名\"\r\n                />\r\n              )}\r\n            </Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  {\r\n                    validator: this.validatePwd\r\n                  }\r\n                ],\r\n                initialValue: \"123456\"\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"authcode\", {\r\n                rules: [\r\n                  //{ required: true, whitespace: true, message: '验证码必须输入' },\r\n                  //{ min: 4, message: '验证码至少4位' }\r\n                ],\r\n                initialValue: \"123456\"\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"qrcode\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"验证码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <span style={{ marginTop: 5 }} onClick={this.handleClick}>\r\n              首次登录，手机下载Google Authenticator\r\n              安装，点击此处扫码获取验证码\r\n            </span>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst WrapLogin = Form.create()(Login);\r\nexport default WrapLogin;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu, message } from \"antd\";\r\nimport { navList } from \"../../api\";\r\nimport \"./index.less\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n// 左侧导航的组件\r\nclass LeftNav extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { data: [], openKey: \"\" };\r\n  }\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n\r\n    if (result.status === 0) {\r\n      //登陆成功\r\n      this.setState({\r\n        data: result.data\r\n      });\r\n    } else {\r\n      // 提示错误信息\r\n      message.error(result.msg);\r\n    }\r\n  };\r\n  /*\r\n   获取左侧菜单导航栏\r\n    */\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data\r\n      });\r\n    } else {\r\n      message.error(\"网络问题，请重新登陆\");\r\n    }\r\n  };\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = menuList => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname;\r\n    return menuList.reduce((pre, item) => {\r\n      // 向pre添加<Menu.Item>\r\n      // if (item.key) {\r\n        //按需渲染侧边栏，必须已经在后台-权限管理中设置了路由key才能渲染\r\n        if (!item.children) {\r\n          pre.push(\r\n            <Menu.Item\r\n              key={item.key}\r\n              onClick={() => {\r\n                this.props.onClick(item);\r\n                this.openMenu = item.key;\r\n              }}\r\n            >\r\n              <Link to={item.key}>\r\n                {/* <Icon type={item.icon} /> */}\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(\r\n            currentValue => path.indexOf(currentValue.key) === 0\r\n          );\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key;\r\n            // this.setState({ openKey: item.key });\r\n          }\r\n          pre.push(\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n              onClick={() => {\r\n                this.openMenu = item.key;\r\n                // console.log(this.openMenu);\r\n              }}\r\n            >\r\n              {item.children.reduce((cpre, ele) => {\r\n                cpre.push(\r\n                  <Menu.Item\r\n                    key={ele.key}\r\n                    onClick={() => {\r\n                      this.props.onClick(ele);\r\n                    }}\r\n                  >\r\n                    <Link to={ele.key}>\r\n                      <span>{ele.title}</span>\r\n                    </Link>\r\n                  </Menu.Item>\r\n                );\r\n                return cpre;\r\n              }, [])}\r\n            </SubMenu>\r\n          );\r\n        }\r\n      // }\r\n      return pre;\r\n    }, []);\r\n  };\r\n  componentDidMount() {\r\n    this.setState({openKey:this.openKey})\r\n  }\r\n  render() {\r\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n    const menuNodes = this.getMenuNodes(menuList);\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname;\r\n    // 得到需要打开菜单项的key\r\n    // const openKey = this.openKey;\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link\r\n          to=\"/\"\r\n          className=\"left-nav-header\"\r\n          style={{ justifyContent: \"center\" }}\r\n        >\r\n          <h1>QGame后台管理</h1>\r\n        </Link>\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          // defaultOpenKeys={[this.openKey]}\r\n          onOpenChange={key => {\r\n            console.log(key);\r\n            if (key[1] && key[0] !== key[1]) {\r\n              this.setState({ openKey: key[1] });\r\n            } else {\r\n              this.setState({ openKey: null });\r\n            }\r\n          }}\r\n          openKeys={[this.state.openKey]}\r\n        >\r\n          {menuNodes}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default withRouter(LeftNav);\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nexport default function LinkButton(props) {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      size='small'\r\n      style={{ marginRight: 10}}\r\n      {...props}\r\n    ></Button>\r\n  );\r\n}\r\n","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {}, // 保存当前登陆的user\r\n  token:''\r\n}","/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_TOKEN, JSON.stringify(user))\r\n    store.set(USER, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_TOKEN) || '{}')\r\n    return store.get(USER) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    localStorage.removeItem(USER)\r\n    store.remove(USER)\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {\r\n  Modal,\r\n  Tabs,\r\n  Dropdown,\r\n  Menu,\r\n  Icon,\r\n  Button,\r\n  message,\r\n  Input,\r\n  Form\r\n} from \"antd\";\r\n\r\nimport LinkButton from \"../link-button\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport { getAuthCode, editPass } from \"../../api\";\r\nimport QRCode from \"qrcode.react\";\r\nimport \"./index.less\";\r\nconst { TabPane } = Tabs;\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.newTabIndex = 0;\r\n    const panes = [\r\n      {\r\n        title: \"首页\",\r\n        content: \"Content of Tab 1\",\r\n        key: \"1\",\r\n        closable: false,\r\n        path: \"/home\"\r\n      }\r\n    ];\r\n    this.state = {\r\n      activeKey: panes[0].key,\r\n      panes,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  onChange = activeKey => {\r\n    this.setState({ activeKey });\r\n  };\r\n\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  };\r\n\r\n  add = tabConfig => {\r\n    // console.log(\"tabConfig\", tabConfig);\r\n    const { panes } = this.state;\r\n    let isTabExist = false;\r\n    let oldKey;\r\n    panes.forEach(item => {\r\n      if (item.title === tabConfig.title) {\r\n        isTabExist = true;\r\n        oldKey = item.key;\r\n      }\r\n    });\r\n    if (isTabExist) {\r\n      this.onChange(oldKey);\r\n    } else {\r\n      const activeKey = `newTab${this.newTabIndex++}`;\r\n      panes.push({\r\n        title: tabConfig.title,\r\n        content: \"Content of new Tab\",\r\n        key: activeKey,\r\n        path: tabConfig.key\r\n      });\r\n      this.onChange(activeKey);\r\n      this.setState({ panes, activeKey });\r\n    }\r\n  };\r\n\r\n  remove = targetKey => {\r\n    let { activeKey } = this.state;\r\n    let lastIndex;\r\n    this.state.panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n    if (panes.length && activeKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        activeKey = panes[lastIndex].key;\r\n      } else {\r\n        activeKey = panes[0].key;\r\n      }\r\n    }\r\n    this.setState({ panes, activeKey });\r\n  };\r\n\r\n  /*\r\n  退出登陆\r\n   */\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: \"确定退出吗?\",\r\n      onOk: () => {\r\n        console.log(\"OK\", this);\r\n        // 删除保存的user数据\r\n        storageUtils.removeUser();\r\n        memoryUtils.user = {};\r\n        localStorage.removeItem(\"menuList\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"name\");\r\n        // 跳转到login\r\n        this.props.history.replace(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId);\r\n  }\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this);\r\n    let data = this.state;\r\n    const path = this.props.location.pathname;\r\n    let title;\r\n    if (path !== \"/home\" && path !== \"/\") {\r\n      const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n      menuList.forEach(item => {\r\n        if (!item.children && item.key === path) {\r\n          title = item.title;\r\n        } else if (item.children) {\r\n          item.children.forEach(val => {\r\n            if (val.key === path) {\r\n              title = val.title;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      data.activeKey = \"2\";\r\n      data.panes.push({\r\n        title: title,\r\n        key: \"2\",\r\n        path: path\r\n      });\r\n      this.setState({\r\n        ...data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = localStorage.getItem(\"name\");\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <Dropdown\r\n            overlay={\r\n              <Menu>\r\n                <Menu.Item key=\"0\">\r\n                  <Button type=\"link\" onClick={this.authCode}>\r\n                    安全码设置\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"1\">\r\n                  <Button type=\"link\" onClick={this.resetPWD}>\r\n                    修改密码\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu>\r\n            }\r\n            trigger={[\"click\"]}\r\n          >\r\n            <Button type=\"link\">\r\n              {username} <Icon type=\"down\" />\r\n            </Button>\r\n          </Dropdown>\r\n          <LinkButton onClick={this.logout} size=\"default\">\r\n            退出\r\n          </LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          {/* <div className=\"header-bottom-left\">{title}</div> */}\r\n          <Tabs\r\n            onChange={this.onChange}\r\n            activeKey={this.state.activeKey}\r\n            type=\"editable-card\"\r\n            onEdit={this.onEdit}\r\n            hideAdd\r\n          >\r\n            {this.state.panes.map(pane => (\r\n              <TabPane\r\n                tab={<Link to={pane.path}>{pane.title}</Link>}\r\n                key={pane.key}\r\n                closable={pane.closable}\r\n                forceRender\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </div>\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <Form\r\n              labelCol={{ span: 6 }}\r\n              labelAlign=\"left\"\r\n              onSubmit={this.handleEditSubmit}\r\n            >\r\n              <Form.Item label=\"新密码\">\r\n                {getFieldDecorator(\"editPass\", {\r\n                  rules: [\r\n                    { required: true, message: \"密码不能为空\" },\r\n                    { whitespace: true },\r\n                    { min: 6, message: \"密码至少6位\" },\r\n                    { max: 16, message: \"密码最多16位\" }\r\n                    // {\r\n                    //   pattern: /^[a-zA-Z0-9_]+$/,\r\n                    //   message: \"用户名必须是英文、数字或下划线组成\"\r\n                    // }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    style={{ width: \"40%\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"6到16个字符\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"重复密码\">\r\n                {getFieldDecorator(\"repeat\", {\r\n                  rules: [\r\n                    { required: true },\r\n                    {\r\n                      validator: (rule, value, callback) => {\r\n                        if (!value) {\r\n                          callback(); //如果还没填写，则不进行一致性验证\r\n                        }\r\n                        if (value === getFieldValue(\"editPass\")) {\r\n                          callback();\r\n                        } else {\r\n                          callback(\"两次密码不一致\");\r\n                        }\r\n                      }\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    style={{ width: \"40%\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"6到16个字符\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  提交\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  authCode = async () => {\r\n    const res = await getAuthCode();\r\n    if (res.status === 0) {\r\n      Modal.info({\r\n        title: \"扫码获取验证码\",\r\n        content: <QRCode value={res.data.qrurl}></QRCode>,\r\n        width: 300\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  resetPWD = () => {\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        const res = await editPass(value.editPass);\r\n        if (res.status === 0) {\r\n          message.success(res.msg);\r\n        } else {\r\n          message.error(res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\nconst WrappedHeader = Form.create()(Header);\r\nexport default withRouter(WrappedHeader);\r\n","import React, { Component } from \"react\";\r\n// import ElasticText from \"../../components/elasticText\";\r\n// import { Icon} from \"antd\";\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      res: \"\"\r\n    };\r\n    this.i = 0;\r\n    this.timer = 0;\r\n    this.str = \"欢迎您来到QGame后台管理系统\";\r\n  }\r\n  typing = () => {\r\n    if (this.i <= this.str.length) {\r\n      this.setState(\r\n        {\r\n          res: this.str.slice(0, this.i++) + \"__\"\r\n        },\r\n        () => {\r\n          this.timer = setTimeout(() => this.typing(), 200);\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        res: this.str\r\n      });\r\n      clearTimeout(this.timer);\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.typing();\r\n  }\r\n  render() {\r\n    return <span style={{ fontSize: \"20px\" }}>{this.state.res}</span>;\r\n    // <ElasticText></ElasticText>\r\n  }\r\n}\r\n","import moment from \"moment\";\r\n/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return \"\";\r\n  let timeStamp = parseInt(time);\r\n  if (timeStamp === 0) return \"\";\r\n  return moment(timeStamp * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\r\n  // let date = new Date(time * 1000);\r\n  // return (\r\n  //   date.getFullYear() +\r\n  //   \"-\" +\r\n  //   (date.getMonth() + 1) +\r\n  //   \"-\" +\r\n  //   date.getDate() +\r\n  //   \" \" +\r\n  //   date.getHours() +\r\n  //   \":\" +\r\n  //   date.getMinutes() +\r\n  //   \":\" +\r\n  //   date.getSeconds()\r\n  // );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nclass NormalLoginForm extends Component {\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { isNickModal, goldRecord } = this.props;\r\n    return (\r\n      <Form className=\"login-form\">\r\n        <FormItem style={isNickModal ? {} : { display: \"none\" }}>\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: isNickModal,\r\n                message: \"Please input your username!\"\r\n              }\r\n            ],\r\n            initialValue: this.props.val\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"请输入昵称\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n        <FormItem label=\"金额\" style={isNickModal ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"gold\", {\r\n            rules: [\r\n              {\r\n                required: !isNickModal,\r\n                whitespace: true,\r\n                pattern: /^\\d+(\\.\\d+)?$/,\r\n                message: \"必须为数字，减少时金额为负\"\r\n              }\r\n            ],\r\n          })(<Input placeholder=\"必须为数字，减少时金额为负\" />)}\r\n        </FormItem>\r\n        <FormItem label=\"备注\" style={isNickModal ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"desc\", {\r\n            rules: [\r\n              { max: 400, message: \"最多400字\" },\r\n              {\r\n                required: !isNickModal\r\n              }\r\n            ]\r\n          })(\r\n            <Input.TextArea\r\n              placeholder=\"请输入文字\"\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n            />\r\n          )}\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n\r\nexport default WrappedNormalLoginForm;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { userDetail } from \"../../api/index\";\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data, count, id } = this.props.GoldDetailRecord;\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey=\"_id\"\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.isBindInfo) {\r\n      return [\r\n        {\r\n          title: \"支付宝账号\",\r\n          dataIndex: \"alipay_account\"\r\n        },\r\n        {\r\n          title: \"绑定支付宝时间\",\r\n          dataIndex: \"bind_alipay_at\"\r\n        },\r\n\r\n        {\r\n          title: \"开户人姓名\",\r\n          dataIndex: \"card_name\"\r\n        },\r\n        {\r\n          title: \"银行名称\",\r\n          dataIndex: \"bank_name\",\r\n        },\r\n        {\r\n          title: \"银行卡号\",\r\n          dataIndex: \"bank_num\"\r\n        },\r\n        {\r\n          title: \"绑定银行卡时间\",\r\n          dataIndex: \"bind_bank_at\"\r\n        },\r\n        {\r\n          title: \"是否灰名单\",\r\n          dataIndex: \"is_gray\"\r\n        },\r\n        {\r\n          title: \"灰名单备注\",\r\n          dataIndex: \"black_remark\"\r\n        },\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"remark_at\"\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          dataIndex: \"option\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React from \"react\";\r\nimport { DatePicker, ConfigProvider } from \"antd\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\nimport \"moment/locale/zh-cn\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nexport default function MyDatePicker(props) {\r\n  return (\r\n    <ConfigProvider locale={zh_CN}>\r\n      <RangePicker\r\n        // defaultValue={[moment().locale(\"zh-cn\")]}\r\n        style={{width:300}}\r\n        showTime={{ format: \"HH:mm\" }}\r\n        format=\"YYYY-MM-DD HH:mm:00\"\r\n        placeholder={[\"开始日期\", \"结束日期\"]}\r\n        onChange={(data, dateString) => {\r\n          props.handleValue(dateString);\r\n        }}\r\n        // disabledDate={disabledDate}\r\n        // disabledTime={disabledRangeTime}\r\n        {...props}\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Select,\r\n  Input,\r\n  Popconfirm,\r\n  Button\r\n} from \"antd\";\r\n// import moment from \"moment\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport LinkButton from \"../../components/link-button/index\";\r\nimport {\r\n  reqUsers,\r\n  setGameUserNickName,\r\n  changeGold,\r\n  reqLoadGold,\r\n  userDetail,\r\n  bindInfo,\r\n  saveUserBlack,\r\n  createTask\r\n} from \"../../api/index\";\r\nimport WrappedNormalLoginForm from \"././user-nick\";\r\nimport WrappedComponent from \"./gold_details\";\r\nimport MyDatePicker from \"../../components/MyDatePicker\";\r\n\r\nconst { Option } = Select;\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isNickShow: false,\r\n      isGoldShow: false,\r\n      isGoldDetailShow: false,\r\n      isBindInfoShow: false,\r\n      isResetPwdShow: false,\r\n      resetpwd: \"\",\r\n      game_nick: \"\",\r\n      startTime: \"\",\r\n      endTime: \"\",\r\n      loading: false\r\n    };\r\n    this.inputKey = \"id\";\r\n    this.inputValue = \"\";\r\n  }\r\n\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      fixed: \"left\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"game_nick\",\r\n      key: \"game_nick\",\r\n      fixed: \"left\",\r\n      width: 150,\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.game_nick = record.game_nick;\r\n            this.id = record.id;\r\n            this.rowIndex = rowIndex;\r\n            this.setState({\r\n              isNickShow: true\r\n            });\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n\r\n    {\r\n      title: \"账户余额\",\r\n      dataIndex: \"game_gold\",\r\n      key: \"game_gold\",\r\n      sorter: (a, b) => a.game_gold - b.game_gold,\r\n      width: 150,\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.goldRecord = record;\r\n            this.setState({\r\n              isGoldShow: true\r\n            });\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      key: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_nick\",\r\n      key: \"proxy_nick\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"手机\",\r\n      dataIndex: \"phone_number\",\r\n      key: \"phone_number\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"role_name\",\r\n      key: \"role_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"注册时间\",\r\n      dataIndex: \"regin_time\",\r\n      render: formateDate,\r\n      key: \"regin_time\",\r\n      sorter: (a, b) => a.regin_time - b.regin_time,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"登录IP\",\r\n      dataIndex: \"login_ip\",\r\n      key: \"login_ip\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"登陆时间\",\r\n      dataIndex: \"login_time\",\r\n      render: formateDate,\r\n      sorter: (a, b) => a.login_time - b.login_time,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getGoldDetail(record)} size=\"small\">\r\n            资金明细\r\n          </LinkButton>\r\n          <LinkButton\r\n            onClick={() => this.getGoldDetail(record, true)}\r\n            size=\"small\"\r\n          >\r\n            查看绑定信息\r\n          </LinkButton>\r\n          <Popconfirm\r\n            title=\"交易所黑名单\"\r\n            onConfirm={() => this.saveUserBlack(record, true)}\r\n            onCancel={() => this.saveUserBlack(record, false)}\r\n            okText=\"添加\"\r\n            cancelText=\"移除\"\r\n          >\r\n            <LinkButton size=\"small\">交易所黑名单</LinkButton>\r\n          </Popconfirm>\r\n          <LinkButton onClick={() => this.resetPwd(record)} size=\"small\">\r\n            重置密码\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"实时余额\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton size=\"small\" onClick={() => this.getLoadGold(record)}>\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqUsers(\r\n      page,\r\n      limit,\r\n      this.state.startTime,\r\n      this.state.endTime,\r\n      this.inputKey,\r\n      this.inputValue\r\n    );\r\n    if (result.status === 0) {\r\n      const { game_user, proxy_user } = result.data;\r\n      game_user.forEach(element => {\r\n        proxy_user.forEach(item => {\r\n          if (element.id === item.id) {\r\n            element.proxy_nick = item.proxy_pid;\r\n          }\r\n        });\r\n      });\r\n      this.setState({\r\n        data: game_user,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(result.msg);\r\n    }\r\n  };\r\n  changeNickName = () => {\r\n    let form = this.refs.getFormValue; //通过refs属性可以获得对话框内form对象\r\n    form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        this.setState({ isNickShow: false });\r\n        if (value.name !== this.game_nick) {\r\n          const result = await setGameUserNickName(this.id, value.name);\r\n          if (result.status === 0) {\r\n            message.success(\"修改成功!\");\r\n            // 首先拿到索引, 也可以从参数中传递过来\r\n            let index = this.rowIndex;\r\n            // 然后根据索引修改\r\n            this.state.data[index][`game_nick`] = value.name;\r\n            // 这个时候并不会更新视图, 需要 setState更新 arr\r\n            this.setState({\r\n              data: this.state.data\r\n            });\r\n          }\r\n        }\r\n      }\r\n      form.resetFields();\r\n    });\r\n  };\r\n  changeGold = () => {\r\n    this.setState({ loading: true });\r\n    //这里直接复用了user-nick的模态框，所以取input的值时用value.name\r\n    let form = this.refs.getFormValue;\r\n    let goldRecord = this.goldRecord;\r\n    form.validateFields(async (err, value) => {\r\n      const res = await changeGold(goldRecord, value);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n        this.setState({ isGoldShow: false, loading: false });\r\n      } else {\r\n        message.error(res.msg);\r\n      }\r\n      form.resetFields();\r\n    });\r\n  };\r\n  handleChange(event) {\r\n    let data = Object.assign({}, this.state.inputParam, {\r\n      val: event.target.value\r\n    });\r\n    this.setState({ inputParam: data });\r\n  }\r\n  getLoadGold = async record => {\r\n    const id = record.id;\r\n    const result = await reqLoadGold(id);\r\n    if (result.status === 0) {\r\n      Modal.success({\r\n        title: \"实时余额\",\r\n        content: `用户${record.id}实时余额是 : ${result.data[0].game_gold}`\r\n      });\r\n    }\r\n  };\r\n  getGoldDetail = async (record, isBindInfo) => {\r\n    this.isBindInfo = isBindInfo;\r\n    this.GoldDetailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.id\r\n    };\r\n    const res = !isBindInfo\r\n      ? await userDetail(1, 20, record.id)\r\n      : await bindInfo(1, 20, record.id);\r\n    if (res.status === 0) {\r\n      this.GoldDetailRecord.data = res.data;\r\n      this.GoldDetailRecord.count = res.count;\r\n    }\r\n    this.setState({ isGoldDetailShow: true });\r\n  };\r\n  saveUserBlack = async (record, isAdd) => {\r\n    let action = isAdd ? \"add\" : \"remove\";\r\n    const res = await saveUserBlack(record.id, action);\r\n    if (res.status === 0) {\r\n      message.success(\"操作成功！\");\r\n    } else {\r\n      message.success(\"操作失败:\" + res.msg);\r\n    }\r\n  };\r\n  resetPwd = record => {\r\n    this.setState({ isResetPwdShow: true });\r\n    this.resetPwdId = record.id;\r\n  };\r\n  handleResetpwd = async () => {\r\n    const res = await createTask(this.resetPwdId, this.state.resetpwd);\r\n    if (res.status === 0) {\r\n      message.success(\"操作成功！\");\r\n      this.setState({ resetpwd: \"\", isResetPwdShow: false });\r\n    } else {\r\n      message.success(\"操作失败:\" + res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    const { data, count } = this.state;\r\n    const title = (\r\n      <span>\r\n        <MyDatePicker\r\n          handleValue={val => {\r\n            this.setState({\r\n              startTime: val[0],\r\n              endTime: val[1]\r\n            });\r\n          }}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <Select\r\n          style={{ width: 200 }}\r\n          placeholder=\"Select a person\"\r\n          defaultValue=\"id\"\r\n          onChange={val => {\r\n            this.inputKey = val;\r\n          }}\r\n        >\r\n          <Option value=\"id\">user_id</Option>\r\n          <Option value=\"game_nick\">昵称</Option>\r\n          <Option value=\"phone_number\">手机号</Option>\r\n          <Option value=\"role_name\">账号</Option>\r\n          <Option value=\"proxy_nick\">所属代理</Option>\r\n          <Option value=\"package_nick\">所属品牌</Option>\r\n        </Select>\r\n        &nbsp; &nbsp;\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"请输入关键字搜索\"\r\n          style={{ width: 150 }}\r\n          ref={Input => (this.input = Input)}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <LinkButton\r\n          onClick={() => {\r\n            this.inputValue = this.input.input.value;\r\n            this.getUsers(1, this.state.pageSize);\r\n          }}\r\n          size='default'\r\n        >\r\n          <Icon type=\"search\" />\r\n        </LinkButton>\r\n      </span>\r\n    );\r\n    const extra = (\r\n      <LinkButton\r\n        onClick={() => {\r\n          window.location.reload();\r\n        }}\r\n        size='default'\r\n      >\r\n        <Icon type=\"reload\" />\r\n      </LinkButton>\r\n    );\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 2150, y: \"65vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"修改昵称\"\r\n          visible={this.state.isNickShow}\r\n          onOk={this.changeNickName}\r\n          onCancel={() => {\r\n            this.setState({ isNickShow: false });\r\n          }}\r\n        >\r\n          <WrappedNormalLoginForm\r\n            ref=\"getFormValue\"\r\n            val={this.game_nick}\r\n            isNickModal\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"修改金额\"\r\n          visible={this.state.isGoldShow}\r\n          // onOk={this.changeGold}\r\n          onCancel={() => {\r\n            this.setState({ isGoldShow: false });\r\n          }}\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              onClick={() => {\r\n                this.setState({ isGoldShow: false });\r\n              }}\r\n            >\r\n              取消\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              loading={this.state.loading}\r\n              onClick={this.changeGold}\r\n            >\r\n              确定\r\n            </Button>\r\n          ]}\r\n        >\r\n          <WrappedNormalLoginForm\r\n            ref=\"getFormValue\"\r\n            goldRecord={this.goldRecord}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title={this.isBindInfo ? \"查看绑定信息\" : \"资金明细\"}\r\n          visible={this.state.isGoldDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isGoldDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            GoldDetailRecord={this.GoldDetailRecord}\r\n            isBindInfo={this.isBindInfo}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"重置密码\"\r\n          visible={this.state.isResetPwdShow}\r\n          onOk={this.handleResetpwd}\r\n          onCancel={() => {\r\n            this.setState({ isResetPwdShow: false });\r\n          }}\r\n        >\r\n          <span>重置密码</span>\r\n          <Input\r\n            value={this.state.resetpwd}\r\n            onChange={e => this.setState({ resetpwd: e.target.value })}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Checkbox,\r\n  Button,\r\n  message\r\n} from \"antd\";\r\nimport { addUser, editUser } from \"../../../api\";\r\n\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBan: 1,\r\n      checkedList: [],\r\n      indeterminate: true,\r\n      checkAll: false\r\n    };\r\n  }\r\n  checkboxOnChange = checkedList => {\r\n    console.log(checkedList);\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate:\r\n        !!checkedList.length &&\r\n        checkedList.length < this.props.packageList.length,\r\n      checkAll: checkedList.length === this.props.packageList.length\r\n    });\r\n  };\r\n  onCheckAllChange = e => {\r\n    let list = this.props.packageList.map(item => {\r\n      return item.value;\r\n    });\r\n    this.setState(\r\n      {\r\n        checkedList: e.target.checked ? list : [],\r\n        indeterminate: false,\r\n        checkAll: e.target.checked\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          packageList: this.state.checkedList\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await addUser(value)\r\n          : await editUser(value, this.props.editDataRecord.id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.isEdit && this.props.editDataRecord.group) {\r\n      let defaultValue = this.props.editDataRecord.group.split(\",\");\r\n      this.props.form.setFieldsValue({\r\n        packageList: defaultValue.map(Number)\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    const Option = this.props.optionList.map(item => (\r\n      <Select.Option value={item.id} key={item.id}>\r\n        {item.name}\r\n      </Select.Option>\r\n    ));\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        onSubmit={this.handleSubmit}\r\n        labelAlign=\"left\"\r\n      >\r\n        <Form.Item label=\"登录名\">\r\n          {getFieldDecorator(\"username\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"登录名必须输入\"\r\n              },\r\n              { min: 3, message: \"用户名至少3位\" },\r\n              { max: 10, message: \"用户名最多10位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"用户名必须是英文、数字或下划线组成\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"将会成为您唯一的登入名\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户状态\">\r\n          {getFieldDecorator(\"userStatus\", {\r\n            initialValue: isEdit ? editDataRecord.status : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>启用</Radio>\r\n              <Radio value={0}>禁用</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户组\">\r\n          {getFieldDecorator(\"userGroup\", {\r\n            rules: [{ required: true, message: \"请选择用户组!\" }],\r\n            initialValue: isEdit && editDataRecord.group_id\r\n          })(\r\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择用户组\">\r\n              {Option}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权品牌\">\r\n          <Checkbox\r\n            indeterminate={this.state.indeterminate}\r\n            onChange={this.onCheckAllChange}\r\n            checked={this.state.checkAll}\r\n          >\r\n            全选\r\n          </Checkbox>\r\n          {getFieldDecorator(\"packageList\", {\r\n            rules: [{ required: true, message: \"请选择授权品牌!\" }]\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.props.packageList}\r\n              // value={this.state.checkedList}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权代理\">\r\n          {getFieldDecorator(\"proxy\", {\r\n            rules: [\r\n              {\r\n                whitespace: true,\r\n                message: \"多个代理请用英文逗号分隔\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.proxy : \"\"\r\n          })(\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"多个代理请用英文逗号分隔\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"携带金额\">\r\n          {getFieldDecorator(\"loadGold\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              },\r\n              {\r\n                pattern: /^\\d+(\\.\\d+)?$/,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.use_balance\r\n          })(<Input style={{ width: \"60%\" }} placeholder=\"请输入数字\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true,\r\n                message: \"密码不能为空\"\r\n              },\r\n              { min: 6, message: \"密码至少6位\" },\r\n              { max: 16, message: \"密码最多16位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"密码必须是英文、数字或下划线组成\"\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"确认密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"confirmPssword\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"密码(选填)\"\r\n          style={!isEdit ? { display: \"none\" } : {}}\r\n        >\r\n          {getFieldDecorator(\"editPassword\", {\r\n            rules: [\r\n              {\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符，重置密码时使用\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\nimport WrappedAddDataForm from \"./addData\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n  reqAdminList,\r\n  searchAdminData,\r\n  roleList,\r\n  packageList,\r\n  resetAuthCode\r\n} from \"../../../api/index\";\r\n\r\nclass Admin_manage_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      title: \"用户名\",\r\n      dataIndex: \"name\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"角色\",\r\n      dataIndex: \"role_name\",\r\n    },\r\n    {\r\n      title: \"授权品牌\",\r\n      dataIndex: \"group\",\r\n    },\r\n    {\r\n      title: \"授权代理\",\r\n      dataIndex: \"proxy\",\r\n    },\r\n    {\r\n      title: \"可使用金额\",\r\n      dataIndex: \"use_balance\",\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"更新时间\",\r\n      dataIndex: \"updated_at\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 1 ? \"启用\" : \"禁用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n          <LinkButton onClick={() => this.resetAuthCode(record)}>\r\n            AuthCode重置\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqAdminList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await searchAdminData(this.state.inputParam);\r\n    // if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: 1\r\n      });\r\n    // }\r\n  };\r\n  addData = async () => {\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isAddDataShow: true\r\n      });\r\n    }\r\n  };\r\n  edit = async record => {\r\n    console.log(record);\r\n    this.editDataRecord = record;\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isEditDataShow: true\r\n      });\r\n    }\r\n  };\r\n  resetAuthCode = record => {\r\n    Modal.confirm({\r\n      title: \"信息\",\r\n      content: \"真的要重置么?\",\r\n      async onOk() {\r\n        const res = await resetAuthCode(record.id);\r\n        if (res.status === 0) {\r\n          message.success(res.msg);\r\n        } else {\r\n          message.success(res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入用户名\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={this.handleChange}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData} size='default'>\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.addData} size='default'>\r\n              <Icon type=\"user-add\" />\r\n              添加账户\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size='default'>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n        />\r\n        <Modal\r\n          title=\"添加用户\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            optionList={this.optionList}\r\n            packageList={this.packageList}\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={() => this.getUsers(1, 20)}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit=\"true\"\r\n              optionList={this.optionList}\r\n              packageList={this.packageList}\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin_manage_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Tree } from \"antd\";\r\nimport { addRole, editRole } from \"../../../api\";\r\n\r\nconst { TreeNode } = Tree;\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandedKeys: [],\r\n      selectedKeys: [],\r\n      checkedKeys: this.props.isEdit\r\n        ? this.props.editDataRecord.rules.split(\",\")\r\n        : [],\r\n      defaultCheckedKeys: []\r\n    };\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n    const treeData = this.getTreeNodes(menuList);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        onSubmit={this.handleSubmit}\r\n        labelAlign=\"left\"\r\n      >\r\n        <Form.Item label=\"角色名\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"角色名必须输入\"\r\n              },\r\n              { min: 3, message: \"用户名至少3位\" }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"分配权限\">\r\n          <br />\r\n          <Tree\r\n            checkable\r\n            defaultCheckedKeys={isEdit ? editDataRecord.rules.split(\",\") : []}\r\n            expandedKeys={this.state.expandedKeys}\r\n            selectedKeys={this.state.selectedKeys}\r\n            onSelect={this.onSelect}\r\n            onCheck={this.onCheck}\r\n            onExpand={this.onExpand}\r\n          >\r\n            {treeData}\r\n          </Tree>\r\n        </Form.Item>\r\n        <Form.Item label=\"描述\">\r\n          {getFieldDecorator(\"desc\", {\r\n            rules: [{ max: 400, message: \"最多400字\" }],\r\n            initialValue: isEdit ? editDataRecord.description : \"\"\r\n          })(\r\n            <Input.TextArea\r\n              placeholder=\"请输入文字\"\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  getTreeNodes = menuList => {\r\n    return menuList.map(item => {\r\n      if (!item.children) {\r\n        return <TreeNode key={item.id} title={item.title.replace(/&nbsp;/g, \"\")} />;\r\n      } else {\r\n        return (\r\n          <TreeNode key={item.id} title={item.title.replace(/&nbsp;/g, \"\")}>\r\n            {this.getTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n    });\r\n  };\r\n  onSelect = (selectedKeys, info) => {\r\n    const { node } = info;\r\n    const { expandedKeys } = this.state;\r\n    if (node.props.isLeaf) {\r\n      this.setState({ selectedKeys });\r\n    } else {\r\n      this.setState({\r\n        expandedKeys: node.props.expanded\r\n          ? expandedKeys.filter(k => k !== node.props.eventKey)\r\n          : expandedKeys.concat(node.props.eventKey)\r\n      });\r\n    }\r\n  };\r\n  onCheck = (checkedKeys, info) => {\r\n    // console.log(\"onCheck\", checkedKeys, info);\r\n    this.setState({\r\n      checkedKeys: checkedKeys.map(Number)\r\n    });\r\n  };\r\n  onExpand = (expandedKeys, info) => {\r\n    this.setState({ expandedKeys });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        let { name, desc } = value;\r\n        let rules = this.state.checkedKeys;\r\n        let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n        const res = !this.props.isEdit\r\n          ? await addRole(name, rules, desc)\r\n          : await editRole(name, rules, desc, id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n          this.setState({\r\n            checkedKeys: []\r\n          });\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport WrappedAddDataForm from \"./addData\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getRoleList, getRuleList } from \"../../../api/index\";\r\n\r\nclass Role extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"角色名\",\r\n      dataIndex: \"name\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"描述\",\r\n      dataIndex: \"description\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 1 ? \"已启用\" : \"禁用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  getUsers = async (page, limit) => {\r\n    const result = await getRoleList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  addData = async () => {\r\n    //getRuleList的请求/acl/ruleList返回的不是树状结构的数据，所以使用缓存在本地navlist返回的menulist\r\n    // const res = await getRuleList();\r\n    // if (res.status === 0) {\r\n    //   this.ruleList = res.data;\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n    // }\r\n  };\r\n  edit = async record => {\r\n    // console.log(record);\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <LinkButton onClick={this.addData} size='default'>\r\n              <Icon type=\"user-add\" />\r\n              添加账户\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size='default'>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n            // scroll={{ x: 1500, y: 550 }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={() => this.getUsers(1, 20)}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit=\"true\"\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Role;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Input, Icon, Button, message } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport { reqLostOrder_list, orderReview } from \"../../../api/index\";\r\n\r\nclass Diaodan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      user_id: \"\",\r\n      order_id: \"\"\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"user_id\"\r\n          style={{ width: 150 }}\r\n          value={this.state.user_id}\r\n          onChange={e => this.setState({ user_id: e.target.value })}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"订单Id\"\r\n          style={{ width: 300 }}\r\n          value={this.state.order_id}\r\n          onChange={e => this.setState({ order_id: e.target.value })}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <Button onClick={this.handleClick}>\r\n          <Icon type=\"search\" />\r\n        </Button>\r\n        <br></br>\r\n        <br></br>\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    return [\r\n      {\r\n        title: \"订单Id\",\r\n        dataIndex: \"order_id\"\r\n      },\r\n      {\r\n        title: \"user_id\",\r\n        dataIndex: \"user_id\"\r\n      },\r\n      {\r\n        title: \"金额\",\r\n        dataIndex: \"amount\"\r\n      },\r\n      {\r\n        title: \"下单时间\",\r\n        dataIndex: \"created_at\",\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        dataIndex: \"status\",\r\n        render: (text, record, index) => {\r\n          if (text !== \"6\" && text !== \"7\" && text !== \"9\") {\r\n            return (\r\n              <Button size='small' onClick={() => this.handleRecieveSubmit(record)}>\r\n                手动到账提交\r\n              </Button>\r\n            );\r\n          } else {\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    ];\r\n  };\r\n  handleClick = async () => {\r\n    const res = await reqLostOrder_list(\r\n      1,\r\n      50,\r\n      this.state.user_id,\r\n      this.state.order_id\r\n    );\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  handleRecieveSubmit = async record => {\r\n    let { user_id, order_id } = record;\r\n    const res = await orderReview(user_id, order_id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n    this.handleClick();\r\n  };\r\n}\r\n\r\nexport default Diaodan;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, message, Icon, Input, Select, Modal, Button } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport \"moment/locale/zh-cn\";\r\nimport {\r\n  reqOrder_list,\r\n  downloadList,\r\n  orderReviewEdit\r\n} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport Diaodan from \"./editData\";\r\n\r\nclass Order_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\",\r\n      isQueryShow: false,\r\n      isEditShow: false\r\n    };\r\n    this.inputKey = \"\";\r\n    this.inputValue = \"\";\r\n    this.order_status = \"\";\r\n    this.type = \"\";\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqOrder_list(\r\n      page,\r\n      limit,\r\n      this.state.start_time,\r\n      this.state.end_time,\r\n      this.order_status,\r\n      this.type,\r\n      this.inputKey,\r\n      this.inputValue\r\n    );\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  onSearchData = async () => {\r\n    this.setState({ isQueryShow: true });\r\n  };\r\n  download = () => {\r\n    downloadList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.inputKey = value)}\r\n              >\r\n                <Select.Option value=\"order_id\">订单id</Select.Option>\r\n                <Select.Option value=\"user_id\">user_id</Select.Option>\r\n                <Select.Option value=\"1\">创建时间</Select.Option>\r\n                <Select.Option value=\"2\">到账时间</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"请输入关键字\"\r\n                style={{ width: 150 }}\r\n                ref={Input => (this.input = Input)}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <MyDatePicker\r\n                handleValue={val => {\r\n                  this.setState({\r\n                    start_time: val[0],\r\n                    end_time: val[1]\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 200 }}\r\n                onSelect={value => (this.order_status = value)}\r\n              >\r\n                <Select.Option value=\"\">订单状态</Select.Option>\r\n                <Select.Option value=\"0\">全部</Select.Option>\r\n                <Select.Option value=\"1\">未支付</Select.Option>\r\n                <Select.Option value=\"4\">已撤销</Select.Option>\r\n                <Select.Option value=\"5\">已支付</Select.Option>\r\n                <Select.Option value=\"6\">已完成</Select.Option>\r\n                <Select.Option value=\"7\">补单初审通过</Select.Option>\r\n                <Select.Option value=\"8\">补单初审拒绝</Select.Option>\r\n                <Select.Option value=\"9\">补单复审通过</Select.Option>\r\n                <Select.Option value=\"10\">补单复审拒绝</Select.Option>\r\n                <Select.Option value=\"11\">充值失败</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.type = value)}\r\n              >\r\n                <Select.Option value=\"\">订单类型</Select.Option>\r\n                <Select.Option value=\"0\">全部</Select.Option>\r\n                <Select.Option value=\"1\">alipay</Select.Option>\r\n                <Select.Option value=\"2\">银行卡转账</Select.Option>\r\n                <Select.Option value=\"3\">人工代充</Select.Option>\r\n                <Select.Option value=\"4\">人工代提</Select.Option>\r\n                <Select.Option value=\"6\">微信支付</Select.Option>\r\n                <Select.Option value=\"7\">银联支付</Select.Option>\r\n                <Select.Option value=\"8\">网银支付</Select.Option>\r\n                <Select.Option value=\"9\">快捷支付</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <LinkButton\r\n                onClick={() => {\r\n                  this.inputValue = this.input.input.value;\r\n                  this.getUsers(1, this.state.pageSize);\r\n                }}\r\n                size=\"default\"\r\n              >\r\n                <Icon type=\"search\" />\r\n              </LinkButton>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n            <div style={{ marginTop: 10 }}>\r\n              <LinkButton onClick={this.onSearchData} size=\"default\">\r\n                <Icon type=\"search\" />\r\n                玩家掉单查询\r\n              </LinkButton>\r\n            </div>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <LinkButton\r\n              size=\"default\"\r\n              style={{ float: \"right\" }}\r\n              onClick={this.download}\r\n              icon=\"download\"\r\n            ></LinkButton>\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 1900, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"玩家调单查询\"\r\n          visible={this.state.isQueryShow}\r\n          onCancel={() => {\r\n            this.setState({ isQueryShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <Diaodan />\r\n        </Modal>\r\n        <Modal\r\n          title=\"编辑\"\r\n          visible={this.state.isEditShow}\r\n          onCancel={() => {\r\n            this.setState({ isEditShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"50%\"\r\n        >\r\n          <div>\r\n            <div>用户ID：{this.state.editUser_id}</div>\r\n            <br />\r\n            <div>金额：{this.state.editMount}</div>\r\n            <br />\r\n            <div>\r\n              手动到账复审：<Button type=\"primary\">通过</Button>{\" \"}\r\n              <Button type=\"primary\" onClick={this.editRefused}>\r\n                拒绝\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"支付渠道\",\r\n      dataIndex: \"channel_type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"0\":\r\n            word = record.replace_id;\r\n            break;\r\n          case \"5\":\r\n            word = \"充提UC\";\r\n            break;\r\n          case \"12\":\r\n            word = \"onePay\";\r\n            break;\r\n          case \"11\":\r\n            word = \"古都\";\r\n            break;\r\n          case [\"10\", \"13\", \"14\", \"15\", \"16\"]:\r\n            word = \"聚鑫\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"支付类型\",\r\n      dataIndex: \"type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"alipay\";\r\n            break;\r\n          case \"2\":\r\n            word = \"银行卡转账\";\r\n            break;\r\n          case \"3\":\r\n            word = \"人工代充\";\r\n            break;\r\n          case \"4\":\r\n            word = \"人工代提\";\r\n            break;\r\n          case \"5\":\r\n            word = \"被赠送\";\r\n            break;\r\n          case \"6\":\r\n            word = \"微信支付\";\r\n            break;\r\n          case \"7\":\r\n            word = \"银联支付\";\r\n            break;\r\n          case \"8\":\r\n            word = \"网银支付\";\r\n            break;\r\n          case \"9\":\r\n            word = \"快捷支付\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"订单状态\",\r\n      dataIndex: \"status\",\r\n      width: 130,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"未支付\";\r\n            break;\r\n          case \"2\":\r\n            word = \"已过期\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已分配\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已撤销\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已支付\";\r\n            break;\r\n          case \"6\":\r\n            word = \"已完成\";\r\n            break;\r\n          case \"7\":\r\n            word = \"补单初审通过\";\r\n            break;\r\n          case \"8\":\r\n            word = \"初审拒绝\";\r\n            break;\r\n          case \"9\":\r\n            word = \"补单复审通过\";\r\n            break;\r\n          case \"10\":\r\n            word = \"复审拒绝\";\r\n            break;\r\n          case \"11\":\r\n            word = \"充值失败\";\r\n            break;\r\n          case \"12\":\r\n            word = \"客服拒绝\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 200,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        if (record.status === \"7\") {\r\n          return (\r\n            <LinkButton size=\"small\" onClick={() => this.edit(record)}>\r\n              编辑\r\n            </LinkButton>\r\n          );\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: \"备注\",\r\n      dataIndex: \"remark\"\r\n    }\r\n  ];\r\n  edit = record => {\r\n    this.setState({\r\n      isEditShow: true,\r\n      editUser_id: record.user_id,\r\n      editMount: record.amount\r\n    });\r\n    this.user_id = record.user_id;\r\n    this.order_id = record.order_id;\r\n    this.editType = record.type;\r\n  };\r\n  editRefused = async () => {\r\n    const res = await orderReviewEdit(\r\n      this.user_id,\r\n      this.order_id,\r\n      this.editType\r\n    );\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n      this.setState({\r\n        isEditShow: false\r\n      });\r\n      this.getUsers(1, this.pageSize);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Order_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\r\nimport { addChannel, editPayChannel } from \"../../../api\";\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 7 }}\r\n        wrapperCol={{ span: 17 }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form.Item label=\"支付名称\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"所属渠道ID\">\r\n          {getFieldDecorator(\"channel_id\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.channel_id : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付名称\">\r\n          {getFieldDecorator(\"nick_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>开启</Radio>\r\n              <Radio value={0}>关闭</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付方式\">\r\n          {getFieldDecorator(\"pay_type\", {\r\n            rules: [{ required: true, message: \"请选择支付方式!\" }],\r\n            initialValue: isEdit && editDataRecord.pay_type\r\n          })(\r\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择支付方式\">\r\n              <Select.Option value=\"7\">支付宝H5</Select.Option>\r\n              <Select.Option value=\"8\">支付宝扫码</Select.Option>\r\n              <Select.Option value=\"2\">快捷支付</Select.Option>\r\n              <Select.Option value=\"4\">微信H5</Select.Option>\r\n              <Select.Option value=\"5\">微信扫码</Select.Option>\r\n              <Select.Option value=\"1\">网银支付</Select.Option>\r\n              <Select.Option value=\"13\">银联扫码</Select.Option>\r\n              <Select.Option value=\"17\">转账银行卡</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付限额最小面值\">\r\n          {getFieldDecorator(\"min_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.min_amount : \"\"\r\n          })(<Input style={{ width: \"30%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付限额最大面值\">\r\n          {getFieldDecorator(\"max_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.max_amount : \"\"\r\n          })(<Input style={{ width: \"30%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"固定面值\">\r\n          {getFieldDecorator(\"span_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.span_amount\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"单笔间隔\">\r\n          {getFieldDecorator(\"seed\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.seed\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"玩家承担费率%\">\r\n          {getFieldDecorator(\"rate\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.rate\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"显示排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            initialValue: isEdit ? editDataRecord.sort : \"0\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await addChannel(value)\r\n          : await editPayChannel(value,id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getChannelList, getRuleList } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Channel_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getChannelList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  onSearchData = async () => {\r\n    const res = await getChannelList(1, 20, this.state.inputParam);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  refreshPage=()=>{\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  }\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入支付名称\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={e => this.setState({ inputParam: e.target.value })}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData}>\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton\r\n          onClick={() => window.location.reload()}\r\n          >\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1900, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"支付名称\",\r\n      dataIndex: \"name\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"渠道昵称\",\r\n      dataIndex: \"nick_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"单笔-最小限额\",\r\n      dataIndex: \"min_amount\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"单笔-最大限额\",\r\n      dataIndex: \"max_amount\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"单笔间隔\",\r\n      dataIndex: \"seed\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"玩家承担的费率%\",\r\n      dataIndex: \"rate\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"固定面值\",\r\n      dataIndex: \"span_amount\",\r\n      width: 250\r\n    },\r\n    {\r\n      title: \"支付方式\",\r\n      dataIndex: \"pay_type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"7\":\r\n            word = \"支付宝H5\";\r\n            break;\r\n          case \"8\":\r\n            word = \"支付宝扫码\";\r\n            break;\r\n          case \"2\":\r\n            word = \"快捷支付\";\r\n            break;\r\n          case \"4\":\r\n            word = \"微信H5\";\r\n            break;\r\n          case \"5\":\r\n            word = \"微信扫码\";\r\n            break;\r\n          case \"1\":\r\n            word = \"网银支付\";\r\n            break;\r\n          case \"13\":\r\n            word = \"银联扫码\";\r\n            break;\r\n          case \"17\":\r\n            word = \"转账银行卡\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 80,\r\n      render: (text, record, index) => {\r\n        return <span>{text === \"1\" ? \"开启\" : \"关闭\"}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"显示顺序\",\r\n      width: 100,\r\n      dataIndex: \"sort\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Channel_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\r\nimport { saveBankCard } from \"../../../api\";\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 7 }}\r\n        wrapperCol={{ span: 17 }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form.Item label=\"开户人\">\r\n          {getFieldDecorator(\"card_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.card_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"银行名称\">\r\n          {getFieldDecorator(\"bank_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.bank_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"卡号\">\r\n          {getFieldDecorator(\"card_num\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              },\r\n              {\r\n                min: 15,\r\n                max: 20,\r\n                message: \"请输入15-20位正确卡号\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.card_num : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"用途\">\r\n          {getFieldDecorator(\"type\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>收款卡</Radio>\r\n              <Radio value={0}>出款卡</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 2\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>空闲</Radio>\r\n              <Radio value={2}>使用中</Radio>\r\n              <Radio value={3}>停用</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付密码\">\r\n          {getFieldDecorator(\"pay_password\", {})(\r\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"查询密码\">\r\n          {getFieldDecorator(\"query_password\", {})(\r\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"U盾密码\">\r\n          {getFieldDecorator(\"u_code\", {})(\r\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ offset: 18 }}>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await saveBankCard(value)\r\n          : await saveBankCard(value, id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功:\" + res.msg);\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input, Popconfirm } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { bankList, deleteBankCard } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass Bankcard_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await bankList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题:\" + result.msg);\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    // console.log(record);\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  delete = async record => {\r\n    const result = await deleteBankCard(record.id);\r\n    if (result.status === 0) {\r\n      message.success(result.msg);\r\n      this.refreshPage(1, 20);\r\n    } else {\r\n      message.error(\"网络问题:\" + result.msg);\r\n    }\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <LinkButton onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()}>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1000, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      width: 50\r\n    },\r\n    {\r\n      title: \"卡使用类型\",\r\n      dataIndex: \"type\",\r\n      width: 100,\r\n      render: (text, record, index) => (\r\n        <span>{text === \"1\" ? \"收款卡\" : \"出款卡\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"银行卡号\",\r\n      dataIndex: \"card_num\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"开户人姓名\",\r\n      dataIndex: \"card_name\",\r\n      width: 100,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"银行名称\",\r\n      dataIndex: \"bank_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => (\r\n        <span>{text === \"1\" ? \"空闲\" : text === \"2\" ? \"使用中\" : \"停用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 150,\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n          <Popconfirm\r\n            title=\"确定要删除吗\"\r\n            onConfirm={() => this.delete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <LinkButton>删除</LinkButton>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Bankcard_list;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Icon, Input, Select, Button } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport \"moment/locale/zh-cn\";\r\nimport { rechargeOrder, downloadList } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\n\r\nclass Recharge_order extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      type: \"14\",\r\n      paramKey: \"\",\r\n      inputParam: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\"\r\n    };\r\n    this.inputKey = \"\";\r\n    this.inputValue = \"\";\r\n    this.order_status = \"\";\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await rechargeOrder(\r\n      page,\r\n      limit,\r\n      this.state.start_time,\r\n      this.state.end_time,\r\n      this.order_status,\r\n      this.inputKey,\r\n      this.inputValue\r\n    );\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  download = () => {\r\n    downloadList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <MyDatePicker\r\n                handleValue={val => {\r\n                  this.setState({\r\n                    start_time: val[0],\r\n                    end_time: val[1]\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.inputKey = value)}\r\n              >\r\n                <Select.Option value=\"order_id\">订单id</Select.Option>\r\n                <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"请输入关键字\"\r\n                style={{ width: 150 }}\r\n                ref={Input => (this.input = Input)}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 100 }}\r\n                onSelect={value => (this.order_status = value)}\r\n              >\r\n                <Select.Option value=\"\">状态</Select.Option>\r\n                <Select.Option value=\"0\">未成功</Select.Option>\r\n                <Select.Option value=\"1\">已分配</Select.Option>\r\n                <Select.Option value=\"4\">已撤销</Select.Option>\r\n                <Select.Option value=\"6\">已完成</Select.Option>\r\n                <Select.Option value=\"7\">初审通过</Select.Option>\r\n                <Select.Option value=\"8\">初审拒绝</Select.Option>\r\n                <Select.Option value=\"9\">复审通过</Select.Option>\r\n                <Select.Option value=\"10\">复审拒绝</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <LinkButton\r\n                onClick={() => {\r\n                  this.inputValue = this.input.input.value;\r\n                  this.getUsers(1, this.state.pageSize);\r\n                }}\r\n              >\r\n                <Icon type=\"search\" />\r\n              </LinkButton>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <Button onClick={this.download} icon=\"download\">\r\n              下载列表\r\n            </Button>\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 1500, y: \"60vh\" }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 280\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"代充ID\",\r\n      dataIndex: \"replace_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"代充昵称\",\r\n      dataIndex: \"replace_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"订单状态\",\r\n      dataIndex: \"status\",\r\n      width: 130,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"未支付\";\r\n            break;\r\n          case \"2\":\r\n            word = \"已过期\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已分配\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已撤销\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已支付\";\r\n            break;\r\n          case \"6\":\r\n            word = \"已完成\";\r\n            break;\r\n          case \"7\":\r\n            word = \"补单初审通过\";\r\n            break;\r\n          case \"8\":\r\n            word = \"初审拒绝\";\r\n            break;\r\n          case \"9\":\r\n            word = \"补单复审通过\";\r\n            break;\r\n          case \"10\":\r\n            word = \"复审拒绝\";\r\n            break;\r\n          case \"11\":\r\n            word = \"充值失败\";\r\n            break;\r\n          case \"12\":\r\n            word = \"客服拒绝\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 150,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Recharge_order;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Input,\r\n  Button,\r\n} from \"antd\";\r\nimport { getChannel, getChannelInfo,editChannelInfo } from \"../../../api/index\";\r\n\r\nclass Recharge_channel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      childData: [],\r\n      expandedRowKeys: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isEditDataShow: false,\r\n      recordId: \"\"\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getChannel(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"middle\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          expandedRowRender={this.expandedRowRender}\r\n          expandRowByClick\r\n          onExpand={this.onExpandRow}\r\n          expandedRowKeys={this.state.expandedRowKeys}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n        />\r\n        <Modal\r\n          title=\"修改\"\r\n          visible={this.state.isEditDataShow}\r\n          onOk={this.handleEditData}\r\n          onCancel={() => {\r\n            this.setState({ isEditDataShow: false });\r\n          }}\r\n        >\r\n          <span>pay_code:</span>\r\n          <Input\r\n            type=\"text\"\r\n            value={this.state.inputParam}\r\n            onChange={event =>\r\n              this.setState({ inputParam: event.target.value })\r\n            }\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"渠道名\",\r\n      dataIndex: \"name\"\r\n    },\r\n    {\r\n      title: \"商户号\",\r\n      dataIndex: \"member_id\"\r\n    }\r\n  ];\r\n  expandedRowRender = (record, index, indent, expanded) => {\r\n    const columns = [\r\n      {\r\n        title: \"支付方式名称\",\r\n        dataIndex: \"pay_name\",\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"所属支付渠道\",\r\n        dataIndex: \"channel_name\",\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"pay_code\",\r\n        dataIndex: \"pay_code\",\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        dataIndex: \"action\",\r\n        render: (text, record, index) => (\r\n          <Button onClick={() => this.edit(record)}>修改pay_code</Button>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <Table\r\n        columns={columns}\r\n        dataSource={this.state.childData}\r\n        pagination={false}\r\n      />\r\n    );\r\n  };\r\n  onExpandRow = async (expanded, record) => {\r\n    let keys = [];\r\n    if (expanded) {\r\n      keys.push(record.id);\r\n      this.setState({\r\n        expandedRowKeys: keys\r\n      });\r\n      const result = await getChannelInfo(record.id);\r\n      if (result.status === 0) {\r\n        result.data.forEach((element, index) => {\r\n          element.key = index;\r\n        });\r\n        this.setState({\r\n          childData: result.data\r\n        });\r\n      } else {\r\n        message.error(\"网络问题\");\r\n        this.setState({\r\n          childData: []\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        expandedRowKeys: []\r\n      });\r\n    }\r\n  };\r\n  edit = record => {\r\n    console.log(record.pay_code);\r\n    this.setState({\r\n      recordId: record.id,\r\n      inputParam: record.pay_code,\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  handleEditData = async () => {\r\n    const result = await editChannelInfo(this.state.recordId, this.state.inputParam);\r\n    if (result.status === 0) {\r\n      message.success(result.msg);\r\n      this.setState({\r\n        isEditDataShow: false,\r\n        expandedRowKeys:[],\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n}\r\nexport default Recharge_channel;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Checkbox,\r\n  DatePicker,\r\n  message\r\n} from \"antd\";\r\nimport { packageList, addNotice, updateNotice } from \"../../../api\";\r\nimport moment from \"moment\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      checkedList: this.props.isEdit\r\n        ? this.props.editDataRecord.package_ids\r\n        : []\r\n    };\r\n  }\r\n  getPackageList = async () => {\r\n    let res = await packageList();\r\n    if (res.status === 0) {\r\n      let arr = [];\r\n      res.data.forEach(element => {\r\n        arr.push({ label: element.name, value: element.id });\r\n      });\r\n      this.setState({\r\n        options: arr\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getPackageList();\r\n  }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  // componentWillUnmount() {\r\n  //   this.setState = (state, callback) => {\r\n  //     return;\r\n  //   };\r\n  // }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"开关\">\r\n          {getFieldDecorator(\"is_open\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.is_open) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>开启</Radio>\r\n              <Radio value={0}>关闭</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"标题\">\r\n          {getFieldDecorator(\"title\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.title : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"品牌\">\r\n          {getFieldDecorator(\"packageList\", {\r\n            rules: [{ required: true, message: \"请选择品牌!\" }],\r\n            initialValue: isEdit && editDataRecord.package_ids\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.state.options}\r\n              // defaultValue={editDataRecord.package_ids}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"公告类型\">\r\n          {getFieldDecorator(\"type\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>活动</Radio>\r\n              <Radio value={2}>公告</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"是否跑马灯\">\r\n          {getFieldDecorator(\"is_slider\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>是</Radio>\r\n              <Radio value={0}>否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            rules: [{ required: true }],\r\n            initialValue: isEdit && editDataRecord.sort\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"内容\">\r\n          {getFieldDecorator(\"words\", {\r\n            rules: [{ required: true }],\r\n            initialValue: isEdit ? editDataRecord.words : \"\"\r\n          })(\r\n            <Input.TextArea\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"开始日期\">\r\n          {getFieldDecorator(\"start_time\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit && moment(editDataRecord.start_time * 1000)\r\n          })(<DatePicker format={\"YYYY-MM-DD 00:00:00\"} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"截止日期\">\r\n          {getFieldDecorator(\"end_time\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit && moment(editDataRecord.end_time * 1000)\r\n          })(<DatePicker format={\"YYYY-MM-DD 00:00:00\"} />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord\r\n        ? this.props.editDataRecord._id.$oid\r\n        : \"\";\r\n      if (!err) {\r\n        value.packageList.forEach(item => {\r\n          let str = \"group[\" + item + \"]\";\r\n          value[str] = item;\r\n        });\r\n        value.start_time = value.start_time.format(\"YYYY-MM-DD 00:00:00\");\r\n        value.end_time = value.end_time.format(\"YYYY-MM-DD 00:00:00\");\r\n        delete value.packageList;\r\n        const res = !this.props.isEdit\r\n          ? await addNotice(value)\r\n          : await updateNotice(value, id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  checkboxOnChange = checkedList => {\r\n    this.setState({\r\n      checkedList: checkedList\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Button,\r\n  Popover,\r\n  Popconfirm\r\n} from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getList, delNotice } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Notice_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  // onSearchData = async () => {\r\n  //   const res = await getChannelList(1, 20, this.state.inputParam);\r\n  //   if (res.status === 0) {\r\n  //     this.setState({\r\n  //       data: res.data,\r\n  //       count: parseInt(res.count)\r\n  //     });\r\n  //   } else {\r\n  //     message.error(\"网络问题\");\r\n  //   }\r\n  // };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  onDelete = async record => {\r\n    let res = await delNotice(record._id.$oid);\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.refreshPage();\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <LinkButton onClick={this.addData} size='default'>添加</LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size='default'>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={record => record._id.$oid}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 2000 }}\r\n        />\r\n        <Modal\r\n          title=\"新增公告\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"标题\",\r\n      dataIndex: \"title\"\r\n    },\r\n    {\r\n      title: \"品牌\",\r\n      dataIndex: \"package_ids\",\r\n      render: (text, record) => <span>{text.join(\",\")}</span>\r\n    },\r\n    {\r\n      title: \"代理\",\r\n      dataIndex: \"proxy_user_id\"\r\n    },\r\n    {\r\n      title: \"公告类型\",\r\n      dataIndex: \"type\",\r\n      render: (text, record) => (\r\n        <span>{text === \"1\" || text === 1 ? \"活动\" : \"公告\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"是否跑马灯\",\r\n      dataIndex: \"is_slider\",\r\n      render: (text, record) => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"公告内容\",\r\n      dataIndex: \"words\",\r\n      render: (text, record) => (\r\n        <Popover content={text} trigger=\"click\" overlayStyle={{ width: \"30%\" }}>\r\n          <div\r\n            style={{\r\n              width: \"100px\",\r\n              textOverflow: \"ellipsis\",\r\n              whiteSpace: \"nowrap\",\r\n              overflow: \"hidden\"\r\n            }}\r\n          >\r\n            {text}\r\n          </div>\r\n        </Popover>\r\n      ),\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {}, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n    {\r\n      title: \"开始时间\",\r\n      dataIndex: \"start_time\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"截止时间\",\r\n      dataIndex: \"end_time\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"create_time\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\r\n            编辑\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.onDelete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button type=\"danger\" size=\"small\">\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Notice_list;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Checkbox,\r\n  DatePicker,\r\n  message\r\n} from \"antd\";\r\nimport { packageList, saveCustomerService} from \"../../../api\";\r\nimport moment from \"moment\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      checkedList: this.props.isEdit\r\n        ? this.props.editDataRecord.package_ids.split(\",\").map(Number)\r\n        : []\r\n    };\r\n  }\r\n  getPackageList = async () => {\r\n    let res = await packageList();\r\n    if (res.status === 0) {\r\n      let arr = [];\r\n      res.data.forEach(element => {\r\n        arr.push({ label: element.name, value: element.id });\r\n      });\r\n      this.setState({\r\n        options: arr\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getPackageList();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"账号\">\r\n          {getFieldDecorator(\"user_id\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.user_id) : ''\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"昵称\">\r\n          {getFieldDecorator(\"nick_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权品牌\">\r\n          {getFieldDecorator(\"package_ids\", {\r\n            rules: [{ required: true, message: \"请选择品牌!\" }],\r\n            initialValue:\r\n              isEdit && editDataRecord.package_ids.split(\",\").map(Number)\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.state.options}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"是否显示\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>是</Radio>\r\n              <Radio value={0}>否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"显示排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            rules: [{ required: true }],\r\n            initialValue: isEdit && editDataRecord.sort\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord\r\n        ? this.props.editDataRecord.user_id\r\n        : \"\";\r\n      if (!err) {\r\n        value.package_ids.forEach(item => {\r\n          let str = \"group[\" + item + \"]\";\r\n          value[str] = item;\r\n        });\r\n        delete value.package_ids;\r\n        const res = !this.props.isEdit\r\n          ? await saveCustomerService(value, \"add\")\r\n          : await saveCustomerService(value, \"edit\", id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  checkboxOnChange = checkedList => {\r\n    this.setState({\r\n      checkedList: checkedList\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Button\r\n} from \"antd\";\r\nimport { customerList, saveCustomerService } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport LinkButton from \"../../../components/link-button\";\r\n\r\nclass Customer_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await customerList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  onSearchData = async () => {\r\n    const res = await customerList(1, 20, this.input.input.value);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  onDelete = async record => {\r\n    let user_id = record.user_id;\r\n    let res = await saveCustomerService({ user_id }, \"del\");\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.refreshPage();\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n    this.input.handleReset();\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入支付名称\"\r\n              style={{ width: 150 }}\r\n              ref={input => (this.input = input)}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData} size='default'>\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.addData} size='default'>\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size='default'>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"user_id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1200, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"新增\"\r\n          visible={this.state.isAddDataShow}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"user_id\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"nick_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"品牌ID\",\r\n      dataIndex: \"package_ids\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"是否显示\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record) => (text === 1 ? \"是\" : \"否\")\r\n    },\r\n    {\r\n      title: \"排序\",\r\n      dataIndex: \"sort\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"create_time\",\r\n      width: 200,\r\n      render: (text, record) => (\r\n        <span>{formateDate(record.create_time / 1000)}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"update_time\",\r\n      width: 200,\r\n      render: (text, record) => (\r\n        <span>{formateDate(record.create_time / 1000)}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\r\n            编辑\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.onDelete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button type=\"danger\" size=\"small\">\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Customer_list;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data } = this.props.detailRecord;\r\n    console.log(data);\r\n\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey={(record,index)=>`${index}`}\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"check\") {\r\n      return [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    } else if (this.props.action === \"risk\") {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  DatePicker,\r\n  Button,\r\n  Popover\r\n} from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport {\r\n  withDraw,\r\n  downloadWithdrawList,\r\n  userDetail,\r\n  reviewInfo,\r\n  remarkInfo\r\n} from \"../../../api\";\r\nimport WrappedComponent from \"./details\";\r\n\r\nclass Withdraw_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: \"\",\r\n      filed: \"\",\r\n      inputParam: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\",\r\n      isBindInfoShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await withDraw(page, limit, 3);\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await withDraw(1, 20, 3, this.state);\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  download = () => {\r\n    downloadWithdrawList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ filed: value })}\r\n            >\r\n              <Select.Option value=\"order_id\">订单id</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\r\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={this.handleChange}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.setState({\r\n                  start_time: val[0],\r\n                  end_time: val[1]\r\n                });\r\n              }}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ order_status: value })}\r\n            >\r\n              <Select.Option value=\"\">订单状态</Select.Option>\r\n              <Select.Option value=\"1\">待审核</Select.Option>\r\n              <Select.Option value=\"2\">处理中</Select.Option>\r\n              <Select.Option value=\"3\">已提交</Select.Option>\r\n              <Select.Option value=\"4\">已成功</Select.Option>\r\n              <Select.Option value=\"5\">已失败</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ type: value })}\r\n            >\r\n              <Select.Option value=\"\">兑换方式</Select.Option>\r\n              <Select.Option value=\"1\">alipay</Select.Option>\r\n              <Select.Option value=\"2\">bank</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 2400, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title={\r\n            this.action === \"check\"\r\n              ? \"审核信息\"\r\n              : this.action === \"risk\"\r\n              ? \"资金明细\"\r\n              : \"运营备注\"\r\n          }\r\n          visible={this.state.isDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            detailRecord={this.detailRecord}\r\n            action={this.action}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"申请费率\",\r\n      dataIndex: \"handling_fee\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"实际费率\",\r\n      dataIndex: \"gold\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"兑换方式\",\r\n      dataIndex: \"order_type\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"兑换账号\",\r\n      dataIndex: \"pay_account\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"账号名称\",\r\n      dataIndex: \"pay_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"待审核\";\r\n            break;\r\n          case \"2\":\r\n            word = \"处理中\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已提交\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已成功\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已失败\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 150,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 150,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"风控\",\r\n      dataIndex: \"\",\r\n      width: 200,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"risk\")}>\r\n            风控\r\n          </LinkButton>\r\n          <LinkButton>游戏数据</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <Popover\r\n            content={record.user_remark}\r\n            title={record.user_id + \"用户备注\"}\r\n            trigger=\"click\"\r\n          >\r\n            <LinkButton>用户备注</LinkButton>\r\n          </Popover>\r\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      start_time: startTime,\r\n      end_time: endTime\r\n    });\r\n  };\r\n  getDetail = async (record, action) => {\r\n    this.action = action;\r\n    this.detailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.user_id\r\n    };\r\n    const res =\r\n      action === \"risk\"\r\n        ? await userDetail(1, 20, record.user_id)\r\n        : action === \"check\"\r\n        ? await reviewInfo(1, 20, record.order_id)\r\n        : await remarkInfo(1, 20, record.order_id);\r\n    if (res.status === 0) {\r\n      this.detailRecord.data = res.data;\r\n      this.detailRecord.count = res.count;\r\n    }\r\n    this.setState({ isDetailShow: true });\r\n  };\r\n}\r\n\r\nexport default Withdraw_list;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { saveConf } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        if (props.action === \"edit\") {\r\n          value.id = record.id;\r\n        }\r\n        const res = await saveConf(value, props.action);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Form labelCol={{ span: 4 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\r\n      <Form.Item label=\"配置名\">\r\n        {getFieldDecorator(\"name\", {\r\n          rules: [{ required: true, message: \"请输入配置名\" }],\r\n          initialValue: props.action === \"add\" ? \"\" : props.record.name\r\n        })(<Input style={{ width: \"60%\" }} />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"配置Key\">\r\n        {getFieldDecorator(\"conf_key\", {\r\n          rules: [{ required: true, message: \"请输入配置Key\" }],\r\n          initialValue: props.action === \"add\" ? \"\" : props.record.conf_key\r\n        })(<Input style={{ width: \"60%\" }} />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"配置Val\">\r\n        {getFieldDecorator(\"conf_val\", {\r\n          rules: [{ required: true, message: \"请输入配置Val\" }],\r\n          initialValue: props.action === \"add\" ? \"\" : props.record.conf_val\r\n        })(<Input style={{ width: \"60%\" }} />)}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Button,\r\n  Divider\r\n} from \"antd\";\r\nimport { configList, saveConf } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Config extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await configList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Input\r\n              style={{ width: 120 }}\r\n              placeholder=\"请输入配置Key\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              size=\"default\"\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton type=\"primary\" onClick={this.onAdd} size=\"default\">\r\n              添加\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size='default'>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          // scroll={{ y: \"100%\" }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"add\" ? \"添加配置\" : \"编辑配置\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"配置名\",\r\n      dataIndex: \"name\"\r\n    },\r\n    {\r\n      title: \"配置Key\",\r\n      dataIndex: \"conf_key\"\r\n    },\r\n    {\r\n      title: \"配置值\",\r\n      dataIndex: \"conf_val\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"更新时间\",\r\n      dataIndex: \"created_at\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\r\n            编辑\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.onDelete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button type=\"danger\" size=\"small\">\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let conf_key = this.input.input.value;\r\n    const res = await configList(1, 20, conf_key);\r\n    this.setState({ data: res.data, count: res.count });\r\n  };\r\n  onDelete = async record => {\r\n    let res = await saveConf({ id: record.id }, \"del\");\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功:\" + res.msg);\r\n      this.getInitialData(this.state.page, this.state.pageSize);\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  onAdd = async () => {\r\n    this.action = \"add\";\r\n    this.setState({\r\n      isEditFormShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.action = \"edit\";\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditFormShow: true\r\n    });\r\n  };\r\n}\r\nexport default Config;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { changeUserBalance } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  let params = JSON.parse(record.params);\r\n\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        let obj = {\r\n          \"data[id]\": record.id,\r\n          \"data[params]\": record.params,\r\n          \"data[status]\": 2\r\n        };\r\n        if (props.action === \"review\") {\r\n          obj[\"data[pay_reason]\"] = value.reason;\r\n          obj[\"data[status]\"] = 1;\r\n        }\r\n        const res = await changeUserBalance(obj);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <span>\r\n        ID:{params.user_id} 资金变动：{params.amount} 复审\r\n        {props.action === \"review\" ? \"备注\" : \"拒绝\"}\r\n      </span>\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        labelAlign=\"left\"\r\n        onSubmit={handleEditSubmit}\r\n      >\r\n        <Form.Item\r\n          style={{ display: props.action === \"review\" ? \"block\" : \"none\" }}\r\n        >\r\n          {getFieldDecorator(\"reason\", {\r\n            initialValue: params.reason\r\n          })(<Input.TextArea autosize={{ minRows: 5, maxRows: 10 }} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            确定\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Button,\r\n  Select\r\n} from \"antd\";\r\nimport { tasksList, saveConf } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\n\r\nclass Tasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await tasksList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.start_time = val[0];\r\n                this.end_time = val[1];\r\n              }}\r\n            ></MyDatePicker>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Select\r\n              placeholder=\"任务状态\"\r\n              style={{ width: 150 }}\r\n              onChange={value => (this.status = value)}\r\n            >\r\n              <Select.Option value=\"0\">待操作</Select.Option>\r\n              <Select.Option value=\"1\">已复审</Select.Option>\r\n              <Select.Option value=\"2\">复审拒绝</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入创建人昵称\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()}>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1800 }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"review\" ? \"复审\" : \"拒绝\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"任务ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"任务信息\",\r\n      dataIndex: \"params\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"任务来源\",\r\n      dataIndex: \"task_type\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 0 ? \"用户列表资金变动\" : \"代理配置列表资金变动\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"创建人昵称\",\r\n      dataIndex: \"operator_nick\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"复审人昵称\",\r\n      dataIndex: \"review_nick\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\"\r\n    },\r\n    {\r\n      title: \"更新时间\",\r\n      dataIndex: \"updated_at\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (text, record, index) => {\r\n        let res;\r\n        switch (text) {\r\n          case 0:\r\n            res = (\r\n              <div>\r\n                <LinkButton size=\"small\" onClick={()=>this.review(record)}>\r\n                  复审\r\n                </LinkButton>\r\n                <LinkButton size=\"small\" type=\"danger\" onClick={()=>this.refuse(record)}>\r\n                  拒绝\r\n                </LinkButton>\r\n              </div>\r\n            );\r\n            break;\r\n          case 1:\r\n            res = <LinkButton size=\"small\">已复审</LinkButton>;\r\n            break;\r\n          case 2:\r\n            res = (\r\n              <LinkButton size=\"small\" type=\"danger\">\r\n                复审拒绝\r\n              </LinkButton>\r\n            );\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        return res;\r\n      }\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      end_time: this.start_time || \"\",\r\n      start_time: this.start_time || \"\",\r\n      status: this.status || \"\",\r\n      operator_nick: this.input.input.value || \"\"\r\n    };\r\n    const res = await tasksList(this.state.page, this.state.pageSize, value);\r\n    this.setState({ data: res.data, count: res.count });\r\n  };\r\n  review=async (record)=>{\r\n   this.action=\"review\"\r\n   this.editDataRecord=record\r\n   this.setState({ isEditFormShow: true });\r\n  }\r\n  refuse=async(record)=>{\r\n    this.action=\"refuse\"\r\n    this.editDataRecord=record\r\n    this.setState({ isEditFormShow: true });\r\n  }\r\n}\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { Modal, Table } from \"antd\";\r\nimport {} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\nconst EditForm = props => {\r\n  const data = props.record;\r\n  function checkQrcode(record) {\r\n    Modal.success({\r\n      title: \"收款码\",\r\n      content: (<div><QRCode value={record.pay_url}></QRCode></div>),\r\n      width: 250\r\n    });\r\n  }\r\n  let initColumns = [\r\n    {\r\n      title: \"账号类型\",\r\n      dataIndex: \"type\",\r\n      render: (text, record, index) => {\r\n        let res;\r\n        switch (text) {\r\n          case 1:\r\n            res = \"微信\";\r\n            break;\r\n          case 2:\r\n            res = \"alipay\";\r\n            break;\r\n          case 3:\r\n            res = \"银行卡\";\r\n            break;\r\n          case 4:\r\n            res = \"花呗\";\r\n            break;\r\n          case 5:\r\n            res = \"信用卡\";\r\n            break;\r\n          default:\r\n            res = \"\";\r\n            break;\r\n        }\r\n        return <span>{res}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"账户名\",\r\n      dataIndex: \"account_name\"\r\n    },\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"account_num\"\r\n    },\r\n    {\r\n      title: \"开户行\",\r\n      dataIndex: \"bank_name\"\r\n    },\r\n    {\r\n      title: \"收款码\",\r\n      dataIndex: \"pay_url\",\r\n      render: (text, record, index) => {\r\n        if (text && text.length > 0) {\r\n          return (\r\n            <LinkButton onClick={() => checkQrcode(record)}>预览</LinkButton>\r\n          );\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: \"状态[收款码审核]\",\r\n      dataIndex: \"status\"\r\n    },\r\n    {\r\n      title: \"绑定时间\",\r\n      dataIndex: \"created_at\"\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"updated_at\"\r\n    }\r\n  ];\r\n  return (\r\n    <Table\r\n      bordered\r\n      rowKey={(record, index) => `${index}`}\r\n      dataSource={data}\r\n      columns={initColumns}\r\n      size=\"small\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message,  Input, Select } from \"antd\";\r\nimport { allAccountList, resetPassword, accountList } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\n\r\nclass AccountList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await allAccountList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Select defaultValue=\"user_id\" style={{ width: 150 }}>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入user_id\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n            />\r\n            {/* <br />\r\n            <br />\r\n            <LinkButton style={{ float: \"right\" }} onClick={this.download} icon=\"download\">\r\n            </LinkButton> */}\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          // scroll={{ x: 1800 }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title=\"绑定收付款账户详情\"\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            width=\"60%\"\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\"\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\"\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\"\r\n    },\r\n    {\r\n      title: \"资金密码操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <LinkButton\r\n          size=\"small\"\r\n          onClick={() => {\r\n            this.resetPassword(record);\r\n          }}\r\n        >\r\n          重置\r\n        </LinkButton>\r\n      )\r\n    },\r\n    {\r\n      title: \"绑定账号\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <LinkButton\r\n          size=\"small\"\r\n          onClick={() => {\r\n            this.checkAccount(record);\r\n          }}\r\n        >\r\n          查看\r\n        </LinkButton>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      user_id: this.input.input.value\r\n    };\r\n    const res = await allAccountList(\r\n      this.state.page,\r\n      this.state.pageSize,\r\n      value\r\n    );\r\n    this.setState({ data: res.data, count: parseInt(res.count) });\r\n  };\r\n  resetPassword = async record => {\r\n    const res = await resetPassword(record.user_id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  checkAccount = async record => {\r\n    const res = await accountList(record.user_id);\r\n    this.editDataRecord = res.data;\r\n    if (res.status !== 0) {\r\n      message.error(res.msg);\r\n    }\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  // download=async()=>{\r\n\r\n  // }\r\n}\r\nexport default AccountList;\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nconst EditForm = props => {\r\n  const data = props.record||[];\r\n  const action = props.action;\r\n  let initColumns = [];\r\n  switch (action) {\r\n    case \"detail\":\r\n      initColumns = [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"user_id\"\r\n        },\r\n        {\r\n          title: \"申请数量\",\r\n          dataIndex: \"\"\r\n        },\r\n        {\r\n          title: \"成交数量\",\r\n          dataIndex: \"\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"\"\r\n        }\r\n      ];\r\n      break;\r\n    case \"check\":\r\n      initColumns = [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n      break;\r\n    case \"operatorRemark\":\r\n      initColumns = [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <Table\r\n      bordered\r\n      rowKey={(record, index) => `${index}`}\r\n      dataSource={data}\r\n      columns={initColumns}\r\n      size=\"small\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Select\r\n} from \"antd\";\r\nimport {\r\n  sellGoldApplyList,\r\n  tradeRemark,\r\n  sellGoldInfoList,\r\n  reviewInfo2,\r\n  remarkInfo2\r\n} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass Tasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false,\r\n    };\r\n    this.filed = \"id\";\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await sellGoldApplyList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.start_time = val[0];\r\n                this.end_time = val[1];\r\n              }}\r\n            ></MyDatePicker>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Select\r\n              defaultValue=\"id\"\r\n              style={{ width: 150 }}\r\n              onChange={value => (this.filed = value)}\r\n            >\r\n              <Select.Option value=\"id\">ID</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"source\">所属代理</Select.Option>\r\n              <Select.Option value=\"group\">所属品牌</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入关键字搜索\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onChange={value => (this.status = value)}\r\n            >\r\n              <Select.Option value=\"\">状态</Select.Option>\r\n              <Select.Option value=\"1\">待初审</Select.Option>\r\n              <Select.Option value=\"2\">初审通过</Select.Option>\r\n              <Select.Option value=\"3\">初审拒绝</Select.Option>\r\n              <Select.Option value=\"4\">复审通过</Select.Option>\r\n              <Select.Option value=\"5\">复审拒绝</Select.Option>\r\n              <Select.Option value=\"6\">已下架</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()}>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: parseInt(this.state.count),\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1800 }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={\r\n              this.action === \"detail\"\r\n                ? \"详情\"\r\n                : this.action === \"check\"\r\n                ? \"审核详情\"\r\n                : \"运营备注详情\"\r\n            }\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\"\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\"\r\n    },\r\n    {\r\n      title: \"兑换单价\",\r\n      dataIndex: \"exchange_price\"\r\n    },\r\n    {\r\n      title: \"上架金币数\",\r\n      dataIndex: \"gold\"\r\n    },\r\n    {\r\n      title: \"上架金币余额\",\r\n      dataIndex: \"last_gold\"\r\n    },\r\n    {\r\n      title: \"最低兑换额\",\r\n      dataIndex: \"min_gold\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (text, record, index) => {\r\n        let res;\r\n        switch (parseInt(text)) {\r\n          case 1:\r\n            res = (\r\n              <span>\r\n                <LinkButton size=\"small\">初审通过</LinkButton>\r\n                <LinkButton size=\"small\">初审拒绝</LinkButton>\r\n              </span>\r\n            );\r\n            break;\r\n          case 2:\r\n            res = (\r\n              <span>\r\n                <LinkButton size=\"small\">复审通过</LinkButton>\r\n                <LinkButton size=\"small\">复审拒绝</LinkButton>\r\n              </span>\r\n            );\r\n            break;\r\n          case 3:\r\n            res = <span>一审拒绝</span>;\r\n            break;\r\n          case 4:\r\n            res = <span>已上架</span>;\r\n            break;\r\n          case 5:\r\n            res = <span>二审拒绝</span>;\r\n            break;\r\n          case 6:\r\n            res = <span>已下架</span>;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        return res;\r\n      }\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"风控\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton size=\"small\" type=\"dashed\">\r\n            风控\r\n          </LinkButton>\r\n          <LinkButton size=\"small\" type=\"dashed\">\r\n            游戏数据\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton size=\"small\" onClick={() => this.edit(record)}>\r\n            编辑\r\n          </LinkButton>\r\n          <LinkButton size=\"small\" onClick={() => this.checkDetail(record, \"detail\")}>\r\n            详情\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            type=\"default\"\r\n            onClick={() => this.checkDetail(record, \"check\")}\r\n          >\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            type=\"default\"\r\n            onClick={() => this.checkDetail(record, \"userRemark\")}\r\n          >\r\n            用户备注\r\n          </LinkButton>\r\n          <LinkButton\r\n            size=\"small\"\r\n            type=\"default\"\r\n            onClick={() => this.checkDetail(record, \"operatorRemark\")}\r\n          >\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      end_time: this.start_time || \"\",\r\n      start_time: this.start_time || \"\",\r\n      status: this.status || \"\",\r\n      [this.filed]: this.input.input.value\r\n    };\r\n    const res = await sellGoldApplyList(\r\n      this.state.page,\r\n      this.state.pageSize,\r\n      value\r\n    );\r\n    this.setState({ data: res.data, count: res.count });\r\n  };\r\n  edit = async record => {\r\n    Modal.info({\r\n      title: \"编辑\",\r\n      okText: \"关闭\",\r\n      okType: \"default\",\r\n      width: \"50%\",\r\n      content: (\r\n        <div>\r\n          <div>\r\n            <span>备注[用户]&nbsp;&nbsp;&nbsp;</span>\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"请输入备注内容，用户查看使用\"\r\n              ref={Input => {\r\n                this.userRemarkInput = Input;\r\n              }}\r\n            />\r\n            <span>&nbsp;&nbsp;&nbsp;</span>\r\n            <LinkButton\r\n              onClick={() => {\r\n                this.editComfirm(record, 1);\r\n              }}\r\n            >\r\n              确定\r\n            </LinkButton>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <span>备注[运营]&nbsp;&nbsp;&nbsp;</span>\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"请输入备注内容，运营人员记录使用\"\r\n              ref={Input => {\r\n                this.operatorRemarkInput = Input;\r\n              }}\r\n            />\r\n            <span>&nbsp;&nbsp;&nbsp;</span>\r\n            <LinkButton\r\n              onClick={() => {\r\n                this.editComfirm(record, 2);\r\n              }}\r\n            >\r\n              确定\r\n            </LinkButton>\r\n          </div>\r\n        </div>\r\n      )\r\n    });\r\n  };\r\n  editComfirm = async (record, remark_type) => {\r\n    let value = {\r\n      id: record.id,\r\n      temarks:\r\n        remark_type === 1\r\n          ? this.userRemarkInput.input.value\r\n          : this.operatorRemarkInput.input.value,\r\n      remark_type: remark_type\r\n    };\r\n    if (remark_type === 2) {\r\n      value.type = 6;\r\n    }\r\n    const res = await tradeRemark(value);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  checkDetail = async (record, action) => {\r\n    if (action === \"userRemark\") {\r\n      Modal.info({\r\n        title: `订单ID为【${record.id}】的用户备注`,\r\n        content: <div>{record.user_remark||'无'}</div>,\r\n        okText:'关闭'\r\n      });\r\n    } else {\r\n      let res;\r\n      switch (action) {\r\n        case \"detail\":\r\n          res = await sellGoldInfoList(1, 100, record.id);\r\n          break;\r\n        case \"check\":\r\n          res = await reviewInfo2(1, 100, record.id);\r\n          break;\r\n        case \"operatorRemark\":\r\n          res = await remarkInfo2(1, 100, record.id);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.editDataRecord = res.data;\r\n      this.action = action;\r\n      this.setState({ isEditFormShow: true });\r\n    }\r\n  };\r\n}\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { changeUserBalance } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  let params = JSON.parse(record.params);\r\n\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        let obj = {\r\n          \"data[id]\": record.id,\r\n          \"data[params]\": record.params,\r\n          \"data[status]\": 2\r\n        };\r\n        if (props.action === \"review\") {\r\n          obj[\"data[pay_reason]\"] = value.reason;\r\n          obj[\"data[status]\"] = 1;\r\n        }\r\n        const res = await changeUserBalance(obj);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <span>\r\n        ID:{params.user_id} 资金变动：{params.amount} 复审\r\n        {props.action === \"review\" ? \"备注\" : \"拒绝\"}\r\n      </span>\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        labelAlign=\"left\"\r\n        onSubmit={handleEditSubmit}\r\n      >\r\n        <Form.Item\r\n          style={{ display: props.action === \"review\" ? \"block\" : \"none\" }}\r\n        >\r\n          {getFieldDecorator(\"reason\", {\r\n            initialValue: params.reason\r\n          })(<Input.TextArea autosize={{ minRows: 5, maxRows: 10 }} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            确定\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input, Select } from \"antd\";\r\nimport { sellGoldOrderList } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\n\r\nclass Tasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await sellGoldOrderList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } \r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.start_time = val[0];\r\n                this.end_time = val[1];\r\n              }}\r\n            ></MyDatePicker>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Select\r\n              placeholder=\"任务状态\"\r\n              style={{ width: 150 }}\r\n              onChange={value => (this.status = value)}\r\n            >\r\n              <Select.Option value=\"0\">待操作</Select.Option>\r\n              <Select.Option value=\"1\">已复审</Select.Option>\r\n              <Select.Option value=\"2\">复审拒绝</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入创建人昵称\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()}>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1800 }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"review\" ? \"复审\" : \"拒绝\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"买家ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"买家昵称\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"卖家ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"卖家昵称\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"兑换单价\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"支付金额\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"兑换金额\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"完成时间\",\r\n      dataIndex: \"\"\r\n    }\r\n  ];\r\n  // onSearch = async () => {\r\n  //   let value = {\r\n  //     end_time: this.start_time || \"\",\r\n  //     start_time: this.start_time || \"\",\r\n  //     status: this.status || \"\",\r\n  //     operator_nick: this.input.input.value || \"\"\r\n  //   };\r\n  //   const res = await tasksList(this.state.page, this.state.pageSize, value);\r\n  //   this.setState({ data: res.data, count: res.count });\r\n  // };\r\n  review = async record => {\r\n    this.action = \"review\";\r\n    this.editDataRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  refuse = async record => {\r\n    this.action = \"refuse\";\r\n    this.editDataRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n}\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\r\nimport { saveActivityConfig } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  const action = props.action;\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        if (action === \"edit\") {\r\n          value.id = record.id;\r\n        }\r\n        const res = await saveActivityConfig(value);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Form\r\n        labelCol={{ span: 6 }}\r\n        labelAlign=\"left\"\r\n        onSubmit={handleEditSubmit}\r\n      >\r\n        <Form.Item label=\"活动名称\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.name\r\n          })(<Input style={{ width: \"40%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"品牌\">\r\n          {getFieldDecorator(\"package_id\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.package_id\r\n          })(\r\n            <Select style={{ width: \"40%\" }}>\r\n              <Select.Option value=\"1\">博臣娱乐</Select.Option>\r\n              <Select.Option value=\"2\">机器人首领</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"is_close\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.is_close\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">关闭</Radio>\r\n              <Radio value=\"2\">开启</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需要绑定电话\">\r\n          {getFieldDecorator(\"need_mobile\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.need_mobile\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">是</Radio>\r\n              <Radio value=\"2\">否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需要绑定银行卡\">\r\n          {getFieldDecorator(\"need_bankcard\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.need_bankcard\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">是</Radio>\r\n              <Radio value=\"2\">否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"排序\">\r\n          {getFieldDecorator(\"order_by\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.order_by\r\n          })(<Input style={{ width: \"40%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"活动内容\">\r\n          {getFieldDecorator(\"info\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.info\r\n          })(\r\n            <Input.TextArea\r\n              style={{ width: \"70%\" }}\r\n              autosize={{ maxRows: 10 }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            确定\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Input, Popconfirm } from \"antd\";\r\nimport {\r\n  activityConfigList,\r\n  delActivityConfig\r\n} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport WrappedEditForm from \"./editForm\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass AccountList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await activityConfigList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.setState({\r\n                  start_time: val[0],\r\n                  end_time: val[1]\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入活动id\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n              size=\"default\"\r\n            ></LinkButton>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton onClick={this.add} size=\"default\">\r\n              添加\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"add\" ? \"添加\" : \"编辑\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"活动名称\",\r\n      dataIndex: \"name\"\r\n    },\r\n    {\r\n      title: \"品牌ID\",\r\n      dataIndex: \"package_id\"\r\n    },\r\n    {\r\n      title: \"活动状态\",\r\n      dataIndex: \"is_close\",\r\n      render: text => <span>{text === \"1\" ? \"关闭\" : \"开启\"}</span>\r\n    },\r\n    {\r\n      title: \"需要绑定电话\",\r\n      dataIndex: \"need_mobile\",\r\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"需要绑定银行卡\",\r\n      dataIndex: \"need_bankcard\",\r\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"活动内容\",\r\n      dataIndex: \"info\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"排序\",\r\n      dataIndex: \"order_by\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            onClick={() => {\r\n              this.edit(record);\r\n            }}\r\n          >\r\n            编辑\r\n          </LinkButton>\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.delete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <LinkButton type=\"danger\" size=\"small\">\r\n              删除\r\n            </LinkButton>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      user_id: this.input.input.value\r\n    };\r\n    const res = await activityConfigList(\r\n      this.state.page,\r\n      this.state.pageSize,\r\n      value\r\n    );\r\n    this.setState({ data: res.data, count: parseInt(res.count) });\r\n  };\r\n  add = async record => {\r\n    this.action = \"add\";\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  edit = async record => {\r\n    this.action = \"edit\";\r\n    this.editDataRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  delete = async record => {\r\n    const res = await delActivityConfig(record.id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n    this.getInitialData(1, 20);\r\n  };\r\n}\r\nexport default AccountList;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\r\nimport { saveActivityConfig } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  const action = props.action;\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        if (action === \"edit\") {\r\n          value.id = record.id;\r\n        }\r\n        const res = await saveActivityConfig(value);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Form\r\n        labelCol={{ span: 6 }}\r\n        labelAlign=\"left\"\r\n        onSubmit={handleEditSubmit}\r\n      >\r\n        <Form.Item label=\"活动名称\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.name\r\n          })(<Input style={{ width: \"40%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"品牌\">\r\n          {getFieldDecorator(\"package_id\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.package_id\r\n          })(\r\n            <Select style={{ width: \"40%\" }}>\r\n              <Select.Option value=\"1\">博臣娱乐</Select.Option>\r\n              <Select.Option value=\"2\">机器人首领</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"is_close\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.is_close\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">关闭</Radio>\r\n              <Radio value=\"2\">开启</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需要绑定电话\">\r\n          {getFieldDecorator(\"need_mobile\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.need_mobile\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">是</Radio>\r\n              <Radio value=\"2\">否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需要绑定银行卡\">\r\n          {getFieldDecorator(\"need_bankcard\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.need_bankcard\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">是</Radio>\r\n              <Radio value=\"2\">否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"排序\">\r\n          {getFieldDecorator(\"order_by\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.order_by\r\n          })(<Input style={{ width: \"40%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"活动内容\">\r\n          {getFieldDecorator(\"info\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.info\r\n          })(\r\n            <Input.TextArea\r\n              style={{ width: \"70%\" }}\r\n              autosize={{ maxRows: 10 }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            确定\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Input, Popconfirm } from \"antd\";\r\nimport {\r\n  giftVoucherList,\r\n  delActivityConfig\r\n} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport WrappedEditForm from \"./editForm\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass AccountList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await giftVoucherList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.setState({\r\n                  start_time: val[0],\r\n                  end_time: val[1]\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入活动id\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n              size=\"default\"\r\n            ></LinkButton>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton onClick={this.add} size=\"default\">\r\n              添加\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"add\" ? \"添加\" : \"编辑\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"领取人ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"领取人昵称\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"代理ID\",\r\n      dataIndex: \"\",\r\n      render: text => <span>{text === \"1\" ? \"关闭\" : \"开启\"}</span>\r\n    },\r\n    {\r\n      title: \"code\",\r\n      dataIndex: \"\",\r\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"领取金额\",\r\n      dataIndex: \"\",\r\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"领取时间\",\r\n      dataIndex: \"order_by\"\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            onClick={() => {\r\n              this.edit(record);\r\n            }}\r\n          >\r\n            编辑\r\n          </LinkButton>\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.delete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <LinkButton type=\"danger\" size=\"small\">\r\n              删除\r\n            </LinkButton>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      user_id: this.input.input.value\r\n    };\r\n    const res = await giftVoucherList(\r\n      this.state.page,\r\n      this.state.pageSize,\r\n      value\r\n    );\r\n    this.setState({ data: res.data, count: parseInt(res.count) });\r\n  };\r\n  add = async record => {\r\n    this.action = \"add\";\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  edit = async record => {\r\n    this.action = \"edit\";\r\n    this.editDataRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  delete = async record => {\r\n    const res = await delActivityConfig(record.id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n    this.getInitialData(1, 20);\r\n  };\r\n}\r\nexport default AccountList;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data } = this.props.detailRecord;\r\n    console.log(data);\r\n\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey={(record,index)=>`${index}`}\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"check\") {\r\n      return [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    } else if (this.props.action === \"risk\") {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\r\nimport { withDrawReview } from \"../../../api/index\";\r\nclass EditForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      review_status: \"\"\r\n    };\r\n  }\r\n  render() {\r\n    const record = this.props.record;\r\n    return (\r\n      <div>\r\n        <div>订单ID:{record.order_id}</div>\r\n        <div>用户ID:{record.user_id}</div>\r\n        <div>金额:{record.amount}</div>\r\n        <div>\r\n          订单状态:\r\n          <Radio.Group\r\n            onChange={e => {\r\n              this.setState({ review_status: e.target.value });\r\n            }}\r\n            value={this.state.review_status}\r\n          >\r\n            <Radio value={2}>已成功</Radio>\r\n            <Radio value={3}>已失败</Radio>\r\n          </Radio.Group>\r\n          <Button onClick={() => this.orderStatus(record)}>确认</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  orderStatus = async record => {\r\n    const res = await withDrawReview(\r\n      record.order_id,\r\n      record.user_id,\r\n      this.state.review_status\r\n    );\r\n    message.info(res.msg);\r\n  };\r\n}\r\n\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, Icon, Input, Select, Popover } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport {\r\n  withDraw,\r\n  downloadWithdrawList,\r\n  userDetail,\r\n  reviewInfo,\r\n  remarkInfo\r\n} from \"../../../api\";\r\nimport WrappedComponent from \"./details\";\r\nimport EditForm from \"./editForm\";\r\n\r\nclass Withdraw_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: 5,\r\n      filed: \"\",\r\n      inputParam: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\",\r\n      isBindInfoShow: false,\r\n      isEditFormShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await withDraw(page, limit, 1, this.state);\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await withDraw(1, 20, 1, this.state);\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  download = () => {\r\n    downloadWithdrawList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ filed: value })}\r\n            >\r\n              <Select.Option value=\"order_id\">订单id</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"replace_id\">被赠人ID</Select.Option>\r\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\r\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={this.handleChange}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.setState({\r\n                  start_time: val[0],\r\n                  end_time: val[1]\r\n                });\r\n              }}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ order_status: value })}\r\n            >\r\n              <Select.Option value=\"\">订单状态</Select.Option>\r\n              <Select.Option value=\"1\">待审核</Select.Option>\r\n              <Select.Option value=\"2\">处理中</Select.Option>\r\n              <Select.Option value=\"3\">已提交</Select.Option>\r\n              <Select.Option value=\"4\">已成功</Select.Option>\r\n              <Select.Option value=\"5\">已失败</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 2400, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title={\r\n            this.action === \"check\"\r\n              ? \"审核信息\"\r\n              : this.action === \"risk\"\r\n              ? \"资金明细\"\r\n              : \"运营备注\"\r\n          }\r\n          visible={this.state.isDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            detailRecord={this.detailRecord}\r\n            action={this.action}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n            width=\"70%\"\r\n          >\r\n            <EditForm record={this.editRecord} />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"申请费率\",\r\n      dataIndex: \"handling_fee\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"实际费率\",\r\n      dataIndex: \"gold\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"兑换方式\",\r\n      dataIndex: \"order_type\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"被赠人ID\",\r\n      dataIndex: \"replace_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"被赠人昵称\",\r\n      dataIndex: \"replace_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"待审核\";\r\n            break;\r\n          case \"2\":\r\n            word = \"处理中\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已提交\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已成功\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已失败\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 150,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 150,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 200,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <Popover\r\n            content={record.user_remark}\r\n            title={record.user_id + \"用户备注\"}\r\n            trigger=\"click\"\r\n          >\r\n            <LinkButton>用户备注</LinkButton>\r\n          </Popover>\r\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      start_time: startTime,\r\n      end_time: endTime\r\n    });\r\n  };\r\n  getDetail = async (record, action) => {\r\n    this.action = action;\r\n    this.detailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.user_id\r\n    };\r\n    const res =\r\n      action === \"risk\"\r\n        ? await userDetail(1, 20, record.user_id)\r\n        : action === \"check\"\r\n        ? await reviewInfo(1, 20, record.order_id)\r\n        : await remarkInfo(1, 20, record.order_id);\r\n    if (res.status === 0) {\r\n      this.detailRecord.data = res.data;\r\n      this.detailRecord.count = res.count;\r\n    }\r\n    this.setState({ isDetailShow: true });\r\n  };\r\n  edit = record => {\r\n    console.log(123);\r\n    \r\n    this.editRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n}\r\n\r\nexport default Withdraw_list;\r\n","import React, { Component } from \"react\";\r\nimport {  withRouter } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  message,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  Radio,\r\n} from \"antd\";\r\nimport { getConfigList,  } from \"../../../api/index\";\r\n\r\nclass Channel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\"\r\n    };\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const res = await getConfigList();\r\n    if (res.status === 0) {\r\n      this.initialData = res.data;\r\n      this.setState({ data: JSON.parse(res.data.conf_val) });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const data = this.state.data;\r\n    return (\r\n      <Card\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              icon=\"reload\"\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Form\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 20 }}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <Form.Item label=\"品牌\">\r\n            {getFieldDecorator(\"package_id\", {\r\n              initialValue: 1\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>博臣娱乐</Radio>\r\n                <Radio value={0}>机器人首领</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"开关\">\r\n            {getFieldDecorator(\"is_close\", {\r\n              initialValue: 1\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"赠送区间\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"qujian\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: \"\"\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][2][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: \"\"\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ offset: 4 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // this.props.form.validateFields(async (err, value) => {\r\n    //   let { id, name } = this.initialData;\r\n    //   let obj = {};\r\n    //   value.bankcard.channel.forEach((item, index) => {\r\n    //     for (const key in item) {\r\n    //       obj[`bankcard[channel][${index}][${key}]`] = item[key];\r\n    //     }\r\n    //   });\r\n\r\n    //   obj[\"bankcard[is_close]\"] = value.bankcard.is_close ? \"on\" : \"off\";\r\n    //   obj[\"alipay[is_close]\"] = value.alipay.is_close ? \"on\" : \"off\";\r\n    //   for (const key in value.artificial) {\r\n    //     obj[`artificial[${key}]`] = value.artificial[key];\r\n    //   }\r\n    //   if (!err) {\r\n    //     const res = await saveWithDrawChannel(id, name, obj);\r\n    //     if (res.status === 0) {\r\n    //       message.success(\"提交成功:\" + res.msg);\r\n    //       console.log(res);\r\n    //       this.getUsers();\r\n    //     } else {\r\n    //       message.error(\"出错了：\" + res.msg);\r\n    //     }\r\n    //   } else {\r\n    //     message.error(\"提交失败\");\r\n    //   }\r\n    // });\r\n  };\r\n}\r\nconst WrappedChannel = Form.create()(Channel);\r\n\r\nexport default withRouter(WrappedChannel);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Input, Select, message } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getAIList, reqLoadGold } from \"../../../api\";\r\n\r\nclass Withdraw_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0\r\n    };\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getAIList(page, limit, 5);\r\n    this.setState({\r\n      data: result.data.game_user,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  onSearchData = async () => {\r\n    let value = {\r\n      [this.filed]: this.input.input.value\r\n    };\r\n    const result = await getAIList(1, 20, 5, value);\r\n    this.setState({\r\n      data: result.data.game_user,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => (this.filed = value)}\r\n            >\r\n              <Select.Option value=\"game_nick\">昵称</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              ref={Input => (this.input = Input)}\r\n            />\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"game_nick\"\r\n    },\r\n    {\r\n      title: \"账户余额\",\r\n      dataIndex: \"game_gold\"\r\n    },\r\n    {\r\n      title: \"实时余额\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.check(record)}>查看</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  check = async record => {\r\n    const res = await reqLoadGold(record.id);\r\n    message.info(res.data[0].game_gold);\r\n  };\r\n}\r\n\r\nexport default Withdraw_list;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data } = this.props.detailRecord;\r\n    console.log(data);\r\n\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey={(record,index)=>`${index}`}\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"check\") {\r\n      return [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    } else if (this.props.action === \"risk\") {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React, { Component } from \"react\";\r\nimport {  Input, Button, message } from \"antd\";\r\nimport { withDrawRemark } from \"../../../api\";\r\n\r\nexport default class AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { editDataRecord } = this.props;\r\n    return (\r\n      <div>\r\n        <div>订单ID:{editDataRecord.order_id}</div>\r\n        <div>用户ID:{editDataRecord.user_id}</div>\r\n        <div>金额:{editDataRecord.amount}</div>\r\n        <div>\r\n          <span>备注[用户]:</span>\r\n          <Input\r\n            type=\"text\"\r\n            style={{ width: \"70%\", margin: \"0 10px\" }}\r\n            placeholder=\"请输入备注内容，用户查看使用\"\r\n            onBlur={e => (this.userRemark = e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"login-form-button\"\r\n            onClick={() =>\r\n              this.submitRemark(editDataRecord.order_id, this.userRemark, 1)\r\n            }\r\n          >\r\n            提交\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <span>备注[运营]:</span>\r\n          <Input\r\n            type=\"text\"\r\n            style={{ width: \"70%\", margin: \"0 10px\" }}\r\n            placeholder=\"请输入备注内容，运营人员记录使用\"\r\n            onBlur={e => (this.operatorRemark = e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"login-form-button\"\r\n            onClick={() =>\r\n              this.submitRemark(editDataRecord.order_id, this.operatorRemark, 2)\r\n            }\r\n          >\r\n            提交\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  submitRemark = async (id, temarks, remark_type) => {\r\n    const res = await withDrawRemark(id, temarks, remark_type);\r\n    if (res.status === 0) {\r\n      message.success(\"操作成功:\" + res.msg);\r\n    } else {\r\n      message.error(\"操作失败:\" + res.msg);\r\n    }\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  ConfigProvider,\r\n  DatePicker,\r\n  Button,\r\n  Popover\r\n} from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\nimport \"moment/locale/zh-cn\";\r\nimport {\r\n  withDraw,\r\n  downloadWithdrawList,\r\n  userDetail,\r\n  reviewInfo,\r\n  remarkInfo\r\n} from \"../../../api\";\r\nimport WrappedComponent from \"./details\";\r\nimport AddDataForm from \"./edit\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nclass Daiti extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: 3,\r\n      filed: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\",\r\n      isBindInfoShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    let data = { inputParam: \"\", ...this.state };\r\n    const result = await withDraw(page, limit, 1, data);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  onSearchData = async () => {\r\n    let data = { inputParam: this.input.input.value, ...this.state };\r\n    console.log(data);\r\n\r\n    const result = await withDraw(1, 20, 1, data);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n      message.error(\"请检查输入的关键词或网络\");\r\n    }\r\n  };\r\n  download = () => {\r\n    downloadWithdrawList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <ConfigProvider locale={zh_CN}>\r\n              <RangePicker\r\n                // defaultValue={[moment().locale(\"zh-cn\")]}\r\n                // showTime={{ format: \"HH:mm\" }}\r\n                format=\"YYYY-MM-DD\"\r\n                placeholder={[\"开始日期\", \"结束日期\"]}\r\n                onChange={this.dataPickerOnChange}\r\n              />\r\n            </ConfigProvider>\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ filed: value })}\r\n            >\r\n              <Select.Option value=\"order_id\">订单id</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"replace_id\">代提ID</Select.Option>\r\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\r\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              // value={this.state.inputParam}\r\n              // onChange={this.handleChange}\r\n              ref={Input => (this.input = Input)}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ order_status: value })}\r\n            >\r\n              <Select.Option value=\"\">订单状态</Select.Option>\r\n              <Select.Option value=\"1\">待审核</Select.Option>\r\n              <Select.Option value=\"2\">处理中</Select.Option>\r\n              <Select.Option value=\"3\">已提交</Select.Option>\r\n              <Select.Option value=\"4\">已成功</Select.Option>\r\n              <Select.Option value=\"5\">已失败</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 2500, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title={\r\n            this.action === \"check\"\r\n              ? \"审核信息\"\r\n              : this.action === \"risk\"\r\n              ? \"资金明细\"\r\n              : \"运营备注\"\r\n          }\r\n          visible={this.state.isDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            detailRecord={this.detailRecord}\r\n            action={this.action}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditShow: false });\r\n            }}\r\n            footer={null}\r\n            width=\"40%\"\r\n          >\r\n            <AddDataForm editDataRecord={this.editDataRecord} />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"兑换方式\",\r\n      dataIndex: \"order_type\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"兑换账号\",\r\n      dataIndex: \"pay_account\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"账号名称\",\r\n      dataIndex: \"pay_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"待审核\";\r\n            break;\r\n          case \"2\":\r\n            word = \"处理中\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已提交\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已成功\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已失败\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 150,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"代提ID\",\r\n      dataIndex: \"replace_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 150,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 150,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"风控\",\r\n      dataIndex: \"\",\r\n      width: 180,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"risk\")}>\r\n            风控\r\n          </LinkButton>\r\n          <LinkButton>游戏数据</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <Popover\r\n            content={record.user_remark}\r\n            title={record.user_id + \"用户备注\"}\r\n            trigger=\"click\"\r\n          >\r\n            <LinkButton>用户备注</LinkButton>\r\n          </Popover>\r\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      start_time: startTime,\r\n      end_time: endTime\r\n    });\r\n  };\r\n  getDetail = async (record, action) => {\r\n    this.action = action;\r\n    this.detailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.user_id\r\n    };\r\n    const res =\r\n      action === \"risk\"\r\n        ? await userDetail(1, 20, record.user_id)\r\n        : action === \"check\"\r\n        ? await reviewInfo(1, 20, record.order_id)\r\n        : await remarkInfo(1, 20, record.order_id);\r\n    if (res.status === 0) {\r\n      this.detailRecord.data = res.data;\r\n      this.detailRecord.count = res.count;\r\n    }\r\n    this.setState({ isDetailShow: true });\r\n  };\r\n  edit = async record => {\r\n    this.setState({ isEditShow: true });\r\n    this.editDataRecord = record;\r\n  };\r\n}\r\n\r\nexport default Daiti;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  message,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  Switch,\r\n  Radio,\r\n  Divider\r\n} from \"antd\";\r\nimport { getConfigList, saveWithDrawChannel } from \"../../../api/index\";\r\n\r\nclass Channel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\"\r\n    };\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const res = await getConfigList();\r\n    if (res.status === 0) {\r\n      this.initialData = res.data;\r\n      this.setState({ data: JSON.parse(res.data.conf_val) });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const data = this.state.data;\r\n    return (\r\n      <Card\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              icon=\"reload\"\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Form\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 20 }}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <Form.Item label=\"提款支付宝\">\r\n            {getFieldDecorator(\"alipay[is_close]\", {\r\n              initialValue: data && data.alipay.is_close === 1 ? true : false,\r\n              valuePropName: \"checked\"\r\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\r\n          </Form.Item>\r\n          <Divider></Divider>\r\n          <Form.Item label=\"提款银行卡\">\r\n            {getFieldDecorator(\"bankcard[is_close]\", {\r\n              initialValue: data && data.bankcard.is_close === 1 ? true : false,\r\n              valuePropName: \"checked\"\r\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"古都银行卡状态\">\r\n            {getFieldDecorator(\"bankcard[channel][2][is_close]\", {\r\n              initialValue: data && parseInt(data.bankcard.channel[0].is_close)\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"显示名称\">\r\n            {getFieldDecorator(\"bankcard[channel][2][channel_name]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[0].channel_name\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][2][min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[0].min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][2][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[0].max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"渠道排序\">\r\n            {getFieldDecorator(\"bankcard[channel][2][sort]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[0].sort\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"第三方代付状态\">\r\n            {getFieldDecorator(\"bankcard[channel][3][is_close]\", {\r\n              initialValue: data && parseInt(data.bankcard.channel[1].is_close)\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"显示名称\">\r\n            {getFieldDecorator(\"bankcard[channel][3][channel_name]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[1].channel_name\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][3][min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[1].min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][3][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[1].max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"渠道排序\">\r\n            {getFieldDecorator(\"bankcard[channel][3][sort]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[1].sort\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"onepay状态\">\r\n            {getFieldDecorator(\"bankcard[channel][7][is_close]\", {\r\n              initialValue: data && parseInt(data.bankcard.channel[2].is_close)\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"显示名称\">\r\n            {getFieldDecorator(\"bankcard[channel][7][channel_name]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[2].channel_name\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][7][min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[2].min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][7][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[2].max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"渠道排序\">\r\n            {getFieldDecorator(\"bankcard[channel][7][sort]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[2].sort\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n\r\n          <Divider></Divider>\r\n          <Form.Item label=\"人工兑换\">\r\n            {getFieldDecorator(\"artificial[is_close]\", {\r\n              initialValue:\r\n                data && data.artificial.is_close === 1 ? true : false,\r\n              valuePropName: \"checked\"\r\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"artificial[min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.artificial.min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"artificial[max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.artificial.max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"费率\">\r\n            {getFieldDecorator(\"artificial[rate]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.artificial.rate\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 4 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let { id, name } = this.initialData;\r\n      let obj = {};\r\n      value.bankcard.channel.forEach((item, index) => {\r\n        for (const key in item) {\r\n          obj[`bankcard[channel][${index}][${key}]`] = item[key];\r\n        }\r\n      });\r\n\r\n      obj[\"bankcard[is_close]\"] = value.bankcard.is_close ? \"on\" : \"off\";\r\n      obj[\"alipay[is_close]\"] = value.alipay.is_close ? \"on\" : \"off\";\r\n      for (const key in value.artificial) {\r\n        obj[`artificial[${key}]`] = value.artificial[key];\r\n      }\r\n      if (!err) {\r\n        const res = await saveWithDrawChannel(id, name, obj);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功:\" + res.msg);\r\n          console.log(res);\r\n          this.getUsers();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\nconst WrappedChannel = Form.create()(Channel);\r\n\r\nexport default withRouter(WrappedChannel);\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './not-found.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { Table} from \"antd\";\r\n// import {  Table,Button} from 'element-react';\r\n// import \"element-theme-default\";\r\n\r\nconst DateGameReport = props => {\r\n  let initColumns = () => [\r\n    {\r\n      title: \"游戏\",\r\n      dataIndex: \"game_name\"\r\n    },\r\n    {\r\n      title: \"玩家总赢额\",\r\n      dataIndex: \"win_statement_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"玩家总输额\",\r\n      dataIndex: \"lose_statement_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"玩家总流水\",\r\n      dataIndex: \"statement_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"盈亏比\",\r\n      dataIndex: \"statement_ratio\",\r\n      width: 150\r\n    }\r\n  ];\r\n  return (\r\n    <Table\r\n      bordered\r\n      rowKey={(record, index) => `${index}`}\r\n      dataSource={props.data}\r\n      columns={initColumns()}\r\n      size=\"small\"\r\n      // scroll={{ x: 3000 }}\r\n      // footer={this.footerData}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DateGameReport;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Button, Modal } from \"antd\";\r\n// import {  Table,Button} from 'element-react';\r\n// import \"element-theme-default\";\r\nimport { oneDayGameReport } from \"../../../api/index\";\r\nimport DateGameReport from \"./dateGameReport\";\r\n\r\nclass MoreDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: \"\",\r\n      isGameReportShow: false,\r\n      nextLevelData: \"\"\r\n    };\r\n  }\r\n  render() {\r\n    const { data } = this.props.reportData;\r\n    return (\r\n      <div>\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          scroll={{ x: 2000 }}\r\n          // footer={this.footerData}\r\n        />\r\n        <Modal\r\n          title={this.state.date + \"/游戏数据\"}\r\n          width=\"80%\"\r\n          visible={this.state.isGameReportShow}\r\n          onCancel={() => {\r\n            this.setState({ isGameReportShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <DateGameReport data={this.state.nextLevelData} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"getDateReport\") {\r\n      let tableHeader = [\r\n        {\r\n          title: \"日期\",\r\n          dataIndex: \"date\"\r\n        },\r\n        {\r\n          title: \"新增用户\",\r\n          dataIndex: \"regin_user_number\"\r\n        },\r\n        {\r\n          title: \"活跃用户\",\r\n          dataIndex: \"active_user_number\"\r\n        },\r\n        {\r\n          title: \"官方首充用户\",\r\n          dataIndex: \"first_pay_user_number\"\r\n        },\r\n        {\r\n          title: \"官方首充金额\",\r\n          dataIndex: \"first_pay_money_total\"\r\n        },\r\n        {\r\n          title: \"官方充值用户\",\r\n          dataIndex: \"pay_user_number\"\r\n        },\r\n        {\r\n          title: \"官方充值金额\",\r\n          dataIndex: \"pay_money_total\"\r\n        },\r\n        {\r\n          title: \"人工首充用户\",\r\n          dataIndex: \"first_pay_user_number_res\"\r\n        },\r\n        {\r\n          title: \"人工首充金额\",\r\n          dataIndex: \"first_pay_money_total_res\"\r\n        },\r\n        {\r\n          title: \"人工充值用户\",\r\n          dataIndex: \"pay_user_number_res\"\r\n        },\r\n        {\r\n          title: \"人工充值金额\",\r\n          dataIndex: \"pay_money_total_res\"\r\n        },\r\n        {\r\n          title: \"官方兑换用户\",\r\n          dataIndex: \"exchange_user_number\"\r\n        },\r\n        {\r\n          title: \"官方兑换金额\",\r\n          dataIndex: \"exchange_money_total\"\r\n        },\r\n        {\r\n          title: \"人工兑换用户\",\r\n          dataIndex: \"exchange_user_number_res\"\r\n        },\r\n        {\r\n          title: \"人工兑换金额\",\r\n          dataIndex: \"exchange_money_total_res\"\r\n        },\r\n        {\r\n          title: \"玩家总赢额\",\r\n          dataIndex: \"win_statement_total\"\r\n        },\r\n        {\r\n          title: \"玩家总输额\",\r\n          dataIndex: \"lose_statement_total\"\r\n        },\r\n        {\r\n          title: \"玩家总流水\",\r\n          dataIndex: \"statement_total\"\r\n        },\r\n        {\r\n          title: \"盈亏比\",\r\n          dataIndex: \"statement_ratio\"\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          dataIndex: \"\",\r\n          render: (text, record, index) => (\r\n            <span>\r\n              <Button size=\"small\" onClick={() => this.getGameReport(record)}>\r\n                游戏\r\n              </Button>\r\n            </span>\r\n          )\r\n        }\r\n      ];\r\n      return tableHeader;\r\n    }\r\n  };\r\n  footerData = page => {\r\n    console.log(page);\r\n    return (\r\n      <tr>\r\n        <td>合计</td>\r\n        <td style={{ width: 80 }}>regin_user_number</td>\r\n        <td>regin_user_number</td>\r\n        <td>regin_user_number</td>\r\n        <td>regin_user_number</td>\r\n        <td>regin_user_number</td>\r\n      </tr>\r\n    );\r\n  };\r\n  getGameReport = async record => {\r\n    const res = await oneDayGameReport(\r\n      1,\r\n      20,\r\n      this.props.package_id,\r\n      record.date\r\n    );\r\n    this.props.parse(res);\r\n    this.setState({\r\n      date: record.date,\r\n      isGameReportShow: true,\r\n      nextLevelData: res.data\r\n    });\r\n  };\r\n}\r\n\r\nexport default MoreDetail;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Select,\r\n  Button\r\n} from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n  dailyReport,\r\n  packageList,\r\n  dateReport,\r\n  gameReport\r\n} from \"../../../api/index\";\r\nimport MoreDetail from \"./details\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport moment from \"moment\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport DateGameReport from \"./dateGameReport\";\r\n\r\nclass DailyReport extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      packageList: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      reportTable: false,\r\n      isGameReportShow:false\r\n    };\r\n  }\r\n  getInitialData = async () => {\r\n    const res = await packageList();\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        packageList: res.data\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData();\r\n  }\r\n  render() {\r\n    const packageNode = this.state.packageList.map(item => {\r\n      return (\r\n        <Select.Option value={item.id} key={item.id}>\r\n          {item.name}\r\n        </Select.Option>\r\n      );\r\n    });\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <MyDatePicker\r\n                handleValue={val => {\r\n                  let diffDays = moment(val[1]).diff(\r\n                    moment(val[0]),\r\n                    \"days\"\r\n                  );\r\n                  if (diffDays > 7) {\r\n                    message.error(\"请选择时间范围小于7天\");\r\n                  } else {\r\n                    this.startTime = val[0];\r\n                    this.endTime = val[1];\r\n                  }\r\n                }}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.package_id = value)}\r\n              >\r\n                {packageNode}\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <LinkButton onClick={this.onSearchData} size='default'>\r\n                <Icon type=\"search\" />\r\n              </LinkButton>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n          </div>\r\n        }\r\n      >\r\n        <div style={{ marginBottom: 20, backgroundColor: \"#ddd\" }}>\r\n          <span style={{ border: \"1px solid #ddd\" }}>\r\n            <b>默认所选品牌7天的统计数据</b>\r\n          </span>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span style={{ border: \"1px solid #ddd\" }}>\r\n            <b>总流水=玩家赢额+(abs)玩家输额</b>\r\n          </span>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span style={{ border: \"1px solid #ddd\" }}>\r\n            <b>盈亏比=(玩家输额(abs) - 玩家赢额) /(玩家输额(abs) + 玩家赢额)</b>\r\n          </span>\r\n        </div>\r\n        <Table\r\n          bordered\r\n          rowKey=\"package_id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal:(total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 2500}}\r\n        />\r\n        <Modal\r\n          title=\"按日期查看\"\r\n          width=\"80%\"\r\n          visible={this.state.reportTable}\r\n          onCancel={() => {\r\n            this.setState({ reportTable: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <MoreDetail\r\n            reportData={this.reportData}\r\n            action={this.action}\r\n            package_id={this.package_id}\r\n            parse={this.parseGameData}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"游戏数据\"\r\n          width=\"80%\"\r\n          visible={this.state.isGameReportShow}\r\n          onCancel={() => {\r\n            this.setState({ isGameReportShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <DateGameReport data={this.state.nextLevelData} />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"品牌\",\r\n      dataIndex: \"package_nick\",\r\n    },\r\n    {\r\n      title: \"新增用户\",\r\n      dataIndex: \"regin_user_number\",\r\n    },\r\n    {\r\n      title: \"活跃用户\",\r\n      dataIndex: \"active_user_number\",\r\n    },\r\n    {\r\n      title: \"官方首充用户\",\r\n      dataIndex: \"first_pay_user_number\",\r\n    },\r\n    {\r\n      title: \"官方首充金额\",\r\n      dataIndex: \"first_pay_money_total\",\r\n    },\r\n    {\r\n      title: \"官方充值用户\",\r\n      dataIndex: \"pay_user_number\",\r\n    },\r\n    {\r\n      title: \"官方充值金额\",\r\n      dataIndex: \"pay_money_total\",\r\n    },\r\n    {\r\n      title: \"人工首充用户\",\r\n      dataIndex: \"first_pay_user_number_res\",\r\n    },\r\n    {\r\n      title: \"人工首充金额\",\r\n      dataIndex: \"first_pay_money_total_res\",\r\n    },\r\n    {\r\n      title: \"人工充值用户\",\r\n      dataIndex: \"pay_user_number_res\",\r\n    },\r\n    {\r\n      title: \"人工充值金额\",\r\n      dataIndex: \"pay_money_total_res\",\r\n    },\r\n    {\r\n      title: \"官方兑换用户\",\r\n      dataIndex: \"exchange_user_number\",\r\n    },\r\n    {\r\n      title: \"官方兑换金额\",\r\n      dataIndex: \"exchange_money_total\",\r\n    },\r\n    {\r\n      title: \"人工兑换用户\",\r\n      dataIndex: \"exchange_user_number_res\",\r\n    },\r\n    {\r\n      title: \"人工兑换金额\",\r\n      dataIndex: \"exchange_money_total_res\",\r\n    },\r\n    {\r\n      title: \"玩家总赢额\",\r\n      dataIndex: \"win_statement_total\",\r\n    },\r\n    {\r\n      title: \"玩家总输额\",\r\n      dataIndex: \"lose_statement_total\",\r\n    },\r\n    {\r\n      title: \"玩家总流水\",\r\n      dataIndex: \"statement_total\",\r\n    },\r\n    {\r\n      title: \"盈亏比\",\r\n      dataIndex: \"statement_ratio\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDateReport(record)}>\r\n            日期\r\n          </LinkButton>\r\n          <LinkButton onClick={() => this.getGameReport(record)}>\r\n            游戏\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearchData = async () => {\r\n    const res = await dailyReport(\r\n      1,\r\n      20,\r\n      this.package_id,\r\n      this.startTime,\r\n      this.endTime\r\n    );\r\n    const newRes = this.parseData(res);\r\n    this.setState({ data: newRes.data, count: newRes.count });\r\n  };\r\n  parseData = res => {\r\n    console.log(\"res:\", res);\r\n    var length = 0;\r\n    var format_data = [];\r\n    if (res.status === 0 && res.data) {\r\n      //用户  (e.active_user_number = e.login_user_number - e.regin_user_number),\r\n      if (res.data.user) {\r\n        res.data.user\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => ((e.package_id = parseInt(e._id.package_id)), delete e._id)\r\n          );\r\n      }\r\n      //充提交易所\r\n      if (res.data.order) {\r\n        res.data.order\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.first_pay_user_number = e.first_pay_user.length),\r\n              (e.pay_user_number = e.pay_user.length),\r\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\r\n              (e.pay_user_number_res = e.pay_user_res.length),\r\n              (e.exchange_user_number = e.exchange_user.length),\r\n              (e.exchange_user_number_res = e.exchange_user_res.length),\r\n              (e.package_id = parseInt(e._id.package_id)),\r\n              delete e._id\r\n            )\r\n          );\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(\r\n            e,\r\n            res.data.order.find(d => d.package_id === e.package_id)\r\n          )\r\n        );\r\n      }\r\n\r\n      //游戏\r\n      if (res.data.game) {\r\n        res.data.game\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.statement_ratio = (\r\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\r\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\r\n              ).toFixed(4)),\r\n              (e.win_statement_total =\r\n                Math.round(e.win_statement_total * 10000) / 10000),\r\n              (e.lose_statement_total =\r\n                Math.round(e.lose_statement_total * 10000) / 10000),\r\n              (e.statement_total =\r\n                Math.round(\r\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\r\n                    10000\r\n                ) / 10000),\r\n              (e.package_id = parseInt(e._id.package_id)),\r\n              delete e._id\r\n            )\r\n          );\r\n\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(\r\n            e,\r\n            res.data.game.find(d => d.package_id === e.package_id)\r\n          )\r\n        );\r\n      }\r\n\r\n      length = res.data.user.length;\r\n      format_data = res.data.user;\r\n      console.log(\"res.data.user assign后\", res.data.user);\r\n    }\r\n\r\n    return {\r\n      code: res.code,\r\n      msg: res.msg,\r\n      count: length,\r\n      data: format_data\r\n    };\r\n  };\r\n  parseDateData = res => {\r\n    console.log(res);\r\n    var length = 0;\r\n    var format_data = [];\r\n    if (res.status === 0 && res.data) {\r\n      //用户 (e.active_user_number = e.login_user_number - e.regin_user_number),\r\n      if (res.data.user) {\r\n        res.data.user.map(e => ((e.date = e._id.create_time), delete e._id));\r\n      }\r\n      //充提交易所\r\n      if (res.data.order) {\r\n        //res.data.order.filter(e => (e && e._id)).map(e => ((e.exchange_money_total = Math.abs(e.exchange_money_total)), (e.date = e._id.create_time), delete e._id));\r\n        res.data.order\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.first_pay_user_number = e.first_pay_user.length),\r\n              (e.pay_user_number = e.pay_user.length),\r\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\r\n              (e.pay_user_number_res = e.pay_user_res.length),\r\n              (e.exchange_user_number = e.exchange_user.length),\r\n              (e.exchange_user_number_res = e.exchange_user_res.length),\r\n              (e.date = e._id.create_time),\r\n              delete e._id\r\n            )\r\n          );\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(e, res.data.order.find(d => d.date === e.date))\r\n        );\r\n      }\r\n      //游戏\r\n      if (res.data.game) {\r\n        //四舍五入保留四位小数\r\n        res.data.game\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.statement_ratio = (\r\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\r\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\r\n              ).toFixed(4)),\r\n              (e.win_statement_total =\r\n                Math.round(e.win_statement_total * 10000) / 10000),\r\n              (e.lose_statement_total =\r\n                Math.round(e.lose_statement_total * 10000) / 10000),\r\n              (e.statement_total =\r\n                Math.round(\r\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\r\n                    10000\r\n                ) / 10000),\r\n              (e.date = e._id.create_time),\r\n              delete e._id\r\n            )\r\n          );\r\n\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(e, res.data.game.find(d => d.date === e.date))\r\n        );\r\n      }\r\n\r\n      // 排序\r\n      res.data.user.sort(\r\n        (a, b) =>\r\n          parseInt(b.date.replace(/-/g, \"\")) -\r\n          parseInt(a.date.replace(/-/g, \"\"))\r\n      );\r\n      length = res.data.user.length;\r\n      format_data = res.data.user;\r\n      console.log(res.data.user);\r\n    }\r\n    return {\r\n      code: res.code,\r\n      msg: res.msg,\r\n      count: length,\r\n      data: format_data\r\n    };\r\n  };\r\n  parseGameData = res => {\r\n    console.log(res);\r\n    //总流水\r\n    if (res.status === 0 && res.data) {\r\n      res.data.map(\r\n        e => (\r\n          (e.statement_ratio = (\r\n            (Math.abs(e.lose_statement_total) - e.win_statement_total) /\r\n            (e.win_statement_total + Math.abs(e.lose_statement_total))\r\n          ).toFixed(4)),\r\n          (e.win_statement_total =\r\n            Math.round(e.win_statement_total * 10000) / 10000),\r\n          (e.lose_statement_total =\r\n            Math.round(e.lose_statement_total * 10000) / 10000),\r\n          (e.statement_total =\r\n            Math.round(\r\n              (e.win_statement_total + Math.abs(e.lose_statement_total)) * 10000\r\n            ) / 10000)\r\n        )\r\n      );\r\n    }\r\n  };\r\n  getDateReport = async record => {\r\n    const res = await dateReport(\r\n      1,\r\n      20,\r\n      record.package_id,\r\n      this.startTime,\r\n      this.endTime\r\n    );\r\n    const reportData = this.parseDateData(res);\r\n    this.reportData = reportData;\r\n    this.action = \"getDateReport\";\r\n    this.setState({ reportTable: true });\r\n  };\r\n  getGameReport = async record => {\r\n    const res = await gameReport(\r\n      1,\r\n      20,\r\n      this.package_id,\r\n      record.date\r\n    );\r\n    this.parseGameData(res);\r\n    this.setState({\r\n      date: record.date,\r\n      isGameReportShow: true,\r\n      nextLevelData: res.data\r\n    });\r\n  };\r\n}\r\n\r\nexport default DailyReport;\r\n","import React from \"react\";\r\nimport { Form, Input, Select, Button, message } from \"antd\";\r\nimport { editRule } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const data = props.data;\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        for (const key in value) {\r\n          if (value[key] === undefined) {\r\n            value[key] = \"\";\r\n          }\r\n        }\r\n        const res = await editRule(data.id, value);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Form labelCol={{ span: 4 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\r\n      <Form.Item label=\"父级权限\">\r\n        {getFieldDecorator(\"pid\", {\r\n          rules: [{ required: true, message: \"请选择权限\" }],\r\n          initialValue:  data.pid\r\n        })(\r\n          <Select style={{ width: \"60%\" }}>\r\n            <Select.Option value={0}>一级权限</Select.Option>\r\n            {props.packageNode}\r\n          </Select>\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"菜单名\">\r\n        {getFieldDecorator(\"name\", {\r\n          rules: [{ required: true, message: \"请输入菜单名\" }],\r\n          initialValue: data.name.replace(/&nbsp;/g, \"\")\r\n        })(<Input style={{ width: \"60%\" }} placeholder=\"菜单名\" />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"模块名\">\r\n        {getFieldDecorator(\"module\", { initialValue: data.module })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"模块名\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"方法名\">\r\n        {getFieldDecorator(\"action\", { initialValue: data.action })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"方法名\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"模板路径\">\r\n        {getFieldDecorator(\"href\", { initialValue: data.href })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"模板路径\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"路由key\">\r\n        {getFieldDecorator(\"key\", { initialValue: data.router_key })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"路由key\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"icon样式\">\r\n        {getFieldDecorator(\"icon\", { initialValue: data.icon })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"icon样式\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"菜单排序\">\r\n        {getFieldDecorator(\"sort\", {\r\n          rules: [{ required: true, message: \"请输入排序值\" }],\r\n          initialValue: data.sort\r\n        })(<Input style={{ width: \"60%\" }} placeholder=\"菜单排序\" />)}\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Select,\r\n  Button,\r\n  Form\r\n} from \"antd\";\r\nimport { ruleList, addRule, ruleDel } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\n\r\nclass Rule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async () => {\r\n    const res = await ruleList();\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const packageNode = this.state.data.map(item => {\r\n      return (\r\n        <Select.Option value={item.id} key={item.name}>\r\n          {item.name.replace(/&nbsp;/g, \"-\")}\r\n        </Select.Option>\r\n      );\r\n    });\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"pid\", {\r\n                  rules: [{ required: true, message: \"请选择权限\" }],\r\n                  initialValue: \"0\"\r\n                })(\r\n                  <Select style={{ width: 200 }}>\r\n                    <Select.Option value=\"0\">一级权限</Select.Option>\r\n                    {packageNode}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"name\", {\r\n                  rules: [{ required: true, message: \"请输入菜单名\" }]\r\n                })(<Input style={{ width: 120 }} placeholder=\"菜单名\" />)}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"module\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"模块名\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"action\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"方法名\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"href\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"模板路径\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"key\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"路由key\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"icon\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"icon样式\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"sort\", {\r\n                  rules: [{ required: true, message: \"请输入排序值\" }]\r\n                })(<Input style={{ width: 120 }} placeholder=\"菜单排序\" />)}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                 size='default' \r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                >\r\n                  增加\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size='default'>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n        />\r\n        <Modal\r\n          title=\"编辑\"\r\n          visible={this.state.isEditFormShow}\r\n          onCancel={() => {\r\n            this.setState({ isEditFormShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedEditForm\r\n            finished={() => {\r\n              this.getInitialData();\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            packageNode={packageNode}\r\n            data={this.editDataRecord}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"菜单名\",\r\n      dataIndex: \"name\",\r\n      render: (text, record, index) => (\r\n        <span>{record.name.replace(/&nbsp;/g, \"-\")}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"模块名\",\r\n      dataIndex: \"module\"\r\n    },\r\n    {\r\n      title: \"方法名\",\r\n      dataIndex: \"action\"\r\n    },\r\n    {\r\n      title: \"模板路径\",\r\n      dataIndex: \"href\"\r\n    },\r\n    {\r\n      title: \"路由key\",\r\n      dataIndex: \"router_key\"\r\n    },\r\n    {\r\n      title: \"icon样式\",\r\n      dataIndex: \"icon\"\r\n    },\r\n    {\r\n      title: \"显示\",\r\n      dataIndex: \"status\"\r\n    },\r\n    {\r\n      title: \"菜单排序\",\r\n      dataIndex: \"sort\"\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\r\n            编辑\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.onDelete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button type=\"danger\" size=\"small\">\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        for (const key in value) {\r\n          if (value[key] === undefined) {\r\n            value[key] = \"\";\r\n          }\r\n        }\r\n        const res = await addRule(value);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.getInitialData();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  onDelete = async record => {\r\n    let res = await ruleDel(record.id);\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.getInitialData();\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditFormShow: true\r\n    });\r\n  };\r\n}\r\nconst RuleManage = Form.create()(Rule);\r\nexport default RuleManage;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport LeftNav from \"../../components/left-nav\";\r\nimport Header from \"../../components/header\";\r\nimport Home from \"../home/home\";\r\nimport User from \"../user/user\";\r\nimport Admin_manage_list from \"../admin_manage/admin_manage_list/admin_manage_list\";\r\nimport Role from \"../admin_manage/role/role\";\r\nimport Order_list from \"../charge/order_list/order_list\";\r\nimport Channel_list from \"../charge/channel_list/channel_list\";\r\nimport Bankcard_list from \"../charge/bankcard_list/bankcard_list\";\r\nimport Recharge_order from \"../charge/recharge_order/recharge_order\";\r\nimport Recharge_channel from \"../charge/recharge_channel/recharge_channel\";\r\nimport NoticeList from \"../customer_service/notice_list\";\r\nimport Customer_list from \"../customer_service/customer_list\";\r\nimport Withdraw_list from \"../withdraw/withdraw_list\";\r\nimport WrappedConfig from \"../gameSetting/config\";\r\nimport Tasks from \"../messageCenter/tasks\";\r\nimport AccountList from \"../trade/accountList\";\r\nimport ApplyHistory from \"../trade/applyHistory\";\r\nimport TradeOrder from \"../trade/tradeOrder\";\r\nimport ActivityList from \"../activity/activityList\";\r\nimport GiftVoucher from \"../activity/giftVoucher\";\r\nimport GiftList from \"../gift/giftList\";\r\nimport GiftSetting from \"../gift/giftSetting\";\r\nimport AI from \"../AI/robot\";\r\n// import Withdraw_list from \"../withdraw/withdraw_list\";\r\n\r\nimport Daiti_list from \"../withdraw/Daiti_list\";\r\nimport Channel from \"../withdraw/Channel\";\r\nimport NotFound from \"../not-found/not-found\";\r\nimport DailyReport from \"../list/DailyReport\";\r\nimport RuleManage from \"../admin_manage/ruleManage\";\r\nimport { Provider, KeepAlive } from \"react-keep-alive\";\r\nconst { Sider, Content } = Layout;\r\n\r\n/*\r\n后台管理的路由组件\r\n */\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //header和left-nav通过共同父组件传值\r\n  // onRef = ref => {\r\n  //   this.child1 = ref;\r\n  // };\r\n  render() {\r\n    const token = localStorage.token;\r\n    // 如果内存没有存储token ==> 当前没有登陆\r\n    if (!token) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: \"100%\" }}>\r\n        <Sider>\r\n          <LeftNav\r\n            onClick={tabConfig => {\r\n              this.child1.add && this.child1.add(tabConfig);\r\n            }}\r\n          />\r\n        </Sider>\r\n        <Layout>\r\n          <Header onRef={ref => (this.child1 = ref)}>Header</Header>\r\n          <Content style={{ margin: 5, backgroundColor: \"#fff\" }}>\r\n            <Provider>\r\n              <div style={{ height: \"100%\" }}>\r\n                <Switch>\r\n                  <Redirect from=\"/\" exact to=\"/home\" />\r\n                  <Route path=\"/home\" exact component={Home} />\r\n                  <Route path=\"/user/user-list\" exact>\r\n                    <KeepAlive name=\"User\">\r\n                      <User />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/customer_service/notice_list\">\r\n                    <KeepAlive name=\"Notice_list\">\r\n                      <NoticeList />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/customer_service/customer_list\"\r\n                    exact\r\n                    component={Customer_list}\r\n                  >\r\n                    <KeepAlive name=\"Customer_list\">\r\n                      <Customer_list></Customer_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/admin_manage/list\"\r\n                    exact\r\n                    component={Admin_manage_list}\r\n                  >\r\n                    <KeepAlive name=\"Admin_manage_list\">\r\n                      <Admin_manage_list></Admin_manage_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/admin_manage/rule\" exact component={RuleManage}>\r\n                    <KeepAlive name=\"RuleManage\">\r\n                      <RuleManage></RuleManage>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/admin_manage/role\" exact component={Role}>\r\n                    <KeepAlive name=\"Role\">\r\n                      <Role></Role>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route path=\"/list/daily-report\" exact>\r\n                    <KeepAlive name=\"DailyReport\">\r\n                      <DailyReport></DailyReport>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route path=\"/gameSetting/config\" exact>\r\n                    <KeepAlive name=\"WrappedConfig\">\r\n                      <WrappedConfig></WrappedConfig>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route path=\"/messageCenter/tasks\" exact>\r\n                    <KeepAlive name=\"Tasks\">\r\n                      <Tasks></Tasks>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route path=\"/trade/accountList\" exact>\r\n                    <KeepAlive name=\"AccountList\">\r\n                      <AccountList></AccountList>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/trade/applyHistory\" exact>\r\n                    <KeepAlive name=\"ApplyHistory\">\r\n                      <ApplyHistory></ApplyHistory>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/trade/tradeOrder\" exact>\r\n                    <KeepAlive name=\"TradeOrder\">\r\n                      <TradeOrder></TradeOrder>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/activity/list\" exact>\r\n                    <KeepAlive name=\"ActivityList\">\r\n                      <ActivityList />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/activity/giftVoucher\" exact>\r\n                    <KeepAlive name=\"giftVoucher\">\r\n                      <GiftVoucher />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/charge/order_list\" exact component={Order_list}>\r\n                    <KeepAlive name=\"Order_list\">\r\n                      <Order_list></Order_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/channel-list\"\r\n                    exact\r\n                    component={Channel_list}\r\n                  >\r\n                    <KeepAlive name=\"Channel_list\">\r\n                      <Channel_list></Channel_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/bankcard-list\"\r\n                    exact\r\n                    component={Bankcard_list}\r\n                  >\r\n                    <KeepAlive name=\"Bankcard_list\">\r\n                      <Bankcard_list></Bankcard_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/recharge_order\"\r\n                    exact\r\n                    component={Recharge_order}\r\n                  >\r\n                    <KeepAlive name=\"Recharge_order\">\r\n                      <Recharge_order></Recharge_order>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/recharge_channel\"\r\n                    exact\r\n                    component={Recharge_channel}\r\n                  >\r\n                    <KeepAlive name=\"Recharge_channel\">\r\n                      <Recharge_channel></Recharge_channel>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/withdraw/withdraw_list\"\r\n                    exact\r\n                    component={Withdraw_list}\r\n                  >\r\n                    <KeepAlive name=\"Withdraw_list\">\r\n                      <Withdraw_list></Withdraw_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/withdraw/daiti_list\"\r\n                    exact\r\n                    component={Daiti_list}\r\n                  >\r\n                    <KeepAlive name=\"Daiti_list\">\r\n                      <Daiti_list />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/withdraw/channel\" exact>\r\n                    <KeepAlive name=\"Channel\">\r\n                      <Channel></Channel>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/gift/list\" exact>\r\n                    <KeepAlive name=\"GiftList\">\r\n                      <GiftList></GiftList>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/gift/setting\" exact>\r\n                    <KeepAlive name=\"GiftSetting\">\r\n                      <GiftSetting></GiftSetting>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/AI/robot\" exact>\r\n                    <KeepAlive name=\"AI\">\r\n                      <AI></AI>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route component={NotFound} />\r\n                </Switch>\r\n              </div>\r\n            </Provider>\r\n          </Content>\r\n          {/* <Footer style={{ textAlign: \"center\", color: \"#cccccc\", padding: 5 }}>\r\n            推荐使用谷歌浏览器，可以获得更佳页面操作体验\r\n          </Footer> */}\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","const defaultState = {\r\n  inputValue: \"\"\r\n};\r\nexport default (state = defaultState, action) => {\r\n  // console.log(state, action);\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case \"change_input\":\r\n      newState.inputValue = action.value;\r\n      break;\r\n    case \"resetPassword\":\r\n      newState.inputValue = \"\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer.js\";\r\nconst store = createStore(reducer);\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Login from \"./pages/login/login\";\r\nimport Admin from \"./pages/admin/admin\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\n\r\n//应用的根组件\r\n \r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            {/*只匹配其中一个*/}\r\n            <Route path=\"/login\" component={Login}></Route>\r\n            <Route path=\"/\" component={Admin}></Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\nimport storageUtils from './utils/storageUtils'\r\nimport memoryUtils from './utils/memoryUtils'\r\n\r\n\r\n\r\nimport { Router } from \"react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport {Modal} from 'antd';\r\n\r\n//在react-router4中监听路由变化\r\nconst history = createBrowserHistory()\r\nhistory.listen((location, action) => {\r\n    // location is an object like window.location\r\n    console.log('history',action, location.pathname, location.state)\r\n    //每次变化执行\r\n    Modal.destroyAll();\r\n    //使用 Modal.destroyAll() 可以销毁弹出的确认窗（即 Modal.info、Modal.success、Modal.error、Modal.warning、Modal.confirm）。通常用于路由监听当中，处理路由前进、后退不能销毁确认对话框的问题，而不用各处去使用实例的返回值进行关闭（modal.destroy() 适用于主动关闭，而不是路由这样被动关闭）\r\n    //注意无法销毁<Modal></Modal>创建的模态框\r\n  })\r\n\r\n// 读取local中保存user, 保存到内存中\r\nconst user = storageUtils.getUser()\r\nmemoryUtils.user = user\r\n\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render(<Router history={history}>\r\n    <App/>\r\n  </Router>, document.getElementById('root'))"],"sourceRoot":""}