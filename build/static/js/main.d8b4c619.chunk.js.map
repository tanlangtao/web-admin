{"version":3,"sources":["api/ajax.js","api/index.js","pages/login/login.jsx","components/left-nav/index.jsx","components/link-button/index.jsx","components/header/index.jsx","pages/home/home.jsx","utils/dateUtils.js","pages/user/user-nick.jsx","components/MyDatePicker.jsx","pages/user/gold_details.jsx","pages/user/user.jsx","pages/admin_manage/admin_manage_list/addData.jsx","pages/admin_manage/admin_manage_list/admin_manage_list.jsx","pages/admin_manage/role/addData.jsx","pages/admin_manage/role/role.jsx","pages/charge/order_list/editData.jsx","pages/charge/order_list/order_list.jsx","pages/charge/channel_list/addorEdit.jsx","pages/charge/channel_list/channel_list.jsx","pages/charge/bankcard_list/addorEdit.jsx","pages/charge/bankcard_list/bankcard_list.jsx","pages/charge/recharge_order/recharge_order.jsx","pages/charge/recharge_channel/recharge_channel.jsx","pages/customer_service/notice_list/addorEdit.jsx","pages/customer_service/notice_list/index.jsx","pages/customer_service/customer_list/addorEdit.jsx","pages/customer_service/customer_list/index.jsx","pages/withdraw/withdraw_list/details.jsx","pages/withdraw/withdraw_list/edit.jsx","pages/withdraw/withdraw_list/index.jsx","components/myComponents.jsx","pages/gameSetting/config/edit.jsx","pages/gameSetting/config/index.jsx","pages/messageCenter/tasks/edit.jsx","pages/messageCenter/tasks/index.jsx","pages/trade/accountList/edit.jsx","pages/trade/accountList/index.jsx","pages/trade/applyHistory/edit.jsx","pages/trade/applyHistory/index.jsx","pages/trade/tradeOrder/edit.jsx","pages/trade/tradeOrder/index.jsx","pages/activity/activityList/editForm.jsx","pages/activity/activityList/index.jsx","pages/activity/recieve/index.jsx","pages/activity/giftVoucher/editForm.jsx","pages/activity/giftVoucher/index.jsx","pages/gift/giftList/details.jsx","pages/gift/giftList/editForm.jsx","pages/gift/giftList/index.jsx","pages/gift/giftSetting/index.jsx","pages/AI/robot/index.jsx","pages/proxy/setting/BalanceChanged.jsx","utils/commonFuntion.js","pages/proxy/setting/nextlevel.jsx","pages/proxy/setting/index.jsx","pages/withdraw/Daiti_list/details.jsx","pages/withdraw/Daiti_list/edit.jsx","pages/withdraw/Daiti_list/index.jsx","pages/withdraw/Channel/index.jsx","pages/not-found/not-found.jsx","pages/list/DailyReport/dateGameReport.jsx","pages/list/DailyReport/details.jsx","pages/list/DailyReport/index.jsx","pages/admin_manage/ruleManage/edit.jsx","pages/admin_manage/ruleManage/index.jsx","pages/admin/admin.jsx","store/reducer.js","store/index.js","App.js","utils/storageUtils.js","index.js"],"names":["ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","promise","axios","get","params","defaults","headers","post","transformRequest","ret","it","encodeURIComponent","then","response","catch","error","message","BASE","process","token","localStorage","setToken","reqLogin","username","password","authcode","reqAuthCode","navList","getAuthCode","editPass","reqUsers","page","limit","start","end","inputKey","inputValue","_ajax","Object","defineProperty","setGameUserNickName","id","game_nick","changeGold","record","value","obj","str","gold","desc","proxy_user_id","package_id","objectSpread","task_type","reqLoadGold","userDetail","goldDetails","bindInfo","user_id","saveUserBlack","action","createTask","resetpwd","params[id]","params[account_pass]","setCustomer","reqAdminList","searchAdminData","name","roleList","packageList","addUser","formValue","forEach","element","newobj","status","userStatus","group_id","userGroup","source","proxy","use_money","loadGold","pass","repass","confirmPssword","editUser","resetAuthCode","ruleList","addRule","editRule","rule_id","console","log","ruleDel","getRoleList","addRole","rules","editRole","role_name","role_id","getList","addNotice","formData","updateNotice","delNotice","customerList","saveCustomerService","dailyReport","dateReport","group_by","gameReport","oneDayGameReport","date","configList","conf_key","saveConf","getProxyUserList","changeProxyUserProxyPid","getProxyUser","tasksList","changeUserBalance","reviewTask","allAccountList","resetPassword","accountList","sellGoldApplyList","tradeRemark","sellGoldInfoList","reviewInfo2","remarkInfo2","sellGoldOrderList","activityConfigList","saveActivityConfig","delActivityConfig","giftVoucherList","activityList","reqOrder_list","reqData","reqLostOrder_list","order_id","orderReview","review_type","orderReviewEdit","downloadList","searchData","start_time","end_time","order_status","inputParam","paramKey","window","open","getChannelList","addChannel","editPayChannel","bankList","saveBankCard","deleteBankCard","rechargeOrder","cancelOrder","getChannel","getChannelInfo","channel_id","editChannelInfo","pay_code","withDraw","reviewInfo","remarkInfo","downloadWithdrawList","withDrawRemark","temarks","remark_type","auditOrder","orderWithDrawReview","getConfigList","saveWithDrawChannel","alipay[name]","alipay[withdraw_type]","bankcard[name]","bankcard[withdraw_type]","withDrawReview","review_status","is_pass","setGiftConfig","getAIList","changeInternalUserBalance","amount","Item","es_form","Login","getMenuList","_callee","result","regenerator_default","a","wrap","_context","prev","next","sent","children","item","title","slice","menuList","JSON","stringify","_this","props","history","replace","stop","handleSubmit","event","preventDefault","form","validateFields","_ref2","asyncToGenerator","mark","_callee2","err","values","_context2","success","tokenTimeStamp","Date","getTime","msg","_x","_x2","apply","this","handleClick","_ref3","_callee3","_context3","modal","info","content","react_default","createElement","src","qrurl","alt","_x3","_x4","validatePwd","rule","callback","test","react_router","to","getFieldDecorator","className","onSubmit","required","whitespace","min","max","pattern","input","prefix","icon","style","color","placeholder","validator","marginTop","onClick","es_button","htmlType","Component","WrapLogin","create","SubMenu","menu","LeftNav","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","getMenuNodes","path","location","pathname","reduce","pre","find","currentValue","indexOf","key","openKey","push","openMenu","cpre","ele","react_router_dom","state","_this2","parse","getItem","menuNodes","justifyContent","mode","theme","selectedKeys","onOpenChange","openKeys","withRouter","LinkButton","assign","size","marginRight","TabPane","Header","onChange","activeKey","onEdit","targetKey","add","tabConfig","oldKey","panes","isTabExist","concat","newTabIndex","remove","lastIndex","pane","i","filter","logout","confirm","onOk","assertThisInitialized","removeItem","authCode","res","okText","width","resetPWD","isEditFormShow","handleEditSubmit","closable","clearInterval","intervalId","onRef","val","_this$props$form","getFieldValue","dropdown","overlay","trigger","tabs","hideAdd","map","tab","forceRender","visible","onCancel","footer","labelCol","span","labelAlign","label","WrappedHeader","Home","typing","timer","setTimeout","clearTimeout","fontSize","formateDate","time","timeStamp","parseInt","moment","format","FormItem","NormalLoginForm","isNickModal","display","initialValue","TextArea","autosize","minRows","maxRows","WrappedNormalLoginForm","RangePicker","MyDatePicker","config_provider","locale","zh_CN","defaultPickerValue","subtract","ranges","今天","startOf","昨天","endOf","最近一周","showTime","defaultValue","dateString","handleValue","GoldDetail","getUsers","_ref","isBindInfo","recordID","t0","count","onSearchData","startTime","endTime","abrupt","funds_type","initColumns","dataIndex","sorter","b","total_balance","diff","card","table","bordered","rowKey","index","dataSource","columns","pagination","defaultPageSize","showQuickJumper","showTotal","total","range","defaultCurrent","pageSize","onShowSizeChange","current","Option","User","fixed","onCell","rowIndex","isNickShow","onDoubleClick","onContextMenu","onMouseEnter","target","cursor","onMouseLeave","game_gold","goldRecord","isGoldShow","render","regin_time","login_time","getGoldDetail","getMoreDetail","getLoadGold","text","_result$data","game_user","proxy_user","proxy_nick","proxy_pid","changeNickName","refs","getFormValue","resetFields","onChangeGold","loading","_x5","_x6","_ref4","_callee4","_context4","_x7","_ref5","_callee5","_context5","moreModal","destroy","isGoldDetailShow","_x8","_x9","_ref6","_callee6","isAdd","_context6","_x10","_x11","resetPwd","isResetPwdShow","resetPwdId","handleResetpwd","_callee7","_context7","popconfirm","onConfirm","cancelText","setCustomerAccount","_ref8","_callee8","_context8","_x12","isBindInfoShow","_this$state","es_select","user_Option","ref","Input","extra","reload","showSizeChanger","scroll","x","y","user_nick","gold_details","e","AddDataForm","checkboxOnChange","checkedList","indeterminate","checkAll","onCheckAllChange","list","checked","setFieldsValue","isEdit","editDataRecord","refreshPage","cancel","isBan","group","split","Number","_this$props","optionList","readOnly","es_radio","Group","es_checkbox","options","use_balance","WrappedAddDataForm","Admin_manage_list","wordWrap","wordBreak","align","edit","addData","isAddDataShow","isEditDataShow","_onOk","handleChange","bind","TreeNode","getTreeNodes","onSelect","node","expandedKeys","isLeaf","expanded","k","eventKey","onCheck","checkedKeys","onExpand","defaultCheckedKeys","treeData","tree","checkable","description","Role","role_addData","Diaodan","handleRecieveSubmit","Order_list","PlayerLossOrderSearch","isQueryShow","time_type","download","word","replace_id","toFixed","arrival_amount","created_at","arrival_at","isEditShow","editUser_id","editMount","editType","float","editData","wrapperCol","nick_name","pay_type","min_amount","max_amount","span_amount","seed","rate","sort","Channel_list","addorEdit","card_name","bank_name","card_num","offset","Bankcard_list","delete","bankcard_list_addorEdit","Recharge_order","handleWithdraw","form_type","Recharge_channel","expandedRowRender","indent","childData","onExpandRow","keys","expandedRowKeys","recordId","handleEditData","expandRowByClick","getPackageList","arr","_id","$oid","package_ids","is_open","is_slider","words","date_picker","Notice_list","onDelete","join","popover","overlayStyle","textOverflow","whiteSpace","overflow","notice_list_addorEdit","user_type","Customer_list","handleReset","create_time","update_time","customer_list_addorEdit","detailRecord","EditForm","sumbitOrderStatus","orderStatus","onclose","review","sumbitRemarkUser","remarkUser","sumbitRemarkOperator","remarkOperator","orderStatusShow","reviewShow","confirmButtonShow","submitRadio","successRadio","failRadio","submitRadioChecked","successRadioChecked","failRadioChecked","disabled","React","Withdraw_list","flag","getDetail","user_remark","t1","isDetailShow","details","lineNumbers","json","CodeEditor","_Component","inherits","createClass","conf_val","react_codemirror2","editor","WrappedEditForm","finished","myComponents_CodeEditor","Config","getInitialData","onSearch","onAdd","config_edit","data[id]","data[params]","data[status]","reason","Tasks","refuse","operator_nick","tasks_edit","lib_default","pay_url","checkQrcode","AccountList","checkAccount","accountList_edit","checkDetail","filed","okType","userRemarkInput","editComfirm","operatorRemarkInput","applyHistory_edit","tradeOrder_edit","is_close","need_mobile","need_bankcard","order_by","editForm","check","receive_info","giftVoucher_editForm","editRecord","giftList_details","giftList_editForm","Channel","get_val","resData","_this$resData","give_info","version","WrappedChannel","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","minGold","maxGold","handleOk","onBlur","randNum","Range","Rand","Math","random","round","changeNickname","params[user_id]","params[amount]","params[reason]","params[user_name]","params[proxy_user_id]","params[package_id]","autoSize","reverseNumber","num","NextLevel","reqdata","pid","changeBalance","nextLevel","changePid","checkBalance","new_proxy_user_id","proxyID","isChangeBalanceShow","balance","top","topDistance","mask","maskClosable","nextlevel","BalanceChanged","ProxySetting","reg","RegExp","Daiti","Daiti_list_details","Daiti_list_edit","initialData","_this$initialData","bankcard","channel","alipay","artificial","valuePropName","es_switch","checkedChildren","unCheckedChildren","divider","channel_name","NotFound","row","col","DateGameReport","MoreDetail","getGameReport","footerData","isGameReportShow","nextLevelData","reportData","dateGameReport","DailyReport","getDateReport","newRes","parseData","format_data","user","order","first_pay_user_number","first_pay_user","pay_user_number","pay_user","first_pay_user_number_res","first_pay_user_res","pay_user_number_res","pay_user_res","exchange_user_number","exchange_user","exchange_user_number_res","exchange_user_res","d","game","statement_ratio","abs","lose_statement_total","win_statement_total","statement_total","code","parseDateData","parseGameData","reportTable","packageNode","marginBottom","backgroundColor","border","DailyReport_details","module","href","router_key","Rule","layout","ruleManage_edit","RuleManage","Sider","Content","createHashHistory","Admin","minHeight","components_left_nav","child1","components_header","margin","Provider","height","from","exact","component","KeepAlive","user_User","notice_list","customer_list","admin_manage_list","ruleManage","role","list_DailyReport","config","setting","tasks","trade_accountList","applyHistory","tradeOrder","activity_activityList","recieve","giftVoucher","order_list","channel_list","bankcard_list","recharge_order","recharge_channel","withdraw_list","Daiti_list","withdraw_Channel","giftList","giftSetting","robot","defaultState","store","createStore","newState","App","es","USER","storageUtils","createBrowserHistory","listen","destroyAll","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.d8b4c619.chunk.js","sourcesContent":["/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\n//设置axios为form-data\r\n\r\nexport default function ajax(url, data = {}, type = \"GET\") {\r\n  // axios.interceptors.request.use((config) => {\r\n  //   if (['/user/login', '/user/register'].indexOf(config.url) === -1) {\r\n  //     const token = localStorage.getItem('token')\r\n  //     if (token) {\r\n  //       config.headers.Authorization = token\r\n  //     }\r\n  //   }\r\n  //   return config\r\n  // })\r\n  return new Promise((resolve, reject) => {\r\n    let promise;\r\n    // 1. 执行异步ajax请求\r\n    if (type === \"GET\") {\r\n      // 发GET请求\r\n      promise = axios.get(url, {\r\n        // 配置对象\r\n        params: data // 指定请求参数\r\n      });\r\n    } else {\r\n      // 发POST请求\r\n      axios.defaults.headers.post[\"Content-Type\"] =\r\n        \"application/x-www-form-urlencoded\";\r\n      axios.defaults.transformRequest = [\r\n        function(data) {\r\n          let ret = \"\";\r\n          for (let it in data) {\r\n            ret +=\r\n              encodeURIComponent(it) + \"=\" + encodeURIComponent(data[it]) + \"&\";\r\n          }\r\n          return ret;\r\n        }\r\n      ];\r\n      promise = axios.post(url, data);\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise\r\n      .then(response => {\r\n        resolve(response.data);\r\n        // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n      })\r\n      .catch(error => {\r\n        // reject(error)\r\n        message.error(\"请求出错了: \" + error.message);\r\n      });\r\n  });\r\n}","import ajax from \"./ajax\";\r\n//import storageUtils from \"../utils/storageUtils\";\r\n// import token from '../pages/login'\r\n//import memory from\r\n\r\nconst BASE = process.env.REACT_APP_HOST;\r\n\r\nvar token = localStorage.token || \"\";\r\n//登陆成功后赋值token\r\nexport const setToken = () => {\r\n  token = localStorage.token;\r\n};\r\n\r\n// 登陆\r\nexport const reqLogin = (username, password, authcode) =>\r\n  ajax(BASE + \"/login/login\", { username, password, authcode }, \"POST\");\r\n\r\n// 获取authCode\r\nexport const reqAuthCode = (username, password) =>\r\n  ajax(BASE + \"/login/authCode\", { username, password }, \"POST\");\r\n\r\n// 获取菜单\r\nexport const navList = () => {\r\n  const token = localStorage.token;\r\n  return ajax(BASE + \"/acl/navList\", { token }, \"POST\");\r\n};\r\n//安全码设置\r\nexport const getAuthCode = () =>\r\n  ajax(BASE + \"/index/getAuthCode\", { token }, \"POST\");\r\n//修改密码\r\nexport const editPass = password =>\r\n  ajax(BASE + \"/acl/editPass\", { token, password }, \"POST\");\r\n//用户列表\r\nexport const reqUsers = (page, limit, start, end, inputKey, inputValue) => {\r\n  return ajax(\r\n    BASE + \"/user/index\",\r\n    { page, limit, start, end, [inputKey]: inputValue, token },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const setGameUserNickName = (id, game_nick) =>\r\n  ajax(BASE + \"/user/setGameUserNickName\", { token, id, game_nick }, \"POST\");\r\nexport const changeGold = (record, value) => {\r\n  let obj = {};\r\n  let str = \"params[user_id]\";\r\n  obj[str] = record.id;\r\n  str = \"params[amount]\";\r\n  obj[str] = value.gold;\r\n  str = \"params[reason]\";\r\n  obj[str] = value.desc;\r\n  str = \"params[user_name]\";\r\n  obj[str] = record.game_nick;\r\n  str = \"params[proxy_user_id]\";\r\n  obj[str] = record.proxy_user_id;\r\n  str = \"params[package_id]\";\r\n  obj[str] = record.package_id;\r\n  return ajax(\r\n    BASE + \"/user/changeGold\",\r\n    { token, task_type: 0, ...obj },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const reqLoadGold = id => {\r\n  return ajax(\r\n    BASE + \"/user/getGameUser\",\r\n    {\r\n      page: 1,\r\n      limit: 10,\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const userDetail = (page, limit, id, goldDetails) => {\r\n  return ajax(\r\n    BASE + \"/user/userDetail\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      id,\r\n      ...goldDetails\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const bindInfo = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/user/bindInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      user_id: id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveUserBlack = (user_id, action) => {\r\n  return ajax(\r\n    BASE + \"/trade/saveUserBlack\",\r\n    {\r\n      token,\r\n      type: 1,\r\n      user_id,\r\n      action\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const createTask = (user_id, resetpwd) => {\r\n  return ajax(\r\n    BASE + \"/tasks/createTask\",\r\n    {\r\n      token,\r\n      task_type: 2,\r\n      \"params[id]\": user_id,\r\n      \"params[account_pass]\": resetpwd\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const setCustomer = id => {\r\n  return ajax(\r\n    BASE + \"/user/setCustomer \",\r\n    {\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//后台管理-账户列表\r\nexport const reqAdminList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/acl/index\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const searchAdminData = name => {\r\n  return ajax(\r\n    BASE + \"/acl/index\",\r\n    {\r\n      page: 1,\r\n      limit: 20,\r\n      token,\r\n      name\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const roleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/roleList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const packageList = () => {\r\n  return ajax(\r\n    BASE + \"/user/packageList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addUser = formValue => {\r\n  let obj = {};\r\n  formValue.packageList.forEach(element => {\r\n    let str = \"group[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    username: formValue.username,\r\n    status: formValue.userStatus,\r\n    group_id: formValue.userGroup,\r\n    source: formValue.proxy ? formValue.proxy : [],\r\n    ...obj,\r\n    use_money: formValue.loadGold,\r\n    pass: formValue.password,\r\n    repass: formValue.confirmPssword,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/addUser\", newobj, \"POST\");\r\n};\r\nexport const editUser = (formValue, id) => {\r\n  let obj = {};\r\n  formValue.packageList.forEach(element => {\r\n    let str = \"group[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    id,\r\n    username: formValue.username,\r\n    status: formValue.userStatus,\r\n    group_id: formValue.userGroup,\r\n    source: formValue.proxy ? formValue.proxy : [],\r\n    ...obj,\r\n    use_money: formValue.loadGold,\r\n    pass: formValue.password ? formValue.password : [],\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/editUser\", newobj, \"POST\");\r\n};\r\nexport const resetAuthCode = id => {\r\n  return ajax(\r\n    BASE + \"/acl/resetAuthCode\",\r\n    {\r\n      id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//后台管理-权限列表\r\nexport const ruleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/ruleList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addRule = value => {\r\n  return ajax(\r\n    BASE + \"/acl/addRule\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const editRule = (rule_id, value) => {\r\n  console.log(value);\r\n\r\n  return ajax(BASE + \"/acl/editRule\", { ...value, rule_id, token }, \"POST\");\r\n};\r\nexport const ruleDel = id => {\r\n  return ajax(\r\n    BASE + \"/acl/ruleDel\",\r\n    {\r\n      id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//后台管理-角色管理\r\nexport const getRoleList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/acl/roleList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const getRuleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/ruleList\",\r\n    {\r\n      page: 1,\r\n      limit: 10,\r\n      token,\r\n      flag: 1\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const addRole = (name, rules, desc) => {\r\n  let obj = {};\r\n  rules.forEach(element => {\r\n    let str = \"rules[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    name,\r\n    ...obj,\r\n    desc,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/addRole\", newobj, \"POST\");\r\n};\r\nexport const editRole = (name, rules, desc, id) => {\r\n  let obj = {};\r\n  rules.forEach(element => {\r\n    let str = \"rules[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    role_name: name,\r\n    role_id: id,\r\n    ...obj,\r\n    desc,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/editRole\", newobj, \"POST\");\r\n};\r\n//客服-公告设置\r\nexport const getList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/notice/getList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addNotice = formData => {\r\n  return ajax(\r\n    BASE + \"/notice/addNotice\",\r\n    {\r\n      token,\r\n      ...formData\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const updateNotice = (formData, id) => {\r\n  return ajax(\r\n    BASE + \"/notice/updateNotice\",\r\n    {\r\n      token,\r\n      id,\r\n      ...formData\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const delNotice = id => {\r\n  return ajax(\r\n    BASE + \"/notice/delNotice\",\r\n    {\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//客服-代充账号\r\nexport const customerList = (page, limit, user_id) => {\r\n  return ajax(\r\n    BASE + \"/customer/customerList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      user_id: user_id ? user_id : \"\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveCustomerService = (formData, action, user_id) => {\r\n  if (user_id) {\r\n    formData.user_id = user_id;\r\n  }\r\n  return ajax(\r\n    BASE + \"/customer/saveCustomerService\",\r\n    {\r\n      token,\r\n      ...formData,\r\n      action\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//报表-日常运营\r\nexport const dailyReportInit = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/report/dailyReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const dailyReport = (page, limit, package_id, start = \"\", end = \"\") => {\r\n  return ajax(\r\n    BASE + \"/report/dailyReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      start,\r\n      end\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const dateReport = (page, limit, package_id, start = \"\", end = \"\") => {\r\n  return ajax(\r\n    BASE + \"/report/dateReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      start,\r\n      end,\r\n      group_by: \"date\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const gameReport = (page, limit, package_id, start = \"\", end = \"\") => {\r\n  return ajax(\r\n    BASE + \"/report/gameReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      start,\r\n      end,\r\n      group_by: \"game_id\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const oneDayGameReport = (page, limit, package_id, date) => {\r\n  return ajax(\r\n    BASE + \"/report/gameReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      date,\r\n      group_by: \"game_id\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//游戏设置-配置项\r\nexport const configList = (page, limit, conf_key) => {\r\n  return ajax(\r\n    BASE + \"/config/list\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      conf_key: conf_key ? conf_key : \"\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveConf = (value, action) => {\r\n  return ajax(\r\n    BASE + \"/config/saveConf\",\r\n    {\r\n      ...value,\r\n      action,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//代理系统\r\nexport const getProxyUserList = data => {\r\n  return ajax(\r\n    BASE + \"/user/getProxyUserList\",\r\n    {\r\n      ...data,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const changeProxyUserProxyPid = data => {\r\n  return ajax(\r\n    BASE + \"/user/changeProxyUserProxyPid\",\r\n    {\r\n      ...data,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const proxy_changeGold = data => {\r\n  return ajax(\r\n    BASE + \"/user/changeGold\",\r\n    {\r\n      ...data,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const getProxyUser = data => {\r\n  return ajax(\r\n    BASE + \"/user/getProxyUser\",\r\n    {\r\n      ...data,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//消息中心-任务列表\r\nexport const tasksList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/tasks/tasksList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const changeUserBalance = value => {\r\n  return ajax(\r\n    BASE + \"/tasks/changeUserBalance\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const reviewTask = value => {\r\n  return ajax(\r\n    BASE + \"/tasks/reviewTask\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//交易所-收付款管理\r\nexport const allAccountList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/trade/allAccountList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const resetPassword = user_id => {\r\n  return ajax(\r\n    BASE + \"/trade/resetPassword\",\r\n    {\r\n      user_id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const accountList = user_id => {\r\n  return ajax(BASE + \"/trade/accountList\", { user_id, token }, \"POST\");\r\n};\r\n\r\n//交易所-申请上架历史\r\nexport const sellGoldApplyList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/trade/sellGoldApplyList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const tradeRemark = value => {\r\n  return ajax(\r\n    BASE + \"/trade/tradeRemark\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const sellGoldInfoList = (page, limit, user_id) => {\r\n  return ajax(\r\n    BASE + \"/order/sellGoldInfoList\",\r\n    {\r\n      page,\r\n      limit,\r\n      user_id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const reviewInfo2 = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/reviewInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      id,\r\n      type: 3,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const remarkInfo2 = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/remarkInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      id,\r\n      type: 6,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//交易所-交易订单\r\nexport const sellGoldOrderList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/trade/sellGoldOrderList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//活动-活动列表\r\nexport const activityConfigList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/activity/activityConfigList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveActivityConfig = value => {\r\n  return ajax(\r\n    BASE + \"/activity/saveActivityConfig\",\r\n    {\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const delActivityConfig = id => {\r\n  return ajax(\r\n    BASE + \"/activity/delActivityConfig\",\r\n    {\r\n      id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\n//活动-礼金券领取列表\r\nexport const giftVoucherList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/activity/giftVoucherList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//活动-活动领取列表\r\nexport const activityList = (page, limit, value) => {\r\n  return ajax(\r\n    BASE + \"/activity/activityList\",\r\n    {\r\n      page,\r\n      limit,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-充值订单\r\nexport const reqOrder_list = (page, limit, reqData) => {\r\n  return ajax(\r\n    BASE + \"/order/recharge\",\r\n    { page, limit, token, ...reqData },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const reqLostOrder_list = (page, limit, user_id, order_id) => {\r\n  return ajax(\r\n    BASE + \"/order/recharge\",\r\n    { page, limit, order_id, user_id, token },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const orderReview = (user_id, order_id) => {\r\n  return ajax(\r\n    BASE + \"/order/orderReview\",\r\n    { user_id, order_id, status: 7, review_type: 1, token },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const orderReviewEdit = reqData => {\r\n  return ajax(\r\n    BASE + \"/order/orderReview\",\r\n    // { user_id, order_id, status: 8, review_type: 2, token, type },\r\n    { token, ...reqData },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const downloadList = searchData => {\r\n  let {\r\n    start_time,\r\n    end_time,\r\n    order_status,\r\n    type,\r\n    inputParam,\r\n    paramKey\r\n  } = searchData;\r\n  if (!paramKey || paramKey === \"\") {\r\n    paramKey = 0;\r\n  }\r\n  let params =\r\n    \"token=\" +\r\n    token +\r\n    \"&filed=\" +\r\n    paramKey +\r\n    \"&keyword=\" +\r\n    inputParam +\r\n    \"&start_time=\" +\r\n    start_time +\r\n    \"&end_time=\" +\r\n    end_time +\r\n    \"&order_status=\" +\r\n    order_status +\r\n    \"&type=\" +\r\n    type;\r\n  let url = BASE + \"/order/recharge/?export=2&\" + params;\r\n  if (paramKey) {\r\n    switch (paramKey) {\r\n      case \"user_id\":\r\n        url = url + \"&user_id=\" + inputParam;\r\n        break;\r\n      case \"order_id\":\r\n        url = url + \"&order_id=\" + inputParam;\r\n        break;\r\n      case \"1\":\r\n        url = url + \"&time_type=1\";\r\n        break;\r\n      case \"2\":\r\n        url = url + \"&time_type=2\";\r\n        break;\r\n      case \"package_nick\":\r\n        url = url + \"&package_nick=\" + inputParam;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  window.open(url);\r\n};\r\nexport const getChannelList = (page, limit, name) => {\r\n  return ajax(\r\n    BASE + \"/order/channelList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      name: name ? name : \"\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addChannel = value => {\r\n  return ajax(\r\n    BASE + \"/order/addChannel\",\r\n    {\r\n      ...value,\r\n      token,\r\n      action: \"add\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const editPayChannel = (value, id) => {\r\n  return ajax(\r\n    BASE + \"/order/editPayChannel\",\r\n    {\r\n      ...value,\r\n      token,\r\n      id,\r\n      action: \"edit\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-古都银行卡\r\nexport const bankList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/order/bankList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const saveBankCard = (searchData, id) => {\r\n  if (id) {\r\n    searchData.id = id;\r\n  }\r\n  return ajax(\r\n    BASE + \"/order/saveBankCard\",\r\n    {\r\n      ...searchData,\r\n      action: id ? \"edit\" : \"add\",\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const deleteBankCard = id => {\r\n  return ajax(\r\n    BASE + \"/order/saveBankCard\",\r\n    {\r\n      id,\r\n      action: \"del\",\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-代充订单\r\nexport const rechargeOrder = (\r\n  page,\r\n  limit,\r\n  start_time,\r\n  end_time,\r\n  order_status,\r\n  inputKey,\r\n  inputValue\r\n) => {\r\n  return ajax(\r\n    BASE + \"/order/rechargeOrder\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      type: 14,\r\n      start_time,\r\n      end_time,\r\n      order_status,\r\n      [inputKey]: inputValue\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const cancelOrder = reqData => {\r\n  return ajax(\r\n    BASE + \"/order/cancelOrder\",\r\n    {\r\n      ...reqData,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-渠道配置\r\nexport const getChannel = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/order/getChannel\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const getChannelInfo = channel_id => {\r\n  return ajax(\r\n    BASE + \"/order/getChannelInfo\",\r\n    {\r\n      page: 1,\r\n      limit: 20,\r\n      token,\r\n      channel_id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const editChannelInfo = (id, pay_code) => {\r\n  return ajax(\r\n    BASE + \"/order/editChannelInfo\",\r\n    {\r\n      id,\r\n      token,\r\n      pay_code\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//兑换-兑换订单&代提设置\r\nexport const withDraw = (page, limit, data) => {\r\n  return ajax(\r\n    BASE + \"/order/withDraw\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      ...data\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const reviewInfo = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/reviewInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      id,\r\n      type: 2\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const remarkInfo = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/remarkInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      id,\r\n      type: 2\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const downloadWithdrawList = searchData => {\r\n  let {\r\n    start_time,\r\n    end_time,\r\n    order_status,\r\n    type,\r\n    inputValue,\r\n    inputKey\r\n  } = searchData;\r\n  let params =\r\n    \"token=\" +\r\n    token +\r\n    \"&filed=\" +\r\n    inputKey +\r\n    \"&keyword=\" +\r\n    inputValue +\r\n    \"&start_time=\" +\r\n    start_time +\r\n    \"&end_time=\" +\r\n    end_time +\r\n    \"&order_status=\" +\r\n    order_status +\r\n    \"&type=\" +\r\n    type;\r\n  let url = BASE + \"/order/withDraw/?export=2&flag=3&\" + params;\r\n  if (inputKey) {\r\n    switch (inputKey) {\r\n      case \"user_id\":\r\n        url = url + \"&user_id=\" + inputValue;\r\n        break;\r\n      case \"order_id\":\r\n        url = url + \"&order_id=\" + inputValue;\r\n        break;\r\n      case \"1\":\r\n        url = url + \"&time_type=1\";\r\n        break;\r\n      case \"2\":\r\n        url = url + \"&time_type=2\";\r\n        break;\r\n      case \"replace_id\":\r\n        url = url + \"&replace_id=\" + inputValue;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  console.log(url);\r\n  window.open(url);\r\n};\r\nexport const withDrawRemark = (id, temarks, remark_type) => {\r\n  return ajax(\r\n    BASE + \"/order/withDrawRemark\",\r\n    {\r\n      token,\r\n      id,\r\n      temarks,\r\n      remark_type,\r\n      type: 2\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const auditOrder = reqData => {\r\n  return ajax(\r\n    BASE + \"/order/withDraw\",\r\n    {\r\n      ...reqData,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const orderWithDrawReview = reqData => {\r\n  return ajax(\r\n    BASE + \"/order/withDrawReview\",\r\n    {\r\n      ...reqData,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\n//兑换-第三方提款设置\r\nexport const getConfigList = reqData => {\r\n  return ajax(\r\n    BASE + \"/config/list\",\r\n    {\r\n      ...reqData,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveWithDrawChannel = (id, name, value) => {\r\n  return ajax(\r\n    BASE + \"/config/saveWithDrawChannel\",\r\n    {\r\n      id,\r\n      name,\r\n      ...value,\r\n      \"alipay[name]\": \"支付宝\",\r\n      \"alipay[withdraw_type]\": 1,\r\n      \"bankcard[name]\": \"银行卡\",\r\n      \"bankcard[withdraw_type]\": 2,\r\n      conf_key: \"withdraw_channel_info\",\r\n      action: \"edit\",\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//赠送-赠送订单\r\nexport const withDrawReview = (order_id, user_id, review_status) => {\r\n  return ajax(\r\n    BASE + \"/order/withDraw\",\r\n    {\r\n      token,\r\n      order_id,\r\n      review_status,\r\n      user_id,\r\n      review_type: 1,\r\n      is_pass: 1\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const setGiftConfig = reqData => {\r\n  return ajax(\r\n    BASE + \"/config/setGiftConfig\",\r\n    {\r\n      ...reqData,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//AI\r\nexport const getAIList = (page, limit, package_id, value) => {\r\n  return ajax(\r\n    BASE + \"/user/index\",\r\n    {\r\n      page,\r\n      limit,\r\n      package_id,\r\n      ...value,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const changeInternalUserBalance = (user_id, amount) => {\r\n  return ajax(\r\n    BASE + \"/user/changeInternalUserBalance\",\r\n    {\r\n      user_id,\r\n      amount,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Icon, Input, Button, Modal, message } from \"antd\";\r\nimport \"./login.less\";\r\nimport { reqLogin, reqAuthCode, navList, setToken } from \"../../api\";\r\n\r\nconst Item = Form.Item;\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n    if (result.status === 0) {\r\n      let { data } = result;\r\n      data.forEach(element => {\r\n        if (element.children) {\r\n          element.children.forEach(item => {\r\n            item.title = item.title.slice(24);\r\n          });\r\n        }\r\n      });\r\n      localStorage.menuList = JSON.stringify(data);\r\n      // 跳转到管理界面 (不需要再回退回到登陆)\r\n      this.props.history.replace(\"/\");\r\n\r\n      // setTimeout(() => this.props.history.replace(\"/\"), 300);\r\n    }\r\n  };\r\n  handleSubmit = event => {\r\n    // 阻止事件的默认行为\r\n    event.preventDefault();\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // 请求登陆\r\n        const { username, password, authcode } = values;\r\n        const result = await reqLogin(username, password, authcode);\r\n\r\n        if (result.status === 0) {\r\n          // 登陆成功\r\n          message.success(\"登陆成功\");\r\n          localStorage.token = result.data.token;\r\n          localStorage.name = result.data.name;\r\n          localStorage.tokenTimeStamp = new Date().getTime();\r\n          setToken();\r\n          this.getMenuList();\r\n        } else {\r\n          // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"检验失败!\");\r\n      }\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // 请求登陆\r\n        const { username, password } = values;\r\n        const result = await reqAuthCode(username, password);\r\n        // console.log(\"请求成功\", result);\r\n        if (result.status === 0 && result.data) {\r\n          // 登陆成功\r\n          Modal.info({\r\n            title: \"首次登录扫码获取验证码\",\r\n            content: (\r\n              <div>\r\n                <img src={result.data.qrurl} alt=\"验证码\" />\r\n              </div>\r\n            )\r\n          });\r\n        } else {\r\n          // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"检验失败!\");\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  };\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    console.log(\"validatePwd()\", rule, value);\r\n    if (!value) {\r\n      callback(\"密码必须输入\");\r\n    } else if (value.length < 4) {\r\n      callback(\"密码长度不能小于4位\");\r\n    } else if (value.length > 12) {\r\n      callback(\"密码长度不能大于12位\");\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback(\"密码必须是英文、数字或下划线组成\");\r\n    } else {\r\n      callback(); // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  };\r\n\r\n  render() {\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const token = localStorage.token;\r\n    if (token) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form;\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <h1>QGame: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {/*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */}\r\n              {getFieldDecorator(\"username\", {\r\n                // 配置对象: 属性名是特定的一些名称\r\n                // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"用户名必须输入\"\r\n                  },\r\n                  { min: 3, message: \"用户名至少3位\" },\r\n                  { max: 12, message: \"用户名最多12位\" },\r\n                  {\r\n                    pattern: /^[a-zA-Z0-9_]+$/,\r\n                    message: \"用户名必须是英文、数字或下划线组成\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"用户名\"\r\n                />\r\n              )}\r\n            </Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  {\r\n                    validator: this.validatePwd\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"authcode\", {\r\n                rules: [\r\n                  //{ required: true, whitespace: true, message: '验证码必须输入' },\r\n                  //{ min: 4, message: '验证码至少4位' }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"qrcode\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"验证码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <span style={{ marginTop: 5 }} onClick={this.handleClick}>\r\n              首次登录，手机下载Google Authenticator\r\n              安装，点击此处扫码获取验证码\r\n            </span>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst WrapLogin = Form.create()(Login);\r\nexport default WrapLogin;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu, message } from \"antd\";\r\nimport { navList } from \"../../api\";\r\nimport \"./index.less\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n// 左侧导航的组件\r\nclass LeftNav extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { data: [], openKey: \"\" };\r\n  }\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n\r\n    if (result.status === 0) {\r\n      //登陆成功\r\n      this.setState({\r\n        data: result.data\r\n      });\r\n    } else {\r\n      // 提示错误信息\r\n      message.error(result.msg);\r\n    }\r\n  };\r\n  /*\r\n   获取左侧菜单导航栏\r\n    */\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data\r\n      });\r\n    } else {\r\n      message.error(\"网络问题，请重新登陆\");\r\n    }\r\n  };\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = menuList => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname;\r\n    return menuList.reduce((pre, item) => {\r\n      // 向pre添加<Menu.Item>\r\n      // if (item.key) {\r\n        //按需渲染侧边栏，必须已经在后台-权限管理中设置了路由key才能渲染\r\n        if (!item.children) {\r\n          pre.push(\r\n            <Menu.Item\r\n              key={item.key}\r\n              onClick={() => {\r\n                this.props.onClick(item);\r\n                this.openMenu = item.key;\r\n              }}\r\n            >\r\n              <Link to={item.key}>\r\n                {/* <Icon type={item.icon} /> */}\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(\r\n            currentValue => path.indexOf(currentValue.key) === 0\r\n          );\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key;\r\n            // this.setState({ openKey: item.key });\r\n          }\r\n          pre.push(\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n              onClick={() => {\r\n                this.openMenu = item.key;\r\n                // console.log(this.openMenu);\r\n              }}\r\n            >\r\n              {item.children.reduce((cpre, ele) => {\r\n                cpre.push(\r\n                  <Menu.Item\r\n                    key={ele.key}\r\n                    onClick={() => {\r\n                      this.props.onClick(ele);\r\n                    }}\r\n                  >\r\n                    <Link to={ele.key}>\r\n                      <span>{ele.title}</span>\r\n                    </Link>\r\n                  </Menu.Item>\r\n                );\r\n                return cpre;\r\n              }, [])}\r\n            </SubMenu>\r\n          );\r\n        }\r\n      // }\r\n      return pre;\r\n    }, []);\r\n  };\r\n  componentDidMount() {\r\n    this.setState({openKey:this.openKey})\r\n  }\r\n  render() {\r\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n    const menuNodes = this.getMenuNodes(menuList);\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname;\r\n    // 得到需要打开菜单项的key\r\n    // const openKey = this.openKey;\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link\r\n          to=\"/\"\r\n          className=\"left-nav-header\"\r\n          style={{ justifyContent: \"center\" }}\r\n        >\r\n          <h1>QGame后台管理</h1>\r\n        </Link>\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          // defaultOpenKeys={[this.openKey]}\r\n          onOpenChange={key => {\r\n            console.log(key);\r\n            if (key[1] && key[0] !== key[1]) {\r\n              this.setState({ openKey: key[1] });\r\n            } else {\r\n              this.setState({ openKey: null });\r\n            }\r\n          }}\r\n          openKeys={[this.state.openKey]}\r\n        >\r\n          {menuNodes}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default withRouter(LeftNav);\r\n","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nexport default function LinkButton(props) {\r\n  return (\r\n    <Button\r\n      type=\"primary\"\r\n      size='small'\r\n      style={{ marginRight: 10}}\r\n      {...props}\r\n    ></Button>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n// import { browserHistory } from \"react-router\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {\r\n  Modal,\r\n  Tabs,\r\n  Dropdown,\r\n  Menu,\r\n  Icon,\r\n  Button,\r\n  message,\r\n  Input,\r\n  Form\r\n} from \"antd\";\r\n\r\nimport LinkButton from \"../link-button\";\r\n// import memoryUtils from \"../../utils/memoryUtils\";\r\n// import storageUtils from \"../../utils/storageUtils\";\r\nimport { getAuthCode, editPass } from \"../../api\";\r\n// import QRCode from \"qrcode.react\";\r\nimport \"./index.less\";\r\nconst { TabPane } = Tabs;\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.newTabIndex = 0;\r\n    const panes = [\r\n      {\r\n        title: \"首页\",\r\n        content: \"Content of Tab 1\",\r\n        key: \"1\",\r\n        closable: false,\r\n        path: \"/home\"\r\n      }\r\n    ];\r\n    this.state = {\r\n      activeKey: panes[0].key,\r\n      panes,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  onChange = activeKey => {\r\n    this.setState({ activeKey });\r\n  };\r\n\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  };\r\n\r\n  add = tabConfig => {\r\n    // console.log(\"tabConfig\", tabConfig);\r\n    const { panes } = this.state;\r\n    let isTabExist = false;\r\n    let oldKey;\r\n    panes.forEach(item => {\r\n      if (item.title === tabConfig.title) {\r\n        isTabExist = true;\r\n        oldKey = item.key;\r\n      }\r\n    });\r\n    if (isTabExist) {\r\n      this.onChange(oldKey);\r\n    } else {\r\n      const activeKey = `newTab${this.newTabIndex++}`;\r\n      panes.push({\r\n        title: tabConfig.title,\r\n        content: \"Content of new Tab\",\r\n        key: activeKey,\r\n        path: tabConfig.key\r\n      });\r\n      this.onChange(activeKey);\r\n      this.setState({ panes, activeKey });\r\n    }\r\n  };\r\n\r\n  remove = targetKey => {\r\n    let { activeKey } = this.state;\r\n    let lastIndex;\r\n    this.state.panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n    if (panes.length && activeKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        activeKey = panes[lastIndex].key;\r\n        // browserHistory.push(panes[lastIndex].path);\r\n        this.props.history.push(panes[lastIndex].path);\r\n      } else {\r\n        activeKey = panes[0].key;\r\n      }\r\n    }\r\n    this.setState({ panes, activeKey });\r\n  };\r\n\r\n  //退出LOG OUT\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: \"确定退出吗?\",\r\n      onOk: () => {\r\n        console.log(\"OK\", this);\r\n        // 删除保存的user数据\r\n        // storageUtils.removeUser();\r\n        // memoryUtils.user = {};\r\n        // localStorage={}\r\n        localStorage.removeItem(\"menuList\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"name\");\r\n        localStorage.removeItem(\"tokenTimeStamp\");\r\n        // 跳转到login\r\n        this.props.history.replace(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId);\r\n  }\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this);\r\n    let data = this.state;\r\n    const path = this.props.location.pathname;\r\n    let title;\r\n    if (path !== \"/home\" && path !== \"/\") {\r\n      const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n      menuList.forEach(item => {\r\n        if (!item.children && item.key === path) {\r\n          title = item.title;\r\n        } else if (item.children) {\r\n          item.children.forEach(val => {\r\n            if (val.key === path) {\r\n              title = val.title;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      data.activeKey = \"2\";\r\n      data.panes.push({\r\n        title: title,\r\n        key: \"2\",\r\n        path: path\r\n      });\r\n      this.setState({\r\n        ...data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = localStorage.getItem(\"name\");\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <Dropdown\r\n            overlay={\r\n              <Menu>\r\n                <Menu.Item key=\"0\">\r\n                  <Button type=\"link\" onClick={this.authCode}>\r\n                    安全码设置\r\n                  </Button>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"1\">\r\n                  <Button type=\"link\" onClick={this.resetPWD}>\r\n                    修改密码\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu>\r\n            }\r\n            trigger={[\"click\"]}\r\n          >\r\n            <Button type=\"link\">\r\n              {username} <Icon type=\"down\" />\r\n            </Button>\r\n          </Dropdown>\r\n          <LinkButton onClick={this.logout} size=\"default\">\r\n            退出\r\n          </LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          {/* <div className=\"header-bottom-left\">{title}</div> */}\r\n          <Tabs\r\n            onChange={this.onChange}\r\n            activeKey={this.state.activeKey}\r\n            type=\"editable-card\"\r\n            onEdit={this.onEdit}\r\n            hideAdd\r\n          >\r\n            {this.state.panes.map(pane => (\r\n              <TabPane\r\n                tab={<Link to={pane.path}>{pane.title}</Link>}\r\n                key={pane.key}\r\n                closable={pane.closable}\r\n                forceRender\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </div>\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <Form\r\n              labelCol={{ span: 6 }}\r\n              labelAlign=\"left\"\r\n              onSubmit={this.handleEditSubmit}\r\n            >\r\n              <Form.Item label=\"新密码\">\r\n                {getFieldDecorator(\"editPass\", {\r\n                  rules: [\r\n                    { required: true, message: \"密码不能为空\" },\r\n                    { whitespace: true },\r\n                    { min: 6, message: \"密码至少6位\" },\r\n                    { max: 16, message: \"密码最多16位\" }\r\n                    // {\r\n                    //   pattern: /^[a-zA-Z0-9_]+$/,\r\n                    //   message: \"用户名必须是英文、数字或下划线组成\"\r\n                    // }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    style={{ width: \"40%\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"6到16个字符\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"重复密码\">\r\n                {getFieldDecorator(\"repeat\", {\r\n                  rules: [\r\n                    { required: true },\r\n                    {\r\n                      validator: (rule, value, callback) => {\r\n                        if (!value) {\r\n                          callback(); //如果还没填写，则不进行一致性验证\r\n                        }\r\n                        if (value === getFieldValue(\"editPass\")) {\r\n                          callback();\r\n                        } else {\r\n                          callback(\"两次密码不一致\");\r\n                        }\r\n                      }\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    style={{ width: \"40%\" }}\r\n                    type=\"password\"\r\n                    placeholder=\"6到16个字符\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  提交\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  authCode = async () => {\r\n    const res = await getAuthCode();\r\n    if (res.status === 0) {\r\n      Modal.info({\r\n        title: \"扫码获取验证码\",\r\n        okText:\"关闭\",\r\n        content: (\r\n          //  <QRCode value={res.data.qrurl}></QRCode>\r\n          <div>\r\n            <img src={res.data.qrurl} alt=\"验证码\" />\r\n          </div>\r\n        ),\r\n        width: 300\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  resetPWD = () => {\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        const res = await editPass(value.editPass);\r\n        if (res.status === 0) {\r\n          message.success(res.msg);\r\n        } else {\r\n          message.error(res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n}\r\nconst WrappedHeader = Form.create()(Header);\r\nexport default withRouter(WrappedHeader);\r\n","import React, { Component } from \"react\";\r\n// import ElasticText from \"../../components/elasticText\";\r\n// import { Icon} from \"antd\";\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      res: \"\"\r\n    };\r\n    this.i = 0;\r\n    this.timer = 0;\r\n    this.str = \"欢迎您来到QGame后台管理系统\";\r\n  }\r\n  typing = () => {\r\n    if (this.i <= this.str.length) {\r\n      this.setState(\r\n        {\r\n          res: this.str.slice(0, this.i++) + \"__\"\r\n        },\r\n        () => {\r\n          this.timer = setTimeout(() => this.typing(), 200);\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        res: this.str\r\n      });\r\n      clearTimeout(this.timer);\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.typing();\r\n  }\r\n  render() {\r\n    return <span style={{ fontSize: \"20px\" }}>{this.state.res}</span>;\r\n    // <ElasticText></ElasticText>\r\n  }\r\n}\r\n","import moment from \"moment\";\r\n/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return \"\";\r\n  let timeStamp = parseInt(time);\r\n  if (timeStamp === 0) return \"\";\r\n  return moment(timeStamp * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\r\n  // let date = new Date(time * 1000);\r\n  // return (\r\n  //   date.getFullYear() +\r\n  //   \"-\" +\r\n  //   (date.getMonth() + 1) +\r\n  //   \"-\" +\r\n  //   date.getDate() +\r\n  //   \" \" +\r\n  //   date.getHours() +\r\n  //   \":\" +\r\n  //   date.getMinutes() +\r\n  //   \":\" +\r\n  //   date.getSeconds()\r\n  // );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nclass NormalLoginForm extends Component {\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { isNickModal } = this.props;\r\n    return (\r\n      <Form className=\"login-form\">\r\n        <FormItem style={isNickModal ? {} : { display: \"none\" }}>\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: isNickModal,\r\n                message: \"Please input your username!\"\r\n              }\r\n            ],\r\n            initialValue: this.props.val\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"请输入昵称\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n        <FormItem label=\"金额\" style={isNickModal ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"gold\", {\r\n            rules: [\r\n              {\r\n                required: !isNickModal,\r\n                whitespace: true,\r\n                pattern: /^\\d+(\\.\\d+)?$/,\r\n                message: \"必须为数字，减少时金额为负\"\r\n              }\r\n            ],\r\n          })(<Input placeholder=\"必须为数字，减少时金额为负\" />)}\r\n        </FormItem>\r\n        <FormItem label=\"备注\" style={isNickModal ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"desc\", {\r\n            rules: [\r\n              { max: 400, message: \"最多400字\" },\r\n              {\r\n                required: !isNickModal\r\n              }\r\n            ]\r\n          })(\r\n            <Input.TextArea\r\n              placeholder=\"请输入文字\"\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n            />\r\n          )}\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n\r\nexport default WrappedNormalLoginForm;\r\n","import React from \"react\";\r\nimport { DatePicker, ConfigProvider } from \"antd\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\nimport \"moment/locale/zh-cn\";\r\nimport moment from \"moment\";\r\nconst { RangePicker } = DatePicker;\r\nexport default function MyDatePicker(props) {\r\n  return (\r\n    <ConfigProvider locale={zh_CN}>\r\n      <RangePicker\r\n        defaultPickerValue={[moment().subtract(1, \"month\"), moment()]}\r\n        style={{ width: 300 }}\r\n        // defaultPickerValue={null}\r\n        ranges={{\r\n          今天: [moment().startOf(\"day\"), moment()],\r\n          昨天: [\r\n            moment()\r\n              .startOf(\"day\")\r\n              .subtract(1, \"days\"),\r\n            moment()\r\n              .endOf(\"day\")\r\n              .subtract(1, \"days\")\r\n          ],\r\n          最近一周: [\r\n            moment()\r\n              .startOf(\"day\")\r\n              .subtract(1, \"weeks\"),\r\n            moment()\r\n          ]\r\n        }}\r\n        showTime={{\r\n          format: \"HH:mm\",\r\n          defaultValue: [moment(\"00:00\", \"HH:mm\"), moment(\"00:00\", \"HH:mm\")]\r\n        }}\r\n        format=\"YYYY-MM-DD HH:mm:00\"\r\n        placeholder={[\"开始日期\", \"结束日期\"]}\r\n        onChange={(data, dateString) => {\r\n          props.handleValue(dateString);\r\n        }}\r\n        // disabledDate={disabledDate}\r\n        // disabledTime={disabledRangeTime}\r\n        {...props}\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table, Card, Icon, message } from \"antd\";\r\nimport MyDatePicker from \"../../components/MyDatePicker\";\r\nimport LinkButton from \"../../components/link-button/index\";\r\nimport moment from \"moment\";\r\nimport { userDetail, bindInfo } from \"../../api/index\";\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.startTime = \"\";\r\n    this.endTime = \"\";\r\n    this.state = {\r\n      data: [],\r\n      count: 0\r\n    };\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    let isBindInfo = this.props.isBindInfo;\r\n    let id = this.props.recordID;\r\n    const res = !isBindInfo\r\n      ? await userDetail(page, limit, id)\r\n      : await bindInfo(page, limit, id);\r\n    if (res.data) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  onSearchData = async (page, limit) => {\r\n    if (!this.startTime || !this.endTime) {\r\n      message.error(\"请选择有效的时间日期\");\r\n      return;\r\n    }\r\n    let reqData = {\r\n      start: this.startTime,\r\n      end: this.endTime,\r\n      funds_type: 0\r\n    };\r\n    let id = this.props.recordID;\r\n    const res = await userDetail(page, limit, id, reqData);\r\n    if (res.status === 0) {\r\n      this.setState({ data: res.data, count: res.count });\r\n    } else {\r\n      message.info(res.msg || \"没有数据\");\r\n    }\r\n  };\r\n  render() {\r\n    // const { data } = this.props.GoldDetailRecord;\r\n    let title;\r\n    if (!this.props.isBindInfo) {\r\n      title = (\r\n        <span>\r\n          <MyDatePicker\r\n            handleValue={val => {\r\n              let diffDays = moment(val[1]).diff(moment(val[0]), \"days\");\r\n              if (diffDays > 1) {\r\n                message.error(\"请选择时间范围不大于1天\");\r\n              } else {\r\n                this.startTime = val[0];\r\n                this.endTime = val[1];\r\n              }\r\n            }}\r\n          />\r\n          &nbsp; &nbsp;\r\n          <LinkButton onClick={() => this.onSearchData(1, 20)} size=\"default\">\r\n            <Icon type=\"search\" />\r\n          </LinkButton>\r\n        </span>\r\n      );\r\n    }\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.onSearchData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.onSearchData(current, size);\r\n            }\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.isBindInfo) {\r\n      return [\r\n        {\r\n          title: \"支付宝账号\",\r\n          dataIndex: \"alipay_account\"\r\n        },\r\n        {\r\n          title: \"绑定支付宝时间\",\r\n          dataIndex: \"bind_alipay_at\"\r\n        },\r\n\r\n        {\r\n          title: \"开户人姓名\",\r\n          dataIndex: \"card_name\"\r\n        },\r\n        {\r\n          title: \"银行名称\",\r\n          dataIndex: \"bank_name\"\r\n        },\r\n        {\r\n          title: \"银行卡号\",\r\n          dataIndex: \"bank_num\"\r\n        },\r\n        {\r\n          title: \"绑定银行卡时间\",\r\n          dataIndex: \"bind_bank_at\"\r\n        },\r\n        {\r\n          title: \"是否灰名单\",\r\n          dataIndex: \"is_gray\"\r\n        },\r\n        {\r\n          title: \"灰名单备注\",\r\n          dataIndex: \"black_remark\"\r\n        },\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"remark_at\"\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          dataIndex: \"option\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Select,\r\n  Input,\r\n  Popconfirm,\r\n  Button\r\n} from \"antd\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport LinkButton from \"../../components/link-button/index\";\r\nimport {\r\n  reqUsers,\r\n  setGameUserNickName,\r\n  changeGold,\r\n  reqLoadGold,\r\n  saveUserBlack,\r\n  createTask,\r\n  setCustomer\r\n} from \"../../api/index\";\r\nimport WrappedNormalLoginForm from \"././user-nick\";\r\nimport WrappedComponent from \"./gold_details\";\r\nimport MyDatePicker from \"../../components/MyDatePicker\";\r\n\r\nconst { Option } = Select;\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isNickShow: false,\r\n      isGoldShow: false,\r\n      isGoldDetailShow: false,\r\n      isBindInfoShow: false,\r\n      isResetPwdShow: false,\r\n      resetpwd: \"\",\r\n      game_nick: \"\",\r\n      startTime: \"\",\r\n      endTime: \"\",\r\n      loading: false\r\n    };\r\n    this.inputKey = \"id\";\r\n    this.inputValue = \"\";\r\n  }\r\n\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      fixed: \"left\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"game_nick\",\r\n      key: \"game_nick\",\r\n      fixed: \"left\",\r\n      width: 100,\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.game_nick = record.game_nick;\r\n            this.id = record.id;\r\n            this.rowIndex = rowIndex;\r\n            this.setState({\r\n              isNickShow: true\r\n            });\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n\r\n    {\r\n      title: \"账户余额\",\r\n      dataIndex: \"game_gold\",\r\n      key: \"game_gold\",\r\n      sorter: (a, b) => a.game_gold - b.game_gold,\r\n      width: 150,\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.goldRecord = record;\r\n            this.setState({\r\n              isGoldShow: true\r\n            });\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      key: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_nick\",\r\n      key: \"proxy_nick\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"手机\",\r\n      dataIndex: \"phone_number\",\r\n      key: \"phone_number\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"role_name\",\r\n      key: \"role_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"注册IP\",\r\n      dataIndex: \"regin_ip\",\r\n      key: \"regin_ip\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"注册时间\",\r\n      dataIndex: \"regin_time\",\r\n      render: formateDate,\r\n      key: \"regin_time\",\r\n      sorter: (a, b) => a.regin_time - b.regin_time,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"登录IP\",\r\n      dataIndex: \"login_ip\",\r\n      key: \"login_ip\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"登陆时间\",\r\n      dataIndex: \"login_time\",\r\n      render: formateDate,\r\n      sorter: (a, b) => a.login_time - b.login_time,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 200,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getGoldDetail(record)} type=\"default\">\r\n            资金明细\r\n          </LinkButton>\r\n          <LinkButton onClick={() => this.getMoreDetail(record)}>\r\n            更多\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"实时余额\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton type=\"default\" onClick={() => this.getLoadGold(record)}>\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"是否为客服账号\",\r\n      dataIndex: \"game_user_type\",\r\n      render: (text, record, index) => (\r\n        <span>{parseInt(text) === 4 ? \"是\" : \"\"}</span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqUsers(\r\n      page,\r\n      limit,\r\n      this.state.startTime,\r\n      this.state.endTime,\r\n      this.inputKey,\r\n      this.inputValue\r\n    );\r\n    if (result.status === 0) {\r\n      const { game_user, proxy_user } = result.data;\r\n      game_user.forEach(element => {\r\n        proxy_user.forEach(item => {\r\n          if (element.id === item.id) {\r\n            element.proxy_nick = item.proxy_pid;\r\n            // element.proxy_user_type = item.proxy_user_type;\r\n          }\r\n        });\r\n      });\r\n      this.setState({\r\n        data: game_user,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(result.msg || \"未检索到数据\");\r\n    }\r\n  };\r\n  changeNickName = () => {\r\n    let form = this.refs.getFormValue; //通过refs属性可以获得对话框内form对象\r\n    form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        this.setState({ isNickShow: false });\r\n        if (value.name !== this.game_nick) {\r\n          const result = await setGameUserNickName(this.id, value.name);\r\n          if (result.status === 0) {\r\n            message.success(\"修改成功!\");\r\n            // 首先拿到索引, 也可以从参数中传递过来\r\n            let index = this.rowIndex;\r\n            // 然后根据索引修改\r\n            this.state.data[index][`game_nick`] = value.name;\r\n            // 这个时候并不会更新视图, 需要 setState更新 arr\r\n            this.setState({\r\n              data: this.state.data\r\n            });\r\n          }\r\n        }\r\n      }\r\n      form.resetFields();\r\n    });\r\n  };\r\n  onChangeGold = () => {\r\n    this.setState({ loading: true });\r\n    //这里直接复用了user-nick的模态框，所以取input的值时用value.name\r\n    let form = this.refs.getFormValue;\r\n    let goldRecord = this.goldRecord;\r\n    form.validateFields(async (err, value) => {\r\n      const res = await changeGold(goldRecord, value);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n        this.setState({ isGoldShow: false, loading: false });\r\n      } else {\r\n        this.setState({ loading: false });\r\n        message.error(res.msg);\r\n      }\r\n      form.resetFields();\r\n    });\r\n  };\r\n  handleChange(event) {\r\n    let data = Object.assign({}, this.state.inputParam, {\r\n      val: event.target.value\r\n    });\r\n    this.setState({ inputParam: data });\r\n  }\r\n  getLoadGold = async record => {\r\n    const id = record.id;\r\n    const result = await reqLoadGold(id);\r\n    if (result.status === 0) {\r\n      Modal.success({\r\n        title: \"实时余额\",\r\n        content: `用户${record.id}实时余额是 : ${result.data[0].game_gold}`\r\n      });\r\n    }\r\n  };\r\n  getGoldDetail = async (record, isBindInfo) => {\r\n    if (this.moreModal) {\r\n      this.moreModal.destroy();\r\n    }\r\n    this.isBindInfo = isBindInfo;\r\n    this.recordID = record.id;\r\n    this.setState({ isGoldDetailShow: true });\r\n  };\r\n  saveUserBlack = async (record, isAdd) => {\r\n    let action = isAdd ? \"add\" : \"remove\";\r\n    const res = await saveUserBlack(record.id, action);\r\n    if (res.status === 0) {\r\n      message.success(\"操作成功！\");\r\n    } else {\r\n      message.success(\"操作失败:\" + res.msg);\r\n    }\r\n  };\r\n  resetPwd = record => {\r\n    if (this.moreModal) {\r\n      this.moreModal.destroy();\r\n    }\r\n    this.setState({ isResetPwdShow: true });\r\n    this.resetPwdId = record.id;\r\n  };\r\n  handleResetpwd = async () => {\r\n    const res = await createTask(this.resetPwdId, this.state.resetpwd);\r\n    if (res.status === 0) {\r\n      message.success(\"操作成功！\");\r\n      this.setState({ resetpwd: \"\", isResetPwdShow: false });\r\n    } else {\r\n      message.success(\"操作失败:\" + res.msg);\r\n    }\r\n  };\r\n  getMoreDetail = record => {\r\n    this.moreModal = Modal.info({\r\n      title: \"更多\",\r\n      okText: \"关闭\",\r\n      width: \"50%\",\r\n      content: (\r\n        <div>\r\n          <LinkButton\r\n            onClick={() => this.getGoldDetail(record, true)}\r\n            size=\"small\"\r\n          >\r\n            查看绑定信息\r\n          </LinkButton>\r\n          <Popconfirm\r\n            title=\"交易所黑名单\"\r\n            onConfirm={() => this.saveUserBlack(record, true)}\r\n            onCancel={() => this.saveUserBlack(record, false)}\r\n            okText=\"添加\"\r\n            cancelText=\"移除\"\r\n          >\r\n            <LinkButton size=\"small\">交易所黑名单</LinkButton>\r\n          </Popconfirm>\r\n          <LinkButton onClick={() => this.resetPwd(record)} size=\"small\">\r\n            重置密码\r\n          </LinkButton>\r\n          <Popconfirm\r\n            title=\"确定要设置为客服账号吗？\"\r\n            onConfirm={() => this.setCustomerAccount(record)}\r\n            okText=\"确定\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <LinkButton size=\"small\">设置客户账号</LinkButton>\r\n          </Popconfirm>\r\n        </div>\r\n      )\r\n    });\r\n  };\r\n  setCustomerAccount = async record => {\r\n    let id = record.id;\r\n    const res = await setCustomer(id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg + \"操作成功\");\r\n    } else {\r\n      message.error(res.msg + \"操作失败\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    const { data, count } = this.state;\r\n    const title = (\r\n      <span>\r\n        <MyDatePicker\r\n          handleValue={val => {\r\n            this.setState({\r\n              startTime: val[0],\r\n              endTime: val[1]\r\n            });\r\n          }}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <Select\r\n          style={{ width: 200 }}\r\n          placeholder=\"Select a person\"\r\n          defaultValue=\"id\"\r\n          onChange={val => {\r\n            this.inputKey = val;\r\n          }}\r\n        >\r\n          <Option value=\"id\">user_id</Option>\r\n          <Option value=\"game_nick\">昵称</Option>\r\n          <Option value=\"phone_number\">手机号</Option>\r\n          <Option value=\"role_name\">账号</Option>\r\n          <Option value=\"proxy_pid\">所属代理</Option>\r\n          <Option value=\"package_nick\">所属品牌</Option>\r\n          <Option value=\"regin_ip\">注册IP</Option>\r\n        </Select>\r\n        &nbsp; &nbsp;\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"请输入关键字搜索\"\r\n          style={{ width: 150 }}\r\n          ref={Input => (this.input = Input)}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <LinkButton\r\n          onClick={() => {\r\n            this.inputValue = this.input.input.value;\r\n            this.getUsers(1, this.state.pageSize);\r\n          }}\r\n          size=\"default\"\r\n        >\r\n          <Icon type=\"search\" />\r\n        </LinkButton>\r\n      </span>\r\n    );\r\n    const extra = (\r\n      <LinkButton\r\n        onClick={() => {\r\n          window.location.reload();\r\n        }}\r\n        size=\"default\"\r\n      >\r\n        <Icon type=\"reload\" />\r\n      </LinkButton>\r\n    );\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 2000, y: \"65vh\" }}\r\n        />\r\n        {this.state.isNickShow && (\r\n          <Modal\r\n            title=\"修改昵称\"\r\n            visible={this.state.isNickShow}\r\n            onOk={this.changeNickName}\r\n            onCancel={() => {\r\n              this.setState({ isNickShow: false });\r\n            }}\r\n          >\r\n            <WrappedNormalLoginForm\r\n              ref=\"getFormValue\"\r\n              val={this.game_nick}\r\n              isNickModal\r\n            />\r\n          </Modal>\r\n        )}\r\n        {this.state.isGoldShow && (\r\n          <Modal\r\n            title=\"修改金额\"\r\n            visible={this.state.isGoldShow}\r\n            onCancel={() => {\r\n              this.setState({ isGoldShow: false });\r\n            }}\r\n            footer={[\r\n              <Button\r\n                key=\"back\"\r\n                onClick={() => {\r\n                  this.setState({ isGoldShow: false });\r\n                }}\r\n              >\r\n                取消\r\n              </Button>,\r\n              <Button\r\n                key=\"submit\"\r\n                type=\"primary\"\r\n                loading={this.state.loading}\r\n                onClick={this.onChangeGold}\r\n              >\r\n                确定\r\n              </Button>\r\n            ]}\r\n          >\r\n            <WrappedNormalLoginForm\r\n              ref=\"getFormValue\"\r\n              goldRecord={this.goldRecord}\r\n            />\r\n          </Modal>\r\n        )}\r\n        {this.state.isGoldDetailShow && (\r\n          <Modal\r\n            title={this.isBindInfo ? \"查看绑定信息\" : \"资金明细\"}\r\n            visible={this.state.isGoldDetailShow}\r\n            onCancel={() => {\r\n              this.setState({ isGoldDetailShow: false });\r\n            }}\r\n            footer={null}\r\n            width=\"80%\"\r\n          >\r\n            <WrappedComponent\r\n              recordID={this.recordID}\r\n              isBindInfo={this.isBindInfo}\r\n            />\r\n          </Modal>\r\n        )}\r\n        {this.state.isResetPwdShow && (\r\n          <Modal\r\n            title=\"重置密码\"\r\n            visible={this.state.isResetPwdShow}\r\n            onOk={this.handleResetpwd}\r\n            onCancel={() => {\r\n              this.setState({ isResetPwdShow: false });\r\n            }}\r\n          >\r\n            <span>重置密码</span>\r\n            <Input\r\n              value={this.state.resetpwd}\r\n              onChange={e => this.setState({ resetpwd: e.target.value })}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Checkbox,\r\n  Button,\r\n  message\r\n} from \"antd\";\r\nimport { addUser, editUser } from \"../../../api\";\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBan: 1,\r\n      checkedList: [],\r\n      indeterminate: true,\r\n      checkAll: false\r\n    };\r\n  }\r\n  checkboxOnChange = checkedList => {\r\n    // console.log(checkedList);\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate:\r\n        !!checkedList.length &&\r\n        checkedList.length < this.props.packageList.length,\r\n      checkAll: checkedList.length === this.props.packageList.length\r\n    });\r\n  };\r\n  onCheckAllChange = e => {\r\n    let list = this.props.packageList.map(item => {\r\n      return item.value;\r\n    });\r\n    this.setState(\r\n      {\r\n        checkedList: e.target.checked ? list : [],\r\n        indeterminate: false,\r\n        checkAll: e.target.checked\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          packageList: this.state.checkedList\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await addUser(value)\r\n          : await editUser(value, this.props.editDataRecord.id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.isEdit && this.props.editDataRecord.group) {\r\n      let defaultValue = this.props.editDataRecord.group.split(\",\");\r\n      this.props.form.setFieldsValue({\r\n        packageList: defaultValue.map(Number)\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    const Option = this.props.optionList.map(item => (\r\n      <Select.Option value={item.id} key={item.id}>\r\n        {item.name}\r\n      </Select.Option>\r\n    ));\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        onSubmit={this.handleSubmit}\r\n        labelAlign=\"left\"\r\n      >\r\n        <Form.Item label=\"登录名\">\r\n          {getFieldDecorator(\"username\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"登录名必须输入\"\r\n              },\r\n              { min: 3, message: \"用户名至少3位\" },\r\n              { max: 10, message: \"用户名最多10位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"用户名必须是英文、数字或下划线组成\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"将会成为您唯一的登入名\"\r\n              readOnly={isEdit ? true : false}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户状态\">\r\n          {getFieldDecorator(\"userStatus\", {\r\n            initialValue: isEdit ? editDataRecord.status : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>启用</Radio>\r\n              <Radio value={0}>禁用</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户组\">\r\n          {getFieldDecorator(\"userGroup\", {\r\n            rules: [{ required: true, message: \"请选择用户组!\" }],\r\n            initialValue: isEdit && editDataRecord.group_id\r\n          })(\r\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择用户组\">\r\n              {Option}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权品牌\">\r\n          <Checkbox\r\n            indeterminate={this.state.indeterminate}\r\n            onChange={this.onCheckAllChange}\r\n            checked={this.state.checkAll}\r\n          >\r\n            全选\r\n          </Checkbox>\r\n          {getFieldDecorator(\"packageList\", {\r\n            rules: [{ required: true, message: \"请选择授权品牌!\" }]\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.props.packageList}\r\n              // value={this.state.checkedList}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权代理\">\r\n          {getFieldDecorator(\"proxy\", {\r\n            rules: [\r\n              {\r\n                whitespace: true,\r\n                message: \"多个代理请用英文逗号分隔\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.proxy : \"\"\r\n          })(\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"多个代理请用英文逗号分隔\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"携带金额\">\r\n          {getFieldDecorator(\"loadGold\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              },\r\n              {\r\n                pattern: /^\\d+(\\.\\d+)?$/,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.use_balance\r\n          })(<Input style={{ width: \"60%\" }} placeholder=\"请输入数字\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true,\r\n                message: \"密码不能为空\"\r\n              },\r\n              { min: 6, message: \"密码至少6位\" },\r\n              { max: 16, message: \"密码最多16位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"密码必须是英文、数字或下划线组成\"\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"确认密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"confirmPssword\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"密码(选填)\"\r\n          style={!isEdit ? { display: \"none\" } : {}}\r\n        >\r\n          {getFieldDecorator(\"editPassword\", {\r\n            rules: [\r\n              {\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符，重置密码时使用\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\nimport WrappedAddDataForm from \"./addData\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n  reqAdminList,\r\n  searchAdminData,\r\n  roleList,\r\n  packageList,\r\n  resetAuthCode\r\n} from \"../../../api/index\";\r\n\r\nclass Admin_manage_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"用户名\",\r\n      dataIndex: \"name\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"角色\",\r\n      dataIndex: \"role_name\"\r\n    },\r\n    {\r\n      title: \"授权品牌\",\r\n      dataIndex: \"group\"\r\n    },\r\n    {\r\n      title: \"授权代理\",\r\n      dataIndex: \"proxy\"\r\n    },\r\n    {\r\n      title: \"可使用金额\",\r\n      dataIndex: \"use_balance\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"更新时间\",\r\n      dataIndex: \"updated_at\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 1 ? \"启用\" : \"禁用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n          <LinkButton onClick={() => this.resetAuthCode(record)} type=\"default\">\r\n            AuthCode重置\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqAdminList(page, limit);\r\n    if (result.data) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await searchAdminData(this.state.inputParam);\r\n    // if (result.status === 0) {\r\n    this.setState({\r\n      data: result.data,\r\n      count: result.count\r\n    });\r\n    // }\r\n  };\r\n  addData = async () => {\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isAddDataShow: true\r\n      });\r\n    }\r\n  };\r\n  edit = async record => {\r\n    console.log(record);\r\n    this.editDataRecord = record;\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isEditDataShow: true\r\n      });\r\n    }\r\n  };\r\n  resetAuthCode = record => {\r\n    Modal.confirm({\r\n      title: \"信息\",\r\n      content: \"真的要重置么?\",\r\n      async onOk() {\r\n        const res = await resetAuthCode(record.id);\r\n        if (res.status === 0) {\r\n          message.success(res.msg);\r\n        } else {\r\n          message.success(res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入用户名\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={this.handleChange}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.addData} size=\"default\">\r\n              <Icon type=\"user-add\" />\r\n              添加账户\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n            }\r\n          }}\r\n        />\r\n        <Modal\r\n          title=\"添加用户\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            optionList={this.optionList}\r\n            packageList={this.packageList}\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={() => this.getUsers(1, 20)}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit=\"true\"\r\n              optionList={this.optionList}\r\n              packageList={this.packageList}\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin_manage_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Tree } from \"antd\";\r\nimport { addRole, editRole } from \"../../../api\";\r\n\r\nconst { TreeNode } = Tree;\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandedKeys: [],\r\n      selectedKeys: [],\r\n      checkedKeys: this.props.isEdit\r\n        ? this.props.editDataRecord.rules.split(\",\")\r\n        : [],\r\n      defaultCheckedKeys: []\r\n    };\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n    const treeData = this.getTreeNodes(menuList);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        onSubmit={this.handleSubmit}\r\n        labelAlign=\"left\"\r\n      >\r\n        <Form.Item label=\"角色名\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"角色名必须输入\"\r\n              },\r\n              { min: 3, message: \"用户名至少3位\" }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"分配权限\">\r\n          <br />\r\n          <Tree\r\n            checkable\r\n            defaultCheckedKeys={isEdit ? editDataRecord.rules.split(\",\") : []}\r\n            expandedKeys={this.state.expandedKeys}\r\n            selectedKeys={this.state.selectedKeys}\r\n            onSelect={this.onSelect}\r\n            onCheck={this.onCheck}\r\n            onExpand={this.onExpand}\r\n          >\r\n            {treeData}\r\n          </Tree>\r\n        </Form.Item>\r\n        <Form.Item label=\"描述\">\r\n          {getFieldDecorator(\"desc\", {\r\n            rules: [{ max: 400, message: \"最多400字\" }],\r\n            initialValue: isEdit ? editDataRecord.description : \"\"\r\n          })(\r\n            <Input.TextArea\r\n              placeholder=\"请输入文字\"\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  getTreeNodes = menuList => {\r\n    return menuList.map(item => {\r\n      if (!item.children) {\r\n        return <TreeNode key={item.id} title={item.title.replace(/&nbsp;/g, \"\")} />;\r\n      } else {\r\n        return (\r\n          <TreeNode key={item.id} title={item.title.replace(/&nbsp;/g, \"\")}>\r\n            {this.getTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n    });\r\n  };\r\n  onSelect = (selectedKeys, info) => {\r\n    const { node } = info;\r\n    const { expandedKeys } = this.state;\r\n    if (node.props.isLeaf) {\r\n      this.setState({ selectedKeys });\r\n    } else {\r\n      this.setState({\r\n        expandedKeys: node.props.expanded\r\n          ? expandedKeys.filter(k => k !== node.props.eventKey)\r\n          : expandedKeys.concat(node.props.eventKey)\r\n      });\r\n    }\r\n  };\r\n  onCheck = (checkedKeys, info) => {\r\n    // console.log(\"onCheck\", checkedKeys, info);\r\n    this.setState({\r\n      checkedKeys: checkedKeys.map(Number)\r\n    });\r\n  };\r\n  onExpand = (expandedKeys, info) => {\r\n    this.setState({ expandedKeys });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        let { name, desc } = value;\r\n        let rules = this.state.checkedKeys;\r\n        let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n        const res = !this.props.isEdit\r\n          ? await addRole(name, rules, desc)\r\n          : await editRole(name, rules, desc, id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n          this.setState({\r\n            checkedKeys: []\r\n          });\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport WrappedAddDataForm from \"./addData\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getRoleList, getRuleList } from \"../../../api/index\";\r\n\r\nclass Role extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"角色名\",\r\n      dataIndex: \"name\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"描述\",\r\n      dataIndex: \"description\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 1 ? \"已启用\" : \"禁用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  getUsers = async (page, limit) => {\r\n    const result = await getRoleList(page, limit);\r\n    if (result.data) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n  };\r\n  addData = async () => {\r\n    //getRuleList的请求/acl/ruleList返回的不是树状结构的数据，所以使用缓存在本地navlist返回的menulist\r\n    // const res = await getRuleList();\r\n    // if (res.status === 0) {\r\n    //   this.ruleList = res.data;\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n    // }\r\n  };\r\n  edit = async record => {\r\n    // console.log(record);\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <LinkButton onClick={this.addData} size=\"default\">\r\n              <Icon type=\"user-add\" />\r\n              添加账户\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n            }\r\n          }}\r\n          // scroll={{ x: 1500, y: 550 }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={() => this.getUsers(1, 20)}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit=\"true\"\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Role;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Input, Icon, Button, message } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport { reqLostOrder_list, orderReview } from \"../../../api/index\";\r\n\r\nclass Diaodan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      user_id: \"\",\r\n      order_id: \"\"\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"user_id\"\r\n          style={{ width: 150 }}\r\n          value={this.state.user_id}\r\n          onChange={e => this.setState({ user_id: e.target.value })}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"订单Id\"\r\n          style={{ width: 300 }}\r\n          value={this.state.order_id}\r\n          onChange={e => this.setState({ order_id: e.target.value })}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <Button onClick={this.handleClick}>\r\n          <Icon type=\"search\" />\r\n        </Button>\r\n        <br></br>\r\n        <br></br>\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    return [\r\n      {\r\n        title: \"订单Id\",\r\n        dataIndex: \"order_id\"\r\n      },\r\n      {\r\n        title: \"user_id\",\r\n        dataIndex: \"user_id\"\r\n      },\r\n      {\r\n        title: \"金额\",\r\n        dataIndex: \"amount\"\r\n      },\r\n      {\r\n        title: \"下单时间\",\r\n        dataIndex: \"created_at\",\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        dataIndex: \"status\",\r\n        render: (text, record, index) => {\r\n          if (text !== \"6\" && text !== \"7\" && text !== \"9\") {\r\n            return (\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => this.handleRecieveSubmit(record)}\r\n              >\r\n                手动到账提交\r\n              </Button>\r\n            );\r\n          } else {\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    ];\r\n  };\r\n  handleClick = async () => {\r\n    const res = await reqLostOrder_list(\r\n      1,\r\n      50,\r\n      this.state.user_id,\r\n      this.state.order_id\r\n    );\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data\r\n      });\r\n    } else {\r\n      message.error(\"未检索到数据\");\r\n    }\r\n  };\r\n  handleRecieveSubmit = async record => {\r\n    let { user_id, order_id } = record;\r\n    const res = await orderReview(user_id, order_id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n    this.handleClick();\r\n  };\r\n}\r\n\r\nexport default Diaodan;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, message, Icon, Input, Select, Modal, Button } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport {\r\n  reqOrder_list,\r\n  downloadList,\r\n  orderReviewEdit\r\n} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport Diaodan from \"./editData\";\r\n\r\nclass Order_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.reqData = {\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: \"\"\r\n    };\r\n    this.inputKey = \"\";\r\n    this.inputValue = \"\";\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isQueryShow: false,\r\n      isEditShow: false\r\n    };\r\n  }\r\n  getUsers = async (page, limit, reqData) => {\r\n    const result = await reqOrder_list(page, limit, reqData);\r\n    if (result.data) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n    if (result.status === -1) {\r\n      this.setState({\r\n        data: [],\r\n        count: 0\r\n      });\r\n    }\r\n  };\r\n  PlayerLossOrderSearch = async () => {\r\n    this.setState({ isQueryShow: true });\r\n  };\r\n  onSearchData = (page, limit) => {\r\n    //处理要发送的数据\r\n    let reqData = {\r\n      ...this.reqData\r\n    };\r\n    if (this.inputKey === \"1\" || this.inputKey === \"2\") {\r\n      reqData.time_type = this.inputKey;\r\n    } else if (this.inputKey) {\r\n      reqData[this.inputKey] = this.inputValue;\r\n    }\r\n    this.getUsers(page, limit, reqData);\r\n  };\r\n  download = () => {\r\n    let data = {\r\n      ...this.reqData,\r\n      inputParam: this.inputValue,\r\n      paramKey: this.inputKey\r\n    };\r\n    downloadList(data);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.inputKey = value)}\r\n              >\r\n                <Select.Option value=\"order_id\">订单id</Select.Option>\r\n                <Select.Option value=\"user_id\">user_id</Select.Option>\r\n                <Select.Option value=\"package_nick\">所属品牌</Select.Option>\r\n                <Select.Option value=\"1\">创建时间</Select.Option>\r\n                <Select.Option value=\"2\">到账时间</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"请输入关键字\"\r\n                style={{ width: 150 }}\r\n                onChange={e => (this.inputValue = e.target.value)}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <MyDatePicker\r\n                handleValue={val => {\r\n                  this.reqData.start_time = val[0];\r\n                  this.reqData.end_time = val[1];\r\n                }}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 200 }}\r\n                onSelect={value => (this.reqData.order_status = value)}\r\n              >\r\n                <Select.Option value=\"\">订单状态</Select.Option>\r\n                <Select.Option value=\"0\">全部</Select.Option>\r\n                <Select.Option value=\"1\">未支付</Select.Option>\r\n                <Select.Option value=\"4\">已撤销</Select.Option>\r\n                <Select.Option value=\"5\">已支付</Select.Option>\r\n                <Select.Option value=\"6\">已完成</Select.Option>\r\n                <Select.Option value=\"7\">补单初审通过</Select.Option>\r\n                <Select.Option value=\"8\">补单初审拒绝</Select.Option>\r\n                <Select.Option value=\"9\">补单复审通过</Select.Option>\r\n                <Select.Option value=\"10\">补单复审拒绝</Select.Option>\r\n                <Select.Option value=\"11\">充值失败</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.reqData.type = value)}\r\n              >\r\n                <Select.Option value=\"\">订单类型</Select.Option>\r\n                <Select.Option value=\"0\">全部</Select.Option>\r\n                <Select.Option value=\"1\">alipay</Select.Option>\r\n                <Select.Option value=\"2\">银行卡转账</Select.Option>\r\n                <Select.Option value=\"3\">人工代充</Select.Option>\r\n                <Select.Option value=\"4\">人工代提</Select.Option>\r\n                <Select.Option value=\"6\">微信支付</Select.Option>\r\n                <Select.Option value=\"7\">银联支付</Select.Option>\r\n                <Select.Option value=\"8\">网银支付</Select.Option>\r\n                <Select.Option value=\"9\">快捷支付</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <LinkButton\r\n                onClick={() => this.onSearchData(1, 20)}\r\n                size=\"default\"\r\n              >\r\n                <Icon type=\"search\" />\r\n              </LinkButton>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n            <div style={{ marginTop: 10 }}>\r\n              <LinkButton onClick={this.PlayerLossOrderSearch} size=\"default\">\r\n                <Icon type=\"search\" />\r\n                玩家掉单查询\r\n              </LinkButton>\r\n            </div>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <LinkButton\r\n              size=\"default\"\r\n              style={{ float: \"right\" }}\r\n              onClick={this.download}\r\n              icon=\"download\"\r\n            ></LinkButton>\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.onSearchData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.onSearchData(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 2000 }}\r\n        />\r\n        <Modal\r\n          title=\"玩家调单查询\"\r\n          visible={this.state.isQueryShow}\r\n          onCancel={() => {\r\n            this.setState({ isQueryShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <Diaodan />\r\n        </Modal>\r\n        <Modal\r\n          title=\"编辑\"\r\n          visible={this.state.isEditShow}\r\n          onCancel={() => {\r\n            this.setState({ isEditShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"50%\"\r\n        >\r\n          <div>\r\n            <div>用户ID：{this.state.editUser_id}</div>\r\n            <br />\r\n            <div>金额：{this.state.editMount}</div>\r\n            <br />\r\n            <div>\r\n              手动到账复审：\r\n              <Button type=\"primary\" onClick={() => this.orderReview(1)}>\r\n                通过\r\n              </Button>\r\n              <Button type=\"primary\" onClick={() => this.orderReview(0)}>\r\n                拒绝\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 320\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\"\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\"\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\"\r\n    },\r\n    {\r\n      title: \"支付渠道\",\r\n      dataIndex: \"channel_type\",\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"0\":\r\n            word = record.replace_id;\r\n            break;\r\n          case \"5\":\r\n            word = \"充提UC\";\r\n            break;\r\n          case \"12\":\r\n            word = \"onePay\";\r\n            break;\r\n          case \"11\":\r\n            word = \"古都\";\r\n            break;\r\n          case \"10\":\r\n          case \"13\":\r\n          case \"14\":\r\n          case \"15\":\r\n          case \"16\":\r\n            word = \"聚鑫\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"支付类型\",\r\n      dataIndex: \"type\",\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"alipay\";\r\n            break;\r\n          case \"2\":\r\n            word = \"银行卡转账\";\r\n            break;\r\n          case \"3\":\r\n            word = \"人工代充\";\r\n            break;\r\n          case \"4\":\r\n            word = \"人工代提\";\r\n            break;\r\n          case \"5\":\r\n            word = \"被赠送\";\r\n            break;\r\n          case \"6\":\r\n            word = \"微信支付\";\r\n            break;\r\n          case \"7\":\r\n            word = \"银联支付\";\r\n            break;\r\n          case \"8\":\r\n            word = \"网银支付\";\r\n            break;\r\n          case \"9\":\r\n            word = \"快捷支付\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      sorter: (a, b) => a.amount - b.amount,\r\n      render: text => {\r\n        text = parseInt(text).toFixed(2);\r\n        return <span>{text}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount,\r\n      render: text => {\r\n        text = parseInt(text).toFixed(2);\r\n        return <span>{text}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"订单状态\",\r\n      dataIndex: \"status\",\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"未支付\";\r\n            break;\r\n          case \"2\":\r\n            word = \"已过期\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已分配\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已撤销\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已支付\";\r\n            break;\r\n          case \"6\":\r\n            word = \"已完成\";\r\n            break;\r\n          case \"7\":\r\n            word = \"补单初审通过\";\r\n            break;\r\n          case \"8\":\r\n            word = \"初审拒绝\";\r\n            break;\r\n          case \"9\":\r\n            word = \"补单复审通过\";\r\n            break;\r\n          case \"10\":\r\n            word = \"复审拒绝\";\r\n            break;\r\n          case \"11\":\r\n            word = \"充值失败\";\r\n            break;\r\n          case \"12\":\r\n            word = \"客服拒绝\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: formateDate,\r\n      width: 200,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 200,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => {\r\n        if (record.status === \"7\") {\r\n          return (\r\n            <LinkButton size=\"small\" onClick={() => this.edit(record)}>\r\n              编辑\r\n            </LinkButton>\r\n          );\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: \"备注\",\r\n      dataIndex: \"remark\"\r\n    }\r\n  ];\r\n  edit = record => {\r\n    this.setState({\r\n      isEditShow: true,\r\n      editUser_id: record.user_id,\r\n      editMount: record.amount\r\n    });\r\n    this.user_id = record.user_id;\r\n    this.order_id = record.order_id;\r\n    this.editType = record.type;\r\n  };\r\n  orderReview = async action => {\r\n    let reqData = {\r\n      user_id: this.user_id,\r\n      order_id: this.order_id,\r\n      type: this.editType,\r\n      status: action === 1 ? 9 : 8,\r\n      review_type: 2\r\n    };\r\n    const res = await orderReviewEdit(reqData);\r\n    if (res.status === 0) {\r\n      message.success(res.msg || \"操作成功\");\r\n      window.location.reload();\r\n    } else {\r\n      message.error(res.msg || \"操作失败\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default Order_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\r\nimport { addChannel, editPayChannel } from \"../../../api\";\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 7 }}\r\n        wrapperCol={{ span: 17 }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form.Item label=\"支付名称\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"所属渠道ID\">\r\n          {getFieldDecorator(\"channel_id\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.channel_id : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付名称\">\r\n          {getFieldDecorator(\"nick_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>开启</Radio>\r\n              <Radio value={0}>关闭</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付方式\">\r\n          {getFieldDecorator(\"pay_type\", {\r\n            rules: [{ required: true, message: \"请选择支付方式!\" }],\r\n            initialValue: isEdit && editDataRecord.pay_type\r\n          })(\r\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择支付方式\">\r\n              <Select.Option value=\"7\">支付宝H5</Select.Option>\r\n              <Select.Option value=\"8\">支付宝扫码</Select.Option>\r\n              <Select.Option value=\"2\">快捷支付</Select.Option>\r\n              <Select.Option value=\"4\">微信H5</Select.Option>\r\n              <Select.Option value=\"5\">微信扫码</Select.Option>\r\n              <Select.Option value=\"1\">网银支付</Select.Option>\r\n              <Select.Option value=\"13\">银联扫码</Select.Option>\r\n              <Select.Option value=\"17\">转账银行卡</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付限额最小面值\">\r\n          {getFieldDecorator(\"min_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.min_amount : \"\"\r\n          })(<Input style={{ width: \"30%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付限额最大面值\">\r\n          {getFieldDecorator(\"max_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.max_amount : \"\"\r\n          })(<Input style={{ width: \"30%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"固定面值\">\r\n          {getFieldDecorator(\"span_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.span_amount\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"单笔间隔\">\r\n          {getFieldDecorator(\"seed\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.seed\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"玩家承担费率%\">\r\n          {getFieldDecorator(\"rate\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.rate\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"显示排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            initialValue: isEdit ? editDataRecord.sort : \"0\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await addChannel(value)\r\n          : await editPayChannel(value,id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getChannelList, getRuleList } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Channel_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getChannelList(page, limit);\r\n    if (result.data) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n  };\r\n  onSearchData = async () => {\r\n    const res = await getChannelList(1, 20, this.state.inputParam);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(res.msg || \"操作失败\");\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入支付名称\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={e => this.setState({ inputParam: e.target.value })}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData}>\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()}>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1900, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"支付名称\",\r\n      dataIndex: \"name\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"渠道昵称\",\r\n      dataIndex: \"nick_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"单笔-最小限额\",\r\n      dataIndex: \"min_amount\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"单笔-最大限额\",\r\n      dataIndex: \"max_amount\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"单笔间隔\",\r\n      dataIndex: \"seed\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"玩家承担的费率%\",\r\n      dataIndex: \"rate\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"固定面值\",\r\n      dataIndex: \"span_amount\",\r\n      width: 250\r\n    },\r\n    {\r\n      title: \"支付方式\",\r\n      dataIndex: \"pay_type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"7\":\r\n            word = \"支付宝H5\";\r\n            break;\r\n          case \"8\":\r\n            word = \"支付宝扫码\";\r\n            break;\r\n          case \"2\":\r\n            word = \"快捷支付\";\r\n            break;\r\n          case \"4\":\r\n            word = \"微信H5\";\r\n            break;\r\n          case \"5\":\r\n            word = \"微信扫码\";\r\n            break;\r\n          case \"1\":\r\n            word = \"网银支付\";\r\n            break;\r\n          case \"13\":\r\n            word = \"银联扫码\";\r\n            break;\r\n          case \"17\":\r\n            word = \"转账银行卡\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 80,\r\n      render: (text, record, index) => {\r\n        return <span>{text === \"1\" ? \"开启\" : \"关闭\"}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"显示顺序\",\r\n      width: 100,\r\n      dataIndex: \"sort\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Channel_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\r\nimport { saveBankCard } from \"../../../api\";\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 7 }}\r\n        wrapperCol={{ span: 17 }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form.Item label=\"开户人\">\r\n          {getFieldDecorator(\"card_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.card_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"银行名称\">\r\n          {getFieldDecorator(\"bank_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.bank_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"卡号\">\r\n          {getFieldDecorator(\"card_num\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              },\r\n              {\r\n                min: 15,\r\n                max: 20,\r\n                message: \"请输入15-20位正确卡号\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.card_num : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"用途\">\r\n          {getFieldDecorator(\"type\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>收款卡</Radio>\r\n              <Radio value={2}>出款卡</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 2\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>空闲</Radio>\r\n              <Radio value={2}>使用中</Radio>\r\n              <Radio value={3}>停用</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付密码\">\r\n          {getFieldDecorator(\"pay_password\", {})(\r\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"查询密码\">\r\n          {getFieldDecorator(\"query_password\", {})(\r\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"U盾密码\">\r\n          {getFieldDecorator(\"u_code\", {})(\r\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ offset: 18 }}>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await saveBankCard(value)\r\n          : await saveBankCard(value, id);\r\n        if (res.status === 0) {\r\n          message.success(res.msg || \"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input, Popconfirm } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { bankList, deleteBankCard } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass Bankcard_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await bankList(page, limit);\r\n    if (result.data) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    // console.log(record);\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  delete = async record => {\r\n    const result = await deleteBankCard(record.id);\r\n    if (result.status === 0) {\r\n      message.success(result.msg);\r\n      this.refreshPage(1, 20);\r\n    } else {\r\n      message.error(\"网络问题:\" + result.msg);\r\n    }\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <LinkButton onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()}>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1000, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"添加\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      width: 50\r\n    },\r\n    {\r\n      title: \"卡使用类型\",\r\n      dataIndex: \"type\",\r\n      width: 100,\r\n      render: (text, record, index) => (\r\n        <span>{text === \"1\" ? \"收款卡\" : \"出款卡\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"银行卡号\",\r\n      dataIndex: \"card_num\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"开户人姓名\",\r\n      dataIndex: \"card_name\",\r\n      width: 100,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"银行名称\",\r\n      dataIndex: \"bank_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => (\r\n        <span>{text === \"1\" ? \"空闲\" : text === \"2\" ? \"使用中\" : \"停用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 150,\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n          <Popconfirm\r\n            title=\"确定要删除吗\"\r\n            onConfirm={() => this.delete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <LinkButton type=\"danger\">删除</LinkButton>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Bankcard_list;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  Popconfirm,\r\n  message\r\n} from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport \"moment/locale/zh-cn\";\r\nimport { rechargeOrder, downloadList, cancelOrder } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\n\r\nclass Recharge_order extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      type: \"14\",\r\n      paramKey: \"\",\r\n      inputParam: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\"\r\n    };\r\n    this.inputKey = \"\";\r\n    this.inputValue = \"\";\r\n    this.order_status = \"\";\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await rechargeOrder(\r\n      page,\r\n      limit,\r\n      this.state.start_time,\r\n      this.state.end_time,\r\n      this.order_status,\r\n      this.inputKey,\r\n      this.inputValue\r\n    );\r\n    if (result.data) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n    if (result.status === -1) {\r\n      this.setState({\r\n        data: [],\r\n        count: 0\r\n      });\r\n    }\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  download = () => {\r\n    let data = {\r\n      start_time: this.state.start_time,\r\n      end_time: this.state.end_time,\r\n      order_status: this.order_status,\r\n      type: \"14\",\r\n      inputParam: this.inputValue,\r\n      paramKey: this.inputKey\r\n    };\r\n    downloadList(data);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <MyDatePicker\r\n                handleValue={val => {\r\n                  this.setState({\r\n                    start_time: val[0],\r\n                    end_time: val[1]\r\n                  });\r\n                }}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.inputKey = value)}\r\n              >\r\n                <Select.Option value=\"order_id\">订单id</Select.Option>\r\n                <Select.Option value=\"user_id\">user_id</Select.Option>\r\n                <Select.Option value=\"package_nick\">所属品牌</Select.Option>\r\n                <Select.Option value=\"proxy_pid\">所属代理</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"请输入关键字\"\r\n                style={{ width: 150 }}\r\n                ref={Input => (this.input = Input)}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 100 }}\r\n                onSelect={value => (this.order_status = value)}\r\n              >\r\n                <Select.Option value=\"\">状态</Select.Option>\r\n                <Select.Option value=\"1\">未支付</Select.Option>\r\n                <Select.Option value=\"4\">已撤销</Select.Option>\r\n                <Select.Option value=\"5\">已支付</Select.Option>\r\n                <Select.Option value=\"6\">已完成</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <LinkButton\r\n                onClick={() => {\r\n                  this.inputValue = this.input.input.value;\r\n                  this.getUsers(1, this.state.pageSize);\r\n                }}\r\n                size=\"default\"\r\n              >\r\n                <Icon type=\"search\" />\r\n              </LinkButton>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <LinkButton\r\n              size=\"default\"\r\n              style={{ float: \"right\" }}\r\n              onClick={this.download}\r\n              icon=\"download\"\r\n            ></LinkButton>\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1850, y: \"60vh\" }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 320\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"代充ID\",\r\n      dataIndex: \"replace_id\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"代充昵称\",\r\n      dataIndex: \"replace_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 150,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 150,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 150,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"未支付\";\r\n            break;\r\n          case \"2\":\r\n            word = \"已过期\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已分配\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已撤销\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已支付\";\r\n            break;\r\n          case \"6\":\r\n            word = \"已完成\";\r\n            break;\r\n          case \"7\":\r\n            word = \"补单初审通过\";\r\n            break;\r\n          case \"8\":\r\n            word = \"初审拒绝\";\r\n            break;\r\n          case \"9\":\r\n            word = \"补单复审通过\";\r\n            break;\r\n          case \"10\":\r\n            word = \"复审拒绝\";\r\n            break;\r\n          case \"11\":\r\n            word = \"充值失败\";\r\n            break;\r\n          case \"12\":\r\n            word = \"客服拒绝\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 200,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => {\r\n        if (record.status == 1 || record.status == 5) {\r\n          return (\r\n            <Popconfirm\r\n              title=\"确定要删除吗?\"\r\n              onConfirm={() => this.handleWithdraw(record)}\r\n              okText=\"确定\"\r\n              cancelText=\"取消\"\r\n            >\r\n              <LinkButton>协助玩家撤销</LinkButton>\r\n            </Popconfirm>\r\n          );\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  ];\r\n  handleWithdraw = async record => {\r\n    let reqData = {\r\n      order_id: record.order_id,\r\n      user_id: record.user_id,\r\n      form_type: 2\r\n    };\r\n    const res = await cancelOrder(reqData);\r\n    if (res.status === 0) {\r\n      message.info(res.msg || \"操作成功\");\r\n      window.location.reload();\r\n    } else {\r\n      message.error(res.msg || \"操作失败\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default Recharge_order;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Input, Button } from \"antd\";\r\nimport {\r\n  getChannel,\r\n  getChannelInfo,\r\n  editChannelInfo\r\n} from \"../../../api/index\";\r\n\r\nclass Recharge_channel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      childData: [],\r\n      expandedRowKeys: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isEditDataShow: false,\r\n      recordId: \"\"\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getChannel(page, limit);\r\n    if (result.data) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"middle\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          expandedRowRender={this.expandedRowRender}\r\n          expandRowByClick\r\n          onExpand={this.onExpandRow}\r\n          expandedRowKeys={this.state.expandedRowKeys}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n        />\r\n        <Modal\r\n          title=\"修改\"\r\n          visible={this.state.isEditDataShow}\r\n          onOk={this.handleEditData}\r\n          onCancel={() => {\r\n            this.setState({ isEditDataShow: false });\r\n          }}\r\n        >\r\n          <span>pay_code:</span>\r\n          <Input\r\n            type=\"text\"\r\n            value={this.state.inputParam}\r\n            onChange={event =>\r\n              this.setState({ inputParam: event.target.value })\r\n            }\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"渠道名\",\r\n      dataIndex: \"name\"\r\n    },\r\n    {\r\n      title: \"商户号\",\r\n      dataIndex: \"member_id\"\r\n    }\r\n  ];\r\n  expandedRowRender = (record, index, indent, expanded) => {\r\n    const columns = [\r\n      {\r\n        title: \"支付方式名称\",\r\n        dataIndex: \"pay_name\",\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"所属支付渠道\",\r\n        dataIndex: \"channel_name\",\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"pay_code\",\r\n        dataIndex: \"pay_code\",\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        dataIndex: \"action\",\r\n        render: (text, record, index) => (\r\n          <Button onClick={() => this.edit(record)}>修改pay_code</Button>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <Table\r\n        columns={columns}\r\n        dataSource={this.state.childData}\r\n        pagination={false}\r\n      />\r\n    );\r\n  };\r\n  onExpandRow = async (expanded, record) => {\r\n    let keys = [];\r\n    if (expanded) {\r\n      keys.push(record.id);\r\n      this.setState({\r\n        expandedRowKeys: keys,\r\n        childData: []\r\n      });\r\n      const result = await getChannelInfo(record.id);\r\n      if (result.status === 0) {\r\n        result.data.forEach((element, index) => {\r\n          element.key = index;\r\n        });\r\n        this.setState({\r\n          childData: result.data\r\n        });\r\n      } else {\r\n        message.error(result.msg || \"未检索到数据\");\r\n        this.setState({\r\n          childData: []\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        expandedRowKeys: []\r\n      });\r\n    }\r\n  };\r\n  edit = record => {\r\n    console.log(record.pay_code);\r\n    this.setState({\r\n      recordId: record.id,\r\n      inputParam: record.pay_code,\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  handleEditData = async () => {\r\n    const result = await editChannelInfo(\r\n      this.state.recordId,\r\n      this.state.inputParam\r\n    );\r\n    if (result.status === 0) {\r\n      message.success(result.msg);\r\n      this.setState({\r\n        isEditDataShow: false,\r\n        expandedRowKeys: []\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n}\r\nexport default Recharge_channel;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Checkbox,\r\n  DatePicker,\r\n  message\r\n} from \"antd\";\r\nimport { packageList, addNotice, updateNotice } from \"../../../api\";\r\nimport moment from \"moment\";\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      checkedList: this.props.isEdit\r\n        ? this.props.editDataRecord.package_ids\r\n        : []\r\n    };\r\n  }\r\n  getPackageList = async () => {\r\n    let res = await packageList();\r\n    if (res.status === 0) {\r\n      let arr = [];\r\n      res.data.forEach(element => {\r\n        arr.push({ label: element.name, value: element.id });\r\n      });\r\n      this.setState({\r\n        options: arr\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getPackageList();\r\n  }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  // componentWillUnmount() {\r\n  //   this.setState = (state, callback) => {\r\n  //     return;\r\n  //   };\r\n  // }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"开关\">\r\n          {getFieldDecorator(\"is_open\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.is_open) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>开启</Radio>\r\n              <Radio value={0}>关闭</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"标题\">\r\n          {getFieldDecorator(\"title\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.title : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"品牌\">\r\n          {getFieldDecorator(\"packageList\", {\r\n            rules: [{ required: true, message: \"请选择品牌!\" }],\r\n            initialValue: isEdit && editDataRecord.package_ids\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.state.options}\r\n              // defaultValue={editDataRecord.package_ids}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"公告类型\">\r\n          {getFieldDecorator(\"type\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>活动</Radio>\r\n              <Radio value={2}>公告</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"是否跑马灯\">\r\n          {getFieldDecorator(\"is_slider\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.is_slider) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>是</Radio>\r\n              <Radio value={2}>否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            rules: [{ required: true }],\r\n            initialValue: isEdit && editDataRecord.sort\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"内容\">\r\n          {getFieldDecorator(\"words\", {\r\n            rules: [{ required: true }],\r\n            initialValue: isEdit ? editDataRecord.words : \"\"\r\n          })(\r\n            <Input.TextArea\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"开始日期\">\r\n          {getFieldDecorator(\"start_time\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit && moment(editDataRecord.start_time * 1000)\r\n          })(<DatePicker showTime format={\"YYYY-MM-DD HH:mm:ss\"} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"截止日期\">\r\n          {getFieldDecorator(\"end_time\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit && moment(editDataRecord.end_time * 1000)\r\n          })(<DatePicker showTime format={\"YYYY-MM-DD HH:mm:ss\"} />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      console.log(value);\r\n      let id = this.props.editDataRecord\r\n        ? this.props.editDataRecord._id.$oid\r\n        : \"\";\r\n      if (!err) {\r\n        value.packageList.forEach(item => {\r\n          let str = \"group[\" + item + \"]\";\r\n          value[str] = item;\r\n        });\r\n        value.start_time = value.start_time.format(\"YYYY-MM-DD HH:mm:ss\");\r\n        value.end_time = value.end_time.format(\"YYYY-MM-DD HH:mm:ss\");\r\n        delete value.packageList;\r\n        const res = !this.props.isEdit\r\n          ? await addNotice(value)\r\n          : await updateNotice(value, id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  checkboxOnChange = checkedList => {\r\n    this.setState({\r\n      checkedList: checkedList\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Button,\r\n  Popover,\r\n  Popconfirm\r\n} from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getList, delNotice } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Notice_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getList(page, limit);\r\n    if (result.data) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  onDelete = async record => {\r\n    let res = await delNotice(record._id.$oid);\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.refreshPage();\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <LinkButton onClick={this.addData} size=\"default\">\r\n              添加\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={record => record._id.$oid}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1500 }}\r\n        />\r\n        <Modal\r\n          title=\"新增公告\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"标题\",\r\n      dataIndex: \"title\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"品牌\",\r\n      dataIndex: \"package_ids\",\r\n      render: (text, record) => <span>{text.join(\",\")}</span>\r\n    },\r\n    {\r\n      title: \"代理\",\r\n      dataIndex: \"proxy_user_id\"\r\n    },\r\n    {\r\n      title: \"公告类型\",\r\n      dataIndex: \"type\",\r\n      render: (text, record) => (\r\n        <span>{text === \"1\" || text === 1 ? \"活动\" : \"公告\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"是否跑马灯\",\r\n      dataIndex: \"is_slider\",\r\n      render: (text, record) => <span>{text == 1 ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"公告内容\",\r\n      dataIndex: \"words\",\r\n      width: 200,\r\n      render: (text, record) => (\r\n        <Popover content={text} trigger=\"click\" overlayStyle={{ width: \"30%\" }}>\r\n          <div\r\n            style={{\r\n              width: \"170px\",\r\n              textOverflow: \"ellipsis\",\r\n              whiteSpace: \"nowrap\",\r\n              overflow: \"hidden\"\r\n            }}\r\n          >\r\n            {text}\r\n          </div>\r\n        </Popover>\r\n      ),\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {}, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n    {\r\n      title: \"开始时间\",\r\n      dataIndex: \"start_time\",\r\n      render: formateDate,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"截止时间\",\r\n      dataIndex: \"end_time\",\r\n      render: formateDate,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"create_time\",\r\n      render: formateDate,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 150,\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\r\n            编辑\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.onDelete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button type=\"danger\" size=\"small\">\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Notice_list;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Checkbox,\r\n  DatePicker,\r\n  message\r\n} from \"antd\";\r\nimport { packageList, saveCustomerService} from \"../../../api\";\r\nimport moment from \"moment\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      checkedList: this.props.isEdit\r\n        ? this.props.editDataRecord.package_ids.split(\",\").map(Number)\r\n        : []\r\n    };\r\n  }\r\n  getPackageList = async () => {\r\n    let res = await packageList();\r\n    if (res.status === 0) {\r\n      let arr = [];\r\n      res.data.forEach(element => {\r\n        arr.push({ label: element.name, value: element.id });\r\n      });\r\n      this.setState({\r\n        options: arr\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getPackageList();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"账号\">\r\n          {getFieldDecorator(\"user_id\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.user_id) : ''\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"昵称\">\r\n          {getFieldDecorator(\"nick_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权品牌\">\r\n          {getFieldDecorator(\"package_ids\", {\r\n            rules: [{ required: true, message: \"请选择品牌!\" }],\r\n            initialValue:\r\n              isEdit && editDataRecord.package_ids.split(\",\").map(Number)\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.state.options}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"账号类型\">\r\n          {getFieldDecorator(\"user_type\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.user_type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>人工充值</Radio>\r\n              <Radio value={2}>人工兑换</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"是否显示\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>是</Radio>\r\n              <Radio value={0}>否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"显示排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            rules: [{ required: true }],\r\n            initialValue: isEdit && editDataRecord.sort\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord\r\n        ? this.props.editDataRecord.user_id\r\n        : \"\";\r\n      if (!err) {\r\n        value.package_ids.forEach(item => {\r\n          let str = \"group[\" + item + \"]\";\r\n          value[str] = item;\r\n        });\r\n        delete value.package_ids;\r\n        const res = !this.props.isEdit\r\n          ? await saveCustomerService(value, \"add\")\r\n          : await saveCustomerService(value, \"edit\", id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  checkboxOnChange = checkedList => {\r\n    this.setState({\r\n      checkedList: checkedList\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Button\r\n} from \"antd\";\r\nimport { customerList, saveCustomerService } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport LinkButton from \"../../../components/link-button\";\r\n\r\nclass Customer_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await customerList(page, limit);\r\n    if (result.data) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n  };\r\n  onSearchData = async () => {\r\n    const res = await customerList(1, 20, this.input.input.value);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  onDelete = async record => {\r\n    let user_id = record.user_id;\r\n    let res = await saveCustomerService({ user_id }, \"del\");\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.refreshPage();\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n    this.input.handleReset();\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入代充账号\"\r\n              style={{ width: 150 }}\r\n              ref={input => (this.input = input)}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.onSearchData} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={this.addData} size=\"default\">\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"user_id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1300, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"新增\"\r\n          visible={this.state.isAddDataShow}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"user_id\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"nick_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"品牌ID\",\r\n      dataIndex: \"package_ids\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"是否显示\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record) => (text === 1 ? \"是\" : \"否\")\r\n    },\r\n    {\r\n      title: \"账号类型\",\r\n      dataIndex: \"user_type\",\r\n      width: 100,\r\n      render: text => (parseInt(text) === 1 ? \"人工充值\" : \"人工兑换\")\r\n    },\r\n    {\r\n      title: \"排序\",\r\n      dataIndex: \"sort\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"create_time\",\r\n      width: 200,\r\n      render: (text, record) => (\r\n        <span>{formateDate(record.create_time / 1000)}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"update_time\",\r\n      width: 200,\r\n      render: (text, record) => (\r\n        <span>{formateDate(record.update_time / 1000)}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\r\n            编辑\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.onDelete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button type=\"danger\" size=\"small\">\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Customer_list;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data } = this.props.detailRecord;\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey={(record,index)=>`${index}`}\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"check\") {\r\n      return [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    } else if (this.props.action === \"risk\") {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React from \"react\";\r\nimport { Form, Input, Radio, message } from \"antd\";\r\nimport { orderWithDrawReview, withDrawRemark } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\n\r\nclass EditForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const data = this.props.editData;\r\n    let review_status = parseInt(data.review_status);\r\n    let status = parseInt(data.status);\r\n    let orderStatusShow,\r\n      reviewShow,\r\n      confirmButtonShow,\r\n      submitRadio,\r\n      successRadio,\r\n      failRadio,\r\n      submitRadioChecked,\r\n      successRadioChecked,\r\n      failRadioChecked;\r\n    switch (status) {\r\n      case 1:\r\n        orderStatusShow = true;\r\n        confirmButtonShow = true;\r\n        break;\r\n      case 2:\r\n        orderStatusShow = true;\r\n        reviewShow = true;\r\n        switch (review_status) {\r\n          case 1:\r\n            successRadio = true;\r\n            failRadio = true;\r\n            submitRadioChecked = true;\r\n            break;\r\n          case 2:\r\n            submitRadio = true;\r\n            failRadio = true;\r\n            successRadioChecked = true;\r\n            break;\r\n          case 3:\r\n            successRadio = true;\r\n            submitRadio = true;\r\n            failRadioChecked = true;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      case 3:\r\n        orderStatusShow = true;\r\n        confirmButtonShow = true;\r\n        submitRadio = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return (\r\n      <Form labelCol={{ span: 4 }} labelAlign=\"left\">\r\n        <Form.Item label=\"订单ID\">\r\n          <Input\r\n            style={{ width: \"60%\" }}\r\n            value={data.order_id}\r\n            readOnly\r\n          ></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"用户ID\">\r\n          <Input style={{ width: \"60%\" }} value={data.user_id} readOnly></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"金额\">\r\n          <Input style={{ width: \"60%\" }} value={data.amount} readOnly></Input>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"订单状态:\"\r\n          style={orderStatusShow ? {} : { display: \"none\" }}\r\n        >\r\n          <Radio.Group\r\n            defaultValue={review_status}\r\n            onChange={e => (this.orderStatus = e.target.value)}\r\n          >\r\n            <Radio\r\n              value={1}\r\n              disabled={submitRadio}\r\n              checked={submitRadioChecked}\r\n            >\r\n              提交第三方\r\n            </Radio>\r\n            <Radio\r\n              value={2}\r\n              disabled={successRadio}\r\n              checked={successRadioChecked}\r\n            >\r\n              已成功\r\n            </Radio>\r\n            <Radio value={3} disabled={failRadio} checked={failRadioChecked}>\r\n              已失败\r\n            </Radio>\r\n          </Radio.Group>\r\n          <LinkButton\r\n            onClick={this.sumbitOrderStatus}\r\n            style={confirmButtonShow ? {} : { display: \"none\" }}\r\n          >\r\n            确认\r\n          </LinkButton>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"复审:\" style={reviewShow ? {} : { display: \"none\" }}>\r\n          <LinkButton\r\n            onClick={() => {\r\n              this.review(1);\r\n            }}\r\n          >\r\n            通过\r\n          </LinkButton>\r\n          <LinkButton\r\n            onClick={() => {\r\n              this.review(2);\r\n            }}\r\n          >\r\n            拒绝\r\n          </LinkButton>\r\n        </Form.Item>\r\n        <Form.Item label=\"备注[用户]\">\r\n          <Input\r\n            style={{ width: \"60%\" }}\r\n            onChange={e => {\r\n              this.remarkUser = e.target.value;\r\n            }}\r\n          ></Input>\r\n          <LinkButton onClick={this.sumbitRemarkUser}>确认</LinkButton>\r\n        </Form.Item>\r\n        <Form.Item label=\"备注[运营]\">\r\n          <Input\r\n            style={{ width: \"60%\" }}\r\n            onChange={e => {\r\n              this.remarkOperator = e.target.value;\r\n            }}\r\n          ></Input>\r\n          <LinkButton onClick={this.sumbitRemarkOperator}>确认</LinkButton>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  sumbitOrderStatus = async () => {\r\n    const data = this.props.editData;\r\n    if (!this.orderStatus) {\r\n      message.error(\"请选择订单状态！\");\r\n    } else {\r\n      let reqData = {\r\n        order_id: data.order_id,\r\n        review_status: this.orderStatus,\r\n        user_id: data.user_id,\r\n        review_type: 1,\r\n        is_pass: 1\r\n      };\r\n      const res = await orderWithDrawReview(reqData);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n      } else {\r\n        message.error(\"操作失败\");\r\n      }\r\n      this.props.onclose();\r\n    }\r\n  };\r\n  review = async is_pass => {\r\n    const data = this.props.editData;\r\n    let reqData = {\r\n      order_id: data.order_id,\r\n      review_status: data.review_status,\r\n      user_id: data.user_id,\r\n      review_type: 2,\r\n      is_pass: is_pass\r\n    };\r\n    const res = await orderWithDrawReview(reqData);\r\n    if (res.status === 0) {\r\n      message.info(res.msg);\r\n    } else {\r\n      message.error(\"操作失败\");\r\n    }\r\n    this.props.onclose();\r\n  };\r\n  sumbitRemarkUser = async () => {\r\n    console.log(this.remarkUser);\r\n    const data = this.props.editData;\r\n    if (!this.remarkUser) {\r\n      message.error(\"请输入有效内容！\");\r\n    } else {\r\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 1);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n      } else {\r\n        message.error(res.msg);\r\n      }\r\n    }\r\n  };\r\n  sumbitRemarkOperator = async () => {\r\n    console.log(this.remarkOperator);\r\n    const data = this.props.editData;\r\n    if (!this.remarkOperator) {\r\n      message.error(\"请输入有效内容！\");\r\n    } else {\r\n      const res = await withDrawRemark(data.order_id, this.remarkOperator, 2);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n      } else {\r\n        message.error(res.msg);\r\n      }\r\n    }\r\n  };\r\n}\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  Popover,\r\n  message\r\n} from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport {\r\n  withDraw,\r\n  downloadWithdrawList,\r\n  userDetail,\r\n  reviewInfo,\r\n  remarkInfo,\r\n  auditOrder\r\n} from \"../../../api\";\r\nimport WrappedComponent from \"./details\";\r\nimport WrappedEdit from \"./edit\";\r\n\r\nclass Withdraw_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.reqData = {\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: \"\"\r\n    };\r\n    this.inputKey = \"\";\r\n    this.inputValue = \"\";\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isBindInfoShow: false,\r\n      isEditShow: false\r\n    };\r\n  }\r\n  getUsers = async (page, pageSize, reqData) => {\r\n    const result = await withDraw(page, pageSize, reqData);\r\n    if (result.data) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n    if (result.status === -1) {\r\n      this.setState({\r\n        data: [],\r\n        count: 0\r\n      });\r\n    }\r\n  };\r\n  onSearchData = (page, limit) => {\r\n    //处理要发送的数据\r\n    let reqData = {\r\n      flag: 3,\r\n      ...this.reqData\r\n    };\r\n    if (this.inputKey === \"1\" || this.inputKey === \"2\") {\r\n      reqData.time_type = this.inputKey;\r\n    } else if (this.inputKey) {\r\n      reqData[this.inputKey] = this.inputValue;\r\n    }\r\n    this.getUsers(page, limit, reqData);\r\n  };\r\n  download = () => {\r\n    let data = {\r\n      ...this.reqData,\r\n      inputValue: this.inputValue,\r\n      inputKey: this.inputKey\r\n    };\r\n    downloadWithdrawList(data);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20, { flag: 3 });\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => (this.inputKey = value)}\r\n            >\r\n              <Select.Option value=\"order_id\">订单id</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"1\">创建时间</Select.Option>\r\n              <Select.Option value=\"2\">到账时间</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              onChange={e => (this.inputValue = e.target.value)}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.reqData.start_time = val[0];\r\n                this.reqData.end_time = val[1];\r\n              }}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => (this.reqData.order_status = value)}\r\n            >\r\n              <Select.Option value=\"\">订单状态</Select.Option>\r\n              <Select.Option value=\"1\">待审核</Select.Option>\r\n              <Select.Option value=\"2\">处理中</Select.Option>\r\n              <Select.Option value=\"3\">已提交</Select.Option>\r\n              <Select.Option value=\"4\">已成功</Select.Option>\r\n              <Select.Option value=\"5\">已失败</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => (this.reqData.type = value)}\r\n            >\r\n              <Select.Option value=\"\">兑换方式</Select.Option>\r\n              <Select.Option value=\"1\">alipay</Select.Option>\r\n              <Select.Option value=\"2\">bank</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={() => this.onSearchData(1, 20)} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <LinkButton\r\n              size=\"default\"\r\n              style={{ float: \"right\" }}\r\n              onClick={this.download}\r\n              icon=\"download\"\r\n            ></LinkButton>\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.onSearchData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.onSearchData(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 3000 }}\r\n        />\r\n        <Modal\r\n          title={\r\n            this.action === \"check\"\r\n              ? \"审核信息\"\r\n              : this.action === \"risk\"\r\n              ? \"资金明细\"\r\n              : \"运营备注\"\r\n          }\r\n          visible={this.state.isDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            detailRecord={this.detailRecord}\r\n            action={this.action}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditShow: false });\r\n            }}\r\n            footer={null}\r\n            width=\"50%\"\r\n          >\r\n            <WrappedEdit\r\n              editData={this.editData}\r\n              onclose={() => {\r\n                this.setState({ isEditShow: false });\r\n                this.onSearchData();\r\n                // window.location.reload();\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 330\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\"\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\"\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\"\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"申请费率\",\r\n      dataIndex: \"handling_fee\"\r\n    },\r\n    {\r\n      title: \"实际费率\",\r\n      dataIndex: \"gold\"\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"兑换方式\",\r\n      dataIndex: \"order_type\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"待审核\";\r\n            break;\r\n          case \"2\":\r\n            word = \"处理中\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已提交\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已成功\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已失败\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 120,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"兑换账号\",\r\n      dataIndex: \"pay_account\",\r\n      width: 250\r\n    },\r\n    {\r\n      title: \"账号名称\",\r\n      dataIndex: \"pay_name\"\r\n    },\r\n\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 200,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"风控\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton\r\n            onClick={() => this.getDetail(record, \"risk\")}\r\n            type=\"default\"\r\n          >\r\n            风控\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton\r\n            onClick={() => this.getDetail(record, \"check\")}\r\n            type=\"default\"\r\n          >\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      width: 200,\r\n      render: record => (\r\n        <span>\r\n          <Popover\r\n            content={record.user_remark}\r\n            title={record.user_id + \"用户备注\"}\r\n            trigger=\"click\"\r\n          >\r\n            <LinkButton type=\"default\">用户备注</LinkButton>\r\n          </Popover>\r\n          <LinkButton\r\n            onClick={() => this.getDetail(record, \"operatorRemark\")}\r\n            type=\"default\"\r\n          >\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  getDetail = async (record, action) => {\r\n    this.action = action;\r\n    this.detailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.user_id\r\n    };\r\n    const res =\r\n      action === \"risk\"\r\n        ? await userDetail(1, 20, record.user_id)\r\n        : action === \"check\"\r\n        ? await reviewInfo(1, 20, record.order_id)\r\n        : await remarkInfo(1, 20, record.order_id);\r\n    if (res.status === 0) {\r\n      this.detailRecord.data = res.data;\r\n      this.detailRecord.count = res.count;\r\n    }\r\n    this.setState({ isDetailShow: true });\r\n  };\r\n  edit = async record => {\r\n    let reqData = {\r\n      flag: 3,\r\n      order_id: record.order_id\r\n    };\r\n    const res = await auditOrder(reqData);\r\n    if (res.status === 0) {\r\n      this.editData = res.data[0];\r\n      this.setState({ isEditShow: true });\r\n    } else {\r\n      message.error(\"操作失败\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default Withdraw_list;\r\n","import React, { Component } from \"react\";\r\nimport { Progress } from \"antd\";\r\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/addon/lint/lint.css\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/mode/javascript/javascript.js\";\r\nimport \"codemirror/addon/lint/lint.js\";\r\nimport \"codemirror/addon/lint/json-lint.js\";\r\nimport \"codemirror/theme/rubyblue.css\";\r\n\r\nexport class MyProgress extends React.Component {\r\n  state = {\r\n    percent: 0\r\n  };\r\n  handle;\r\n  render() {\r\n    return (\r\n      <Progress\r\n        type=\"circle\"\r\n        strokeColor={{\r\n          \"0%\": \"#108ee9\",\r\n          \"100%\": \"#87d068\"\r\n        }}\r\n        percent={this.state.percent}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst options = {\r\n  lineNumbers: true, //显示行号\r\n  mode: { name: \"javascript\", json: true }, //定义mode\r\n  theme: \"rubyblue\" //选中的theme\r\n};\r\nexport class CodeEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const conf_val = JSON.stringify([JSON.parse(this.props.conf_val)], null, 2);\r\n    //使用默认传过来的onChange事件\r\n    const { onChange } = this.props;\r\n    return (\r\n      <div className=\"json-editor\">\r\n        <CodeMirror\r\n          // ref=\"editor-sql\"\r\n          value={conf_val}\r\n          onChange={(editor, data, value) => {\r\n            //返回value值给edit中的form\r\n            return onChange(JSON.stringify(JSON.parse(value)[0]));\r\n          }}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { saveConf } from \"../../../api/index\";\r\nimport { CodeEditor } from \"../../../components/myComponents\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  let getValueFromEvent = e => {\r\n    console.log(\"Upload event:\", e);\r\n    // if (Array.isArray(e)) {\r\n    //   return e;\r\n    // }\r\n    // return e && e.fileList;\r\n  };\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      console.log(value);\r\n      if (!err) {\r\n        if (props.action === \"edit\") {\r\n          value.id = record.id;\r\n        }\r\n        const res = await saveConf(value, props.action);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Form labelCol={{ span: 3 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\r\n      <Form.Item label=\"配置名\">\r\n        {getFieldDecorator(\"name\", {\r\n          rules: [{ required: true, message: \"请输入配置名\" }],\r\n          initialValue: props.action === \"add\" ? \"\" : props.record.name\r\n        })(<Input style={{ width: \"50%\" }} />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"配置Key\">\r\n        {getFieldDecorator(\"conf_key\", {\r\n          rules: [{ required: true, message: \"请输入配置Key\" }],\r\n          initialValue: props.action === \"add\" ? \"\" : props.record.conf_key\r\n        })(<Input style={{ width: \"50%\" }} />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"配置Val\">\r\n        {getFieldDecorator(\"conf_val\", {\r\n          rules: [{ required: true, message: \"请输入配置Val\" }]\r\n        })(\r\n          props.action === \"add\" ? (\r\n            <Input style={{ width: \"50%\" }} />\r\n          ) : (\r\n            <CodeEditor conf_val={props.record.conf_val} />\r\n          )\r\n        )}\r\n        <span style={props.action === \"add\" ? { display: \"none\" } : {}}>\r\n          请注意首尾中括号【】为代码编辑器携带符号，实际参数不带首尾中括号,请勿修改删除【】\r\n        </span>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Button\r\n} from \"antd\";\r\nimport { configList, saveConf } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Config extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await configList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Input\r\n              style={{ width: 120 }}\r\n              placeholder=\"请输入配置Key\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              size=\"default\"\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton type=\"primary\" onClick={this.onAdd} size=\"default\">\r\n              添加\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          // scroll={{ y: \"100%\" }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"add\" ? \"添加配置\" : \"编辑配置\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n            width=\"50%\"\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"配置名\",\r\n      dataIndex: \"name\"\r\n    },\r\n    {\r\n      title: \"配置Key\",\r\n      dataIndex: \"conf_key\"\r\n    },\r\n    {\r\n      title: \"配置值\",\r\n      dataIndex: \"conf_val\",\r\n      width: 600\r\n    },\r\n    {\r\n      title: \"更新时间\",\r\n      dataIndex: \"created_at\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\r\n            编辑\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.onDelete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button type=\"danger\" size=\"small\">\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let conf_key = this.input.input.value;\r\n    const res = await configList(1, 20, conf_key);\r\n    this.setState({ data: res.data, count: res.count });\r\n  };\r\n  onDelete = async record => {\r\n    let res = await saveConf({ id: record.id }, \"del\");\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功:\" + res.msg);\r\n      this.getInitialData(this.state.page, this.state.pageSize);\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  onAdd = async () => {\r\n    this.action = \"add\";\r\n    this.setState({\r\n      isEditFormShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.action = \"edit\";\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditFormShow: true\r\n    });\r\n  };\r\n}\r\nexport default Config;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { changeUserBalance } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  let params = JSON.parse(record.params);\r\n\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        let obj = {\r\n          \"data[id]\": record.id,\r\n          \"data[params]\": record.params,\r\n          \"data[status]\": 2\r\n        };\r\n        if (props.action === \"review\") {\r\n          obj[\"data[pay_reason]\"] = value.reason;\r\n          obj[\"data[status]\"] = 1;\r\n        }\r\n        const res = await changeUserBalance(obj);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <span>\r\n        ID:{params.user_id} 资金变动：{params.amount} 复审\r\n        {props.action === \"review\" ? \"备注\" : \"拒绝\"}\r\n      </span>\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        labelAlign=\"left\"\r\n        onSubmit={handleEditSubmit}\r\n      >\r\n        <Form.Item\r\n          style={{ display: props.action === \"review\" ? \"block\" : \"none\" }}\r\n        >\r\n          {getFieldDecorator(\"reason\", {\r\n            initialValue: params.reason\r\n          })(<Input.TextArea autosize={{ minRows: 5, maxRows: 10 }} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            确定\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Button,\r\n  Select\r\n} from \"antd\";\r\nimport { tasksList, saveConf, reviewTask } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\n\r\nclass Tasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await tasksList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.start_time = val[0];\r\n                this.end_time = val[1];\r\n              }}\r\n            ></MyDatePicker>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Select\r\n              placeholder=\"任务状态\"\r\n              style={{ width: 150 }}\r\n              onChange={value => (this.status = value)}\r\n            >\r\n              <Select.Option value=\"0\">待操作</Select.Option>\r\n              <Select.Option value=\"1\">已复审</Select.Option>\r\n              <Select.Option value=\"2\">复审拒绝</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入创建人昵称\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n              size=\"normal\"\r\n            ></LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size=\"normal\">\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState(\r\n                {\r\n                  page: page\r\n                },\r\n                () => {\r\n                  this.onSearch();\r\n                }\r\n              );\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState(\r\n                {\r\n                  pageSize: size\r\n                },\r\n                () => {\r\n                  this.onSearch();\r\n                }\r\n              );\r\n            }\r\n          }}\r\n          scroll={{ x: 1400 }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"review\" ? \"复审\" : \"拒绝\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"任务ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"任务信息\",\r\n      dataIndex: \"params\",\r\n      width: 500,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"任务来源\",\r\n      dataIndex: \"task_type\",\r\n      width: 150,\r\n      render: (text, record, index) => (\r\n        <span>\r\n          {parseInt(text) === 0\r\n            ? \"用户列表资金变动\"\r\n            : parseInt(text) === 1\r\n            ? \"代理配置列表资金变动\"\r\n            : parseInt(text) === 2\r\n            ? \"用户重置密码\"\r\n            : \"\"}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"创建人昵称\",\r\n      dataIndex: \"operator_nick\"\r\n    },\r\n    {\r\n      title: \"复审人昵称\",\r\n      dataIndex: \"review_nick\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"更新时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (text, record, index) => {\r\n        let res;\r\n        switch (text) {\r\n          case 0:\r\n            res = (\r\n              <div>\r\n                <LinkButton size=\"small\" onClick={() => this.review(record)}>\r\n                  复审\r\n                </LinkButton>\r\n                <LinkButton\r\n                  size=\"small\"\r\n                  type=\"danger\"\r\n                  onClick={() => this.refuse(record)}\r\n                >\r\n                  拒绝\r\n                </LinkButton>\r\n              </div>\r\n            );\r\n            break;\r\n          case 1:\r\n            res = <LinkButton size=\"small\">已复审</LinkButton>;\r\n            break;\r\n          case 2:\r\n            res = (\r\n              <LinkButton size=\"small\" type=\"danger\">\r\n                复审拒绝\r\n              </LinkButton>\r\n            );\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        return res;\r\n      }\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      start_time: this.start_time || \"\",\r\n      end_time: this.end_time || \"\",\r\n      // status: this.status || \"\",\r\n      operator_nick: this.input.input.value || \"\"\r\n    };\r\n    if (this.status) {\r\n      value.status = this.status;\r\n    }\r\n    const res = await tasksList(this.state.page, this.state.pageSize, value);\r\n    this.setState({ data: res.data, count: res.count });\r\n  };\r\n  review = async record => {\r\n    if (record.task_type === 2) {\r\n      let value = {\r\n        id: record.id,\r\n        params: record.params,\r\n        status: 1\r\n      };\r\n      const res = await reviewTask(value);\r\n      if (res.status === 0) {\r\n        message.success(\"提交成功\" + res.msg);\r\n        this.onSearch();\r\n      } else {\r\n        message.error(\"出错了：\" + res.msg);\r\n      }\r\n    } else {\r\n      this.action = \"review\";\r\n      this.editDataRecord = record;\r\n      this.setState({ isEditFormShow: true });\r\n    }\r\n  };\r\n  refuse = async record => {\r\n    if (record.task_type === 2) {\r\n      let value = {\r\n        id: record.id,\r\n        params: record.params,\r\n        status: 2\r\n      };\r\n      const res = await reviewTask(value);\r\n      if (res.status === 0) {\r\n        message.success(\"提交成功\" + res.msg);\r\n        this.onSearch();\r\n      } else {\r\n        message.error(\"出错了：\" + res.msg);\r\n      }\r\n    } else {\r\n      this.action = \"refuse\";\r\n      this.editDataRecord = record;\r\n      this.setState({ isEditFormShow: true });\r\n    }\r\n  };\r\n}\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { Modal, Table } from \"antd\";\r\nimport {} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\nconst EditForm = props => {\r\n  const data = props.record;\r\n  function checkQrcode(record) {\r\n    Modal.success({\r\n      title: \"收款码\",\r\n      content: (<div><QRCode value={record.pay_url}></QRCode></div>),\r\n      width: 250\r\n    });\r\n  }\r\n  let initColumns = [\r\n    {\r\n      title: \"账号类型\",\r\n      dataIndex: \"type\",\r\n      render: (text, record, index) => {\r\n        let res;\r\n        switch (text) {\r\n          case 1:\r\n            res = \"微信\";\r\n            break;\r\n          case 2:\r\n            res = \"alipay\";\r\n            break;\r\n          case 3:\r\n            res = \"银行卡\";\r\n            break;\r\n          case 4:\r\n            res = \"花呗\";\r\n            break;\r\n          case 5:\r\n            res = \"信用卡\";\r\n            break;\r\n          default:\r\n            res = \"\";\r\n            break;\r\n        }\r\n        return <span>{res}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"账户名\",\r\n      dataIndex: \"account_name\"\r\n    },\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"account_num\"\r\n    },\r\n    {\r\n      title: \"开户行\",\r\n      dataIndex: \"bank_name\"\r\n    },\r\n    {\r\n      title: \"收款码\",\r\n      dataIndex: \"pay_url\",\r\n      render: (text, record, index) => {\r\n        if (text && text.length > 0) {\r\n          return (\r\n            <LinkButton onClick={() => checkQrcode(record)}>预览</LinkButton>\r\n          );\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: \"状态[收款码审核]\",\r\n      dataIndex: \"status\"\r\n    },\r\n    {\r\n      title: \"绑定时间\",\r\n      dataIndex: \"created_at\"\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"updated_at\"\r\n    }\r\n  ];\r\n  return (\r\n    <Table\r\n      bordered\r\n      rowKey={(record, index) => `${index}`}\r\n      dataSource={data}\r\n      columns={initColumns}\r\n      size=\"small\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message,  Input, Select } from \"antd\";\r\nimport { allAccountList, resetPassword, accountList } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\n\r\nclass AccountList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await allAccountList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Select defaultValue=\"user_id\" style={{ width: 150 }}>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入user_id\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n            />\r\n            {/* <br />\r\n            <br />\r\n            <LinkButton style={{ float: \"right\" }} onClick={this.download} icon=\"download\">\r\n            </LinkButton> */}\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          // scroll={{ x: 1800 }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title=\"绑定收付款账户详情\"\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            width=\"60%\"\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\"\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\"\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\"\r\n    },\r\n    {\r\n      title: \"资金密码操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <LinkButton\r\n          size=\"small\"\r\n          onClick={() => {\r\n            this.resetPassword(record);\r\n          }}\r\n        >\r\n          重置\r\n        </LinkButton>\r\n      )\r\n    },\r\n    {\r\n      title: \"绑定账号\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <LinkButton\r\n          size=\"small\"\r\n          onClick={() => {\r\n            this.checkAccount(record);\r\n          }}\r\n        >\r\n          查看\r\n        </LinkButton>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      user_id: this.input.input.value\r\n    };\r\n    const res = await allAccountList(\r\n      this.state.page,\r\n      this.state.pageSize,\r\n      value\r\n    );\r\n    this.setState({ data: res.data, count: parseInt(res.count) });\r\n  };\r\n  resetPassword = async record => {\r\n    const res = await resetPassword(record.user_id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  checkAccount = async record => {\r\n    const res = await accountList(record.user_id);\r\n    this.editDataRecord = res.data;\r\n    if (res.status !== 0) {\r\n      message.error(res.msg);\r\n    }\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  // download=async()=>{\r\n\r\n  // }\r\n}\r\nexport default AccountList;\r\n","import React from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nconst EditForm = props => {\r\n  const data = props.record||[];\r\n  const action = props.action;\r\n  let initColumns = [];\r\n  switch (action) {\r\n    case \"detail\":\r\n      initColumns = [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"user_id\"\r\n        },\r\n        {\r\n          title: \"申请数量\",\r\n          dataIndex: \"\"\r\n        },\r\n        {\r\n          title: \"成交数量\",\r\n          dataIndex: \"\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"\"\r\n        }\r\n      ];\r\n      break;\r\n    case \"check\":\r\n      initColumns = [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n      break;\r\n    case \"operatorRemark\":\r\n      initColumns = [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return (\r\n    <Table\r\n      bordered\r\n      rowKey={(record, index) => `${index}`}\r\n      dataSource={data}\r\n      columns={initColumns}\r\n      size=\"small\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Select\r\n} from \"antd\";\r\nimport {\r\n  sellGoldApplyList,\r\n  tradeRemark,\r\n  sellGoldInfoList,\r\n  reviewInfo2,\r\n  remarkInfo2\r\n} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass Tasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false,\r\n    };\r\n    this.filed = \"id\";\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await sellGoldApplyList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.start_time = val[0];\r\n                this.end_time = val[1];\r\n              }}\r\n            ></MyDatePicker>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Select\r\n              defaultValue=\"id\"\r\n              style={{ width: 150 }}\r\n              onChange={value => (this.filed = value)}\r\n            >\r\n              <Select.Option value=\"id\">ID</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"source\">所属代理</Select.Option>\r\n              <Select.Option value=\"group\">所属品牌</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入关键字搜索\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onChange={value => (this.status = value)}\r\n            >\r\n              <Select.Option value=\"\">状态</Select.Option>\r\n              <Select.Option value=\"1\">待初审</Select.Option>\r\n              <Select.Option value=\"2\">初审通过</Select.Option>\r\n              <Select.Option value=\"3\">初审拒绝</Select.Option>\r\n              <Select.Option value=\"4\">复审通过</Select.Option>\r\n              <Select.Option value=\"5\">复审拒绝</Select.Option>\r\n              <Select.Option value=\"6\">已下架</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()}>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: parseInt(this.state.count),\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1800 }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={\r\n              this.action === \"detail\"\r\n                ? \"详情\"\r\n                : this.action === \"check\"\r\n                ? \"审核详情\"\r\n                : \"运营备注详情\"\r\n            }\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\"\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\"\r\n    },\r\n    {\r\n      title: \"兑换单价\",\r\n      dataIndex: \"exchange_price\"\r\n    },\r\n    {\r\n      title: \"上架金币数\",\r\n      dataIndex: \"gold\"\r\n    },\r\n    {\r\n      title: \"上架金币余额\",\r\n      dataIndex: \"last_gold\"\r\n    },\r\n    {\r\n      title: \"最低兑换额\",\r\n      dataIndex: \"min_gold\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (text, record, index) => {\r\n        let res;\r\n        switch (parseInt(text)) {\r\n          case 1:\r\n            res = (\r\n              <span>\r\n                <LinkButton size=\"small\">初审通过</LinkButton>\r\n                <LinkButton size=\"small\">初审拒绝</LinkButton>\r\n              </span>\r\n            );\r\n            break;\r\n          case 2:\r\n            res = (\r\n              <span>\r\n                <LinkButton size=\"small\">复审通过</LinkButton>\r\n                <LinkButton size=\"small\">复审拒绝</LinkButton>\r\n              </span>\r\n            );\r\n            break;\r\n          case 3:\r\n            res = <span>一审拒绝</span>;\r\n            break;\r\n          case 4:\r\n            res = <span>已上架</span>;\r\n            break;\r\n          case 5:\r\n            res = <span>二审拒绝</span>;\r\n            break;\r\n          case 6:\r\n            res = <span>已下架</span>;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        return res;\r\n      }\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"风控\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton size=\"small\" type=\"dashed\">\r\n            风控\r\n          </LinkButton>\r\n          <LinkButton size=\"small\" type=\"dashed\">\r\n            游戏数据\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton size=\"small\" onClick={() => this.edit(record)}>\r\n            编辑\r\n          </LinkButton>\r\n          <LinkButton size=\"small\" onClick={() => this.checkDetail(record, \"detail\")}>\r\n            详情\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            type=\"default\"\r\n            onClick={() => this.checkDetail(record, \"check\")}\r\n          >\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            type=\"default\"\r\n            onClick={() => this.checkDetail(record, \"userRemark\")}\r\n          >\r\n            用户备注\r\n          </LinkButton>\r\n          <LinkButton\r\n            size=\"small\"\r\n            type=\"default\"\r\n            onClick={() => this.checkDetail(record, \"operatorRemark\")}\r\n          >\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      end_time: this.start_time || \"\",\r\n      start_time: this.start_time || \"\",\r\n      status: this.status || \"\",\r\n      [this.filed]: this.input.input.value\r\n    };\r\n    const res = await sellGoldApplyList(\r\n      this.state.page,\r\n      this.state.pageSize,\r\n      value\r\n    );\r\n    this.setState({ data: res.data, count: res.count });\r\n  };\r\n  edit = async record => {\r\n    Modal.info({\r\n      title: \"编辑\",\r\n      okText: \"关闭\",\r\n      okType: \"default\",\r\n      width: \"50%\",\r\n      content: (\r\n        <div>\r\n          <div>\r\n            <span>备注[用户]&nbsp;&nbsp;&nbsp;</span>\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"请输入备注内容，用户查看使用\"\r\n              ref={Input => {\r\n                this.userRemarkInput = Input;\r\n              }}\r\n            />\r\n            <span>&nbsp;&nbsp;&nbsp;</span>\r\n            <LinkButton\r\n              onClick={() => {\r\n                this.editComfirm(record, 1);\r\n              }}\r\n            >\r\n              确定\r\n            </LinkButton>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <span>备注[运营]&nbsp;&nbsp;&nbsp;</span>\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"请输入备注内容，运营人员记录使用\"\r\n              ref={Input => {\r\n                this.operatorRemarkInput = Input;\r\n              }}\r\n            />\r\n            <span>&nbsp;&nbsp;&nbsp;</span>\r\n            <LinkButton\r\n              onClick={() => {\r\n                this.editComfirm(record, 2);\r\n              }}\r\n            >\r\n              确定\r\n            </LinkButton>\r\n          </div>\r\n        </div>\r\n      )\r\n    });\r\n  };\r\n  editComfirm = async (record, remark_type) => {\r\n    let value = {\r\n      id: record.id,\r\n      temarks:\r\n        remark_type === 1\r\n          ? this.userRemarkInput.input.value\r\n          : this.operatorRemarkInput.input.value,\r\n      remark_type: remark_type\r\n    };\r\n    if (remark_type === 2) {\r\n      value.type = 6;\r\n    }\r\n    const res = await tradeRemark(value);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  checkDetail = async (record, action) => {\r\n    if (action === \"userRemark\") {\r\n      Modal.info({\r\n        title: `订单ID为【${record.id}】的用户备注`,\r\n        content: <div>{record.user_remark||'无'}</div>,\r\n        okText:'关闭'\r\n      });\r\n    } else {\r\n      let res;\r\n      switch (action) {\r\n        case \"detail\":\r\n          res = await sellGoldInfoList(1, 100, record.id);\r\n          break;\r\n        case \"check\":\r\n          res = await reviewInfo2(1, 100, record.id);\r\n          break;\r\n        case \"operatorRemark\":\r\n          res = await remarkInfo2(1, 100, record.id);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.editDataRecord = res.data;\r\n      this.action = action;\r\n      this.setState({ isEditFormShow: true });\r\n    }\r\n  };\r\n}\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { changeUserBalance } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  let params = JSON.parse(record.params);\r\n\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        let obj = {\r\n          \"data[id]\": record.id,\r\n          \"data[params]\": record.params,\r\n          \"data[status]\": 2\r\n        };\r\n        if (props.action === \"review\") {\r\n          obj[\"data[pay_reason]\"] = value.reason;\r\n          obj[\"data[status]\"] = 1;\r\n        }\r\n        const res = await changeUserBalance(obj);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <span>\r\n        ID:{params.user_id} 资金变动：{params.amount} 复审\r\n        {props.action === \"review\" ? \"备注\" : \"拒绝\"}\r\n      </span>\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        labelAlign=\"left\"\r\n        onSubmit={handleEditSubmit}\r\n      >\r\n        <Form.Item\r\n          style={{ display: props.action === \"review\" ? \"block\" : \"none\" }}\r\n        >\r\n          {getFieldDecorator(\"reason\", {\r\n            initialValue: params.reason\r\n          })(<Input.TextArea autosize={{ minRows: 5, maxRows: 10 }} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            确定\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input, Select } from \"antd\";\r\nimport { sellGoldOrderList } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\n\r\nclass Tasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await sellGoldOrderList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } \r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.start_time = val[0];\r\n                this.end_time = val[1];\r\n              }}\r\n            ></MyDatePicker>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Select\r\n              placeholder=\"任务状态\"\r\n              style={{ width: 150 }}\r\n              onChange={value => (this.status = value)}\r\n            >\r\n              <Select.Option value=\"0\">待操作</Select.Option>\r\n              <Select.Option value=\"1\">已复审</Select.Option>\r\n              <Select.Option value=\"2\">复审拒绝</Select.Option>\r\n            </Select>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入创建人昵称\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              type=\"primary\"\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n            ></LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()}>\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1800 }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"review\" ? \"复审\" : \"拒绝\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"买家ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"买家昵称\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"卖家ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"卖家昵称\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"兑换单价\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"支付金额\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"兑换金额\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"完成时间\",\r\n      dataIndex: \"\"\r\n    }\r\n  ];\r\n  // onSearch = async () => {\r\n  //   let value = {\r\n  //     end_time: this.start_time || \"\",\r\n  //     start_time: this.start_time || \"\",\r\n  //     status: this.status || \"\",\r\n  //     operator_nick: this.input.input.value || \"\"\r\n  //   };\r\n  //   const res = await tasksList(this.state.page, this.state.pageSize, value);\r\n  //   this.setState({ data: res.data, count: res.count });\r\n  // };\r\n  review = async record => {\r\n    this.action = \"review\";\r\n    this.editDataRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  refuse = async record => {\r\n    this.action = \"refuse\";\r\n    this.editDataRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n}\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\r\nimport { saveActivityConfig } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  const action = props.action;\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        if (action === \"edit\") {\r\n          value.id = record.id;\r\n        }\r\n        const res = await saveActivityConfig(value);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Form\r\n        labelCol={{ span: 6 }}\r\n        labelAlign=\"left\"\r\n        onSubmit={handleEditSubmit}\r\n      >\r\n        <Form.Item label=\"活动名称\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.name\r\n          })(<Input style={{ width: \"40%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"品牌\">\r\n          {getFieldDecorator(\"package_id\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.package_id\r\n          })(\r\n            <Select style={{ width: \"40%\" }}>\r\n              <Select.Option value=\"1\">博臣娱乐</Select.Option>\r\n              <Select.Option value=\"2\">机器人首领</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"is_close\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.is_close\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">关闭</Radio>\r\n              <Radio value=\"2\">开启</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需要绑定电话\">\r\n          {getFieldDecorator(\"need_mobile\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.need_mobile\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">是</Radio>\r\n              <Radio value=\"2\">否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需要绑定银行卡\">\r\n          {getFieldDecorator(\"need_bankcard\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.need_bankcard\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">是</Radio>\r\n              <Radio value=\"2\">否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"排序\">\r\n          {getFieldDecorator(\"order_by\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.order_by\r\n          })(<Input style={{ width: \"40%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"活动内容\">\r\n          {getFieldDecorator(\"info\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.info\r\n          })(\r\n            <Input.TextArea\r\n              style={{ width: \"70%\" }}\r\n              autosize={{ maxRows: 10 }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            确定\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Input, Popconfirm } from \"antd\";\r\nimport { activityConfigList, delActivityConfig } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport WrappedEditForm from \"./editForm\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass AccountList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await activityConfigList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.setState({\r\n                  start_time: val[0],\r\n                  end_time: val[1]\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入活动id\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n              size=\"default\"\r\n            ></LinkButton>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton onClick={this.add} size=\"default\">\r\n              添加\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"add\" ? \"添加\" : \"编辑\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"活动名称\",\r\n      dataIndex: \"name\"\r\n    },\r\n    {\r\n      title: \"品牌ID\",\r\n      dataIndex: \"package_id\"\r\n    },\r\n    {\r\n      title: \"活动状态\",\r\n      dataIndex: \"is_close\",\r\n      render: text => <span>{text === \"1\" ? \"关闭\" : \"开启\"}</span>\r\n    },\r\n    {\r\n      title: \"需要绑定电话\",\r\n      dataIndex: \"need_mobile\",\r\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"需要绑定银行卡\",\r\n      dataIndex: \"need_bankcard\",\r\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"活动内容\",\r\n      dataIndex: \"info\",\r\n      width: 600\r\n    },\r\n    {\r\n      title: \"排序\",\r\n      dataIndex: \"order_by\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            onClick={() => {\r\n              this.edit(record);\r\n            }}\r\n          >\r\n            编辑\r\n          </LinkButton>\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.delete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <LinkButton type=\"danger\" size=\"small\">\r\n              删除\r\n            </LinkButton>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      user_id: this.input.input.value\r\n    };\r\n    const res = await activityConfigList(\r\n      this.state.page,\r\n      this.state.pageSize,\r\n      value\r\n    );\r\n    this.setState({ data: res.data, count: parseInt(res.count) });\r\n  };\r\n  add = async record => {\r\n    this.action = \"add\";\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  edit = async record => {\r\n    this.action = \"edit\";\r\n    this.editDataRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  delete = async record => {\r\n    const res = await delActivityConfig(record.id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n    this.getInitialData(1, 20);\r\n  };\r\n}\r\nexport default AccountList;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, message, Input, Modal } from \"antd\";\r\nimport { activityList } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass AccountList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await activityList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(\"未检索到数据\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.start_time = val[0];\r\n                this.end_time = val[1];\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入user_id\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n              size=\"default\"\r\n            ></LinkButton>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton onClick={this.add} size=\"default\">\r\n              添加\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\"\r\n    },\r\n    {\r\n      title: \"活动Id\",\r\n      dataIndex: \"activity_id\"\r\n    },\r\n    {\r\n      title: \"活动名称\",\r\n      dataIndex: \"activity_name\"\r\n    },\r\n    {\r\n      title: \"品牌Id\",\r\n      dataIndex: \"package_id\"\r\n    },\r\n    {\r\n      title: \"领取日期\",\r\n      dataIndex: \"receive_date\"\r\n    },\r\n    {\r\n      title: \"领取详情\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            onClick={() => {\r\n              this.check(record);\r\n            }}\r\n          >\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: formateDate\r\n    }\r\n  ];\r\n  check = record => {\r\n    Modal.info({\r\n      title: \"领取详情\",\r\n      content: record.receive_info\r\n    });\r\n  };\r\n  onSearch = async () => {\r\n    let value = {\r\n      user_id: this.input.input.value,\r\n      start_time: this.start_time,\r\n      end_time: this.end_time\r\n    };\r\n    const res = await activityList(this.state.page, this.state.pageSize, value);\r\n    if (res.status === 0) {\r\n      this.setState({ data: res.data, count: parseInt(res.count) });\r\n    } else {\r\n      message.error(\"未检索到数据\");\r\n    }\r\n  };\r\n}\r\nexport default AccountList;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\r\nimport { saveActivityConfig } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  const action = props.action;\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        if (action === \"edit\") {\r\n          value.id = record.id;\r\n        }\r\n        const res = await saveActivityConfig(value);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Form\r\n        labelCol={{ span: 6 }}\r\n        labelAlign=\"left\"\r\n        onSubmit={handleEditSubmit}\r\n      >\r\n        <Form.Item label=\"活动名称\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.name\r\n          })(<Input style={{ width: \"40%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"品牌\">\r\n          {getFieldDecorator(\"package_id\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.package_id\r\n          })(\r\n            <Select style={{ width: \"40%\" }}>\r\n              <Select.Option value=\"1\">博臣娱乐</Select.Option>\r\n              <Select.Option value=\"2\">机器人首领</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"is_close\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.is_close\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">关闭</Radio>\r\n              <Radio value=\"2\">开启</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需要绑定电话\">\r\n          {getFieldDecorator(\"need_mobile\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.need_mobile\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">是</Radio>\r\n              <Radio value=\"2\">否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"需要绑定银行卡\">\r\n          {getFieldDecorator(\"need_bankcard\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.need_bankcard\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value=\"1\">是</Radio>\r\n              <Radio value=\"2\">否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"排序\">\r\n          {getFieldDecorator(\"order_by\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.order_by\r\n          })(<Input style={{ width: \"40%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"活动内容\">\r\n          {getFieldDecorator(\"info\", {\r\n            rules: [{ required: true }],\r\n            initialValue: action === \"add\" ? \"\" : record.info\r\n          })(\r\n            <Input.TextArea\r\n              style={{ width: \"70%\" }}\r\n              autosize={{ maxRows: 10 }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            确定\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Input, Popconfirm } from \"antd\";\r\nimport { giftVoucherList, delActivityConfig } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport WrappedEditForm from \"./editForm\";\r\n\r\nclass AccountList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async (page, limit) => {\r\n    const res = await giftVoucherList(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(\"未检索到数据\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.setState({\r\n                  start_time: val[0],\r\n                  end_time: val[1]\r\n                });\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <Input\r\n              style={{ width: 150 }}\r\n              placeholder=\"请输入活动id\"\r\n              ref={Input => {\r\n                this.input = Input;\r\n              }}\r\n            />\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton\r\n              onClick={this.onSearch}\r\n              icon=\"search\"\r\n              size=\"default\"\r\n            ></LinkButton>\r\n            &nbsp;&nbsp;&nbsp;\r\n            <LinkButton onClick={this.add} size=\"default\">\r\n              添加\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => window.location.reload()}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.setState({\r\n                page: page\r\n              });\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n        />\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title={this.action === \"add\" ? \"添加\" : \"编辑\"}\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedEditForm\r\n              finished={() => {\r\n                this.getInitialData(this.state.page, this.state.pageSize);\r\n                this.setState({ isEditFormShow: false });\r\n              }}\r\n              record={this.editDataRecord}\r\n              action={this.action}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"领取人ID\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"领取人昵称\",\r\n      dataIndex: \"\"\r\n    },\r\n    {\r\n      title: \"代理ID\",\r\n      dataIndex: \"\",\r\n      render: text => <span>{text === \"1\" ? \"关闭\" : \"开启\"}</span>\r\n    },\r\n    {\r\n      title: \"code\",\r\n      dataIndex: \"\",\r\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"领取金额\",\r\n      dataIndex: \"\",\r\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"领取时间\",\r\n      dataIndex: \"order_by\"\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record) => (\r\n        <span>\r\n          <LinkButton\r\n            size=\"small\"\r\n            onClick={() => {\r\n              this.edit(record);\r\n            }}\r\n          >\r\n            编辑\r\n          </LinkButton>\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.delete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <LinkButton type=\"danger\" size=\"small\">\r\n              删除\r\n            </LinkButton>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearch = async () => {\r\n    let value = {\r\n      user_id: this.input.input.value\r\n    };\r\n    const res = await giftVoucherList(\r\n      this.state.page,\r\n      this.state.pageSize,\r\n      value\r\n    );\r\n    this.setState({ data: res.data, count: parseInt(res.count) });\r\n  };\r\n  add = async record => {\r\n    this.action = \"add\";\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  edit = async record => {\r\n    this.action = \"edit\";\r\n    this.editDataRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n  delete = async record => {\r\n    const res = await delActivityConfig(record.id);\r\n    if (res.status === 0) {\r\n      message.success(res.msg);\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n    this.getInitialData(1, 20);\r\n  };\r\n}\r\nexport default AccountList;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data } = this.props.detailRecord;\r\n    console.log(data);\r\n\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey={(record,index)=>`${index}`}\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"check\") {\r\n      return [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    } else if (this.props.action === \"risk\") {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\r\nimport { withDrawReview } from \"../../../api/index\";\r\nclass EditForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      review_status: \"\"\r\n    };\r\n  }\r\n  render() {\r\n    const record = this.props.record;\r\n    return (\r\n      <div>\r\n        <div>订单ID:{record.order_id}</div>\r\n        <div>用户ID:{record.user_id}</div>\r\n        <div>金额:{record.amount}</div>\r\n        <div>\r\n          订单状态:\r\n          <Radio.Group\r\n            onChange={e => {\r\n              this.setState({ review_status: e.target.value });\r\n            }}\r\n            value={this.state.review_status}\r\n          >\r\n            <Radio value={2}>已成功</Radio>\r\n            <Radio value={3}>已失败</Radio>\r\n          </Radio.Group>\r\n          <Button onClick={() => this.orderStatus(record)}>确认</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  orderStatus = async record => {\r\n    const res = await withDrawReview(\r\n      record.order_id,\r\n      record.user_id,\r\n      this.state.review_status\r\n    );\r\n    message.info(res.msg);\r\n  };\r\n}\r\n\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, Icon, Input, Select, Popover } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport {\r\n  withDraw,\r\n  downloadWithdrawList,\r\n  userDetail,\r\n  reviewInfo,\r\n  remarkInfo\r\n} from \"../../../api\";\r\nimport WrappedComponent from \"./details\";\r\nimport EditForm from \"./editForm\";\r\n\r\nclass Withdraw_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.reqData = {\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: 5\r\n    };\r\n    this.inputKey = \"\";\r\n    this.inputValue = \"\";\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isBindInfoShow: false,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getUsers = async (page, pageSize, reqData) => {\r\n    const result = await withDraw(page, pageSize, reqData);\r\n    this.setState({\r\n      data: result.data,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  onSearchData = (page, limit) => {\r\n    //处理要发送的数据\r\n    let reqData = {\r\n      flag: 1,\r\n      ...this.reqData\r\n    };\r\n    if (this.inputKey === \"1\" || this.inputKey === \"2\") {\r\n      reqData.time_type = this.inputKey;\r\n    } else if (this.inputKey) {\r\n      reqData[this.inputKey] = this.inputValue;\r\n    }\r\n    this.getUsers(page, limit, reqData);\r\n  };\r\n  download = () => {\r\n    downloadWithdrawList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20, { flag: 1, type: 5 });\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => (this.inputKey = value)}\r\n            >\r\n              <Select.Option value=\"order_id\">订单id</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"replace_id\">被赠人ID</Select.Option>\r\n              <Select.Option value=\"1\">创建时间</Select.Option>\r\n              <Select.Option value=\"2\">到账时间</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              onChange={e => (this.inputValue = e.target.value)}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.reqData.start_time = val[0];\r\n                this.reqData.end_time = val[1];\r\n              }}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => (this.reqData.order_status = value)}\r\n            >\r\n              <Select.Option value=\"\">订单状态</Select.Option>\r\n              <Select.Option value=\"1\">待审核</Select.Option>\r\n              <Select.Option value=\"2\">处理中</Select.Option>\r\n              <Select.Option value=\"3\">已提交</Select.Option>\r\n              <Select.Option value=\"4\">已成功</Select.Option>\r\n              <Select.Option value=\"5\">已失败</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={() => this.onSearchData(1, 20)} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.onSearchData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.onSearchData(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 2200, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title={\r\n            this.action === \"check\"\r\n              ? \"审核信息\"\r\n              : this.action === \"risk\"\r\n              ? \"资金明细\"\r\n              : \"运营备注\"\r\n          }\r\n          visible={this.state.isDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            detailRecord={this.detailRecord}\r\n            action={this.action}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditFormShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditFormShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            footer={null}\r\n            width=\"70%\"\r\n          >\r\n            <EditForm record={this.editRecord} />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"申请费率\",\r\n      dataIndex: \"handling_fee\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"实际费率\",\r\n      dataIndex: \"gold\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"兑换方式\",\r\n      dataIndex: \"order_type\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"被赠人ID\",\r\n      dataIndex: \"replace_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"被赠人昵称\",\r\n      dataIndex: \"replace_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"待审核\";\r\n            break;\r\n          case \"2\":\r\n            word = \"处理中\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已提交\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已成功\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已失败\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 150,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 150,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton\r\n            onClick={() => this.getDetail(record, \"check\")}\r\n            type=\"default\"\r\n          >\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <Popover\r\n            content={record.user_remark}\r\n            title={record.user_id + \"用户备注\"}\r\n            trigger=\"click\"\r\n          >\r\n            <LinkButton type=\"default\">用户备注</LinkButton>\r\n          </Popover>\r\n          <LinkButton\r\n            onClick={() => this.getDetail(record, \"operatorRemark\")}\r\n            type=\"default\"\r\n          >\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  getDetail = async (record, action) => {\r\n    this.action = action;\r\n    this.detailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.user_id\r\n    };\r\n    const res =\r\n      action === \"risk\"\r\n        ? await userDetail(1, 20, record.user_id)\r\n        : action === \"check\"\r\n        ? await reviewInfo(1, 20, record.order_id)\r\n        : await remarkInfo(1, 20, record.order_id);\r\n    if (res.status === 0) {\r\n      this.detailRecord.data = res.data;\r\n      this.detailRecord.count = res.count;\r\n    }\r\n    this.setState({ isDetailShow: true });\r\n  };\r\n  edit = record => {\r\n    this.editRecord = record;\r\n    this.setState({ isEditFormShow: true });\r\n  };\r\n}\r\n\r\nexport default Withdraw_list;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Card, message, Input, Button, Form, Radio, Select } from \"antd\";\r\nimport { getConfigList, setGiftConfig } from \"../../../api/index\";\r\n\r\nclass Channel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  getUsers = async () => {\r\n    let reqData = {\r\n      conf_key: \"give_info\",\r\n      get_val: 1\r\n    };\r\n    const res = await getConfigList(reqData);\r\n    if (res.status === 0) {\r\n      this.resData = res.data;\r\n    } else {\r\n      message.info(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    return (\r\n      <Card\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              icon=\"reload\"\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Form\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 20 }}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <Form.Item label=\"品牌\">\r\n            {getFieldDecorator(\"package_id\", {})(\r\n              // <Select defaultValue=\"请选择\">\r\n              //   <Select.Option value=\"jack\">Jack</Select.Option>\r\n              //   <Select.Option value=\"lucy\">Lucy</Select.Option>\r\n              // </Select>\r\n              <Radio.Group>\r\n                <Radio value={1}>博臣娱乐</Radio>\r\n                <Radio value={0}>机器人首领</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"开关\">\r\n            {getFieldDecorator(\"is_close\", {\r\n              initialValue: 1\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={0}>开启</Radio>\r\n                <Radio value={1}>关闭</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"赠送区间\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"min_amount\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                },\r\n                {\r\n                  validator: (rule, value, callback) => {\r\n                    if (value < 0) {\r\n                      callback(\"金额不能为负\"); //如果还没填写，则不进行验证\r\n                    }\r\n                    if (!value) {\r\n                      callback();\r\n                    }\r\n                    callback();\r\n                  }\r\n                }\r\n              ]\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"max_amount\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                },\r\n                {\r\n                  validator: (rule, value, callback) => {\r\n                    if (!value) {\r\n                      callback(); //如果还没填写，则不进行一致性验证\r\n                    }\r\n                    if (value < getFieldValue(\"min_amount\")) {\r\n                      callback(\"最大面值小于最小面值\");\r\n                    }\r\n                    if (value < 0) {\r\n                      callback(\"金额不能为负\");\r\n                    }\r\n                    callback();\r\n                  }\r\n                }\r\n              ]\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ offset: 4 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n              disabled\r\n            >\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      console.log(value);\r\n      if (!err) {\r\n        console.log(this.resData);\r\n        const { id, name, conf_val, conf_key } = this.resData;\r\n        let reqData = {\r\n          id,\r\n          name,\r\n          ...value,\r\n          action: \"edit\",\r\n          conf_key,\r\n          give_info: conf_val,\r\n          version: \"V2.0\"\r\n        };\r\n        // reqData.give_info = new_conf_val;\r\n        const res = await setGiftConfig(reqData);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功:\" + res.msg);\r\n          this.getUsers();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\nconst WrappedChannel = Form.create()(Channel);\r\n\r\nexport default withRouter(WrappedChannel);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Input, Select, message, Modal } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n  getAIList,\r\n  reqLoadGold,\r\n  setGameUserNickName,\r\n  changeInternalUserBalance\r\n} from \"../../../api\";\r\n\r\nclass Withdraw_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      minGold: \"\",\r\n      maxGold: \"\"\r\n    };\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getAIList(page, limit, 5);\r\n    this.setState({\r\n      data: result.data.game_user,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  onSearchData = async () => {\r\n    let value = {\r\n      [this.filed]: this.input.input.value\r\n    };\r\n    const result = await getAIList(1, 20, 5, value);\r\n    this.setState({\r\n      data: result.data.game_user,\r\n      count: parseInt(result.count)\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => (this.filed = value)}\r\n            >\r\n              <Select.Option value=\"game_nick\">昵称</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              ref={Input => (this.input = Input)}\r\n            />\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <LinkButton onClick={this.changeGold}>批量增减金币</LinkButton>\r\n        <LinkButton onClick={this.changeNickname}>批量修改昵称</LinkButton>\r\n        <br />\r\n        <Table\r\n          rowSelection={this.rowSelection()}\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"game_nick\"\r\n    },\r\n    {\r\n      title: \"账户余额\",\r\n      dataIndex: \"game_gold\"\r\n    },\r\n    {\r\n      title: \"实时余额\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.check(record)}>查看</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  rowSelection = () => {\r\n    return {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.selectedRows = selectedRows;\r\n      },\r\n      getCheckboxProps: record => ({\r\n        // disabled: record.name === \"Disabled User\", // Column configuration not to be checked\r\n        // name: record.name\r\n      })\r\n    };\r\n  };\r\n  check = async record => {\r\n    const res = await reqLoadGold(record.id);\r\n    message.info(res.data[0].game_gold);\r\n  };\r\n  changeGold = async () => {\r\n    if (!this.selectedRows || !this.selectedRows[0]) {\r\n      message.error(\"user_id为空，请至少选择1位user_id\");\r\n    } else {\r\n      console.log(this.selectedRows);\r\n      Modal.confirm({\r\n        title: \"添加金额区间\",\r\n        okText: \"提交\",\r\n        okType: \"primary\",\r\n        width: \"30%\",\r\n        onOk: () => {\r\n          let { minGold, maxGold } = this.state;\r\n          if (minGold && maxGold) {\r\n            if (minGold > maxGold) {\r\n              message.error(\"请确认最大值大于最小值\");\r\n            } else {\r\n              this.handleOk(minGold, maxGold);\r\n            }\r\n          } else {\r\n            message.error(\"请输入有效值\");\r\n          }\r\n        },\r\n        content: (\r\n          <div>\r\n            <div>金额区间：</div>\r\n            <Input\r\n              type=\"text\"\r\n              style={{ width: \"40%\" }}\r\n              placeholder=\"￥最小值\"\r\n              // value={this.state.minGold}\r\n              // onChange={e => {\r\n              //   this.setState({ minGold: e.target.value });\r\n              // }}\r\n              onBlur={e => this.setState({ minGold: e.target.value })}\r\n              // ref={Input => (this.minInput = Input)}\r\n            />\r\n            --\r\n            <Input\r\n              type=\"text\"\r\n              style={{ width: \"40%\" }}\r\n              placeholder=\"￥最大值\"\r\n              onBlur={e => this.setState({ maxGold: e.target.value })}\r\n              // ref={Input => (this.maxInput = Input)}\r\n            />\r\n          </div>\r\n        )\r\n      });\r\n    }\r\n  };\r\n  handleOk = async (minGold, maxGold) => {\r\n    let amount = this.randNum(minGold, maxGold);\r\n    for (let i = 0; i < this.selectedRows.length; i++) {\r\n      let user_id = this.selectedRows[i].id;\r\n      const res = await changeInternalUserBalance(user_id, amount);\r\n      message.info(res.msg);\r\n    }\r\n    this.getUsers(1, 20);\r\n  };\r\n  randNum = (min, max) => {\r\n    min = parseInt(min);\r\n    max = parseInt(max);\r\n    var Range = max - min;\r\n    var Rand = Math.random();\r\n    var num = min + Math.round(Rand * Range); //四舍五入\r\n    return num;\r\n  };\r\n  changeNickname = async () => {\r\n    if (this.selectedRows && this.selectedRows[0]) {\r\n      for (let i = 0; i < this.selectedRows.length; i++) {\r\n        let { id } = this.selectedRows[i];\r\n        let game_nick = \"VIP\" + this.randNum(100000, 999999);\r\n        const res = await setGameUserNickName(id, game_nick);\r\n        message.info(res.msg);\r\n      }\r\n      this.getUsers(1, 20);\r\n    } else {\r\n      message.error(\"user_id为空，请至少选择1位user_id\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default Withdraw_list;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\r\nimport { proxy_changeGold } from \"../../../api/index\";\r\n\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const record = props.record;\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        let obj = {\r\n          task_type: 1,\r\n          \"params[user_id]\": record.id,\r\n          \"params[amount]\": value.amount,\r\n          \"params[reason]\": value.reason,\r\n          \"params[user_name]\": record.id,\r\n          \"params[proxy_user_id]\": record.proxy_pid,\r\n          \"params[package_id]\": record.package_id\r\n        };\r\n        console.log(\"proxy_changeGold:--------------------\", obj);\r\n        const res = await proxy_changeGold(obj);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\" + res.msg);\r\n          props.cancel();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Form labelCol={{ span: 4 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\r\n      <Form.Item label=\"金额\">\r\n        {getFieldDecorator(\"amount\", {\r\n          rules: [{ required: true, message: \"必须为数字，减少时金额为负\" }]\r\n        })(\r\n          <Input\r\n            placeholder=\"必须为数字，减少时金额为负\"\r\n            style={{ width: \"60%\" }}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"备注\">\r\n        {getFieldDecorator(\"reason\", {\r\n          rules: [{ required: true }]\r\n        })(\r\n          <Input.TextArea\r\n            placeholder=\"请输入内容\"\r\n            autoSize={{ minRows: 4, maxRows: 10 }}\r\n            style={{ width: \"60%\" }}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          确定\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","export function reverseNumber(num) {\r\n  return (Math.round(num * 1000000) / 1000000).toFixed(4);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, Input, message, Button } from \"antd\";\r\nimport {\r\n  getProxyUserList,\r\n  changeProxyUserProxyPid,\r\n  getProxyUser\r\n} from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport Myself from \"./nextlevel.jsx\";\r\nimport BalanceChanged from \"./BalanceChanged\";\r\nimport { reverseNumber } from \"../../../utils/commonFuntion\";\r\n\r\nclass NextLevel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: \"\"\r\n    };\r\n  }\r\n  onSearchData = async (page, limit) => {\r\n    let reqdata = { page, limit, proxy_pid: this.props.pid };\r\n    const res = await getProxyUserList(reqdata);\r\n    if (res.status === 0 && res.data) {\r\n      this.setState({\r\n        data: res.data.proxy_user,\r\n        count: parseInt(res.count)\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.onSearchData(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 10,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.onSearchData(page, pageSize);\r\n            }\r\n          }}\r\n        />\r\n        <Modal\r\n          title={`[ID:${this.pid}]直属下级列表`}\r\n          visible={this.state.isAddDataShow}\r\n          style={{ top: this.props.topDistance + 40 }}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n          mask={false}\r\n          maskClosable={false}\r\n          width=\"60%\"\r\n        >\r\n          <Myself pid={this.pid} topDistance={this.props.topDistance + 40} />\r\n        </Modal>\r\n        <Modal\r\n          title={`[代理:${this.proxyID}]资金变动`}\r\n          visible={this.state.isChangeBalanceShow}\r\n          onCancel={() => {\r\n            this.setState({ isChangeBalanceShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <BalanceChanged\r\n            record={this.record}\r\n            cancel={() => {\r\n              this.setState({ isChangeBalanceShow: false });\r\n            }}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"proxy_nick\"\r\n    },\r\n    {\r\n      title: \"上级ID\",\r\n      dataIndex: \"proxy_pid\"\r\n    },\r\n    {\r\n      title: \"代理余额[点击调整]\",\r\n      dataIndex: \"balance\",\r\n      render: text => {\r\n        return <span>{reverseNumber(text)}</span>;\r\n      },\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.changeBalance(record);\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton\r\n            type=\"primary\"\r\n            onClick={() => this.nextLevel(record)}\r\n            size=\"small\"\r\n          >\r\n            下级\r\n          </LinkButton>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <LinkButton\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => this.changePid(record)}\r\n          >\r\n            转移\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"实时余额\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button onClick={() => this.checkBalance(record)} size=\"small\">\r\n            查看\r\n          </Button>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  nextLevel = record => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n    this.pid = record.id;\r\n  };\r\n  changePid = record => {\r\n    Modal.confirm({\r\n      title: \"修改上级代理\",\r\n      content: (\r\n        <Input\r\n          onBlur={e => this.setState({ new_proxy_user_id: e.target.value })}\r\n        ></Input>\r\n      ),\r\n      onOk: async () => {\r\n        const res = await changeProxyUserProxyPid({\r\n          id: record.id,\r\n          proxy_user_id: this.state.new_proxy_user_id\r\n        });\r\n        if (res.status === 0) {\r\n          message.success(res.msg || \"操作成功\");\r\n          this.onSearchData(1, 20);\r\n        } else {\r\n          message.error(res.msg || \"操作失败\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n  changeBalance = record => {\r\n    this.proxyID = record.id;\r\n    this.record = record;\r\n    this.setState({\r\n      isChangeBalanceShow: true\r\n    });\r\n  };\r\n  checkBalance = async record => {\r\n    let reqData = {\r\n      page: 1,\r\n      limit: 10,\r\n      id: record.id\r\n    };\r\n    const res = await getProxyUser(reqData);\r\n    if (res.status === 0) {\r\n      Modal.success({\r\n        title: \"实时余额\",\r\n        content: `代理${record.id}实时余额是 : ${\r\n          res.data ? res.data[0].balance : \"0.00\"\r\n        }`\r\n      });\r\n    } else {\r\n      message.info(res.msg || \"操作失败\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default NextLevel;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, Icon, Input, Button, message } from \"antd\";\r\nimport {\r\n  getProxyUserList,\r\n  changeProxyUserProxyPid,\r\n  getProxyUser\r\n} from \"../../../api/index\";\r\nimport NextLevel from \"./nextlevel\";\r\nimport BalanceChanged from \"./BalanceChanged\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport { reverseNumber } from \"../../../utils/commonFuntion\";\r\n\r\nclass ProxySetting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: \"\"\r\n    };\r\n  }\r\n  onSearchData = async (page, limit) => {\r\n    // let reqdata = { page, limit, id: 232843783 };\r\n    let id = this.input.input.value;\r\n    // id = 232843783;\r\n    var reg = new RegExp(\"^[0-9]*$\");\r\n    if (!id || !reg.test(id)) {\r\n      message.error(\"请输入有效id\");\r\n    } else {\r\n      let reqdata = { page, limit, id: id };\r\n      const res = await getProxyUserList(reqdata);\r\n      if (res.status === 0) {\r\n        this.setState({\r\n          data: res.data.proxy_user,\r\n          count: parseInt(res.count)\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // componentDidMount() {\r\n  //   this.onSearchData(1, 20);\r\n  // }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入代理ID\"\r\n              style={{ width: 150 }}\r\n              ref={input => (this.input = input)}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={() => this.onSearchData(1, 20)} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n          </span>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.onSearchData(page, pageSize);\r\n            }\r\n          }}\r\n        />\r\n        {this.state.isAddDataShow && (\r\n          <Modal\r\n            title={`[ID:${this.pid}]直属下级列表`}\r\n            visible={this.state.isAddDataShow}\r\n            style={{ top: 20 }}\r\n            onCancel={() => {\r\n              this.setState({ isAddDataShow: false });\r\n            }}\r\n            footer={null}\r\n            mask={false}\r\n            maskClosable={false}\r\n            // maskStyle={{\r\n            //   backgroundColor: \"#eee\",\r\n            //   color: \"#ddd\"\r\n            // }}\r\n            width=\"60%\"\r\n          >\r\n            <NextLevel pid={this.pid} topDistance={20} />\r\n          </Modal>\r\n        )}\r\n        {this.state.isChangeBalanceShow && (\r\n          <Modal\r\n            title={`[代理:${this.proxyID}]资金变动`}\r\n            visible={this.state.isChangeBalanceShow}\r\n            onCancel={() => {\r\n              this.setState({ isChangeBalanceShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <BalanceChanged\r\n              record={this.record}\r\n              cancel={() => {\r\n                this.setState({ isChangeBalanceShow: false });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"proxy_nick\"\r\n    },\r\n    {\r\n      title: \"上级ID\",\r\n      dataIndex: \"proxy_pid\"\r\n    },\r\n    {\r\n      title: \"代理余额[点击调整]\",\r\n      dataIndex: \"balance\",\r\n      render: text => {\r\n        return <span>{reverseNumber(text)}</span>;\r\n      },\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.changeBalance(record);\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.nextLevel(record)}\r\n            size=\"small\"\r\n          >\r\n            下级\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => this.changePid(record)}\r\n          >\r\n            转移\r\n          </Button>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"实时余额\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button onClick={() => this.checkBalance(record)} size=\"small\">\r\n            查看\r\n          </Button>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  nextLevel = record => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n    this.pid = record.id;\r\n  };\r\n  changePid = record => {\r\n    Modal.confirm({\r\n      title: \"修改上级代理\",\r\n      content: (\r\n        <Input\r\n          onBlur={e => this.setState({ new_proxy_user_id: e.target.value })}\r\n        ></Input>\r\n      ),\r\n      onOk: async () => {\r\n        const res = await changeProxyUserProxyPid({\r\n          id: record.id,\r\n          proxy_user_id: this.state.new_proxy_user_id\r\n        });\r\n        if (res.status === 0) {\r\n          message.success(res.msg || \"操作成功\");\r\n          this.onSearchData(1, 20);\r\n        } else {\r\n          message.error(res.msg || \"操作失败\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n  changeBalance = record => {\r\n    this.proxyID = record.id;\r\n    this.record = record;\r\n    this.setState({\r\n      isChangeBalanceShow: true\r\n    });\r\n  };\r\n  checkBalance = async record => {\r\n    let reqData = {\r\n      page: 1,\r\n      limit: 10,\r\n      id: record.id\r\n    };\r\n    const res = await getProxyUser(reqData);\r\n    if (res.status === 0) {\r\n      Modal.success({\r\n        title: \"实时余额\",\r\n        content: `代理${record.id}实时余额是 : ${\r\n          res.data ? res.data[0].balance : \"0.00\"\r\n        }`\r\n      });\r\n    } else {\r\n      message.info(res.msg || \"操作失败\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default ProxySetting;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data } = this.props.detailRecord;\r\n    console.log(data);\r\n\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey={(record,index)=>`${index}`}\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"check\") {\r\n      return [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    } else if (this.props.action === \"risk\") {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React from \"react\";\r\nimport { Form, Input, Radio, message } from \"antd\";\r\nimport { orderWithDrawReview, withDrawRemark } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\n\r\nclass EditForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const data = this.props.editData;\r\n    let review_status = parseInt(data.review_status);\r\n    let status = parseInt(data.status);\r\n    let orderStatusShow,\r\n      reviewShow,\r\n      confirmButtonShow,\r\n      submitRadio,\r\n      successRadio,\r\n      failRadio,\r\n      submitRadioChecked,\r\n      successRadioChecked,\r\n      failRadioChecked;\r\n    switch (status) {\r\n      case 1:\r\n        orderStatusShow = true;\r\n        confirmButtonShow = true;\r\n        successRadio = true;\r\n        failRadio = true;\r\n        break;\r\n      case 2:\r\n        orderStatusShow = true;\r\n        reviewShow = true;\r\n        submitRadio = true;\r\n        successRadio = true;\r\n        failRadio = true;\r\n        switch (review_status) {\r\n          case 1:\r\n            submitRadio = false;\r\n            break;\r\n          case 2:\r\n            successRadio = false;\r\n            break;\r\n          case 3:\r\n            failRadio = false;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      case 3:\r\n        orderStatusShow = true;\r\n        confirmButtonShow = true;\r\n        submitRadio = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return (\r\n      <Form labelCol={{ span: 4 }} labelAlign=\"left\">\r\n        <Form.Item label=\"订单ID\">\r\n          <Input\r\n            style={{ width: \"60%\" }}\r\n            value={data.order_id}\r\n            readOnly\r\n          ></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"用户ID\">\r\n          <Input style={{ width: \"60%\" }} value={data.user_id} readOnly></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"金额\">\r\n          <Input style={{ width: \"60%\" }} value={data.amount} readOnly></Input>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"订单状态:\"\r\n          style={orderStatusShow ? {} : { display: \"none\" }}\r\n        >\r\n          <Radio.Group\r\n            defaultValue={review_status}\r\n            onChange={e => (this.orderStatus = e.target.value)}\r\n          >\r\n            <Radio\r\n              value={1}\r\n              disabled={submitRadio}\r\n              checked={submitRadioChecked}\r\n            >\r\n              提交人工代提\r\n            </Radio>\r\n            <Radio\r\n              value={2}\r\n              disabled={successRadio}\r\n              checked={successRadioChecked}\r\n            >\r\n              已成功\r\n            </Radio>\r\n            <Radio value={3} disabled={failRadio} checked={failRadioChecked}>\r\n              已失败\r\n            </Radio>\r\n          </Radio.Group>\r\n          <LinkButton\r\n            onClick={this.sumbitOrderStatus}\r\n            style={confirmButtonShow ? {} : { display: \"none\" }}\r\n          >\r\n            确认\r\n          </LinkButton>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"复审:\" style={reviewShow ? {} : { display: \"none\" }}>\r\n          <LinkButton\r\n            onClick={() => {\r\n              this.review(1);\r\n            }}\r\n          >\r\n            通过\r\n          </LinkButton>\r\n          <LinkButton\r\n            onClick={() => {\r\n              this.review(2);\r\n            }}\r\n          >\r\n            拒绝\r\n          </LinkButton>\r\n        </Form.Item>\r\n        <Form.Item label=\"备注[用户]\">\r\n          <Input\r\n            style={{ width: \"60%\" }}\r\n            onChange={e => {\r\n              this.remarkUser = e.target.value;\r\n            }}\r\n          ></Input>\r\n          <LinkButton onClick={this.sumbitRemarkUser}>确认</LinkButton>\r\n        </Form.Item>\r\n        <Form.Item label=\"备注[运营]\">\r\n          <Input\r\n            style={{ width: \"60%\" }}\r\n            onChange={e => {\r\n              this.remarkOperator = e.target.value;\r\n            }}\r\n          ></Input>\r\n          <LinkButton onClick={this.sumbitRemarkOperator}>确认</LinkButton>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  sumbitOrderStatus = async () => {\r\n    const data = this.props.editData;\r\n    if (!this.orderStatus) {\r\n      message.error(\"请选择订单状态！\");\r\n    } else {\r\n      let reqData = {\r\n        order_id: data.order_id,\r\n        review_status: this.orderStatus,\r\n        user_id: data.user_id,\r\n        review_type: 1,\r\n        is_pass: 1\r\n      };\r\n      const res = await orderWithDrawReview(reqData);\r\n      if (res.status === 0) {\r\n        message.success(\"操作成功\");\r\n      } else {\r\n        message.error(\"操作失败\");\r\n      }\r\n      this.props.onclose();\r\n    }\r\n  };\r\n  review = async is_pass => {\r\n    const data = this.props.editData;\r\n    let reqData = {\r\n      order_id: data.order_id,\r\n      review_status: data.review_status,\r\n      user_id: data.user_id,\r\n      review_type: 2,\r\n      is_pass: is_pass\r\n    };\r\n    const res = await orderWithDrawReview(reqData);\r\n    if (res.status === 0) {\r\n      message.info(res.msg);\r\n    } else {\r\n      message.error(\"操作失败\");\r\n    }\r\n    this.props.onclose();\r\n  };\r\n  sumbitRemarkUser = async () => {\r\n    console.log(this.remarkUser);\r\n    const data = this.props.editData;\r\n    if (!this.remarkUser) {\r\n      message.error(\"请输入有效内容！\");\r\n    } else {\r\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 1);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n      } else {\r\n        message.error(res.msg);\r\n      }\r\n    }\r\n  };\r\n  sumbitRemarkOperator = async () => {\r\n    console.log(this.remarkOperator);\r\n    const data = this.props.editData;\r\n    if (!this.remarkOperator) {\r\n      message.error(\"请输入有效内容！\");\r\n    } else {\r\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 2);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n      } else {\r\n        message.error(res.msg);\r\n      }\r\n    }\r\n  };\r\n}\r\nexport default EditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  Popover\r\n} from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport {\r\n  withDraw,\r\n  downloadWithdrawList,\r\n  userDetail,\r\n  reviewInfo,\r\n  remarkInfo,\r\n  auditOrder\r\n} from \"../../../api\";\r\nimport WrappedComponent from \"./details\";\r\nimport WrappedEdit from \"./edit\";\r\n\r\nclass Daiti extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.reqData = {\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: 3\r\n    };\r\n    this.inputKey = \"\";\r\n    this.inputValue = \"\";\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isBindInfoShow: false\r\n    };\r\n  }\r\n  getUsers = async (page, pageSize, reqData) => {\r\n    const result = await withDraw(page, pageSize, reqData);\r\n    if (result.data) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    }\r\n    if (result.status === -1) {\r\n      this.setState({\r\n        data: [],\r\n        count: 0\r\n      });\r\n    }\r\n  };\r\n  onSearchData = (page, limit) => {\r\n    //处理要发送的数据\r\n    let reqData = {\r\n      flag: 1,\r\n      ...this.reqData\r\n    };\r\n    if (this.inputKey === \"1\" || this.inputKey === \"2\") {\r\n      reqData.time_type = this.inputKey;\r\n    } else if (this.inputKey) {\r\n      reqData[this.inputKey] = this.inputValue;\r\n    }\r\n    this.getUsers(page, limit, reqData);\r\n  };\r\n  download = () => {\r\n    downloadWithdrawList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20, { flag: 1, type: 3 });\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <MyDatePicker\r\n              handleValue={val => {\r\n                this.reqData.start_time = val[0];\r\n                this.reqData.end_time = val[1];\r\n              }}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => (this.inputKey = value)}\r\n            >\r\n              <Select.Option value=\"order_id\">订单id</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"replace_id\">代提ID</Select.Option>\r\n              <Select.Option value=\"1\">创建时间</Select.Option>\r\n              <Select.Option value=\"2\">到账时间</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              onChange={e => (this.inputValue = e.target.value)}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => (this.reqData.order_status = value)}\r\n            >\r\n              <Select.Option value=\"\">订单状态</Select.Option>\r\n              <Select.Option value=\"1\">待审核</Select.Option>\r\n              <Select.Option value=\"2\">处理中</Select.Option>\r\n              <Select.Option value=\"3\">已提交</Select.Option>\r\n              <Select.Option value=\"4\">已成功</Select.Option>\r\n              <Select.Option value=\"5\">已失败</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <LinkButton onClick={() => this.onSearchData(1, 20)} size=\"default\">\r\n              <Icon type=\"search\" />\r\n            </LinkButton>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <LinkButton\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n              icon=\"reload\"\r\n              size=\"default\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.onSearchData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.setState({\r\n                pageSize: size\r\n              });\r\n              this.onSearchData(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 2600, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title={\r\n            this.action === \"check\"\r\n              ? \"审核信息\"\r\n              : this.action === \"risk\"\r\n              ? \"资金明细\"\r\n              : \"运营备注\"\r\n          }\r\n          visible={this.state.isDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            detailRecord={this.detailRecord}\r\n            action={this.action}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditShow: false });\r\n            }}\r\n            footer={null}\r\n            width=\"50%\"\r\n          >\r\n            <WrappedEdit\r\n              editData={this.editData}\r\n              onclose={() => {\r\n                this.setState({ isEditShow: false });\r\n              }}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"实际费率\",\r\n      dataIndex: \"platform_rate\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"兑换方式\",\r\n      dataIndex: \"order_type\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"兑换账号\",\r\n      dataIndex: \"pay_account\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"账号名称\",\r\n      dataIndex: \"pay_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"待审核\";\r\n            break;\r\n          case \"2\":\r\n            word = \"处理中\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已提交\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已成功\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已失败\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"代提ID\",\r\n      dataIndex: \"replace_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 200,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"风控\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton\r\n            type=\"default\"\r\n            onClick={() => this.getDetail(record, \"risk\")}\r\n          >\r\n            风控\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton\r\n            onClick={() => this.getDetail(record, \"check\")}\r\n            type=\"default\"\r\n          >\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <Popover\r\n            content={record.user_remark}\r\n            title={record.user_id + \"用户备注\"}\r\n            trigger=\"click\"\r\n          >\r\n            <LinkButton type=\"default\">用户备注</LinkButton>\r\n          </Popover>\r\n          <LinkButton\r\n            onClick={() => this.getDetail(record, \"operatorRemark\")}\r\n            type=\"default\"\r\n          >\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  getDetail = async (record, action) => {\r\n    this.action = action;\r\n    this.detailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.user_id\r\n    };\r\n    const res =\r\n      action === \"risk\"\r\n        ? await userDetail(1, 20, record.user_id)\r\n        : action === \"check\"\r\n        ? await reviewInfo(1, 20, record.order_id)\r\n        : await remarkInfo(1, 20, record.order_id);\r\n    if (res.status === 0) {\r\n      this.detailRecord.data = res.data;\r\n      this.detailRecord.count = res.count;\r\n    }\r\n    this.setState({ isDetailShow: true });\r\n  };\r\n  edit = async record => {\r\n    let reqData = {\r\n      flag: 1,\r\n      type: 3,\r\n      order_id: record.order_id\r\n    };\r\n    const res = await auditOrder(reqData);\r\n    if (res.status === 0) {\r\n      this.editData = res.data[0];\r\n      this.setState({ isEditShow: true });\r\n    } else {\r\n      message.error(\"操作失败\");\r\n    }\r\n  };\r\n}\r\n\r\nexport default Daiti;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  message,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  Switch,\r\n  Radio,\r\n  Divider\r\n} from \"antd\";\r\nimport { getConfigList, saveWithDrawChannel } from \"../../../api/index\";\r\n\r\nclass Channel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n  getUsers = async () => {\r\n    let reqData = {\r\n      conf_key: \"withdraw_channel_info\",\r\n      get_val: 1\r\n    };\r\n    const res = await getConfigList(reqData);\r\n    if (res.status === 0 && res.data) {\r\n      this.initialData = res.data;\r\n      this.setState({ data: JSON.parse(res.data.conf_val) });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const data = this.state.data;\r\n    return (\r\n      <Card\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              icon=\"reload\"\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Form\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 20 }}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <Form.Item label=\"提款支付宝\">\r\n            {getFieldDecorator(\"alipay[is_close]\", {\r\n              initialValue:\r\n                data.length !== 0 && data.alipay.is_close === 1 ? true : false,\r\n              valuePropName: \"checked\"\r\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\r\n          </Form.Item>\r\n          <Divider></Divider>\r\n          <Form.Item label=\"提款银行卡\">\r\n            {getFieldDecorator(\"bankcard[is_close]\", {\r\n              initialValue: data.length !== 0 && data.bankcard.is_close === 1 ? true : false,\r\n              valuePropName: \"checked\"\r\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"古都银行卡状态\">\r\n            {getFieldDecorator(\"bankcard[channel][2][is_close]\", {\r\n              initialValue: data.length !== 0 && parseInt(data.bankcard.channel[0].is_close)\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"显示名称\">\r\n            {getFieldDecorator(\"bankcard[channel][2][channel_name]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.bankcard.channel[0].channel_name\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][2][min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.bankcard.channel[0].min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][2][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.bankcard.channel[0].max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"渠道排序\">\r\n            {getFieldDecorator(\"bankcard[channel][2][sort]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.bankcard.channel[0].sort\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"第三方代付状态\">\r\n            {getFieldDecorator(\"bankcard[channel][3][is_close]\", {\r\n              initialValue: data.length !== 0 && parseInt(data.bankcard.channel[1].is_close)\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"显示名称\">\r\n            {getFieldDecorator(\"bankcard[channel][3][channel_name]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.bankcard.channel[1].channel_name\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][3][min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.bankcard.channel[1].min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][3][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.bankcard.channel[1].max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"渠道排序\">\r\n            {getFieldDecorator(\"bankcard[channel][3][sort]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.bankcard.channel[1].sort\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"onepay状态\">\r\n            {getFieldDecorator(\"bankcard[channel][7][is_close]\", {\r\n              initialValue: data.length !== 0 && parseInt(data.bankcard.channel[2].is_close)\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"显示名称\">\r\n            {getFieldDecorator(\"bankcard[channel][7][channel_name]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.bankcard.channel[2].channel_name\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][7][min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.bankcard.channel[2].min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][7][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.bankcard.channel[2].max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"渠道排序\">\r\n            {getFieldDecorator(\"bankcard[channel][7][sort]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.bankcard.channel[2].sort\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n\r\n          <Divider></Divider>\r\n          <Form.Item label=\"人工兑换\">\r\n            {getFieldDecorator(\"artificial[is_close]\", {\r\n              initialValue:\r\n              data.length !== 0 && data.artificial.is_close === 1 ? true : false,\r\n              valuePropName: \"checked\"\r\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"artificial[min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.artificial.min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"artificial[max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.artificial.max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"费率\">\r\n            {getFieldDecorator(\"artificial[rate]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data.length !== 0 && data.artificial.rate\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 4 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let { id, name } = this.initialData;\r\n      let obj = {};\r\n      value.bankcard.channel.forEach((item, index) => {\r\n        for (const key in item) {\r\n          obj[`bankcard[channel][${index}][${key}]`] = item[key];\r\n        }\r\n      });\r\n\r\n      obj[\"bankcard[is_close]\"] = value.bankcard.is_close ? \"on\" : \"off\";\r\n      obj[\"alipay[is_close]\"] = value.alipay.is_close ? \"on\" : \"off\";\r\n      for (const key in value.artificial) {\r\n        obj[`artificial[${key}]`] = value.artificial[key];\r\n      }\r\n      if (!err) {\r\n        const res = await saveWithDrawChannel(id, name, obj);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功:\" + res.msg);\r\n          console.log(res);\r\n          this.getUsers();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\nconst WrappedChannel = Form.create()(Channel);\r\n\r\nexport default withRouter(WrappedChannel);\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './not-found.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { Table} from \"antd\";\r\n// import {  Table,Button} from 'element-react';\r\n// import \"element-theme-default\";\r\n\r\nconst DateGameReport = props => {\r\n  let initColumns = () => [\r\n    {\r\n      title: \"游戏\",\r\n      dataIndex: \"game_name\"\r\n    },\r\n    {\r\n      title: \"玩家总赢额\",\r\n      dataIndex: \"win_statement_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"玩家总输额\",\r\n      dataIndex: \"lose_statement_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"玩家总流水\",\r\n      dataIndex: \"statement_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"盈亏比\",\r\n      dataIndex: \"statement_ratio\",\r\n      width: 150\r\n    }\r\n  ];\r\n  return (\r\n    <Table\r\n      bordered\r\n      rowKey={(record, index) => `${index}`}\r\n      dataSource={props.data}\r\n      columns={initColumns()}\r\n      size=\"small\"\r\n      // scroll={{ x: 3000 }}\r\n      // footer={this.footerData}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DateGameReport;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Button, Modal } from \"antd\";\r\n// import {  Table,Button} from 'element-react';\r\n// import \"element-theme-default\";\r\nimport { oneDayGameReport } from \"../../../api/index\";\r\nimport DateGameReport from \"./dateGameReport\";\r\n\r\nclass MoreDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: \"\",\r\n      isGameReportShow: false,\r\n      nextLevelData: \"\"\r\n    };\r\n  }\r\n  render() {\r\n    const { data } = this.props.reportData;\r\n    return (\r\n      <div>\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          scroll={{ x: 2000 }}\r\n          // footer={this.footerData}\r\n        />\r\n        <Modal\r\n          title={this.state.date + \"/游戏数据\"}\r\n          width=\"80%\"\r\n          visible={this.state.isGameReportShow}\r\n          onCancel={() => {\r\n            this.setState({ isGameReportShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <DateGameReport data={this.state.nextLevelData} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"getDateReport\") {\r\n      let tableHeader = [\r\n        {\r\n          title: \"日期\",\r\n          dataIndex: \"date\"\r\n        },\r\n        {\r\n          title: \"新增用户\",\r\n          dataIndex: \"regin_user_number\"\r\n        },\r\n        {\r\n          title: \"活跃用户\",\r\n          dataIndex: \"active_user_number\"\r\n        },\r\n        {\r\n          title: \"官方首充用户\",\r\n          dataIndex: \"first_pay_user_number\"\r\n        },\r\n        {\r\n          title: \"官方首充金额\",\r\n          dataIndex: \"first_pay_money_total\"\r\n        },\r\n        {\r\n          title: \"官方充值用户\",\r\n          dataIndex: \"pay_user_number\"\r\n        },\r\n        {\r\n          title: \"官方充值金额\",\r\n          dataIndex: \"pay_money_total\"\r\n        },\r\n        {\r\n          title: \"人工首充用户\",\r\n          dataIndex: \"first_pay_user_number_res\"\r\n        },\r\n        {\r\n          title: \"人工首充金额\",\r\n          dataIndex: \"first_pay_money_total_res\"\r\n        },\r\n        {\r\n          title: \"人工充值用户\",\r\n          dataIndex: \"pay_user_number_res\"\r\n        },\r\n        {\r\n          title: \"人工充值金额\",\r\n          dataIndex: \"pay_money_total_res\"\r\n        },\r\n        {\r\n          title: \"官方兑换用户\",\r\n          dataIndex: \"exchange_user_number\"\r\n        },\r\n        {\r\n          title: \"官方兑换金额\",\r\n          dataIndex: \"exchange_money_total\"\r\n        },\r\n        {\r\n          title: \"人工兑换用户\",\r\n          dataIndex: \"exchange_user_number_res\"\r\n        },\r\n        {\r\n          title: \"人工兑换金额\",\r\n          dataIndex: \"exchange_money_total_res\"\r\n        },\r\n        {\r\n          title: \"玩家总赢额\",\r\n          dataIndex: \"win_statement_total\"\r\n        },\r\n        {\r\n          title: \"玩家总输额\",\r\n          dataIndex: \"lose_statement_total\"\r\n        },\r\n        {\r\n          title: \"玩家总流水\",\r\n          dataIndex: \"statement_total\"\r\n        },\r\n        {\r\n          title: \"盈亏比\",\r\n          dataIndex: \"statement_ratio\"\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          dataIndex: \"\",\r\n          render: (text, record, index) => (\r\n            <span>\r\n              <Button size=\"small\" onClick={() => this.getGameReport(record)}>\r\n                游戏\r\n              </Button>\r\n            </span>\r\n          )\r\n        }\r\n      ];\r\n      return tableHeader;\r\n    }\r\n  };\r\n  footerData = page => {\r\n    console.log(page);\r\n    return (\r\n      <tr>\r\n        <td>合计</td>\r\n        <td style={{ width: 80 }}>regin_user_number</td>\r\n        <td>regin_user_number</td>\r\n        <td>regin_user_number</td>\r\n        <td>regin_user_number</td>\r\n        <td>regin_user_number</td>\r\n      </tr>\r\n    );\r\n  };\r\n  getGameReport = async record => {\r\n    const res = await oneDayGameReport(\r\n      1,\r\n      20,\r\n      this.props.package_id,\r\n      record.date\r\n    );\r\n    this.props.parse(res);\r\n    this.setState({\r\n      date: record.date,\r\n      isGameReportShow: true,\r\n      nextLevelData: res.data\r\n    });\r\n  };\r\n}\r\n\r\nexport default MoreDetail;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Select } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n  dailyReport,\r\n  packageList,\r\n  dateReport,\r\n  gameReport\r\n} from \"../../../api/index\";\r\nimport MoreDetail from \"./details\";\r\nimport moment from \"moment\";\r\nimport MyDatePicker from \"../../../components/MyDatePicker\";\r\nimport DateGameReport from \"./dateGameReport\";\r\n\r\nclass DailyReport extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      packageList: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      reportTable: false,\r\n      isGameReportShow: false\r\n    };\r\n  }\r\n  getInitialData = async () => {\r\n    const res = await packageList();\r\n    // const result = await dailyReportInit(page, limit);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        // data: result.data,\r\n        packageList: res.data\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData();\r\n  }\r\n  render() {\r\n    const packageNode = this.state.packageList.map(item => {\r\n      return (\r\n        <Select.Option value={item.id} key={item.id}>\r\n          {item.name}\r\n        </Select.Option>\r\n      );\r\n    });\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <MyDatePicker\r\n                handleValue={val => {\r\n                  let diffDays = moment(val[1]).diff(moment(val[0]), \"days\");\r\n                  if (diffDays > 7) {\r\n                    message.error(\"请选择时间范围小于7天\");\r\n                  } else {\r\n                    this.startTime = val[0];\r\n                    this.endTime = val[1];\r\n                  }\r\n                }}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.package_id = value)}\r\n              >\r\n                {packageNode}\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <LinkButton onClick={this.onSearchData} size=\"default\">\r\n                <Icon type=\"search\" />\r\n              </LinkButton>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n          </div>\r\n        }\r\n      >\r\n        <div style={{ marginBottom: 20, backgroundColor: \"#ddd\" }}>\r\n          <span style={{ border: \"1px solid #ddd\" }}>\r\n            <b>默认所选品牌7天的统计数据</b>\r\n          </span>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span style={{ border: \"1px solid #ddd\" }}>\r\n            <b>总流水=玩家赢额+(abs)玩家输额</b>\r\n          </span>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span style={{ border: \"1px solid #ddd\" }}>\r\n            <b>盈亏比=(玩家输额(abs) - 玩家赢额) /(玩家输额(abs) + 玩家赢额)</b>\r\n          </span>\r\n        </div>\r\n        <Table\r\n          bordered\r\n          rowKey=\"package_id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          scroll={{ x: 2700 }}\r\n        />\r\n        <Modal\r\n          title=\"按日期查看\"\r\n          width=\"80%\"\r\n          visible={this.state.reportTable}\r\n          onCancel={() => {\r\n            this.setState({ reportTable: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <MoreDetail\r\n            reportData={this.reportData}\r\n            action={this.action}\r\n            package_id={this.package_id}\r\n            parse={this.parseGameData}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"游戏数据\"\r\n          width=\"80%\"\r\n          visible={this.state.isGameReportShow}\r\n          onCancel={() => {\r\n            this.setState({ isGameReportShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <DateGameReport data={this.state.nextLevelData} />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"品牌\",\r\n      dataIndex: \"package_nick\"\r\n    },\r\n    {\r\n      title: \"新增用户\",\r\n      dataIndex: \"regin_user_number\"\r\n    },\r\n    {\r\n      title: \"活跃用户\",\r\n      dataIndex: \"active_user_number\"\r\n    },\r\n    {\r\n      title: \"官方首充用户\",\r\n      dataIndex: \"first_pay_user_number\"\r\n    },\r\n    {\r\n      title: \"官方首充金额\",\r\n      dataIndex: \"first_pay_money_total\"\r\n    },\r\n    {\r\n      title: \"官方充值用户\",\r\n      dataIndex: \"pay_user_number\"\r\n    },\r\n    {\r\n      title: \"官方充值金额\",\r\n      dataIndex: \"pay_money_total\"\r\n    },\r\n    {\r\n      title: \"人工首充用户\",\r\n      dataIndex: \"first_pay_user_number_res\"\r\n    },\r\n    {\r\n      title: \"人工首充金额\",\r\n      dataIndex: \"first_pay_money_total_res\"\r\n    },\r\n    {\r\n      title: \"人工充值用户\",\r\n      dataIndex: \"pay_user_number_res\"\r\n    },\r\n    {\r\n      title: \"人工充值金额\",\r\n      dataIndex: \"pay_money_total_res\"\r\n    },\r\n    {\r\n      title: \"官方兑换用户\",\r\n      dataIndex: \"exchange_user_number\"\r\n    },\r\n    {\r\n      title: \"官方兑换金额\",\r\n      dataIndex: \"exchange_money_total\"\r\n    },\r\n    {\r\n      title: \"人工兑换用户\",\r\n      dataIndex: \"exchange_user_number_res\"\r\n    },\r\n    {\r\n      title: \"人工兑换金额\",\r\n      dataIndex: \"exchange_money_total_res\"\r\n    },\r\n    {\r\n      title: \"玩家总赢额\",\r\n      dataIndex: \"win_statement_total\"\r\n    },\r\n    {\r\n      title: \"玩家总输额\",\r\n      dataIndex: \"lose_statement_total\"\r\n    },\r\n    {\r\n      title: \"玩家总流水\",\r\n      dataIndex: \"statement_total\"\r\n    },\r\n    {\r\n      title: \"盈亏比\",\r\n      dataIndex: \"statement_ratio\"\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDateReport(record)}>\r\n            日期\r\n          </LinkButton>\r\n          <LinkButton onClick={() => this.getGameReport(record)}>\r\n            游戏\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  onSearchData = async () => {\r\n    if (!this.startTime || !this.package_id) {\r\n      message.info(\"请选择时间日期和品牌\");\r\n      return;\r\n    }\r\n    const res = await dailyReport(\r\n      1,\r\n      20,\r\n      this.package_id,\r\n      this.startTime,\r\n      this.endTime\r\n    );\r\n    const newRes = this.parseData(res);\r\n    this.setState({ data: newRes.data, count: newRes.count });\r\n  };\r\n  parseData = res => {\r\n    console.log(\"res:\", res);\r\n    var length = 0;\r\n    var format_data = [];\r\n    if (res.status === 0 && res.data) {\r\n      //用户  (e.active_user_number = e.login_user_number - e.regin_user_number),\r\n      if (res.data.user) {\r\n        res.data.user\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => ((e.package_id = parseInt(e._id.package_id)), delete e._id)\r\n          );\r\n      }\r\n      //充提交易所\r\n      if (res.data.order) {\r\n        res.data.order\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.first_pay_user_number = e.first_pay_user.length),\r\n              (e.pay_user_number = e.pay_user.length),\r\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\r\n              (e.pay_user_number_res = e.pay_user_res.length),\r\n              (e.exchange_user_number = e.exchange_user.length),\r\n              (e.exchange_user_number_res = e.exchange_user_res.length),\r\n              (e.package_id = parseInt(e._id.package_id)),\r\n              delete e._id\r\n            )\r\n          );\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(\r\n            e,\r\n            res.data.order.find(d => d.package_id === e.package_id)\r\n          )\r\n        );\r\n      }\r\n\r\n      //游戏\r\n      if (res.data.game) {\r\n        res.data.game\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.statement_ratio = (\r\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\r\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\r\n              ).toFixed(4)),\r\n              (e.win_statement_total =\r\n                Math.round(e.win_statement_total * 10000) / 10000),\r\n              (e.lose_statement_total =\r\n                Math.round(e.lose_statement_total * 10000) / 10000),\r\n              (e.statement_total =\r\n                Math.round(\r\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\r\n                    10000\r\n                ) / 10000),\r\n              (e.package_id = parseInt(e._id.package_id)),\r\n              delete e._id\r\n            )\r\n          );\r\n\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(\r\n            e,\r\n            res.data.game.find(d => d.package_id === e.package_id)\r\n          )\r\n        );\r\n      }\r\n\r\n      length = res.data.user.length;\r\n      format_data = res.data.user;\r\n      console.log(\"res.data.user assign后\", res.data.user);\r\n    }\r\n\r\n    return {\r\n      code: res.code,\r\n      msg: res.msg,\r\n      count: length,\r\n      data: format_data\r\n    };\r\n  };\r\n  parseDateData = res => {\r\n    console.log(res);\r\n    var length = 0;\r\n    var format_data = [];\r\n    if (res.status === 0 && res.data) {\r\n      //用户 (e.active_user_number = e.login_user_number - e.regin_user_number),\r\n      if (res.data.user) {\r\n        res.data.user.map(e => ((e.date = e._id.login_time), delete e._id));\r\n      }\r\n      //充提交易所\r\n      if (res.data.order) {\r\n        //res.data.order.filter(e => (e && e._id)).map(e => ((e.exchange_money_total = Math.abs(e.exchange_money_total)), (e.date = e._id.create_time), delete e._id));\r\n        res.data.order\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.first_pay_user_number = e.first_pay_user.length),\r\n              (e.pay_user_number = e.pay_user.length),\r\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\r\n              (e.pay_user_number_res = e.pay_user_res.length),\r\n              (e.exchange_user_number = e.exchange_user.length),\r\n              (e.exchange_user_number_res = e.exchange_user_res.length),\r\n              (e.date = e._id.create_time),\r\n              delete e._id\r\n            )\r\n          );\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(e, res.data.order.find(d => d.date === e.date))\r\n        );\r\n      }\r\n      //游戏\r\n      if (res.data.game) {\r\n        //四舍五入保留四位小数\r\n        res.data.game\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.statement_ratio = (\r\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\r\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\r\n              ).toFixed(4)),\r\n              (e.win_statement_total =\r\n                Math.round(e.win_statement_total * 10000) / 10000),\r\n              (e.lose_statement_total =\r\n                Math.round(e.lose_statement_total * 10000) / 10000),\r\n              (e.statement_total =\r\n                Math.round(\r\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\r\n                    10000\r\n                ) / 10000),\r\n              (e.date = e._id.create_time),\r\n              delete e._id\r\n            )\r\n          );\r\n\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(e, res.data.game.find(d => d.date === e.date))\r\n        );\r\n      }\r\n\r\n      // 排序\r\n      res.data.user.sort(\r\n        (a, b) =>\r\n          parseInt(b.date.replace(/-/g, \"\")) -\r\n          parseInt(a.date.replace(/-/g, \"\"))\r\n      );\r\n      length = res.data.user.length;\r\n      format_data = res.data.user;\r\n      console.log(res.data.user);\r\n    }\r\n    return {\r\n      code: res.code,\r\n      msg: res.msg,\r\n      count: length,\r\n      data: format_data\r\n    };\r\n  };\r\n  parseGameData = res => {\r\n    console.log(res);\r\n    //总流水\r\n    if (res.status === 0 && res.data) {\r\n      res.data.map(\r\n        e => (\r\n          (e.statement_ratio = (\r\n            (Math.abs(e.lose_statement_total) - e.win_statement_total) /\r\n            (e.win_statement_total + Math.abs(e.lose_statement_total))\r\n          ).toFixed(4)),\r\n          (e.win_statement_total =\r\n            Math.round(e.win_statement_total * 10000) / 10000),\r\n          (e.lose_statement_total =\r\n            Math.round(e.lose_statement_total * 10000) / 10000),\r\n          (e.statement_total =\r\n            Math.round(\r\n              (e.win_statement_total + Math.abs(e.lose_statement_total)) * 10000\r\n            ) / 10000)\r\n        )\r\n      );\r\n    }\r\n  };\r\n  getDateReport = async record => {\r\n    const res = await dateReport(\r\n      1,\r\n      20,\r\n      record.package_id,\r\n      this.startTime,\r\n      this.endTime\r\n    );\r\n    const reportData = this.parseDateData(res);\r\n    this.reportData = reportData;\r\n    this.action = \"getDateReport\";\r\n    this.setState({ reportTable: true });\r\n  };\r\n  getGameReport = async record => {\r\n    const res = await gameReport(1, 20, this.package_id, record.date);\r\n    this.parseGameData(res);\r\n    this.setState({\r\n      date: record.date,\r\n      isGameReportShow: true,\r\n      nextLevelData: res.data\r\n    });\r\n  };\r\n}\r\n\r\nexport default DailyReport;\r\n","import React from \"react\";\r\nimport { Form, Input, Select, Button, message, Radio } from \"antd\";\r\nimport { editRule } from \"../../../api/index\";\r\nconst EditForm = props => {\r\n  const { getFieldDecorator } = props.form;\r\n  const data = props.data;\r\n  let handleEditSubmit = event => {\r\n    event.preventDefault();\r\n    props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        for (const key in value) {\r\n          if (value[key] === undefined) {\r\n            value[key] = \"\";\r\n          }\r\n        }\r\n        const res = await editRule(data.id, value);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          props.finished();\r\n          props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Form labelCol={{ span: 4 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\r\n      <Form.Item label=\"父级权限\">\r\n        {getFieldDecorator(\"pid\", {\r\n          rules: [{ required: true, message: \"请选择权限\" }],\r\n          initialValue: data.pid\r\n        })(\r\n          <Select style={{ width: \"60%\" }}>\r\n            <Select.Option value={0}>一级权限</Select.Option>\r\n            {props.packageNode}\r\n          </Select>\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"菜单名\">\r\n        {getFieldDecorator(\"name\", {\r\n          rules: [{ required: true, message: \"请输入菜单名\" }],\r\n          initialValue: data.name.replace(/&nbsp;/g, \"\")\r\n        })(<Input style={{ width: \"60%\" }} placeholder=\"菜单名\" />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"模块名\">\r\n        {getFieldDecorator(\"module\", { initialValue: data.module })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"模块名\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"方法名\">\r\n        {getFieldDecorator(\"action\", { initialValue: data.action })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"方法名\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"模板路径\">\r\n        {getFieldDecorator(\"href\", { initialValue: data.href })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"模板路径\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"路由key\">\r\n        {getFieldDecorator(\"key\", { initialValue: data.router_key })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"路由key\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"icon样式\">\r\n        {getFieldDecorator(\"icon\", { initialValue: data.icon })(\r\n          <Input style={{ width: \"60%\" }} placeholder=\"icon样式\" />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"菜单排序\">\r\n        {getFieldDecorator(\"sort\", {\r\n          rules: [{ required: true, message: \"请输入排序值\" }],\r\n          initialValue: data.sort\r\n        })(<Input style={{ width: \"60%\" }} placeholder=\"菜单排序\" />)}\r\n      </Form.Item>\r\n      <Form.Item label=\"显示状态\">\r\n        {getFieldDecorator(\"status\", {\r\n          initialValue: data.status\r\n        })(\r\n          <Radio.Group>\r\n            <Radio value={1}>显示</Radio>\r\n            <Radio value={0}>不显示</Radio>\r\n          </Radio.Group>\r\n        )}\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst WrappedEditForm = Form.create()(EditForm);\r\n\r\nexport default WrappedEditForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Select,\r\n  Button,\r\n  Form\r\n} from \"antd\";\r\nimport { ruleList, addRule, ruleDel } from \"../../../api/index\";\r\nimport LinkButton from \"../../../components/link-button\";\r\nimport WrappedEditForm from \"./edit\";\r\n\r\nclass Rule extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      isEditFormShow: false\r\n    };\r\n  }\r\n  getInitialData = async () => {\r\n    const res = await ruleList();\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: res.count\r\n      });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const packageNode = this.state.data.map(item => {\r\n      return (\r\n        <Select.Option value={item.id} key={item.name}>\r\n          {item.name.replace(/&nbsp;/g, \"-\")}\r\n        </Select.Option>\r\n      );\r\n    });\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"pid\", {\r\n                  rules: [{ required: true, message: \"请选择权限\" }],\r\n                  initialValue: \"0\"\r\n                })(\r\n                  <Select style={{ width: 200 }}>\r\n                    <Select.Option value=\"0\">一级权限</Select.Option>\r\n                    {packageNode}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"name\", {\r\n                  rules: [{ required: true, message: \"请输入菜单名\" }]\r\n                })(<Input style={{ width: 120 }} placeholder=\"菜单名\" />)}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"module\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"模块名\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"action\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"方法名\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"href\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"模板路径\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"key\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"路由key\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"icon\", {})(\r\n                  <Input style={{ width: 120 }} placeholder=\"icon样式\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"sort\", {\r\n                  rules: [{ required: true, message: \"请输入排序值\" }]\r\n                })(<Input style={{ width: 120 }} placeholder=\"菜单排序\" />)}\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  size=\"default\"\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                >\r\n                  增加\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        }\r\n        extra={\r\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\r\n            <Icon type=\"reload\" />\r\n          </LinkButton>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={(record, index) => `${index}`}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: 20,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            showTotal: (total, range) => `共${total}条`,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getInitialData(page, pageSize);\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getInitialData(current, size);\r\n            }\r\n          }}\r\n        />\r\n        <Modal\r\n          title=\"编辑\"\r\n          visible={this.state.isEditFormShow}\r\n          onCancel={() => {\r\n            this.setState({ isEditFormShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedEditForm\r\n            finished={() => {\r\n              this.getInitialData();\r\n              this.setState({ isEditFormShow: false });\r\n            }}\r\n            packageNode={packageNode}\r\n            data={this.editDataRecord}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"菜单名\",\r\n      dataIndex: \"name\",\r\n      render: (text, record, index) => (\r\n        <span>{record.name.replace(/&nbsp;/g, \"-\")}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"模块名\",\r\n      dataIndex: \"module\"\r\n    },\r\n    {\r\n      title: \"方法名\",\r\n      dataIndex: \"action\"\r\n    },\r\n    {\r\n      title: \"模板路径\",\r\n      dataIndex: \"href\"\r\n    },\r\n    {\r\n      title: \"路由key\",\r\n      dataIndex: \"router_key\"\r\n    },\r\n    {\r\n      title: \"icon样式\",\r\n      dataIndex: \"icon\"\r\n    },\r\n    {\r\n      title: \"显示\",\r\n      dataIndex: \"status\",\r\n      render: text => <span>{text === 1 ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"菜单排序\",\r\n      dataIndex: \"sort\"\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\r\n            编辑\r\n          </Button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <Popconfirm\r\n            title=\"确定要删除吗?\"\r\n            onConfirm={() => this.onDelete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <Button type=\"danger\" size=\"small\">\r\n              删除\r\n            </Button>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        for (const key in value) {\r\n          if (value[key] === undefined) {\r\n            value[key] = \"\";\r\n          }\r\n        }\r\n        const res = await addRule(value);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.getInitialData();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  onDelete = async record => {\r\n    let res = await ruleDel(record.id);\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.getInitialData();\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditFormShow: true\r\n    });\r\n  };\r\n}\r\nconst RuleManage = Form.create()(Rule);\r\nexport default RuleManage;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { createHashHistory } from \"history\";\r\nimport { reqUsers } from \"../../api/index\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport LeftNav from \"../../components/left-nav\";\r\nimport Header from \"../../components/header\";\r\nimport Home from \"../home/home\";\r\nimport User from \"../user/user\";\r\nimport Admin_manage_list from \"../admin_manage/admin_manage_list/admin_manage_list\";\r\nimport Role from \"../admin_manage/role/role\";\r\nimport Order_list from \"../charge/order_list/order_list\";\r\nimport Channel_list from \"../charge/channel_list/channel_list\";\r\nimport Bankcard_list from \"../charge/bankcard_list/bankcard_list\";\r\nimport Recharge_order from \"../charge/recharge_order/recharge_order\";\r\nimport Recharge_channel from \"../charge/recharge_channel/recharge_channel\";\r\nimport NoticeList from \"../customer_service/notice_list\";\r\nimport Customer_list from \"../customer_service/customer_list\";\r\nimport Withdraw_list from \"../withdraw/withdraw_list\";\r\nimport WrappedConfig from \"../gameSetting/config\";\r\nimport Tasks from \"../messageCenter/tasks\";\r\nimport AccountList from \"../trade/accountList\";\r\nimport ApplyHistory from \"../trade/applyHistory\";\r\nimport TradeOrder from \"../trade/tradeOrder\";\r\nimport ActivityList from \"../activity/activityList\";\r\nimport ActivityRecieve from \"../activity/recieve\";\r\nimport GiftVoucher from \"../activity/giftVoucher\";\r\nimport GiftList from \"../gift/giftList\";\r\nimport GiftSetting from \"../gift/giftSetting\";\r\nimport AI from \"../AI/robot\";\r\nimport ProxySetting from \"../proxy/setting\";\r\n\r\nimport Daiti_list from \"../withdraw/Daiti_list\";\r\nimport Channel from \"../withdraw/Channel\";\r\nimport NotFound from \"../not-found/not-found\";\r\nimport DailyReport from \"../list/DailyReport\";\r\nimport RuleManage from \"../admin_manage/ruleManage\";\r\nimport { Provider, KeepAlive } from \"react-keep-alive\";\r\nconst { Sider, Content } = Layout;\r\n\r\nconst history = createHashHistory();\r\n/*\r\n后台管理的路由组件\r\n */\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //header和left-nav通过共同父组件传值\r\n  // onRef = ref => {\r\n  //   this.child1 = ref;\r\n  // };\r\n  render() {\r\n    const token = localStorage.token;\r\n    // 如果内存没有存储token ==> 当前没有登陆\r\n    if (!token) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    //如果内存中存储的token超过24小时，需要验证token，如果已经延期更新时间戳，如果未延期，更新token\r\n    const timeStamp = new Date().getTime();\r\n    const tokenTimeStamp = localStorage.tokenTimeStamp;\r\n    let time = timeStamp - tokenTimeStamp;\r\n    if (time > 24 * 3600 * 1000) {\r\n      const res = reqUsers(1, 20);\r\n      if (res.status !== 0) {\r\n        localStorage.removeItem(\"menuList\");\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"name\");\r\n        localStorage.removeItem(\"tokenTimeStamp\");\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: \"100%\" }}>\r\n        <Sider>\r\n          <LeftNav\r\n            onClick={tabConfig => {\r\n              this.child1.add && this.child1.add(tabConfig);\r\n            }}\r\n          />\r\n        </Sider>\r\n        <Layout>\r\n          <Header onRef={ref => (this.child1 = ref)} history={history}>\r\n            Header\r\n          </Header>\r\n          <Content style={{ margin: 5, backgroundColor: \"#fff\" }}>\r\n            <Provider>\r\n              <div style={{ height: \"100%\" }}>\r\n                <Switch>\r\n                  <Redirect from=\"/\" exact to=\"/home\" />\r\n                  <Route path=\"/home\" exact component={Home} />\r\n                  <Route path=\"/user/user-list\" exact>\r\n                    <KeepAlive name=\"User\">\r\n                      <User />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/customer_service/notice_list\">\r\n                    <KeepAlive name=\"Notice_list\">\r\n                      <NoticeList />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/customer_service/customer_list\"\r\n                    exact\r\n                    component={Customer_list}\r\n                  >\r\n                    <KeepAlive name=\"Customer_list\">\r\n                      <Customer_list></Customer_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/admin_manage/list\"\r\n                    exact\r\n                    component={Admin_manage_list}\r\n                  >\r\n                    <KeepAlive name=\"Admin_manage_list\">\r\n                      <Admin_manage_list></Admin_manage_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/admin_manage/rule\" exact component={RuleManage}>\r\n                    <KeepAlive name=\"RuleManage\">\r\n                      <RuleManage></RuleManage>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/admin_manage/role\" exact component={Role}>\r\n                    <KeepAlive name=\"Role\">\r\n                      <Role></Role>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route path=\"/list/daily-report\" exact>\r\n                    <KeepAlive name=\"DailyReport\">\r\n                      <DailyReport></DailyReport>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route path=\"/gameSetting/config\" exact>\r\n                    <KeepAlive name=\"WrappedConfig\">\r\n                      <WrappedConfig></WrappedConfig>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route path=\"/proxy/setting\" exact>\r\n                    <KeepAlive name=\"ProxySetting\">\r\n                      <ProxySetting></ProxySetting>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/messageCenter/tasks\" exact>\r\n                    <KeepAlive name=\"Tasks\">\r\n                      <Tasks></Tasks>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route path=\"/trade/accountList\" exact>\r\n                    <KeepAlive name=\"AccountList\">\r\n                      <AccountList></AccountList>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/trade/applyHistory\" exact>\r\n                    <KeepAlive name=\"ApplyHistory\">\r\n                      <ApplyHistory></ApplyHistory>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/trade/tradeOrder\" exact>\r\n                    <KeepAlive name=\"TradeOrder\">\r\n                      <TradeOrder></TradeOrder>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/activity/list\" exact>\r\n                    <KeepAlive name=\"ActivityList\">\r\n                      <ActivityList />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/activity/recieve\" exact>\r\n                    <KeepAlive name=\"ActivityRecieve\">\r\n                      <ActivityRecieve />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/activity/giftVoucher\" exact>\r\n                    <KeepAlive name=\"giftVoucher\">\r\n                      <GiftVoucher />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/charge/order_list\" exact component={Order_list}>\r\n                    <KeepAlive name=\"Order_list\">\r\n                      <Order_list></Order_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/channel-list\"\r\n                    exact\r\n                    component={Channel_list}\r\n                  >\r\n                    <KeepAlive name=\"Channel_list\">\r\n                      <Channel_list></Channel_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/bankcard-list\"\r\n                    exact\r\n                    component={Bankcard_list}\r\n                  >\r\n                    <KeepAlive name=\"Bankcard_list\">\r\n                      <Bankcard_list></Bankcard_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/artificialcharge/order\"\r\n                    exact\r\n                    component={Recharge_order}\r\n                  >\r\n                    <KeepAlive name=\"Recharge_order\">\r\n                      <Recharge_order></Recharge_order>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/recharge_channel\"\r\n                    exact\r\n                    component={Recharge_channel}\r\n                  >\r\n                    <KeepAlive name=\"Recharge_channel\">\r\n                      <Recharge_channel></Recharge_channel>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/withdraw/withdraw_list\"\r\n                    exact\r\n                    component={Withdraw_list}\r\n                  >\r\n                    <KeepAlive name=\"Withdraw_list\">\r\n                      <Withdraw_list></Withdraw_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/artificialWithdraw/order\"\r\n                    exact\r\n                    component={Daiti_list}\r\n                  >\r\n                    <KeepAlive name=\"Daiti_list\">\r\n                      <Daiti_list />\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/withdraw/channel\" exact>\r\n                    <KeepAlive name=\"Channel\">\r\n                      <Channel></Channel>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/gift/list\" exact>\r\n                    <KeepAlive name=\"GiftList\">\r\n                      <GiftList></GiftList>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/gift/setting\" exact>\r\n                    <KeepAlive name=\"GiftSetting\">\r\n                      <GiftSetting></GiftSetting>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/AI/robot\" exact>\r\n                    <KeepAlive name=\"AI\">\r\n                      <AI></AI>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route component={NotFound} />\r\n                </Switch>\r\n              </div>\r\n            </Provider>\r\n          </Content>\r\n          {/* <Footer style={{ textAlign: \"center\", color: \"#cccccc\", padding: 5 }}>\r\n            推荐使用谷歌浏览器，可以获得更佳页面操作体验\r\n          </Footer> */}\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","const defaultState = {\r\n  inputValue: \"\"\r\n};\r\nexport default (state = defaultState, action) => {\r\n  // console.log(state, action);\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case \"change_input\":\r\n      newState.inputValue = action.value;\r\n      break;\r\n    case \"resetPassword\":\r\n      newState.inputValue = \"\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer.js\";\r\nconst store = createStore(reducer);\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Login from \"./pages/login/login\";\r\nimport Admin from \"./pages/admin/admin\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\n\r\n//应用的根组件\r\n \r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            {/*只匹配其中一个*/}\r\n            <Route path=\"/login\" component={Login}></Route>\r\n            <Route path=\"/\" component={Admin}></Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_TOKEN, JSON.stringify(user))\r\n    store.set(USER, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_TOKEN) || '{}')\r\n    return store.get(USER) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    localStorage.removeItem(USER)\r\n    store.remove(USER)\r\n  }\r\n}","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\nimport storageUtils from './utils/storageUtils'\r\nimport memoryUtils from './utils/memoryUtils'\r\n\r\n\r\n\r\nimport { Router } from \"react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport {Modal} from 'antd';\r\n\r\n//在react-router4中监听路由变化\r\nconst history = createBrowserHistory()\r\nhistory.listen((location, action) => {\r\n    // location is an object like window.location\r\n    console.log('history',action, location.pathname, location.state)\r\n    //每次变化执行\r\n    Modal.destroyAll();\r\n    //使用 Modal.destroyAll() 可以销毁弹出的确认窗（即 Modal.info、Modal.success、Modal.error、Modal.warning、Modal.confirm）。通常用于路由监听当中，处理路由前进、后退不能销毁确认对话框的问题，而不用各处去使用实例的返回值进行关闭（modal.destroy() 适用于主动关闭，而不是路由这样被动关闭）\r\n    //注意无法销毁<Modal></Modal>创建的模态框\r\n  })\r\n\r\n// 读取local中保存user, 保存到内存中\r\nconst user = storageUtils.getUser()\r\nmemoryUtils.user = user\r\n\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render(<Router history={history}>\r\n    <App/>\r\n  </Router>, document.getElementById('root'))"],"sourceRoot":""}