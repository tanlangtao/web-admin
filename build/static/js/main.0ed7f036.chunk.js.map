{"version":3,"sources":["api/ajax.js","api/index.js","pages/login/login.jsx","components/left-nav/index.jsx","components/link-button/index.jsx","components/header/index.jsx","pages/home/home.jsx","utils/dateUtils.js","pages/user/user-nick.jsx","components/MyDatePicker.jsx","pages/user/gold_details.jsx","pages/user/user.jsx","pages/admin_manage/admin_manage_list/addData.jsx","pages/admin_manage/admin_manage_list/admin_manage_list.jsx","pages/admin_manage/role/addData.jsx","pages/admin_manage/role/role.jsx","pages/charge/order_list/editData.jsx","pages/charge/order_list/order_list.jsx","pages/charge/channel_list/addorEdit.jsx","pages/charge/channel_list/channel_list.jsx","pages/charge/bankcard_list/addorEdit.jsx","pages/charge/bankcard_list/bankcard_list.jsx","pages/charge/recharge_order/recharge_order.jsx","pages/charge/recharge_channel/recharge_channel.jsx","pages/customer_service/notice_list/addorEdit.jsx","pages/customer_service/notice_list/index.jsx","pages/customer_service/customer_list/addorEdit.jsx","pages/customer_service/customer_list/index.jsx","pages/withdraw/withdraw_list/details.jsx","pages/withdraw/withdraw_list/edit.jsx","pages/withdraw/withdraw_list/index.jsx","components/myComponents.jsx","pages/gameSetting/config/edit.jsx","pages/gameSetting/config/index.jsx","pages/messageCenter/tasks/edit.jsx","pages/messageCenter/tasks/index.jsx","pages/trade/accountList/edit.jsx","pages/trade/accountList/index.jsx","pages/trade/applyHistory/edit.jsx","pages/trade/applyHistory/index.jsx","pages/trade/tradeOrder/edit.jsx","pages/trade/tradeOrder/index.jsx","pages/activity/activityList/editForm.jsx","pages/activity/activityList/index.jsx","pages/activity/recieve/index.jsx","pages/activity/giftVoucher/editForm.jsx","pages/activity/giftVoucher/index.jsx","pages/gift/giftList/details.jsx","pages/gift/giftList/editForm.jsx","pages/gift/giftList/index.jsx","pages/gift/giftSetting/index.jsx","pages/AI/robot/index.jsx","pages/withdraw/Daiti_list/details.jsx","pages/withdraw/Daiti_list/edit.jsx","pages/withdraw/Daiti_list/index.jsx","pages/withdraw/Channel/index.jsx","pages/not-found/not-found.jsx","pages/list/DailyReport/dateGameReport.jsx","pages/list/DailyReport/details.jsx","pages/list/DailyReport/index.jsx","pages/admin_manage/ruleManage/edit.jsx","pages/admin_manage/ruleManage/index.jsx","pages/admin/admin.jsx","store/reducer.js","store/index.js","App.js","utils/storageUtils.js","index.js"],"names":["ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","promise","axios","get","params","defaults","headers","post","transformRequest","ret","it","encodeURIComponent","then","response","catch","error","message","ENV","process","argv","splice","console","log","BASE","dev","pre","prd","key","token","localStorage","setToken","reqLogin","username","password","authcode","reqAuthCode","navList","getAuthCode","editPass","reqUsers","page","limit","start","end","inputKey","inputValue","_ajax","Object","defineProperty","setGameUserNickName","id","game_nick","changeGold","record","value","obj","str","gold","desc","proxy_user_id","package_id","objectSpread","task_type","reqLoadGold","userDetail","goldDetails","bindInfo","user_id","saveUserBlack","action","createTask","resetpwd","params[id]","params[account_pass]","setCustomer","reqAdminList","searchAdminData","name","roleList","packageList","addUser","formValue","forEach","element","newobj","status","userStatus","group_id","userGroup","source","proxy","use_money","loadGold","pass","repass","confirmPssword","editUser","resetAuthCode","ruleList","addRule","editRule","rule_id","ruleDel","getRoleList","addRole","rules","editRole","role_name","role_id","getList","addNotice","formData","updateNotice","delNotice","customerList","saveCustomerService","dailyReport","dateReport","group_by","gameReport","oneDayGameReport","date","configList","conf_key","saveConf","tasksList","changeUserBalance","reviewTask","allAccountList","resetPassword","accountList","sellGoldApplyList","tradeRemark","sellGoldInfoList","reviewInfo2","remarkInfo2","sellGoldOrderList","activityConfigList","saveActivityConfig","delActivityConfig","giftVoucherList","activityList","reqOrder_list","start_time","end_time","order_status","reqLostOrder_list","order_id","orderReview","review_type","orderReviewEdit","downloadList","searchData","inputParam","paramKey","window","open","getChannelList","addChannel","editPayChannel","bankList","saveBankCard","deleteBankCard","rechargeOrder","cancelOrder","reqData","getChannel","getChannelInfo","channel_id","editChannelInfo","pay_code","withDraw","flag","filed","time_type","reviewInfo","remarkInfo","downloadWithdrawList","withDrawRemark","temarks","remark_type","auditOrder","orderWithDrawReview","getConfigList","saveWithDrawChannel","alipay[name]","alipay[withdraw_type]","bankcard[name]","bankcard[withdraw_type]","withDrawReview","review_status","is_pass","setGiftConfig","getAIList","changeInternalUserBalance","amount","Item","es_form","Login","getMenuList","_callee","result","regenerator_default","a","wrap","_context","prev","next","sent","children","item","title","slice","menuList","JSON","stringify","_this","props","history","replace","stop","handleSubmit","event","preventDefault","form","validateFields","_ref2","asyncToGenerator","mark","_callee2","err","values","_context2","success","tokenTimeStamp","Date","getTime","msg","_x","_x2","apply","this","handleClick","_ref3","_callee3","_context3","modal","info","content","react_default","createElement","src","qrurl","alt","_x3","_x4","validatePwd","rule","callback","test","react_router","to","getFieldDecorator","className","onSubmit","required","whitespace","min","max","pattern","input","prefix","icon","style","color","placeholder","validator","marginTop","onClick","es_button","htmlType","Component","WrapLogin","create","SubMenu","menu","LeftNav","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","getMenuNodes","path","location","pathname","reduce","find","currentValue","indexOf","openKey","push","openMenu","cpre","ele","react_router_dom","state","_this2","parse","getItem","menuNodes","justifyContent","mode","theme","selectedKeys","onOpenChange","openKeys","withRouter","LinkButton","assign","size","marginRight","TabPane","Header","onChange","activeKey","onEdit","targetKey","add","tabConfig","oldKey","panes","isTabExist","concat","newTabIndex","remove","lastIndex","pane","i","filter","logout","confirm","onOk","assertThisInitialized","removeItem","authCode","res","lib_default","width","resetPWD","isEditFormShow","handleEditSubmit","closable","clearInterval","intervalId","onRef","val","_this$props$form","getFieldValue","dropdown","overlay","trigger","tabs","hideAdd","map","tab","forceRender","visible","onCancel","footer","labelCol","span","labelAlign","label","WrappedHeader","Home","typing","timer","setTimeout","clearTimeout","fontSize","formateDate","time","timeStamp","parseInt","moment","format","FormItem","NormalLoginForm","isNickModal","display","initialValue","TextArea","autosize","minRows","maxRows","WrappedNormalLoginForm","RangePicker","MyDatePicker","config_provider","locale","zh_CN","showTime","defaultValue","dateString","handleValue","GoldDetail","search","startTime","endTime","funds_type","GoldDetailRecord","initColumns","isBindInfo","dataIndex","sorter","b","total_balance","card","table","bordered","rowKey","dataSource","columns","Option","User","fixed","onCell","rowIndex","isNickShow","onDoubleClick","onContextMenu","onMouseEnter","target","cursor","onMouseLeave","game_gold","goldRecord","isGoldShow","render","regin_time","login_time","getGoldDetail","getMoreDetail","getLoadGold","text","index","getUsers","_ref","_result$data","game_user","proxy_user","proxy_nick","proxy_pid","count","changeNickName","refs","getFormValue","resetFields","loading","_x5","_x6","_ref4","_callee4","_context4","_x7","_ref5","_callee5","_context5","moreModal","destroy","t0","isGoldDetailShow","_x8","_x9","_ref6","_callee6","isAdd","_context6","_x10","_x11","resetPwd","isResetPwdShow","resetPwdId","handleResetpwd","_callee7","_context7","okText","popconfirm","onConfirm","cancelText","setCustomerAccount","_ref8","_callee8","_context8","_x12","pageSize","isBindInfoShow","_this$state","es_select","user_Option","ref","Input","extra","reload","pagination","defaultPageSize","showSizeChanger","showQuickJumper","showTotal","total","range","defaultCurrent","onShowSizeChange","current","scroll","x","y","user_nick","gold_details","e","AddDataForm","checkboxOnChange","checkedList","indeterminate","checkAll","onCheckAllChange","list","checked","setFieldsValue","isEdit","editDataRecord","refreshPage","cancel","isBan","group","split","Number","_this$props","optionList","es_radio","Group","es_checkbox","options","use_balance","WrappedAddDataForm","Admin_manage_list","wordWrap","wordBreak","align","edit","onSearchData","addData","isAddDataShow","isEditDataShow","_onOk","handleChange","bind","TreeNode","getTreeNodes","onSelect","node","expandedKeys","isLeaf","expanded","k","eventKey","onCheck","checkedKeys","onExpand","defaultCheckedKeys","treeData","tree","checkable","description","Role","role_addData","Diaodan","handleRecieveSubmit","Order_list","isQueryShow","download","word","replace_id","arrival_amount","created_at","arrival_at","isEditShow","editUser_id","editMount","editType","editRefused","float","editData","wrapperCol","nick_name","pay_type","min_amount","max_amount","span_amount","seed","rate","sort","Channel_list","addorEdit","card_name","bank_name","card_num","offset","Bankcard_list","delete","bankcard_list_addorEdit","Recharge_order","handleWithdraw","form_type","Recharge_channel","expandedRowRender","indent","childData","onExpandRow","keys","expandedRowKeys","recordId","handleEditData","expandRowByClick","getPackageList","arr","_id","$oid","package_ids","is_open","words","date_picker","Notice_list","onDelete","join","popover","overlayStyle","textOverflow","whiteSpace","overflow","notice_list_addorEdit","user_type","Customer_list","handleReset","create_time","update_time","customer_list_addorEdit","detailRecord","EditForm","sumbitOrderStatus","orderStatus","onclose","review","sumbitRemarkUser","remarkUser","sumbitRemarkOperator","remarkOperator","orderStatusShow","reviewShow","confirmButtonShow","submitRadio","successRadio","failRadio","submitRadioChecked","successRadioChecked","failRadioChecked","readOnly","disabled","React","Withdraw_list","getDetail","user_remark","t1","isDetailShow","details","lineNumbers","json","CodeEditor","_Component","inherits","createClass","conf_val","react_codemirror2","editor","WrappedEditForm","finished","myComponents_CodeEditor","Config","getInitialData","onSearch","onAdd","config_edit","data[id]","data[params]","data[status]","reason","Tasks","refuse","operator_nick","tasks_edit","pay_url","checkQrcode","AccountList","checkAccount","accountList_edit","checkDetail","okType","userRemarkInput","editComfirm","operatorRemarkInput","abrupt","applyHistory_edit","tradeOrder_edit","is_close","need_mobile","need_bankcard","order_by","editForm","check","receive_info","giftVoucher_editForm","dataPickerOnChange","editRecord","giftList_details","giftList_editForm","Channel","get_val","resData","_this$resData","give_info","version","WrappedChannel","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","minGold","maxGold","handleOk","onBlur","randNum","Range","Rand","Math","random","round","changeNickname","Daiti","Daiti_list_RangePicker","Daiti_list_details","Daiti_list_edit","initialData","_this$initialData","bankcard","channel","alipay","artificial","valuePropName","es_switch","checkedChildren","unCheckedChildren","divider","channel_name","NotFound","row","col","DateGameReport","MoreDetail","getGameReport","footerData","isGameReportShow","nextLevelData","reportData","dateGameReport","DailyReport","getDateReport","newRes","parseData","format_data","user","order","first_pay_user_number","first_pay_user","pay_user_number","pay_user","first_pay_user_number_res","first_pay_user_res","pay_user_number_res","pay_user_res","exchange_user_number","exchange_user","exchange_user_number_res","exchange_user_res","d","game","statement_ratio","abs","lose_statement_total","win_statement_total","toFixed","statement_total","code","parseDateData","parseGameData","reportTable","packageNode","diff","marginBottom","backgroundColor","border","DailyReport_details","pid","module","href","router_key","Rule","layout","ruleManage_edit","RuleManage","Sider","Content","createHashHistory","Admin","minHeight","components_left_nav","child1","components_header","margin","Provider","height","from","exact","component","KeepAlive","user_User","notice_list","customer_list","admin_manage_list","ruleManage","role","list_DailyReport","config","tasks","trade_accountList","applyHistory","tradeOrder","activity_activityList","recieve","giftVoucher","order_list","channel_list","bankcard_list","recharge_order","recharge_channel","withdraw_list","Daiti_list","withdraw_Channel","giftList","giftSetting","robot","defaultState","store","createStore","newState","App","es","USER","storageUtils","createBrowserHistory","listen","destroyAll","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.0ed7f036.chunk.js","sourcesContent":["/*\n能发送异步ajax请求的函数模块\n封装axios库\n函数的返回值是promise对象\n1. 优化1: 统一处理请求异常?\n    在外层包一个自己创建的promise对象\n    在请求出错时, 不reject(error), 而是显示错误提示\n2. 优化2: 异步得到不是reponse, 而是response.data\n   在请求成功resolve时: resolve(response.data)\n */\n\nimport axios from \"axios\";\nimport { message } from \"antd\";\n\n//设置axios为form-data\n\nexport default function ajax(url, data = {}, type = \"GET\") {\n  // axios.interceptors.request.use((config) => {\n  //   if (['/user/login', '/user/register'].indexOf(config.url) === -1) {\n  //     const token = localStorage.getItem('token')\n  //     if (token) {\n  //       config.headers.Authorization = token\n  //     }\n  //   }\n  //   return config\n  // })\n  return new Promise((resolve, reject) => {\n    let promise;\n    // 1. 执行异步ajax请求\n    if (type === \"GET\") {\n      // 发GET请求\n      promise = axios.get(url, {\n        // 配置对象\n        params: data // 指定请求参数\n      });\n    } else {\n      // 发POST请求\n      axios.defaults.headers.post[\"Content-Type\"] =\n        \"application/x-www-form-urlencoded\";\n      axios.defaults.transformRequest = [\n        function(data) {\n          let ret = \"\";\n          for (let it in data) {\n            ret +=\n              encodeURIComponent(it) + \"=\" + encodeURIComponent(data[it]) + \"&\";\n          }\n          return ret;\n        }\n      ];\n      promise = axios.post(url, data);\n    }\n    // 2. 如果成功了, 调用resolve(value)\n    promise\n      .then(response => {\n        resolve(response.data);\n        // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\n      })\n      .catch(error => {\n        // reject(error)\n        message.error(\"请求出错了: \" + error.message);\n      });\n  });\n}","import ajax from \"./ajax\";\n//import storageUtils from \"../utils/storageUtils\";\n// import token from '../pages/login'\n//import memory from\n\nlet ENV = process.env.argv.splice(2)[0];\n\nconsole.log(ENV);\n\nconst apiHost = {\n    \"dev\": \"localhost\",\n    \"pre\": \"http://127.0.0.1/admin\",\n    \"prd\": \"http://127.0.0.2/admin\",\n}\nlet key = '\"' + ENV + '\"';\n\nlet BASE = apiHost.key;\n\nconsole.log(BASE);\n//let ENV = process.env.REACT_APP_HOST;\n\n\nvar token = localStorage.token || \"\";\n//登陆成功后赋值token\nexport const setToken = () => {\n    token = localStorage.token;\n};\n\n// 登陆\nexport const reqLogin = (username, password, authcode) =>\n    ajax(BASE + \"/login/login\", { username, password, authcode }, \"POST\");\n\n// 获取authCode\nexport const reqAuthCode = (username, password) =>\n    ajax(BASE + \"/login/authCode\", { username, password }, \"POST\");\n\n// 获取菜单\nexport const navList = () => {\n    const token = localStorage.token;\n    return ajax(BASE + \"/acl/navList\", { token }, \"POST\");\n};\n//安全码设置\nexport const getAuthCode = () =>\n    ajax(BASE + \"/index/getAuthCode\", { token }, \"POST\");\n//修改密码\nexport const editPass = password =>\n    ajax(BASE + \"/acl/editPass\", { token, password }, \"POST\");\n//用户列表\nexport const reqUsers = (page, limit, start, end, inputKey, inputValue) => {\n    return ajax(\n        BASE + \"/user/index\", { page, limit, start, end, [inputKey]: inputValue, token },\n        \"POST\"\n    );\n};\n\nexport const setGameUserNickName = (id, game_nick) =>\n    ajax(BASE + \"/user/setGameUserNickName\", { token, id, game_nick }, \"POST\");\nexport const changeGold = (record, value) => {\n    let obj = {};\n    let str = \"params[user_id]\";\n    obj[str] = record.id;\n    str = \"params[amount]\";\n    obj[str] = value.gold;\n    str = \"params[reason]\";\n    obj[str] = value.desc;\n    str = \"params[user_name]\";\n    obj[str] = record.game_nick;\n    str = \"params[proxy_user_id]\";\n    obj[str] = record.proxy_user_id;\n    str = \"params[package_id]\";\n    obj[str] = record.package_id;\n    return ajax(\n        BASE + \"/user/changeGold\", { token, task_type: 0, ...obj },\n        \"POST\"\n    );\n};\nexport const reqLoadGold = id => {\n    return ajax(\n        BASE + \"/user/getGameUser\", {\n            page: 1,\n            limit: 10,\n            token,\n            id\n        },\n        \"POST\"\n    );\n};\nexport const userDetail = (page, limit, id, goldDetails) => {\n    return ajax(\n        BASE + \"/user/userDetail\", {\n            page,\n            limit,\n            token,\n            id,\n            ...goldDetails\n        },\n        \"POST\"\n    );\n};\nexport const bindInfo = (page, limit, id) => {\n    return ajax(\n        BASE + \"/user/bindInfo\", {\n            page,\n            limit,\n            token,\n            user_id: id\n        },\n        \"POST\"\n    );\n};\nexport const saveUserBlack = (user_id, action) => {\n    return ajax(\n        BASE + \"/trade/saveUserBlack\", {\n            token,\n            type: 1,\n            user_id,\n            action\n        },\n        \"POST\"\n    );\n};\nexport const createTask = (user_id, resetpwd) => {\n    return ajax(\n        BASE + \"/tasks/createTask\", {\n            token,\n            task_type: 2,\n            \"params[id]\": user_id,\n            \"params[account_pass]\": resetpwd\n        },\n        \"POST\"\n    );\n};\nexport const setCustomer = id => {\n    return ajax(\n        BASE + \"/user/setCustomer \", {\n            token,\n            id\n        },\n        \"POST\"\n    );\n};\n//后台管理-账户列表\nexport const reqAdminList = (page, limit) => {\n    return ajax(\n        BASE + \"/acl/index\", {\n            page,\n            limit,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const searchAdminData = name => {\n    return ajax(\n        BASE + \"/acl/index\", {\n            page: 1,\n            limit: 20,\n            token,\n            name\n        },\n        \"POST\"\n    );\n};\n\nexport const roleList = () => {\n    return ajax(\n        BASE + \"/acl/roleList\", {\n            token\n        },\n        \"POST\"\n    );\n};\nexport const packageList = () => {\n    return ajax(\n        BASE + \"/user/packageList\", {\n            token\n        },\n        \"POST\"\n    );\n};\nexport const addUser = formValue => {\n    let obj = {};\n    formValue.packageList.forEach(element => {\n        let str = \"group[\" + element + \"]\";\n        obj[str] = element;\n    });\n    let newobj = {\n        username: formValue.username,\n        status: formValue.userStatus,\n        group_id: formValue.userGroup,\n        source: formValue.proxy ? formValue.proxy : [],\n        ...obj,\n        use_money: formValue.loadGold,\n        pass: formValue.password,\n        repass: formValue.confirmPssword,\n        token\n    };\n    return ajax(BASE + \"/acl/addUser\", newobj, \"POST\");\n};\nexport const editUser = (formValue, id) => {\n    let obj = {};\n    formValue.packageList.forEach(element => {\n        let str = \"group[\" + element + \"]\";\n        obj[str] = element;\n    });\n    let newobj = {\n        id,\n        username: formValue.username,\n        status: formValue.userStatus,\n        group_id: formValue.userGroup,\n        source: formValue.proxy ? formValue.proxy : [],\n        ...obj,\n        use_money: formValue.loadGold,\n        pass: formValue.password ? formValue.password : [],\n        token\n    };\n    return ajax(BASE + \"/acl/editUser\", newobj, \"POST\");\n};\nexport const resetAuthCode = id => {\n    return ajax(\n        BASE + \"/acl/resetAuthCode\", {\n            id,\n            token\n        },\n        \"POST\"\n    );\n};\n//后台管理-权限列表\nexport const ruleList = () => {\n    return ajax(\n        BASE + \"/acl/ruleList\", {\n            token\n        },\n        \"POST\"\n    );\n};\nexport const addRule = value => {\n    return ajax(\n        BASE + \"/acl/addRule\", {\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const editRule = (rule_id, value) => {\n    console.log(value);\n\n    return ajax(BASE + \"/acl/editRule\", {...value, rule_id, token }, \"POST\");\n};\nexport const ruleDel = id => {\n    return ajax(\n        BASE + \"/acl/ruleDel\", {\n            id,\n            token\n        },\n        \"POST\"\n    );\n};\n//后台管理-角色管理\nexport const getRoleList = (page, limit) => {\n    return ajax(\n        BASE + \"/acl/roleList\", {\n            page,\n            limit,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const getRuleList = () => {\n    return ajax(\n        BASE + \"/acl/ruleList\", {\n            page: 1,\n            limit: 10,\n            token,\n            flag: 1\n        },\n        \"POST\"\n    );\n};\n\nexport const addRole = (name, rules, desc) => {\n    let obj = {};\n    rules.forEach(element => {\n        let str = \"rules[\" + element + \"]\";\n        obj[str] = element;\n    });\n    let newobj = {\n        name,\n        ...obj,\n        desc,\n        token\n    };\n    return ajax(BASE + \"/acl/addRole\", newobj, \"POST\");\n};\nexport const editRole = (name, rules, desc, id) => {\n    let obj = {};\n    rules.forEach(element => {\n        let str = \"rules[\" + element + \"]\";\n        obj[str] = element;\n    });\n    let newobj = {\n        role_name: name,\n        role_id: id,\n        ...obj,\n        desc,\n        token\n    };\n    return ajax(BASE + \"/acl/editRole\", newobj, \"POST\");\n};\n//客服-公告设置\nexport const getList = (page, limit) => {\n    return ajax(\n        BASE + \"/notice/getList\", {\n            page,\n            limit,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const addNotice = formData => {\n    return ajax(\n        BASE + \"/notice/addNotice\", {\n            token,\n            ...formData\n        },\n        \"POST\"\n    );\n};\nexport const updateNotice = (formData, id) => {\n    return ajax(\n        BASE + \"/notice/updateNotice\", {\n            token,\n            id,\n            ...formData\n        },\n        \"POST\"\n    );\n};\nexport const delNotice = id => {\n    return ajax(\n        BASE + \"/notice/delNotice\", {\n            token,\n            id\n        },\n        \"POST\"\n    );\n};\n//客服-代充账号\nexport const customerList = (page, limit, user_id) => {\n    return ajax(\n        BASE + \"/customer/customerList\", {\n            page,\n            limit,\n            token,\n            user_id: user_id ? user_id : \"\"\n        },\n        \"POST\"\n    );\n};\nexport const saveCustomerService = (formData, action, user_id) => {\n    if (user_id) {\n        formData.user_id = user_id;\n    }\n    return ajax(\n        BASE + \"/customer/saveCustomerService\", {\n            token,\n            ...formData,\n            action\n        },\n        \"POST\"\n    );\n};\n//报表-日常运营\nexport const dailyReportInit = (page, limit) => {\n    return ajax(\n        BASE + \"/report/dailyReport\", {\n            page,\n            limit,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const dailyReport = (page, limit, package_id, start = \"\", end = \"\") => {\n    return ajax(\n        BASE + \"/report/dailyReport\", {\n            page,\n            limit,\n            token,\n            package_id,\n            start,\n            end\n        },\n        \"POST\"\n    );\n};\nexport const dateReport = (page, limit, package_id, start = \"\", end = \"\") => {\n    return ajax(\n        BASE + \"/report/dateReport\", {\n            page,\n            limit,\n            token,\n            package_id,\n            start,\n            end,\n            group_by: \"date\"\n        },\n        \"POST\"\n    );\n};\nexport const gameReport = (page, limit, package_id, start = \"\", end = \"\") => {\n    return ajax(\n        BASE + \"/report/gameReport\", {\n            page,\n            limit,\n            token,\n            package_id,\n            start,\n            end,\n            group_by: \"game_id\"\n        },\n        \"POST\"\n    );\n};\nexport const oneDayGameReport = (page, limit, package_id, date) => {\n    return ajax(\n        BASE + \"/report/gameReport\", {\n            page,\n            limit,\n            token,\n            package_id,\n            date,\n            group_by: \"game_id\"\n        },\n        \"POST\"\n    );\n};\n//游戏设置-配置项\nexport const configList = (page, limit, conf_key) => {\n    return ajax(\n        BASE + \"/config/list\", {\n            page,\n            limit,\n            token,\n            conf_key: conf_key ? conf_key : \"\"\n        },\n        \"POST\"\n    );\n};\nexport const saveConf = (value, action) => {\n    return ajax(\n        BASE + \"/config/saveConf\", {\n            ...value,\n            action,\n            token\n        },\n        \"POST\"\n    );\n};\n//消息中心-任务列表\nexport const tasksList = (page, limit, value) => {\n    return ajax(\n        BASE + \"/tasks/tasksList\", {\n            page,\n            limit,\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\n\nexport const changeUserBalance = value => {\n    return ajax(\n        BASE + \"/tasks/changeUserBalance\", {\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const reviewTask = value => {\n    return ajax(\n        BASE + \"/tasks/reviewTask\", {\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\n//交易所-收付款管理\nexport const allAccountList = (page, limit, value) => {\n    return ajax(\n        BASE + \"/trade/allAccountList\", {\n            page,\n            limit,\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const resetPassword = user_id => {\n    return ajax(\n        BASE + \"/trade/resetPassword\", {\n            user_id,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const accountList = user_id => {\n    return ajax(BASE + \"/trade/accountList\", { user_id, token }, \"POST\");\n};\n\n//交易所-申请上架历史\nexport const sellGoldApplyList = (page, limit, value) => {\n    return ajax(\n        BASE + \"/trade/sellGoldApplyList\", {\n            page,\n            limit,\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const tradeRemark = value => {\n    return ajax(\n        BASE + \"/trade/tradeRemark\", {\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const sellGoldInfoList = (page, limit, user_id) => {\n    return ajax(\n        BASE + \"/order/sellGoldInfoList\", {\n            page,\n            limit,\n            user_id,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const reviewInfo2 = (page, limit, id) => {\n    return ajax(\n        BASE + \"/order/reviewInfo\", {\n            page,\n            limit,\n            id,\n            type: 3,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const remarkInfo2 = (page, limit, id) => {\n    return ajax(\n        BASE + \"/order/remarkInfo\", {\n            page,\n            limit,\n            id,\n            type: 6,\n            token\n        },\n        \"POST\"\n    );\n};\n//交易所-交易订单\nexport const sellGoldOrderList = (page, limit, value) => {\n    return ajax(\n        BASE + \"/trade/sellGoldOrderList\", {\n            page,\n            limit,\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\n//活动-活动列表\nexport const activityConfigList = (page, limit, value) => {\n    return ajax(\n        BASE + \"/activity/activityConfigList\", {\n            page,\n            limit,\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const saveActivityConfig = value => {\n    return ajax(\n        BASE + \"/activity/saveActivityConfig\", {\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const delActivityConfig = id => {\n    return ajax(\n        BASE + \"/activity/delActivityConfig\", {\n            id,\n            token\n        },\n        \"POST\"\n    );\n};\n\n//活动-礼金券领取列表\nexport const giftVoucherList = (page, limit, value) => {\n    return ajax(\n        BASE + \"/activity/giftVoucherList\", {\n            page,\n            limit,\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\n//活动-活动领取列表\nexport const activityList = (page, limit, value) => {\n    return ajax(\n        BASE + \"/activity/activityList\", {\n            page,\n            limit,\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\n//充值-充值订单\nexport const reqOrder_list = (\n    page,\n    limit,\n    start_time,\n    end_time,\n    order_status,\n    type,\n    inputKey,\n    inputValue\n) => {\n    if (inputKey === \"1\" || inputKey === \"2\") {\n        inputValue = inputKey;\n        inputKey = \"time_type\";\n    }\n    return ajax(\n        BASE + \"/order/recharge\", { start_time, end_time, order_status, type, token, [inputKey]: inputValue },\n        \"POST\"\n    );\n};\nexport const reqLostOrder_list = (page, limit, user_id, order_id) => {\n    return ajax(\n        BASE + \"/order/recharge\", { page, limit, order_id, user_id, token },\n        \"POST\"\n    );\n};\nexport const orderReview = (user_id, order_id) => {\n    return ajax(\n        BASE + \"/order/orderReview\", { user_id, order_id, status: 7, review_type: 1, token },\n        \"POST\"\n    );\n};\nexport const orderReviewEdit = (user_id, order_id, type) => {\n    return ajax(\n        BASE + \"/order/orderReview\", { user_id, order_id, status: 8, review_type: 2, token, type },\n        \"POST\"\n    );\n};\nexport const downloadList = searchData => {\n    let {\n        start_time,\n        end_time,\n        order_status,\n        type,\n        inputParam,\n        paramKey\n    } = searchData;\n    if (!paramKey || paramKey === \"\") {\n        paramKey = 0;\n    }\n    let params =\n        \"token=\" +\n        token +\n        \"&filed=\" +\n        paramKey +\n        \"&keyword=\" +\n        inputParam +\n        \"&start_time=\" +\n        start_time +\n        \"&end_time=\" +\n        end_time +\n        \"&order_status=\" +\n        order_status +\n        \"&type=\" +\n        type;\n    let url = BASE + \"/order/recharge/?export=2&\" + params;\n    if (paramKey) {\n        switch (paramKey) {\n            case \"user_id\":\n                url = url + \"&user_id=\" + inputParam;\n                break;\n            case \"order_id\":\n                url = url + \"&order_id=\" + inputParam;\n                break;\n            case \"create_time\":\n                url = url + \"&time_type=1\";\n                break;\n            case \"arrival_time\":\n                url = url + \"&time_type=2\";\n                break;\n            default:\n                break;\n        }\n    }\n    window.open(url);\n};\nexport const getChannelList = (page, limit, name) => {\n    return ajax(\n        BASE + \"/order/channelList\", {\n            page,\n            limit,\n            token,\n            name: name ? name : \"\"\n        },\n        \"POST\"\n    );\n};\nexport const addChannel = value => {\n    return ajax(\n        BASE + \"/order/addChannel\", {\n            ...value,\n            token,\n            action: \"add\"\n        },\n        \"POST\"\n    );\n};\nexport const editPayChannel = (value, id) => {\n    return ajax(\n        BASE + \"/order/editPayChannel\", {\n            ...value,\n            token,\n            id,\n            action: \"edit\"\n        },\n        \"POST\"\n    );\n};\n//充值-古都银行卡\nexport const bankList = (page, limit) => {\n    return ajax(\n        BASE + \"/order/bankList\", {\n            page,\n            limit,\n            token\n        },\n        \"POST\"\n    );\n};\n\nexport const saveBankCard = (searchData, id) => {\n    if (id) {\n        searchData.id = id;\n    }\n    return ajax(\n        BASE + \"/order/saveBankCard\", {\n            ...searchData,\n            action: id ? \"edit\" : \"add\",\n            token\n        },\n        \"POST\"\n    );\n};\nexport const deleteBankCard = id => {\n    return ajax(\n        BASE + \"/order/saveBankCard\", {\n            id,\n            action: \"del\",\n            token\n        },\n        \"POST\"\n    );\n};\n//充值-代充订单\nexport const rechargeOrder = (\n    page,\n    limit,\n    start_time,\n    end_time,\n    order_status,\n    inputKey,\n    inputValue\n) => {\n    return ajax(\n        BASE + \"/order/rechargeOrder\", {\n            page,\n            limit,\n            token,\n            type: 14,\n            start_time,\n            end_time,\n            order_status,\n            [inputKey]: inputValue\n        },\n        \"POST\"\n    );\n};\nexport const cancelOrder = reqData => {\n    return ajax(\n        BASE + \"/order/cancelOrder\", {\n            ...reqData,\n            token\n        },\n        \"POST\"\n    );\n};\n//充值-渠道配置\nexport const getChannel = (page, limit) => {\n    return ajax(\n        BASE + \"/order/getChannel\", {\n            page,\n            limit,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const getChannelInfo = channel_id => {\n    return ajax(\n        BASE + \"/order/getChannelInfo\", {\n            page: 1,\n            limit: 20,\n            token,\n            channel_id\n        },\n        \"POST\"\n    );\n};\n\nexport const editChannelInfo = (id, pay_code) => {\n    return ajax(\n        BASE + \"/order/editChannelInfo\", {\n            id,\n            token,\n            pay_code\n        },\n        \"POST\"\n    );\n};\n//兑换-兑换订单&代提设置\nexport const withDraw = (page, limit, flag, searchData) => {\n    if (searchData) {\n        let {\n            start_time,\n            end_time,\n            order_status,\n            type,\n            inputParam,\n            filed\n        } = searchData;\n        //处理输入关键字和选择关键字，组合成传输参数\n        let obj = {};\n        if (filed !== \"create_time\" && filed !== \"arrival_time\") {\n            obj[filed] = inputParam;\n        } else if (filed !== \"create_time\") {\n            obj.time_type = 1;\n        } else if (filed !== \"arrival_time\") {\n            obj.time_type = 2;\n        }\n        return ajax(\n            BASE + \"/order/withDraw\", {\n                page,\n                limit,\n                token,\n                start_time,\n                end_time,\n                order_status,\n                type,\n                ...obj,\n                flag\n            },\n            \"POST\"\n        );\n    } else {\n        return ajax(\n            BASE + \"/order/withDraw\", {\n                page,\n                limit,\n                token,\n                flag\n            },\n            \"POST\"\n        );\n    }\n};\nexport const reviewInfo = (page, limit, id) => {\n    return ajax(\n        BASE + \"/order/reviewInfo\", {\n            page,\n            limit,\n            token,\n            id,\n            type: 2\n        },\n        \"POST\"\n    );\n};\nexport const remarkInfo = (page, limit, id) => {\n    return ajax(\n        BASE + \"/order/remarkInfo\", {\n            page,\n            limit,\n            token,\n            id,\n            type: 2\n        },\n        \"POST\"\n    );\n};\nexport const downloadWithdrawList = searchData => {\n    let {\n        start_time,\n        end_time,\n        order_status,\n        type,\n        inputParam,\n        filed\n    } = searchData;\n    let params =\n        \"token=\" +\n        token +\n        \"&filed=\" +\n        filed +\n        \"&keyword=\" +\n        inputParam +\n        \"&start_time=\" +\n        start_time +\n        \"&end_time=\" +\n        end_time +\n        \"&order_status=\" +\n        order_status +\n        \"&type=\" +\n        type;\n    let url = BASE + \"/order/withDraw/?export=2&flag=2&\" + params;\n    if (filed) {\n        switch (filed) {\n            case \"user_id\":\n                url = url + \"&user_id=\" + inputParam;\n                break;\n            case \"order_id\":\n                url = url + \"&order_id=\" + inputParam;\n                break;\n            case \"create_time\":\n                url = url + \"&time_type=1\";\n                break;\n            case \"arrival_time\":\n                url = url + \"&time_type=2\";\n                break;\n            case \"replace_id\":\n                url = url + \"&replace_id=\" + inputParam;\n                break;\n            default:\n                break;\n        }\n    }\n    window.open(url);\n};\nexport const withDrawRemark = (id, temarks, remark_type) => {\n    return ajax(\n        BASE + \"/order/withDrawRemark\", {\n            token,\n            id,\n            temarks,\n            remark_type,\n            type: 2\n        },\n        \"POST\"\n    );\n};\nexport const auditOrder = reqData => {\n    return ajax(\n        BASE + \"/order/withDraw\", {\n            ...reqData,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const orderWithDrawReview = reqData => {\n    return ajax(\n        BASE + \"/order/withDrawReview\", {\n            ...reqData,\n            token\n        },\n        \"POST\"\n    );\n};\n\n//兑换-第三方提款设置\nexport const getConfigList = reqData => {\n    return ajax(\n        BASE + \"/config/list\", {\n            ...reqData,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const saveWithDrawChannel = (id, name, value) => {\n    return ajax(\n        BASE + \"/config/saveWithDrawChannel\", {\n            id,\n            name,\n            ...value,\n            \"alipay[name]\": \"支付宝\",\n            \"alipay[withdraw_type]\": 1,\n            \"bankcard[name]\": \"银行卡\",\n            \"bankcard[withdraw_type]\": 2,\n            conf_key: \"withdraw_channel_info\",\n            action: \"edit\",\n            token\n        },\n        \"POST\"\n    );\n};\n//赠送-赠送订单\nexport const withDrawReview = (order_id, user_id, review_status) => {\n    return ajax(\n        BASE + \"/order/withDraw\", {\n            token,\n            order_id,\n            review_status,\n            user_id,\n            review_type: 1,\n            is_pass: 1\n        },\n        \"POST\"\n    );\n};\nexport const setGiftConfig = reqData => {\n    return ajax(\n        BASE + \"/config/setGiftConfig\", {\n            ...reqData,\n            token\n        },\n        \"POST\"\n    );\n};\n//AI\nexport const getAIList = (page, limit, package_id, value) => {\n    return ajax(\n        BASE + \"/user/index\", {\n            page,\n            limit,\n            package_id,\n            ...value,\n            token\n        },\n        \"POST\"\n    );\n};\nexport const changeInternalUserBalance = (user_id, amount) => {\n    return ajax(\n        BASE + \"/user/changeInternalUserBalance\", {\n            user_id,\n            amount,\n            token\n        },\n        \"POST\"\n    );\n};","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Form, Icon, Input, Button, Modal, message } from \"antd\";\nimport \"./login.less\";\nimport { reqLogin, reqAuthCode, navList, setToken } from \"../../api\";\n\nconst Item = Form.Item;\n\n/*\n登陆的路由组件\n */\nclass Login extends Component {\n  getMenuList = async () => {\n    const result = await navList();\n    if (result.status === 0) {\n      let { data } = result;\n      data.forEach(element => {\n        if (element.children) {\n          element.children.forEach(item => {\n            item.title = item.title.slice(24);\n          });\n        }\n      });\n      localStorage.menuList = JSON.stringify(data);\n      // 跳转到管理界面 (不需要再回退回到登陆)\n      this.props.history.replace(\"/\");\n\n      // setTimeout(() => this.props.history.replace(\"/\"), 300);\n    }\n  };\n  handleSubmit = event => {\n    // 阻止事件的默认行为\n    event.preventDefault();\n\n    // 对所有表单字段进行检验\n    this.props.form.validateFields(async (err, values) => {\n      // 检验成功\n      if (!err) {\n        // 请求登陆\n        const { username, password, authcode } = values;\n        const result = await reqLogin(username, password, authcode);\n\n        if (result.status === 0) {\n          // 登陆成功\n          message.success(\"登陆成功\");\n          localStorage.token = result.data.token;\n          localStorage.name = result.data.name;\n          localStorage.tokenTimeStamp = new Date().getTime();\n          setToken();\n          this.getMenuList();\n        } else {\n          // 登陆失败\n          // 提示错误信息\n          message.error(result.msg);\n        }\n      } else {\n        console.log(\"检验失败!\");\n      }\n    });\n  };\n\n  handleClick = () => {\n    this.props.form.validateFields(async (err, values) => {\n      // 检验成功\n      if (!err) {\n        // 请求登陆\n        const { username, password } = values;\n        const result = await reqAuthCode(username, password);\n        // console.log(\"请求成功\", result);\n        if (result.status === 0 && result.data) {\n          // 登陆成功\n          Modal.info({\n            title: \"首次登录扫码获取验证码\",\n            content: (\n              <div>\n                <img src={result.data.qrurl} alt=\"验证码\" />\n              </div>\n            )\n          });\n        } else {\n          // 登陆失败\n          // 提示错误信息\n          message.error(result.msg);\n        }\n      } else {\n        console.log(\"检验失败!\");\n      }\n    });\n\n    // 得到form对象\n    // const form = this.props.form\n    // // 获取表单项的输入数据\n    // const values = form.getFieldsValue()\n    // console.log('handleSubmit()', values)\n  };\n  /*\n  对密码进行自定义验证\n  */\n  /*\n   用户名/密码的的合法性要求\n     1). 必须输入\n     2). 必须大于等于4位\n     3). 必须小于等于12位\n     4). 必须是英文、数字或下划线组成\n    */\n  validatePwd = (rule, value, callback) => {\n    console.log(\"validatePwd()\", rule, value);\n    if (!value) {\n      callback(\"密码必须输入\");\n    } else if (value.length < 4) {\n      callback(\"密码长度不能小于4位\");\n    } else if (value.length > 12) {\n      callback(\"密码长度不能大于12位\");\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n      callback(\"密码必须是英文、数字或下划线组成\");\n    } else {\n      callback(); // 验证通过\n    }\n    // callback('xxxx') // 验证失败, 并指定提示的文本\n  };\n\n  render() {\n    // 如果用户已经登陆, 自动跳转到管理界面\n    const token = localStorage.token;\n    if (token) {\n      return <Redirect to=\"/\" />;\n    }\n    // 得到具强大功能的form对象\n    const form = this.props.form;\n    const { getFieldDecorator } = form;\n\n    return (\n      <div className=\"login\">\n        <header className=\"login-header\">\n          <h1>QGame: 后台管理系统</h1>\n        </header>\n        <section className=\"login-content\">\n          <h2>用户登陆</h2>\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Item>\n              {/*\n              用户名/密码的的合法性要求\n                1). 必须输入\n                2). 必须大于等于4位\n                3). 必须小于等于12位\n                4). 必须是英文、数字或下划线组成\n               */}\n              {getFieldDecorator(\"username\", {\n                // 配置对象: 属性名是特定的一些名称\n                // 声明式验证: 直接使用别人定义好的验证规则进行验证\n                rules: [\n                  {\n                    required: true,\n                    whitespace: true,\n                    message: \"用户名必须输入\"\n                  },\n                  { min: 3, message: \"用户名至少3位\" },\n                  { max: 12, message: \"用户名最多12位\" },\n                  {\n                    pattern: /^[a-zA-Z0-9_]+$/,\n                    message: \"用户名必须是英文、数字或下划线组成\"\n                  }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"用户名\"\n                />\n              )}\n            </Item>\n            <Form.Item>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  {\n                    validator: this.validatePwd\n                  }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"密码\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"authcode\", {\n                rules: [\n                  //{ required: true, whitespace: true, message: '验证码必须输入' },\n                  //{ min: 4, message: '验证码至少4位' }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"qrcode\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"验证码\"\n                />\n              )}\n            </Form.Item>\n            <span style={{ marginTop: 5 }} onClick={this.handleClick}>\n              首次登录，手机下载Google Authenticator\n              安装，点击此处扫码获取验证码\n            </span>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n              >\n                登陆\n              </Button>\n            </Form.Item>\n          </Form>\n        </section>\n      </div>\n    );\n  }\n}\nconst WrapLogin = Form.create()(Login);\nexport default WrapLogin;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Menu, message } from \"antd\";\nimport { navList } from \"../../api\";\nimport \"./index.less\";\n\nconst SubMenu = Menu.SubMenu;\n// 左侧导航的组件\nclass LeftNav extends Component {\n  constructor() {\n    super();\n    this.state = { data: [], openKey: \"\" };\n  }\n  getMenuList = async () => {\n    const result = await navList();\n\n    if (result.status === 0) {\n      //登陆成功\n      this.setState({\n        data: result.data\n      });\n    } else {\n      // 提示错误信息\n      message.error(result.msg);\n    }\n  };\n  /*\n   获取左侧菜单导航栏\n    */\n  getMenuList = async () => {\n    const result = await navList();\n    if (result.status === 0) {\n      this.setState({\n        data: result.data\n      });\n    } else {\n      message.error(\"网络问题，请重新登陆\");\n    }\n  };\n\n  /*\n  根据menu的数据数组生成对应的标签数组\n  使用reduce() + 递归调用\n  */\n  getMenuNodes = menuList => {\n    // 得到当前请求的路由路径\n    const path = this.props.location.pathname;\n    return menuList.reduce((pre, item) => {\n      // 向pre添加<Menu.Item>\n      // if (item.key) {\n        //按需渲染侧边栏，必须已经在后台-权限管理中设置了路由key才能渲染\n        if (!item.children) {\n          pre.push(\n            <Menu.Item\n              key={item.key}\n              onClick={() => {\n                this.props.onClick(item);\n                this.openMenu = item.key;\n              }}\n            >\n              <Link to={item.key}>\n                {/* <Icon type={item.icon} /> */}\n                <span>{item.title}</span>\n              </Link>\n            </Menu.Item>\n          );\n        } else {\n          // 查找一个与当前请求路径匹配的子Item\n          const cItem = item.children.find(\n            currentValue => path.indexOf(currentValue.key) === 0\n          );\n          // 如果存在, 说明当前item的子列表需要打开\n          if (cItem) {\n            this.openKey = item.key;\n            // this.setState({ openKey: item.key });\n          }\n          pre.push(\n            <SubMenu\n              key={item.key}\n              title={\n                <span>\n                  <span>{item.title}</span>\n                </span>\n              }\n              onClick={() => {\n                this.openMenu = item.key;\n                // console.log(this.openMenu);\n              }}\n            >\n              {item.children.reduce((cpre, ele) => {\n                cpre.push(\n                  <Menu.Item\n                    key={ele.key}\n                    onClick={() => {\n                      this.props.onClick(ele);\n                    }}\n                  >\n                    <Link to={ele.key}>\n                      <span>{ele.title}</span>\n                    </Link>\n                  </Menu.Item>\n                );\n                return cpre;\n              }, [])}\n            </SubMenu>\n          );\n        }\n      // }\n      return pre;\n    }, []);\n  };\n  componentDidMount() {\n    this.setState({openKey:this.openKey})\n  }\n  render() {\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\n    const menuNodes = this.getMenuNodes(menuList);\n    // 得到当前请求的路由路径\n    let path = this.props.location.pathname;\n    // 得到需要打开菜单项的key\n    // const openKey = this.openKey;\n\n    return (\n      <div className=\"left-nav\">\n        <Link\n          to=\"/\"\n          className=\"left-nav-header\"\n          style={{ justifyContent: \"center\" }}\n        >\n          <h1>QGame后台管理</h1>\n        </Link>\n        <Menu\n          mode=\"inline\"\n          theme=\"dark\"\n          selectedKeys={[path]}\n          // defaultOpenKeys={[this.openKey]}\n          onOpenChange={key => {\n            console.log(key);\n            if (key[1] && key[0] !== key[1]) {\n              this.setState({ openKey: key[1] });\n            } else {\n              this.setState({ openKey: null });\n            }\n          }}\n          openKeys={[this.state.openKey]}\n        >\n          {menuNodes}\n        </Menu>\n      </div>\n    );\n  }\n}\n\n/*\nwithRouter高阶组件:\n包装非路由组件, 返回一个新的组件\n新的组件向非路由组件传递3个属性: history/location/match\n */\nexport default withRouter(LeftNav);\n","import React from \"react\";\nimport { Button } from \"antd\";\nexport default function LinkButton(props) {\n  return (\n    <Button\n      type=\"primary\"\n      size='small'\n      style={{ marginRight: 10}}\n      {...props}\n    ></Button>\n  );\n}\n","import React, { Component } from \"react\";\n// import { browserHistory } from \"react-router\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport {\n  Modal,\n  Tabs,\n  Dropdown,\n  Menu,\n  Icon,\n  Button,\n  message,\n  Input,\n  Form\n} from \"antd\";\n\nimport LinkButton from \"../link-button\";\n// import memoryUtils from \"../../utils/memoryUtils\";\n// import storageUtils from \"../../utils/storageUtils\";\nimport { getAuthCode, editPass } from \"../../api\";\nimport QRCode from \"qrcode.react\";\nimport \"./index.less\";\nconst { TabPane } = Tabs;\n/*\n左侧导航的组件\n */\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.newTabIndex = 0;\n    const panes = [\n      {\n        title: \"首页\",\n        content: \"Content of Tab 1\",\n        key: \"1\",\n        closable: false,\n        path: \"/home\"\n      }\n    ];\n    this.state = {\n      activeKey: panes[0].key,\n      panes,\n      isEditFormShow: false\n    };\n  }\n  onChange = activeKey => {\n    this.setState({ activeKey });\n  };\n\n  onEdit = (targetKey, action) => {\n    this[action](targetKey);\n  };\n\n  add = tabConfig => {\n    // console.log(\"tabConfig\", tabConfig);\n    const { panes } = this.state;\n    let isTabExist = false;\n    let oldKey;\n    panes.forEach(item => {\n      if (item.title === tabConfig.title) {\n        isTabExist = true;\n        oldKey = item.key;\n      }\n    });\n    if (isTabExist) {\n      this.onChange(oldKey);\n    } else {\n      const activeKey = `newTab${this.newTabIndex++}`;\n      panes.push({\n        title: tabConfig.title,\n        content: \"Content of new Tab\",\n        key: activeKey,\n        path: tabConfig.key\n      });\n      this.onChange(activeKey);\n      this.setState({ panes, activeKey });\n    }\n  };\n\n  remove = targetKey => {\n    let { activeKey } = this.state;\n    let lastIndex;\n    this.state.panes.forEach((pane, i) => {\n      if (pane.key === targetKey) {\n        lastIndex = i - 1;\n      }\n    });\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n    if (panes.length && activeKey === targetKey) {\n      if (lastIndex >= 0) {\n        activeKey = panes[lastIndex].key;\n        // browserHistory.push(panes[lastIndex].path);\n        this.props.history.push(panes[lastIndex].path);\n      } else {\n        activeKey = panes[0].key;\n      }\n    }\n    this.setState({ panes, activeKey });\n  };\n\n  //退出LOG OUT\n  logout = () => {\n    // 显示确认框\n    Modal.confirm({\n      content: \"确定退出吗?\",\n      onOk: () => {\n        console.log(\"OK\", this);\n        // 删除保存的user数据\n        // storageUtils.removeUser();\n        // memoryUtils.user = {};\n        // localStorage={}\n        localStorage.removeItem(\"menuList\");\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"name\");\n        localStorage.removeItem(\"tokenTimeStamp\");\n        // 跳转到login\n        this.props.history.replace(\"/login\");\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    // 清除定时器\n    clearInterval(this.intervalId);\n  }\n  componentDidMount() {\n    this.props.onRef && this.props.onRef(this);\n    let data = this.state;\n    const path = this.props.location.pathname;\n    let title;\n    if (path !== \"/home\" && path !== \"/\") {\n      const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\n      menuList.forEach(item => {\n        if (!item.children && item.key === path) {\n          title = item.title;\n        } else if (item.children) {\n          item.children.forEach(val => {\n            if (val.key === path) {\n              title = val.title;\n            }\n          });\n        }\n      });\n      data.activeKey = \"2\";\n      data.panes.push({\n        title: title,\n        key: \"2\",\n        path: path\n      });\n      this.setState({\n        ...data\n      });\n    }\n  }\n\n  render() {\n    const username = localStorage.getItem(\"name\");\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    return (\n      <div className=\"header\">\n        <div className=\"header-top\">\n          <Dropdown\n            overlay={\n              <Menu>\n                <Menu.Item key=\"0\">\n                  <Button type=\"link\" onClick={this.authCode}>\n                    安全码设置\n                  </Button>\n                </Menu.Item>\n                <Menu.Item key=\"1\">\n                  <Button type=\"link\" onClick={this.resetPWD}>\n                    修改密码\n                  </Button>\n                </Menu.Item>\n              </Menu>\n            }\n            trigger={[\"click\"]}\n          >\n            <Button type=\"link\">\n              {username} <Icon type=\"down\" />\n            </Button>\n          </Dropdown>\n          <LinkButton onClick={this.logout} size=\"default\">\n            退出\n          </LinkButton>\n        </div>\n        <div className=\"header-bottom\">\n          {/* <div className=\"header-bottom-left\">{title}</div> */}\n          <Tabs\n            onChange={this.onChange}\n            activeKey={this.state.activeKey}\n            type=\"editable-card\"\n            onEdit={this.onEdit}\n            hideAdd\n          >\n            {this.state.panes.map(pane => (\n              <TabPane\n                tab={<Link to={pane.path}>{pane.title}</Link>}\n                key={pane.key}\n                closable={pane.closable}\n                forceRender\n              />\n            ))}\n          </Tabs>\n        </div>\n        {this.state.isEditFormShow && (\n          <Modal\n            title=\"编辑\"\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <Form\n              labelCol={{ span: 6 }}\n              labelAlign=\"left\"\n              onSubmit={this.handleEditSubmit}\n            >\n              <Form.Item label=\"新密码\">\n                {getFieldDecorator(\"editPass\", {\n                  rules: [\n                    { required: true, message: \"密码不能为空\" },\n                    { whitespace: true },\n                    { min: 6, message: \"密码至少6位\" },\n                    { max: 16, message: \"密码最多16位\" }\n                    // {\n                    //   pattern: /^[a-zA-Z0-9_]+$/,\n                    //   message: \"用户名必须是英文、数字或下划线组成\"\n                    // }\n                  ]\n                })(\n                  <Input\n                    style={{ width: \"40%\" }}\n                    type=\"password\"\n                    placeholder=\"6到16个字符\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item label=\"重复密码\">\n                {getFieldDecorator(\"repeat\", {\n                  rules: [\n                    { required: true },\n                    {\n                      validator: (rule, value, callback) => {\n                        if (!value) {\n                          callback(); //如果还没填写，则不进行一致性验证\n                        }\n                        if (value === getFieldValue(\"editPass\")) {\n                          callback();\n                        } else {\n                          callback(\"两次密码不一致\");\n                        }\n                      }\n                    }\n                  ]\n                })(\n                  <Input\n                    style={{ width: \"40%\" }}\n                    type=\"password\"\n                    placeholder=\"6到16个字符\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  提交\n                </Button>\n              </Form.Item>\n            </Form>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n  authCode = async () => {\n    const res = await getAuthCode();\n    if (res.status === 0) {\n      Modal.info({\n        title: \"扫码获取验证码\",\n        content: <QRCode value={res.data.qrurl}></QRCode>,\n        width: 300\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  resetPWD = () => {\n    this.setState({ isEditFormShow: true });\n  };\n  handleEditSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      if (!err) {\n        const res = await editPass(value.editPass);\n        if (res.status === 0) {\n          message.success(res.msg);\n        } else {\n          message.error(res.msg);\n        }\n      }\n    });\n  };\n}\nconst WrappedHeader = Form.create()(Header);\nexport default withRouter(WrappedHeader);\n","import React, { Component } from \"react\";\n// import ElasticText from \"../../components/elasticText\";\n// import { Icon} from \"antd\";\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      res: \"\"\n    };\n    this.i = 0;\n    this.timer = 0;\n    this.str = \"欢迎您来到QGame后台管理系统\";\n  }\n  typing = () => {\n    if (this.i <= this.str.length) {\n      this.setState(\n        {\n          res: this.str.slice(0, this.i++) + \"__\"\n        },\n        () => {\n          this.timer = setTimeout(() => this.typing(), 200);\n        }\n      );\n    } else {\n      this.setState({\n        res: this.str\n      });\n      clearTimeout(this.timer);\n    }\n  };\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  componentDidMount() {\n    this.typing();\n  }\n  render() {\n    return <span style={{ fontSize: \"20px\" }}>{this.state.res}</span>;\n    // <ElasticText></ElasticText>\n  }\n}\n","import moment from \"moment\";\n/*\n包含n个日期时间处理的工具函数模块\n*/\n\n/*\n  格式化日期\n*/\nexport function formateDate(time) {\n  if (!time) return \"\";\n  let timeStamp = parseInt(time);\n  if (timeStamp === 0) return \"\";\n  return moment(timeStamp * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n  // let date = new Date(time * 1000);\n  // return (\n  //   date.getFullYear() +\n  //   \"-\" +\n  //   (date.getMonth() + 1) +\n  //   \"-\" +\n  //   date.getDate() +\n  //   \" \" +\n  //   date.getHours() +\n  //   \":\" +\n  //   date.getMinutes() +\n  //   \":\" +\n  //   date.getSeconds()\n  // );\n}\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input } from \"antd\";\n\nconst FormItem = Form.Item;\nclass NormalLoginForm extends Component {\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { isNickModal } = this.props;\n    return (\n      <Form className=\"login-form\">\n        <FormItem style={isNickModal ? {} : { display: \"none\" }}>\n          {getFieldDecorator(\"name\", {\n            rules: [\n              {\n                required: isNickModal,\n                message: \"Please input your username!\"\n              }\n            ],\n            initialValue: this.props.val\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              placeholder=\"请输入昵称\"\n            />\n          )}\n        </FormItem>\n        <FormItem label=\"金额\" style={isNickModal ? { display: \"none\" } : {}}>\n          {getFieldDecorator(\"gold\", {\n            rules: [\n              {\n                required: !isNickModal,\n                whitespace: true,\n                pattern: /^\\d+(\\.\\d+)?$/,\n                message: \"必须为数字，减少时金额为负\"\n              }\n            ],\n          })(<Input placeholder=\"必须为数字，减少时金额为负\" />)}\n        </FormItem>\n        <FormItem label=\"备注\" style={isNickModal ? { display: \"none\" } : {}}>\n          {getFieldDecorator(\"desc\", {\n            rules: [\n              { max: 400, message: \"最多400字\" },\n              {\n                required: !isNickModal\n              }\n            ]\n          })(\n            <Input.TextArea\n              placeholder=\"请输入文字\"\n              autosize={{ minRows: 2, maxRows: 6 }}\n            />\n          )}\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\n\nexport default WrappedNormalLoginForm;\n","import React from \"react\";\nimport { DatePicker, ConfigProvider } from \"antd\";\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\nimport \"moment/locale/zh-cn\";\nimport moment from \"moment\";\nconst { RangePicker } = DatePicker;\nexport default function MyDatePicker(props) {\n  return (\n    <ConfigProvider locale={zh_CN}>\n      <RangePicker\n        // defaultValue={[moment().locale(\"zh-cn\")]}\n        style={{ width: 300 }}\n        showTime={{\n          format: \"HH:mm\",\n          defaultValue: [\n            moment(\"00:00\", \"HH:mm\"),\n            moment(\"00:00\", \"HH:mm\")\n          ]\n        }}\n        format=\"YYYY-MM-DD HH:mm:00\"\n        placeholder={[\"开始日期\", \"结束日期\"]}\n        onChange={(data, dateString) => {\n          props.handleValue(dateString);\n        }}\n        // disabledDate={disabledDate}\n        // disabledTime={disabledRangeTime}\n        {...props}\n      />\n    </ConfigProvider>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Table, Card, Icon } from \"antd\";\nimport MyDatePicker from \"../../components/MyDatePicker\";\nimport LinkButton from \"../../components/link-button/index\";\nimport { userDetail } from \"../../api/index\";\nclass GoldDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      data: this.props.GoldDetailRecord.data\n    });\n  }\n  search = async () => {\n    let goldDetails = {\n      start: this.startTime ? this.startTime : \"\",\n      end: this.endTime ? this.endTime : \"\",\n      funds_type: 0\n    };\n    const res = await userDetail(\n      1,\n      100,\n      this.props.GoldDetailRecord.id,\n      goldDetails\n    );\n    this.setState({ data: res.data });\n  };\n  render() {\n    // const { data } = this.props.GoldDetailRecord;\n    let title;\n    if (!this.props.isBindInfo) {\n      title = (\n        <span>\n          <MyDatePicker\n            handleValue={val => {\n              this.startTime = val[0];\n              this.endTime = val[1];\n            }}\n          />\n          &nbsp; &nbsp;\n          <LinkButton onClick={this.search} size=\"default\">\n            <Icon type=\"search\" />\n          </LinkButton>\n        </span>\n      );\n    }\n    return (\n      <Card title={title}>\n        <Table\n          bordered\n          rowKey=\"_id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n        />\n      </Card>\n    );\n  }\n  initColumns = () => {\n    if (this.props.isBindInfo) {\n      return [\n        {\n          title: \"支付宝账号\",\n          dataIndex: \"alipay_account\"\n        },\n        {\n          title: \"绑定支付宝时间\",\n          dataIndex: \"bind_alipay_at\"\n        },\n\n        {\n          title: \"开户人姓名\",\n          dataIndex: \"card_name\"\n        },\n        {\n          title: \"银行名称\",\n          dataIndex: \"bank_name\"\n        },\n        {\n          title: \"银行卡号\",\n          dataIndex: \"bank_num\"\n        },\n        {\n          title: \"绑定银行卡时间\",\n          dataIndex: \"bind_bank_at\"\n        },\n        {\n          title: \"是否灰名单\",\n          dataIndex: \"is_gray\"\n        },\n        {\n          title: \"灰名单备注\",\n          dataIndex: \"black_remark\"\n        },\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"remark_at\"\n        },\n        {\n          title: \"操作\",\n          dataIndex: \"option\"\n        }\n      ];\n    } else {\n      return [\n        {\n          title: \"user_id\",\n          dataIndex: \"id\"\n        },\n        {\n          title: \"产生来源\",\n          dataIndex: \"pay_account_name\"\n        },\n\n        {\n          title: \"余额(变动前)\",\n          dataIndex: \"total_balance\"\n        },\n        {\n          title: \"变动金额\",\n          dataIndex: \"final_pay\",\n\n          sorter: (a, b) => a.total_balance - b.total_balance\n        },\n        {\n          title: \"税收\",\n          dataIndex: \"tax\"\n        },\n        {\n          title: \"余额(变动后)\",\n          dataIndex: \"total_final_balance\"\n        },\n        {\n          title: \"备注\",\n          dataIndex: \"pay_reason\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"create_time\"\n        }\n      ];\n    }\n  };\n}\n\nexport default GoldDetail;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Select,\n  Input,\n  Popconfirm,\n  Button\n} from \"antd\";\n\nimport { formateDate } from \"../../utils/dateUtils\";\nimport LinkButton from \"../../components/link-button/index\";\nimport {\n  reqUsers,\n  setGameUserNickName,\n  changeGold,\n  reqLoadGold,\n  userDetail,\n  bindInfo,\n  saveUserBlack,\n  createTask,\n  setCustomer\n} from \"../../api/index\";\nimport WrappedNormalLoginForm from \"././user-nick\";\nimport WrappedComponent from \"./gold_details\";\nimport MyDatePicker from \"../../components/MyDatePicker\";\n\nconst { Option } = Select;\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isNickShow: false,\n      isGoldShow: false,\n      isGoldDetailShow: false,\n      isBindInfoShow: false,\n      isResetPwdShow: false,\n      resetpwd: \"\",\n      game_nick: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      loading: false\n    };\n    this.inputKey = \"id\";\n    this.inputValue = \"\";\n  }\n\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"id\",\n      key: \"id\",\n      fixed: \"left\",\n      width: 150\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"game_nick\",\n      key: \"game_nick\",\n      fixed: \"left\",\n      width: 150,\n      onCell: (record, rowIndex) => {\n        return {\n          onClick: event => {\n            this.game_nick = record.game_nick;\n            this.id = record.id;\n            this.rowIndex = rowIndex;\n            this.setState({\n              isNickShow: true\n            });\n          }, // 点击行\n          onDoubleClick: event => {},\n          onContextMenu: event => {},\n          onMouseEnter: event => {\n            event.target.style.cursor = \"pointer\";\n          }, // 鼠标移入行\n          onMouseLeave: event => {}\n        };\n      }\n    },\n\n    {\n      title: \"账户余额\",\n      dataIndex: \"game_gold\",\n      key: \"game_gold\",\n      sorter: (a, b) => a.game_gold - b.game_gold,\n      width: 150,\n      onCell: (record, rowIndex) => {\n        return {\n          onClick: event => {\n            this.goldRecord = record;\n            this.setState({\n              isGoldShow: true\n            });\n          }, // 点击行\n          onDoubleClick: event => {},\n          onContextMenu: event => {},\n          onMouseEnter: event => {\n            event.target.style.cursor = \"pointer\";\n          }, // 鼠标移入行\n          onMouseLeave: event => {}\n        };\n      }\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      key: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_nick\",\n      key: \"proxy_nick\",\n      width: 150\n    },\n    {\n      title: \"手机\",\n      dataIndex: \"phone_number\",\n      key: \"phone_number\",\n      width: 150\n    },\n    {\n      title: \"账号\",\n      dataIndex: \"role_name\",\n      key: \"role_name\",\n      width: 100\n    },\n    {\n      title: \"注册时间\",\n      dataIndex: \"regin_time\",\n      render: formateDate,\n      key: \"regin_time\",\n      sorter: (a, b) => a.regin_time - b.regin_time,\n      width: 200\n    },\n    {\n      title: \"登录IP\",\n      dataIndex: \"login_ip\",\n      key: \"login_ip\",\n      width: 150\n    },\n    {\n      title: \"登陆时间\",\n      dataIndex: \"login_time\",\n      render: formateDate,\n      sorter: (a, b) => a.login_time - b.login_time,\n      width: 200\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getGoldDetail(record)} size=\"small\">\n            资金明细\n          </LinkButton>\n          <LinkButton onClick={() => this.getMoreDetail(record)} size=\"small\">\n            更多\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"实时余额\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton size=\"small\" onClick={() => this.getLoadGold(record)}>\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"是否为客服账号\",\n      dataIndex: \"game_user_type\",\n      width: 120,\n      render: (text, record, index) => (\n        <span>{parseInt(text) === 4 ? \"是\" : \"\"}</span>\n      )\n    }\n  ];\n\n  getUsers = async (page, limit) => {\n    const result = await reqUsers(\n      page,\n      limit,\n      this.state.startTime,\n      this.state.endTime,\n      this.inputKey,\n      this.inputValue\n    );\n    if (result.status === 0) {\n      const { game_user, proxy_user } = result.data;\n      game_user.forEach(element => {\n        proxy_user.forEach(item => {\n          if (element.id === item.id) {\n            element.proxy_nick = item.proxy_pid;\n            // element.proxy_user_type = item.proxy_user_type;\n          }\n        });\n      });\n      this.setState({\n        data: game_user,\n        count: result.count\n      });\n    } else {\n      message.error(result.msg + \"接口异常,未检索到数据\");\n    }\n  };\n  changeNickName = () => {\n    let form = this.refs.getFormValue; //通过refs属性可以获得对话框内form对象\n    form.validateFields(async (err, value) => {\n      if (!err) {\n        this.setState({ isNickShow: false });\n        if (value.name !== this.game_nick) {\n          const result = await setGameUserNickName(this.id, value.name);\n          if (result.status === 0) {\n            message.success(\"修改成功!\");\n            // 首先拿到索引, 也可以从参数中传递过来\n            let index = this.rowIndex;\n            // 然后根据索引修改\n            this.state.data[index][`game_nick`] = value.name;\n            // 这个时候并不会更新视图, 需要 setState更新 arr\n            this.setState({\n              data: this.state.data\n            });\n          }\n        }\n      }\n      form.resetFields();\n    });\n  };\n  changeGold = () => {\n    this.setState({ loading: true });\n    //这里直接复用了user-nick的模态框，所以取input的值时用value.name\n    let form = this.refs.getFormValue;\n    let goldRecord = this.goldRecord;\n    form.validateFields(async (err, value) => {\n      const res = await changeGold(goldRecord, value);\n      if (res.status === 0) {\n        message.success(res.msg);\n        this.setState({ isGoldShow: false, loading: false });\n      } else {\n        this.setState({ loading: false });\n        message.error(res.msg);\n      }\n      form.resetFields();\n    });\n  };\n  handleChange(event) {\n    let data = Object.assign({}, this.state.inputParam, {\n      val: event.target.value\n    });\n    this.setState({ inputParam: data });\n  }\n  getLoadGold = async record => {\n    const id = record.id;\n    const result = await reqLoadGold(id);\n    if (result.status === 0) {\n      Modal.success({\n        title: \"实时余额\",\n        content: `用户${record.id}实时余额是 : ${result.data[0].game_gold}`\n      });\n    }\n  };\n  getGoldDetail = async (record, isBindInfo) => {\n    if (this.moreModal) {\n      this.moreModal.destroy();\n    }\n    this.isBindInfo = isBindInfo;\n    this.GoldDetailRecord = {\n      data: [],\n      count: 0,\n      id: record.id\n    };\n    const res = !isBindInfo\n      ? await userDetail(1, 20, record.id)\n      : await bindInfo(1, 20, record.id);\n    if (res.status === 0) {\n      this.GoldDetailRecord.data = res.data;\n      this.GoldDetailRecord.count = res.count;\n    }\n    this.setState({ isGoldDetailShow: true });\n  };\n  saveUserBlack = async (record, isAdd) => {\n    let action = isAdd ? \"add\" : \"remove\";\n    const res = await saveUserBlack(record.id, action);\n    if (res.status === 0) {\n      message.success(\"操作成功！\");\n    } else {\n      message.success(\"操作失败:\" + res.msg);\n    }\n  };\n  resetPwd = record => {\n    if (this.moreModal) {\n      this.moreModal.destroy();\n    }\n    this.setState({ isResetPwdShow: true });\n    this.resetPwdId = record.id;\n  };\n  handleResetpwd = async () => {\n    const res = await createTask(this.resetPwdId, this.state.resetpwd);\n    if (res.status === 0) {\n      message.success(\"操作成功！\");\n      this.setState({ resetpwd: \"\", isResetPwdShow: false });\n    } else {\n      message.success(\"操作失败:\" + res.msg);\n    }\n  };\n  getMoreDetail = record => {\n    this.moreModal = Modal.info({\n      title: \"更多\",\n      okText: \"关闭\",\n      width: \"50%\",\n      content: (\n        <div>\n          <LinkButton\n            onClick={() => this.getGoldDetail(record, true)}\n            size=\"small\"\n          >\n            查看绑定信息\n          </LinkButton>\n          <Popconfirm\n            title=\"交易所黑名单\"\n            onConfirm={() => this.saveUserBlack(record, true)}\n            onCancel={() => this.saveUserBlack(record, false)}\n            okText=\"添加\"\n            cancelText=\"移除\"\n          >\n            <LinkButton size=\"small\">交易所黑名单</LinkButton>\n          </Popconfirm>\n          <LinkButton onClick={() => this.resetPwd(record)} size=\"small\">\n            重置密码\n          </LinkButton>\n          <Popconfirm\n            title=\"确定要设置为客户账号吗？\"\n            onConfirm={() => this.setCustomerAccount(record)}\n            okText=\"确定\"\n            cancelText=\"取消\"\n          >\n            <LinkButton size=\"small\">设置客户账号</LinkButton>\n          </Popconfirm>\n        </div>\n      )\n    });\n  };\n  setCustomerAccount = async record => {\n    let id = record.id;\n    const res = await setCustomer(id);\n    if (res.status === 0) {\n      message.success(res.msg + \"操作成功\");\n    } else {\n      message.error(res.msg + \"操作失败\");\n    }\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    const { data, count } = this.state;\n    const title = (\n      <span>\n        <MyDatePicker\n          handleValue={val => {\n            this.setState({\n              startTime: val[0],\n              endTime: val[1]\n            });\n          }}\n        />\n        &nbsp; &nbsp;\n        <Select\n          style={{ width: 200 }}\n          placeholder=\"Select a person\"\n          defaultValue=\"id\"\n          onChange={val => {\n            this.inputKey = val;\n          }}\n        >\n          <Option value=\"id\">user_id</Option>\n          <Option value=\"game_nick\">昵称</Option>\n          <Option value=\"phone_number\">手机号</Option>\n          <Option value=\"role_name\">账号</Option>\n          <Option value=\"proxy_nick\">所属代理</Option>\n          <Option value=\"package_nick\">所属品牌</Option>\n        </Select>\n        &nbsp; &nbsp;\n        <Input\n          type=\"text\"\n          placeholder=\"请输入关键字搜索\"\n          style={{ width: 150 }}\n          ref={Input => (this.input = Input)}\n        />\n        &nbsp; &nbsp;\n        <LinkButton\n          onClick={() => {\n            this.inputValue = this.input.input.value;\n            this.getUsers(1, this.state.pageSize);\n          }}\n          size=\"default\"\n        >\n          <Icon type=\"search\" />\n        </LinkButton>\n      </span>\n    );\n    const extra = (\n      <LinkButton\n        onClick={() => {\n          window.location.reload();\n        }}\n        size=\"default\"\n      >\n        <Icon type=\"reload\" />\n      </LinkButton>\n    );\n    return (\n      <Card title={title} extra={extra}>\n        <Table\n          bordered\n          rowKey=\"_id\"\n          dataSource={data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 1900, y: \"65vh\" }}\n        />\n        <Modal\n          title=\"修改昵称\"\n          visible={this.state.isNickShow}\n          onOk={this.changeNickName}\n          onCancel={() => {\n            this.setState({ isNickShow: false });\n          }}\n        >\n          <WrappedNormalLoginForm\n            ref=\"getFormValue\"\n            val={this.game_nick}\n            isNickModal\n          />\n        </Modal>\n        <Modal\n          title=\"修改金额\"\n          visible={this.state.isGoldShow}\n          // onOk={this.changeGold}\n          onCancel={() => {\n            this.setState({ isGoldShow: false });\n          }}\n          footer={[\n            <Button\n              key=\"back\"\n              onClick={() => {\n                this.setState({ isGoldShow: false });\n              }}\n            >\n              取消\n            </Button>,\n            <Button\n              key=\"submit\"\n              type=\"primary\"\n              loading={this.state.loading}\n              onClick={this.changeGold}\n            >\n              确定\n            </Button>\n          ]}\n        >\n          <WrappedNormalLoginForm\n            ref=\"getFormValue\"\n            goldRecord={this.goldRecord}\n          />\n        </Modal>\n        <Modal\n          title={this.isBindInfo ? \"查看绑定信息\" : \"资金明细\"}\n          visible={this.state.isGoldDetailShow}\n          onCancel={() => {\n            this.setState({ isGoldDetailShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <WrappedComponent\n            GoldDetailRecord={this.GoldDetailRecord}\n            isBindInfo={this.isBindInfo}\n          />\n        </Modal>\n        <Modal\n          title=\"重置密码\"\n          visible={this.state.isResetPwdShow}\n          onOk={this.handleResetpwd}\n          onCancel={() => {\n            this.setState({ isResetPwdShow: false });\n          }}\n        >\n          <span>重置密码</span>\n          <Input\n            value={this.state.resetpwd}\n            onChange={e => this.setState({ resetpwd: e.target.value })}\n          />\n        </Modal>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Icon,\n  Input,\n  Radio,\n  Select,\n  Checkbox,\n  Button,\n  message\n} from \"antd\";\nimport { addUser, editUser } from \"../../../api\";\n\n\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isBan: 1,\n      checkedList: [],\n      indeterminate: true,\n      checkAll: false\n    };\n  }\n  checkboxOnChange = checkedList => {\n    // console.log(checkedList);\n    this.setState({\n      checkedList,\n      indeterminate:\n        !!checkedList.length &&\n        checkedList.length < this.props.packageList.length,\n      checkAll: checkedList.length === this.props.packageList.length\n    });\n  };\n  onCheckAllChange = e => {\n    let list = this.props.packageList.map(item => {\n      return item.value;\n    });\n    this.setState(\n      {\n        checkedList: e.target.checked ? list : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      },\n      () => {\n        this.props.form.setFieldsValue({\n          packageList: this.state.checkedList\n        });\n      }\n    );\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      if (!err) {\n        const res = !this.props.isEdit\n          ? await addUser(value)\n          : await editUser(value, this.props.editDataRecord.id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n  componentDidMount() {\n    if (this.props.isEdit && this.props.editDataRecord.group) {\n      let defaultValue = this.props.editDataRecord.group.split(\",\");\n      this.props.form.setFieldsValue({\n        packageList: defaultValue.map(Number)\n      });\n    }\n  }\n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    const Option = this.props.optionList.map(item => (\n      <Select.Option value={item.id} key={item.id}>\n        {item.name}\n      </Select.Option>\n    ));\n    return (\n      <Form\n        labelCol={{ span: 4 }}\n        onSubmit={this.handleSubmit}\n        labelAlign=\"left\"\n      >\n        <Form.Item label=\"登录名\">\n          {getFieldDecorator(\"username\", {\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"登录名必须输入\"\n              },\n              { min: 3, message: \"用户名至少3位\" },\n              { max: 10, message: \"用户名最多10位\" },\n              {\n                pattern: /^[a-zA-Z0-9_]+$/,\n                message: \"用户名必须是英文、数字或下划线组成\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.name : \"\"\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              style={{ width: \"60%\" }}\n              placeholder=\"将会成为您唯一的登入名\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"用户状态\">\n          {getFieldDecorator(\"userStatus\", {\n            initialValue: isEdit ? editDataRecord.status : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>启用</Radio>\n              <Radio value={0}>禁用</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"用户组\">\n          {getFieldDecorator(\"userGroup\", {\n            rules: [{ required: true, message: \"请选择用户组!\" }],\n            initialValue: isEdit && editDataRecord.group_id\n          })(\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择用户组\">\n              {Option}\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"授权品牌\">\n          <Checkbox\n            indeterminate={this.state.indeterminate}\n            onChange={this.onCheckAllChange}\n            checked={this.state.checkAll}\n          >\n            全选\n          </Checkbox>\n          {getFieldDecorator(\"packageList\", {\n            rules: [{ required: true, message: \"请选择授权品牌!\" }]\n          })(\n            <Checkbox.Group\n              options={this.props.packageList}\n              // value={this.state.checkedList}\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"授权代理\">\n          {getFieldDecorator(\"proxy\", {\n            rules: [\n              {\n                whitespace: true,\n                message: \"多个代理请用英文逗号分隔\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.proxy : \"\"\n          })(\n            <Input\n              style={{ width: \"60%\" }}\n              placeholder=\"多个代理请用英文逗号分隔\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"携带金额\">\n          {getFieldDecorator(\"loadGold\", {\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"请输入有效数字\"\n              },\n              {\n                pattern: /^\\d+(\\.\\d+)?$/,\n                message: \"请输入有效数字\"\n              }\n            ],\n            initialValue: isEdit && editDataRecord.use_balance\n          })(<Input style={{ width: \"60%\" }} placeholder=\"请输入数字\" />)}\n        </Form.Item>\n        <Form.Item label=\"密码\" style={isEdit ? { display: \"none\" } : {}}>\n          {getFieldDecorator(\"password\", {\n            rules: [\n              {\n                required: isEdit ? false : true,\n                whitespace: true,\n                message: \"密码不能为空\"\n              },\n              { min: 6, message: \"密码至少6位\" },\n              { max: 16, message: \"密码最多16位\" },\n              {\n                pattern: /^[a-zA-Z0-9_]+$/,\n                message: \"密码必须是英文、数字或下划线组成\"\n              }\n            ]\n          })(\n            <Input\n              type=\"password\"\n              style={{ width: \"60%\" }}\n              placeholder=\"6到16个字符\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"确认密码\" style={isEdit ? { display: \"none\" } : {}}>\n          {getFieldDecorator(\"confirmPssword\", {\n            rules: [\n              {\n                required: isEdit ? false : true,\n                whitespace: true\n              },\n              {\n                validator: (rule, value, callback) => {\n                  if (!value) {\n                    callback(); //如果还没填写，则不进行一致性验证\n                  }\n                  if (value === getFieldValue(\"password\")) {\n                    callback();\n                  } else {\n                    callback(\"两次密码不一致\");\n                  }\n                }\n              }\n            ]\n          })(\n            <Input\n              type=\"password\"\n              style={{ width: \"60%\" }}\n              placeholder=\"6到16个字符\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item\n          label=\"密码(选填)\"\n          style={!isEdit ? { display: \"none\" } : {}}\n        >\n          {getFieldDecorator(\"editPassword\", {\n            rules: [\n              {\n                whitespace: true\n              },\n              {\n                validator: (rule, value, callback) => {\n                  if (!value) {\n                    callback(); //如果还没填写，则不进行一致性验证\n                  }\n                  if (value === getFieldValue(\"password\")) {\n                    callback();\n                  } else {\n                    callback(\"两次密码不一致\");\n                  }\n                }\n              }\n            ]\n          })(\n            <Input\n              type=\"password\"\n              style={{ width: \"60%\" }}\n              placeholder=\"6到16个字符，重置密码时使用\"\n            />\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\nimport \"moment/locale/zh-cn\";\nimport WrappedAddDataForm from \"./addData\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport {\n  reqAdminList,\n  searchAdminData,\n  roleList,\n  packageList,\n  resetAuthCode\n} from \"../../../api/index\";\n\nclass Admin_manage_list extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"id\",\n    },\n    {\n      title: \"用户名\",\n      dataIndex: \"name\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"角色\",\n      dataIndex: \"role_name\",\n    },\n    {\n      title: \"授权品牌\",\n      dataIndex: \"group\",\n    },\n    {\n      title: \"授权代理\",\n      dataIndex: \"proxy\",\n    },\n    {\n      title: \"可使用金额\",\n      dataIndex: \"use_balance\",\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"更新时间\",\n      dataIndex: \"updated_at\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      align: \"center\",\n      render: (text, record, index) => (\n        <span>{text === 1 ? \"启用\" : \"禁用\"}</span>\n      )\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"handle\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n          <LinkButton onClick={() => this.resetAuthCode(record)}>\n            AuthCode重置\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n\n  getUsers = async (page, limit) => {\n    const result = await reqAdminList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  handleChange(event) {\n    this.setState({ inputParam: event.target.value });\n  }\n  onSearchData = async () => {\n    const result = await searchAdminData(this.state.inputParam);\n    // if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: 1\n      });\n    // }\n  };\n  addData = async () => {\n    const res = await roleList();\n    const result = await packageList();\n    if (res.status === 0 && result.status === 0) {\n      this.optionList = res.data;\n      this.packageList = result.data.map(item => {\n        return { label: item.name, value: item.id };\n      });\n      this.setState({\n        isAddDataShow: true\n      });\n    }\n  };\n  edit = async record => {\n    console.log(record);\n    this.editDataRecord = record;\n    const res = await roleList();\n    const result = await packageList();\n    if (res.status === 0 && result.status === 0) {\n      this.optionList = res.data;\n      this.packageList = result.data.map(item => {\n        return { label: item.name, value: item.id };\n      });\n      this.setState({\n        isEditDataShow: true\n      });\n    }\n  };\n  resetAuthCode = record => {\n    Modal.confirm({\n      title: \"信息\",\n      content: \"真的要重置么?\",\n      async onOk() {\n        const res = await resetAuthCode(record.id);\n        if (res.status === 0) {\n          message.success(res.msg);\n        } else {\n          message.success(res.msg);\n        }\n      }\n    });\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <Input\n              type=\"text\"\n              placeholder=\"请输入用户名\"\n              style={{ width: 150 }}\n              value={this.state.inputParam}\n              onChange={this.handleChange}\n            />\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData} size='default'>\n              <Icon type=\"search\" />\n            </LinkButton>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.addData} size='default'>\n              <Icon type=\"user-add\" />\n              添加账户\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size='default'>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n        />\n        <Modal\n          title=\"添加用户\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            optionList={this.optionList}\n            packageList={this.packageList}\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={() => this.getUsers(1, 20)}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit=\"true\"\n              optionList={this.optionList}\n              packageList={this.packageList}\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default Admin_manage_list;\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, message, Tree } from \"antd\";\nimport { addRole, editRole } from \"../../../api\";\n\nconst { TreeNode } = Tree;\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandedKeys: [],\n      selectedKeys: [],\n      checkedKeys: this.props.isEdit\n        ? this.props.editDataRecord.rules.split(\",\")\n        : [],\n      defaultCheckedKeys: []\n    };\n  }\n  //   componentDidMount() {\n  //     if (this.props.isEdit) {\n  //       if (this.props.editDataRecord.rules) {\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\n  //         this.setState({\n  //           defaultCheckedKeys: defaultValue\n  //         });\n  //       }\n  //     }\n  //   }\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\n  //解决上诉错误：\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  render() {\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\n    const treeData = this.getTreeNodes(menuList);\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form\n        labelCol={{ span: 4 }}\n        onSubmit={this.handleSubmit}\n        labelAlign=\"left\"\n      >\n        <Form.Item label=\"角色名\">\n          {getFieldDecorator(\"name\", {\n            rules: [\n              {\n                required: true,\n                message: \"角色名必须输入\"\n              },\n              { min: 3, message: \"用户名至少3位\" }\n            ],\n            initialValue: isEdit ? editDataRecord.name : \"\"\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\n              style={{ width: \"60%\" }}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"分配权限\">\n          <br />\n          <Tree\n            checkable\n            defaultCheckedKeys={isEdit ? editDataRecord.rules.split(\",\") : []}\n            expandedKeys={this.state.expandedKeys}\n            selectedKeys={this.state.selectedKeys}\n            onSelect={this.onSelect}\n            onCheck={this.onCheck}\n            onExpand={this.onExpand}\n          >\n            {treeData}\n          </Tree>\n        </Form.Item>\n        <Form.Item label=\"描述\">\n          {getFieldDecorator(\"desc\", {\n            rules: [{ max: 400, message: \"最多400字\" }],\n            initialValue: isEdit ? editDataRecord.description : \"\"\n          })(\n            <Input.TextArea\n              placeholder=\"请输入文字\"\n              autosize={{ minRows: 2, maxRows: 6 }}\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  getTreeNodes = menuList => {\n    return menuList.map(item => {\n      if (!item.children) {\n        return <TreeNode key={item.id} title={item.title.replace(/&nbsp;/g, \"\")} />;\n      } else {\n        return (\n          <TreeNode key={item.id} title={item.title.replace(/&nbsp;/g, \"\")}>\n            {this.getTreeNodes(item.children)}\n          </TreeNode>\n        );\n      }\n    });\n  };\n  onSelect = (selectedKeys, info) => {\n    const { node } = info;\n    const { expandedKeys } = this.state;\n    if (node.props.isLeaf) {\n      this.setState({ selectedKeys });\n    } else {\n      this.setState({\n        expandedKeys: node.props.expanded\n          ? expandedKeys.filter(k => k !== node.props.eventKey)\n          : expandedKeys.concat(node.props.eventKey)\n      });\n    }\n  };\n  onCheck = (checkedKeys, info) => {\n    // console.log(\"onCheck\", checkedKeys, info);\n    this.setState({\n      checkedKeys: checkedKeys.map(Number)\n    });\n  };\n  onExpand = (expandedKeys, info) => {\n    this.setState({ expandedKeys });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      if (!err) {\n        let { name, desc } = value;\n        let rules = this.state.checkedKeys;\n        let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\n        const res = !this.props.isEdit\n          ? await addRole(name, rules, desc)\n          : await editRole(name, rules, desc, id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n          this.setState({\n            checkedKeys: []\n          });\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\nimport WrappedAddDataForm from \"./addData\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { getRoleList, getRuleList } from \"../../../api/index\";\n\nclass Role extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"id\",\n      width: 80\n    },\n    {\n      title: \"角色名\",\n      dataIndex: \"name\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"描述\",\n      dataIndex: \"description\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      align: \"center\",\n      render: (text, record, index) => (\n        <span>{text === 1 ? \"已启用\" : \"禁用\"}</span>\n      )\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"handle\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    }\n  ];\n  getUsers = async (page, limit) => {\n    const result = await getRoleList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  addData = async () => {\n    //getRuleList的请求/acl/ruleList返回的不是树状结构的数据，所以使用缓存在本地navlist返回的menulist\n    // const res = await getRuleList();\n    // if (res.status === 0) {\n    //   this.ruleList = res.data;\n    this.setState({\n      isAddDataShow: true\n    });\n    // }\n  };\n  edit = async record => {\n    // console.log(record);\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <LinkButton onClick={this.addData} size='default'>\n              <Icon type=\"user-add\" />\n              添加账户\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size='default'>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n            // scroll={{ x: 1500, y: 550 }}\n        />\n        <Modal\n          title=\"添加角色\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={() => this.getUsers(1, 20)}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit=\"true\"\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default Role;\n","import React, { Component } from \"react\";\nimport { Table, Input, Icon, Button, message } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport { reqLostOrder_list, orderReview } from \"../../../api/index\";\n\nclass Diaodan extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      user_id: \"\",\n      order_id: \"\"\n    };\n  }\n  render() {\n    return (\n      <div>\n        <Input\n          type=\"text\"\n          placeholder=\"user_id\"\n          style={{ width: 150 }}\n          value={this.state.user_id}\n          onChange={e => this.setState({ user_id: e.target.value })}\n        />\n        &nbsp; &nbsp;\n        <Input\n          type=\"text\"\n          placeholder=\"订单Id\"\n          style={{ width: 300 }}\n          value={this.state.order_id}\n          onChange={e => this.setState({ order_id: e.target.value })}\n        />\n        &nbsp; &nbsp;\n        <Button onClick={this.handleClick}>\n          <Icon type=\"search\" />\n        </Button>\n        <br></br>\n        <br></br>\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n        />\n      </div>\n    );\n  }\n  initColumns = () => {\n    return [\n      {\n        title: \"订单Id\",\n        dataIndex: \"order_id\"\n      },\n      {\n        title: \"user_id\",\n        dataIndex: \"user_id\"\n      },\n      {\n        title: \"金额\",\n        dataIndex: \"amount\"\n      },\n      {\n        title: \"下单时间\",\n        dataIndex: \"created_at\",\n        render: formateDate\n      },\n      {\n        title: \"操作\",\n        dataIndex: \"status\",\n        render: (text, record, index) => {\n          if (text !== \"6\" && text !== \"7\" && text !== \"9\") {\n            return (\n              <Button size='small' onClick={() => this.handleRecieveSubmit(record)}>\n                手动到账提交\n              </Button>\n            );\n          } else {\n            return;\n          }\n        }\n      }\n    ];\n  };\n  handleClick = async () => {\n    const res = await reqLostOrder_list(\n      1,\n      50,\n      this.state.user_id,\n      this.state.order_id\n    );\n    if (res.status === 0) {\n      this.setState({\n        data: res.data\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  handleRecieveSubmit = async record => {\n    let { user_id, order_id } = record;\n    const res = await orderReview(user_id, order_id);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n    this.handleClick();\n  };\n}\n\nexport default Diaodan;\n","import React, { Component } from \"react\";\nimport { Card, Table, message, Icon, Input, Select, Modal, Button } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport \"moment/locale/zh-cn\";\nimport {\n  reqOrder_list,\n  downloadList,\n  orderReviewEdit\n} from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport Diaodan from \"./editData\";\n\nclass Order_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      start_time: \"\",\n      end_time: \"\",\n      order_status: \"\",\n      type: \"\",\n      user_id: \"\",\n      order_id: \"\",\n      isQueryShow: false,\n      isEditShow: false\n    };\n    this.inputKey = \"\";\n    this.inputValue = \"\";\n    this.order_status = \"\";\n    this.type = \"\";\n  }\n  getUsers = async (page, limit) => {\n    const result = await reqOrder_list(\n      page,\n      limit,\n      this.state.start_time,\n      this.state.end_time,\n      this.order_status,\n      this.type,\n      this.inputKey,\n      this.inputValue\n    );\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  onSearchData = async () => {\n    this.setState({ isQueryShow: true });\n  };\n  download = () => {\n    downloadList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <div>\n              <Select\n                placeholder=\"请选择\"\n                style={{ width: 120 }}\n                onSelect={value => (this.inputKey = value)}\n              >\n                <Select.Option value=\"order_id\">订单id</Select.Option>\n                <Select.Option value=\"user_id\">user_id</Select.Option>\n                <Select.Option value=\"1\">创建时间</Select.Option>\n                <Select.Option value=\"2\">到账时间</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <Input\n                type=\"text\"\n                placeholder=\"请输入关键字\"\n                style={{ width: 150 }}\n                ref={Input => (this.input = Input)}\n              />\n              &nbsp; &nbsp;\n              <MyDatePicker\n                handleValue={val => {\n                  this.setState({\n                    start_time: val[0],\n                    end_time: val[1]\n                  });\n                }}\n              />\n              &nbsp; &nbsp;\n              <Select\n                defaultValue=\"\"\n                style={{ width: 200 }}\n                onSelect={value => (this.order_status = value)}\n              >\n                <Select.Option value=\"\">订单状态</Select.Option>\n                <Select.Option value=\"0\">全部</Select.Option>\n                <Select.Option value=\"1\">未支付</Select.Option>\n                <Select.Option value=\"4\">已撤销</Select.Option>\n                <Select.Option value=\"5\">已支付</Select.Option>\n                <Select.Option value=\"6\">已完成</Select.Option>\n                <Select.Option value=\"7\">补单初审通过</Select.Option>\n                <Select.Option value=\"8\">补单初审拒绝</Select.Option>\n                <Select.Option value=\"9\">补单复审通过</Select.Option>\n                <Select.Option value=\"10\">补单复审拒绝</Select.Option>\n                <Select.Option value=\"11\">充值失败</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <Select\n                defaultValue=\"\"\n                style={{ width: 120 }}\n                onSelect={value => (this.type = value)}\n              >\n                <Select.Option value=\"\">订单类型</Select.Option>\n                <Select.Option value=\"0\">全部</Select.Option>\n                <Select.Option value=\"1\">alipay</Select.Option>\n                <Select.Option value=\"2\">银行卡转账</Select.Option>\n                <Select.Option value=\"3\">人工代充</Select.Option>\n                <Select.Option value=\"4\">人工代提</Select.Option>\n                <Select.Option value=\"6\">微信支付</Select.Option>\n                <Select.Option value=\"7\">银联支付</Select.Option>\n                <Select.Option value=\"8\">网银支付</Select.Option>\n                <Select.Option value=\"9\">快捷支付</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <LinkButton\n                onClick={() => {\n                  this.inputValue = this.input.input.value;\n                  this.getUsers(1, this.state.pageSize);\n                }}\n                size=\"default\"\n              >\n                <Icon type=\"search\" />\n              </LinkButton>\n              &nbsp; &nbsp;\n            </div>\n            <div style={{ marginTop: 10 }}>\n              <LinkButton onClick={this.onSearchData} size=\"default\">\n                <Icon type=\"search\" />\n                玩家掉单查询\n              </LinkButton>\n            </div>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n              size=\"default\"\n            />\n            <br />\n            <br />\n            <LinkButton\n              size=\"default\"\n              style={{ float: \"right\" }}\n              onClick={this.download}\n              icon=\"download\"\n            ></LinkButton>\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n          scroll={{ x: 1900, y: \"60vh\" }}\n        />\n        <Modal\n          title=\"玩家调单查询\"\n          visible={this.state.isQueryShow}\n          onCancel={() => {\n            this.setState({ isQueryShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <Diaodan />\n        </Modal>\n        <Modal\n          title=\"编辑\"\n          visible={this.state.isEditShow}\n          onCancel={() => {\n            this.setState({ isEditShow: false });\n          }}\n          footer={null}\n          width=\"50%\"\n        >\n          <div>\n            <div>用户ID：{this.state.editUser_id}</div>\n            <br />\n            <div>金额：{this.state.editMount}</div>\n            <br />\n            <div>\n              手动到账复审：<Button type=\"primary\">通过</Button>{\" \"}\n              <Button type=\"primary\" onClick={this.editRefused}>\n                拒绝\n              </Button>\n            </div>\n          </div>\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 300\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 150\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\",\n      width: 100\n    },\n    {\n      title: \"支付渠道\",\n      dataIndex: \"channel_type\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"0\":\n            word = record.replace_id;\n            break;\n          case \"5\":\n            word = \"充提UC\";\n            break;\n          case \"12\":\n            word = \"onePay\";\n            break;\n          case \"11\":\n            word = \"古都\";\n            break;\n          case [\"10\", \"13\", \"14\", \"15\", \"16\"]:\n            word = \"聚鑫\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"支付类型\",\n      dataIndex: \"type\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"alipay\";\n            break;\n          case \"2\":\n            word = \"银行卡转账\";\n            break;\n          case \"3\":\n            word = \"人工代充\";\n            break;\n          case \"4\":\n            word = \"人工代提\";\n            break;\n          case \"5\":\n            word = \"被赠送\";\n            break;\n          case \"6\":\n            word = \"微信支付\";\n            break;\n          case \"7\":\n            word = \"银联支付\";\n            break;\n          case \"8\":\n            word = \"网银支付\";\n            break;\n          case \"9\":\n            word = \"快捷支付\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 100,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 100,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"订单状态\",\n      dataIndex: \"status\",\n      width: 130,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"未支付\";\n            break;\n          case \"2\":\n            word = \"已过期\";\n            break;\n          case \"3\":\n            word = \"已分配\";\n            break;\n          case \"4\":\n            word = \"已撤销\";\n            break;\n          case \"5\":\n            word = \"已支付\";\n            break;\n          case \"6\":\n            word = \"已完成\";\n            break;\n          case \"7\":\n            word = \"补单初审通过\";\n            break;\n          case \"8\":\n            word = \"初审拒绝\";\n            break;\n          case \"9\":\n            word = \"补单复审通过\";\n            break;\n          case \"10\":\n            word = \"复审拒绝\";\n            break;\n          case \"11\":\n            word = \"充值失败\";\n            break;\n          case \"12\":\n            word = \"客服拒绝\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 200,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 200,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 100,\n      render: (text, record, index) => {\n        if (record.status === \"7\") {\n          return (\n            <LinkButton size=\"small\" onClick={() => this.edit(record)}>\n              编辑\n            </LinkButton>\n          );\n        } else {\n          return;\n        }\n      }\n    },\n    {\n      title: \"备注\",\n      dataIndex: \"remark\"\n    }\n  ];\n  edit = record => {\n    this.setState({\n      isEditShow: true,\n      editUser_id: record.user_id,\n      editMount: record.amount\n    });\n    this.user_id = record.user_id;\n    this.order_id = record.order_id;\n    this.editType = record.type;\n  };\n  editRefused = async () => {\n    const res = await orderReviewEdit(\n      this.user_id,\n      this.order_id,\n      this.editType\n    );\n    if (res.status === 0) {\n      message.success(res.msg);\n      this.setState({\n        isEditShow: false\n      });\n      this.getUsers(1, this.pageSize);\n    } else {\n      message.error(res.msg);\n    }\n  };\n}\n\nexport default Order_list;\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\nimport { addChannel, editPayChannel } from \"../../../api\";\n\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //   componentDidMount() {\n  //     if (this.props.isEdit) {\n  //       if (this.props.editDataRecord.rules) {\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\n  //         this.setState({\n  //           defaultCheckedKeys: defaultValue\n  //         });\n  //       }\n  //     }\n  //   }\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\n  //解决上诉错误：\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form\n        labelCol={{ span: 7 }}\n        wrapperCol={{ span: 17 }}\n        onSubmit={this.handleSubmit}\n      >\n        <Form.Item label=\"支付名称\">\n          {getFieldDecorator(\"name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"所属渠道ID\">\n          {getFieldDecorator(\"channel_id\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.channel_id : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"支付名称\">\n          {getFieldDecorator(\"nick_name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"状态\">\n          {getFieldDecorator(\"status\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>开启</Radio>\n              <Radio value={0}>关闭</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"支付方式\">\n          {getFieldDecorator(\"pay_type\", {\n            rules: [{ required: true, message: \"请选择支付方式!\" }],\n            initialValue: isEdit && editDataRecord.pay_type\n          })(\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择支付方式\">\n              <Select.Option value=\"7\">支付宝H5</Select.Option>\n              <Select.Option value=\"8\">支付宝扫码</Select.Option>\n              <Select.Option value=\"2\">快捷支付</Select.Option>\n              <Select.Option value=\"4\">微信H5</Select.Option>\n              <Select.Option value=\"5\">微信扫码</Select.Option>\n              <Select.Option value=\"1\">网银支付</Select.Option>\n              <Select.Option value=\"13\">银联扫码</Select.Option>\n              <Select.Option value=\"17\">转账银行卡</Select.Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"支付限额最小面值\">\n          {getFieldDecorator(\"min_amount\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.min_amount : \"\"\n          })(<Input style={{ width: \"30%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"支付限额最大面值\">\n          {getFieldDecorator(\"max_amount\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.max_amount : \"\"\n          })(<Input style={{ width: \"30%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"固定面值\">\n          {getFieldDecorator(\"span_amount\", {\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"请输入有效数字\"\n              }\n            ],\n            initialValue: isEdit && editDataRecord.span_amount\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"单笔间隔\">\n          {getFieldDecorator(\"seed\", {\n            rules: [\n              {\n                required: true,\n                whitespace: true,\n                message: \"请输入有效数字\"\n              }\n            ],\n            initialValue: isEdit && editDataRecord.seed\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"玩家承担费率%\">\n          {getFieldDecorator(\"rate\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit && editDataRecord.rate\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"显示排序\">\n          {getFieldDecorator(\"sort\", {\n            initialValue: isEdit ? editDataRecord.sort : \"0\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\n      if (!err) {\n        const res = !this.props.isEdit\n          ? await addChannel(value)\n          : await editPayChannel(value,id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { getChannelList, getRuleList } from \"../../../api/index\";\nimport WrappedAddDataForm from \"./addorEdit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass Channel_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await getChannelList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  onSearchData = async () => {\n    const res = await getChannelList(1, 20, this.state.inputParam);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  addData = () => {\n    this.setState({\n      isAddDataShow: true\n    });\n  };\n  edit = async record => {\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  refreshPage=()=>{\n    this.setState({\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    });\n    this.getUsers(1, 20);\n  }\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <Input\n              type=\"text\"\n              placeholder=\"请输入支付名称\"\n              style={{ width: 150 }}\n              value={this.state.inputParam}\n              onChange={e => this.setState({ inputParam: e.target.value })}\n            />\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData}>\n              <Icon type=\"search\" />\n            </LinkButton>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.addData}>\n              <Icon type=\"user-add\" />\n              添加\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton\n          onClick={() => window.location.reload()}\n          >\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 1900, y: \"60vh\" }}\n        />\n        <Modal\n          title=\"添加角色\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={this.refreshPage}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      width: 80\n    },\n    {\n      title: \"支付名称\",\n      dataIndex: \"name\",\n      width: 120\n    },\n    {\n      title: \"渠道昵称\",\n      dataIndex: \"nick_name\",\n      width: 100\n    },\n    {\n      title: \"单笔-最小限额\",\n      dataIndex: \"min_amount\",\n      width: 120\n    },\n    {\n      title: \"单笔-最大限额\",\n      dataIndex: \"max_amount\",\n      width: 120\n    },\n    {\n      title: \"单笔间隔\",\n      dataIndex: \"seed\",\n      width: 100\n    },\n    {\n      title: \"玩家承担的费率%\",\n      dataIndex: \"rate\",\n      width: 150\n    },\n    {\n      title: \"固定面值\",\n      dataIndex: \"span_amount\",\n      width: 250\n    },\n    {\n      title: \"支付方式\",\n      dataIndex: \"pay_type\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"7\":\n            word = \"支付宝H5\";\n            break;\n          case \"8\":\n            word = \"支付宝扫码\";\n            break;\n          case \"2\":\n            word = \"快捷支付\";\n            break;\n          case \"4\":\n            word = \"微信H5\";\n            break;\n          case \"5\":\n            word = \"微信扫码\";\n            break;\n          case \"1\":\n            word = \"网银支付\";\n            break;\n          case \"13\":\n            word = \"银联扫码\";\n            break;\n          case \"17\":\n            word = \"转账银行卡\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 80,\n      render: (text, record, index) => {\n        return <span>{text === \"1\" ? \"开启\" : \"关闭\"}</span>;\n      }\n    },\n    {\n      title: \"显示顺序\",\n      width: 100,\n      dataIndex: \"sort\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 200,\n      render: formateDate\n    },\n    {\n      title: \"修改时间\",\n      dataIndex: \"updated_at\",\n      width: 200,\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    }\n  ];\n}\n\nexport default Channel_list;\n","import React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\nimport { saveBankCard } from \"../../../api\";\n\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //   componentDidMount() {\n  //     if (this.props.isEdit) {\n  //       if (this.props.editDataRecord.rules) {\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\n  //         this.setState({\n  //           defaultCheckedKeys: defaultValue\n  //         });\n  //       }\n  //     }\n  //   }\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\n  //解决上诉错误：\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      return;\n    };\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form\n        labelCol={{ span: 7 }}\n        wrapperCol={{ span: 17 }}\n        onSubmit={this.handleSubmit}\n      >\n        <Form.Item label=\"开户人\">\n          {getFieldDecorator(\"card_name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.card_name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"银行名称\">\n          {getFieldDecorator(\"bank_name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.bank_name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"卡号\">\n          {getFieldDecorator(\"card_num\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              },\n              {\n                min: 15,\n                max: 20,\n                message: \"请输入15-20位正确卡号\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.card_num : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"用途\">\n          {getFieldDecorator(\"type\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>收款卡</Radio>\n              <Radio value={0}>出款卡</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"状态\">\n          {getFieldDecorator(\"status\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 2\n          })(\n            <Radio.Group>\n              <Radio value={1}>空闲</Radio>\n              <Radio value={2}>使用中</Radio>\n              <Radio value={3}>停用</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"支付密码\">\n          {getFieldDecorator(\"pay_password\", {})(\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\n          )}\n        </Form.Item>\n        <Form.Item label=\"查询密码\">\n          {getFieldDecorator(\"query_password\", {})(\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\n          )}\n        </Form.Item>\n        <Form.Item label=\"U盾密码\">\n          {getFieldDecorator(\"u_code\", {})(\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\n          )}\n        </Form.Item>\n        <Form.Item wrapperCol={{ offset: 18 }}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\n      if (!err) {\n        const res = !this.props.isEdit\n          ? await saveBankCard(value)\n          : await saveBankCard(value, id);\n        if (res.status === 0) {\n          message.success(\"提交成功:\" + res.msg);\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input, Popconfirm } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { bankList, deleteBankCard } from \"../../../api/index\";\nimport WrappedAddDataForm from \"./addorEdit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nclass Bankcard_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await bankList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题:\" + result.msg);\n    }\n  };\n  addData = () => {\n    this.setState({\n      isAddDataShow: true\n    });\n  };\n  edit = async record => {\n    // console.log(record);\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  delete = async record => {\n    const result = await deleteBankCard(record.id);\n    if (result.status === 0) {\n      message.success(result.msg);\n      this.refreshPage(1, 20);\n    } else {\n      message.error(\"网络问题:\" + result.msg);\n    }\n  };\n  refreshPage = () => {\n    this.setState({\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    });\n    this.getUsers(1, 20);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <LinkButton onClick={this.addData}>\n              <Icon type=\"user-add\" />\n              添加\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()}>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 1000, y: \"60vh\" }}\n        />\n        <Modal\n          title=\"添加角色\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={this.refreshPage}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      width: 50\n    },\n    {\n      title: \"卡使用类型\",\n      dataIndex: \"type\",\n      width: 100,\n      render: (text, record, index) => (\n        <span>{text === \"1\" ? \"收款卡\" : \"出款卡\"}</span>\n      )\n    },\n    {\n      title: \"银行卡号\",\n      dataIndex: \"card_num\",\n      width: 200\n    },\n    {\n      title: \"开户人姓名\",\n      dataIndex: \"card_name\",\n      width: 100,\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"银行名称\",\n      dataIndex: \"bank_name\",\n      width: 100\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record, index) => (\n        <span>{text === \"1\" ? \"空闲\" : text === \"2\" ? \"使用中\" : \"停用\"}</span>\n      )\n    },\n    {\n      title: \"修改时间\",\n      dataIndex: \"updated_at\",\n      width: 200,\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 150,\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n          <Popconfirm\n            title=\"确定要删除吗\"\n            onConfirm={() => this.delete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <LinkButton>删除</LinkButton>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n}\n\nexport default Bankcard_list;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Icon,\n  Input,\n  Select,\n  Button,\n  Popconfirm,\n  message\n} from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport \"moment/locale/zh-cn\";\nimport { rechargeOrder, downloadList, cancelOrder } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\n\nclass Recharge_order extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      start_time: \"\",\n      end_time: \"\",\n      type: \"14\",\n      paramKey: \"\",\n      inputParam: \"\",\n      user_id: \"\",\n      order_id: \"\"\n    };\n    this.inputKey = \"\";\n    this.inputValue = \"\";\n    this.order_status = \"\";\n  }\n  getUsers = async (page, limit) => {\n    const result = await rechargeOrder(\n      page,\n      limit,\n      this.state.start_time,\n      this.state.end_time,\n      this.order_status,\n      this.inputKey,\n      this.inputValue\n    );\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  handleChange(event) {\n    this.setState({ inputParam: event.target.value });\n  }\n  download = () => {\n    downloadList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <div>\n              <MyDatePicker\n                handleValue={val => {\n                  this.setState({\n                    start_time: val[0],\n                    end_time: val[1]\n                  });\n                }}\n              />\n              &nbsp; &nbsp;\n              <Select\n                placeholder=\"请选择\"\n                style={{ width: 120 }}\n                onSelect={value => (this.inputKey = value)}\n              >\n                <Select.Option value=\"order_id\">订单id</Select.Option>\n                <Select.Option value=\"user_id\">user_id</Select.Option>\n                <Select.Option value=\"package_nick\">所属品牌</Select.Option>\n                <Select.Option value=\"proxy_pid\">所属代理</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <Input\n                type=\"text\"\n                placeholder=\"请输入关键字\"\n                style={{ width: 150 }}\n                ref={Input => (this.input = Input)}\n              />\n              &nbsp; &nbsp;\n              <Select\n                defaultValue=\"\"\n                style={{ width: 100 }}\n                onSelect={value => (this.order_status = value)}\n              >\n                <Select.Option value=\"\">状态</Select.Option>\n                <Select.Option value=\"1\">未支付</Select.Option>\n                <Select.Option value=\"4\">已撤销</Select.Option>\n                <Select.Option value=\"5\">已支付</Select.Option>\n                <Select.Option value=\"6\">已完成</Select.Option>\n              </Select>\n              &nbsp; &nbsp;\n              <LinkButton\n                onClick={() => {\n                  this.inputValue = this.input.input.value;\n                  this.getUsers(1, this.state.pageSize);\n                }}\n                size=\"default\"\n              >\n                <Icon type=\"search\" />\n              </LinkButton>\n              &nbsp; &nbsp;\n            </div>\n          </div>\n        }\n        extra={\n          <span>\n            <Button\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n            />\n            <br />\n            <br />\n            <Button onClick={this.download} icon=\"download\">\n              下载列表\n            </Button>\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n          scroll={{ x: 1700, y: \"60vh\" }}\n        />\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 280\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 200\n    },\n    {\n      title: \"代充ID\",\n      dataIndex: \"replace_id\",\n      width: 100\n    },\n    {\n      title: \"代充昵称\",\n      dataIndex: \"replace_name\",\n      width: 100\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 100,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 100,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 130,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"未支付\";\n            break;\n          case \"2\":\n            word = \"已过期\";\n            break;\n          case \"3\":\n            word = \"已分配\";\n            break;\n          case \"4\":\n            word = \"已撤销\";\n            break;\n          case \"5\":\n            word = \"已支付\";\n            break;\n          case \"6\":\n            word = \"已完成\";\n            break;\n          case \"7\":\n            word = \"补单初审通过\";\n            break;\n          case \"8\":\n            word = \"初审拒绝\";\n            break;\n          case \"9\":\n            word = \"补单复审通过\";\n            break;\n          case \"10\":\n            word = \"复审拒绝\";\n            break;\n          case \"11\":\n            word = \"充值失败\";\n            break;\n          case \"12\":\n            word = \"客服拒绝\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 200,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 200,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => {\n        if (record.status == 1 || record.status == 5) {\n          return (\n            <Popconfirm\n              title=\"确定要删除吗?\"\n              onConfirm={() => this.handleWithdraw(record)}\n              okText=\"确定\"\n              cancelText=\"取消\"\n            >\n              <LinkButton>协助玩家撤销</LinkButton>\n            </Popconfirm>\n          );\n        } else {\n          return;\n        }\n      }\n    }\n  ];\n  handleWithdraw = async record => {\n    let reqData = {\n      order_id: record.order_id,\n      user_id: record.user_id,\n      form_type: 2\n    };\n    const res = await cancelOrder(reqData);\n    if (res.status === 0) {\n      message.info(res.msg || \"操作成功\");\n      window.location.reload();\n    } else {\n      message.error(res.msg || \"操作失败\");\n    }\n  };\n}\n\nexport default Recharge_order;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Input,\n  Button,\n} from \"antd\";\nimport { getChannel, getChannelInfo,editChannelInfo } from \"../../../api/index\";\n\nclass Recharge_channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      childData: [],\n      expandedRowKeys: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isEditDataShow: false,\n      recordId: \"\"\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await getChannel(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: parseInt(result.count)\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        extra={\n          <span>\n            <Button\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"middle\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          expandedRowRender={this.expandedRowRender}\n          expandRowByClick\n          onExpand={this.onExpandRow}\n          expandedRowKeys={this.state.expandedRowKeys}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n        />\n        <Modal\n          title=\"修改\"\n          visible={this.state.isEditDataShow}\n          onOk={this.handleEditData}\n          onCancel={() => {\n            this.setState({ isEditDataShow: false });\n          }}\n        >\n          <span>pay_code:</span>\n          <Input\n            type=\"text\"\n            value={this.state.inputParam}\n            onChange={event =>\n              this.setState({ inputParam: event.target.value })\n            }\n          />\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"渠道名\",\n      dataIndex: \"name\"\n    },\n    {\n      title: \"商户号\",\n      dataIndex: \"member_id\"\n    }\n  ];\n  expandedRowRender = (record, index, indent, expanded) => {\n    const columns = [\n      {\n        title: \"支付方式名称\",\n        dataIndex: \"pay_name\",\n        width: 200\n      },\n      {\n        title: \"所属支付渠道\",\n        dataIndex: \"channel_name\",\n        width: 200\n      },\n      {\n        title: \"pay_code\",\n        dataIndex: \"pay_code\",\n        width: 200\n      },\n      {\n        title: \"操作\",\n        dataIndex: \"action\",\n        render: (text, record, index) => (\n          <Button onClick={() => this.edit(record)}>修改pay_code</Button>\n        )\n      }\n    ];\n    return (\n      <Table\n        columns={columns}\n        dataSource={this.state.childData}\n        pagination={false}\n      />\n    );\n  };\n  onExpandRow = async (expanded, record) => {\n    let keys = [];\n    if (expanded) {\n      keys.push(record.id);\n      this.setState({\n        expandedRowKeys: keys\n      });\n      const result = await getChannelInfo(record.id);\n      if (result.status === 0) {\n        result.data.forEach((element, index) => {\n          element.key = index;\n        });\n        this.setState({\n          childData: result.data\n        });\n      } else {\n        message.error(\"网络问题\");\n        this.setState({\n          childData: []\n        });\n      }\n    } else {\n      this.setState({\n        expandedRowKeys: []\n      });\n    }\n  };\n  edit = record => {\n    console.log(record.pay_code);\n    this.setState({\n      recordId: record.id,\n      inputParam: record.pay_code,\n      isEditDataShow: true\n    });\n  };\n  handleEditData = async () => {\n    const result = await editChannelInfo(this.state.recordId, this.state.inputParam);\n    if (result.status === 0) {\n      message.success(result.msg);\n      this.setState({\n        isEditDataShow: false,\n        expandedRowKeys:[],\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n}\nexport default Recharge_channel;\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Radio,\n  Checkbox,\n  DatePicker,\n  message\n} from \"antd\";\nimport { packageList, addNotice, updateNotice } from \"../../../api\";\nimport moment from \"moment\";\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      checkedList: this.props.isEdit\n        ? this.props.editDataRecord.package_ids\n        : []\n    };\n  }\n  getPackageList = async () => {\n    let res = await packageList();\n    if (res.status === 0) {\n      let arr = [];\n      res.data.forEach(element => {\n        arr.push({ label: element.name, value: element.id });\n      });\n      this.setState({\n        options: arr\n      });\n    }\n  };\n  componentDidMount() {\n    this.getPackageList();\n  }\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\n  //解决上诉错误：\n  // componentWillUnmount() {\n  //   this.setState = (state, callback) => {\n  //     return;\n  //   };\n  // }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"开关\">\n          {getFieldDecorator(\"is_open\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.is_open) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>开启</Radio>\n              <Radio value={0}>关闭</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"标题\">\n          {getFieldDecorator(\"title\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.title : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"品牌\">\n          {getFieldDecorator(\"packageList\", {\n            rules: [{ required: true, message: \"请选择品牌!\" }],\n            initialValue: isEdit && editDataRecord.package_ids\n          })(\n            <Checkbox.Group\n              options={this.state.options}\n              // defaultValue={editDataRecord.package_ids}\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"公告类型\">\n          {getFieldDecorator(\"type\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>活动</Radio>\n              <Radio value={2}>公告</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"是否跑马灯\">\n          {getFieldDecorator(\"is_slider\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>是</Radio>\n              <Radio value={0}>否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"排序\">\n          {getFieldDecorator(\"sort\", {\n            rules: [{ required: true }],\n            initialValue: isEdit && editDataRecord.sort\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"内容\">\n          {getFieldDecorator(\"words\", {\n            rules: [{ required: true }],\n            initialValue: isEdit ? editDataRecord.words : \"\"\n          })(\n            <Input.TextArea\n              autosize={{ minRows: 2, maxRows: 6 }}\n              style={{ width: \"60%\" }}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"开始日期\">\n          {getFieldDecorator(\"start_time\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit && moment(editDataRecord.start_time * 1000)\n          })(<DatePicker showTime format={\"YYYY-MM-DD HH:mm:ss\"} />)}\n        </Form.Item>\n        <Form.Item label=\"截止日期\">\n          {getFieldDecorator(\"end_time\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit && moment(editDataRecord.end_time * 1000)\n          })(<DatePicker showTime format={\"YYYY-MM-DD HH:mm:ss\"} />)}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      console.log(value);\n      let id = this.props.editDataRecord\n        ? this.props.editDataRecord._id.$oid\n        : \"\";\n      if (!err) {\n        value.packageList.forEach(item => {\n          let str = \"group[\" + item + \"]\";\n          value[str] = item;\n        });\n        value.start_time = value.start_time.format(\"YYYY-MM-DD HH:mm:ss\");\n        value.end_time = value.end_time.format(\"YYYY-MM-DD HH:mm:ss\");\n        delete value.packageList;\n        const res = !this.props.isEdit\n          ? await addNotice(value)\n          : await updateNotice(value, id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n  checkboxOnChange = checkedList => {\n    this.setState({\n      checkedList: checkedList\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Button,\n  Popover,\n  Popconfirm\n} from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { getList, delNotice } from \"../../../api/index\";\nimport WrappedAddDataForm from \"./addorEdit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass Notice_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n  }\n  getUsers = async (page, limit) => {\n    const result = await getList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  // onSearchData = async () => {\n  //   const res = await getChannelList(1, 20, this.state.inputParam);\n  //   if (res.status === 0) {\n  //     this.setState({\n  //       data: res.data,\n  //       count: parseInt(res.count)\n  //     });\n  //   } else {\n  //     message.error(\"网络问题\");\n  //   }\n  // };\n  addData = () => {\n    this.setState({\n      isAddDataShow: true\n    });\n  };\n  edit = async record => {\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  onDelete = async record => {\n    let res = await delNotice(record._id.$oid);\n    if (res.status === 0) {\n      message.success(\"删除成功\");\n      this.refreshPage();\n    } else {\n      message.error(\"出错了：\" + res.msg);\n    }\n  };\n  refreshPage = () => {\n    this.setState({\n      data: [],\n      count: 0,\n      pageSize: 20,\n      inputParam: \"\",\n      isAddDataShow: false,\n      isEditDataShow: false\n    });\n    this.getUsers(1, 20);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <LinkButton onClick={this.addData} size='default'>添加</LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size='default'>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={record => record._id.$oid}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal:(total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 2000 }}\n        />\n        <Modal\n          title=\"新增公告\"\n          visible={this.state.isAddDataShow}\n          // onOk={this.handleAddData}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={this.refreshPage}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"标题\",\n      dataIndex: \"title\"\n    },\n    {\n      title: \"品牌\",\n      dataIndex: \"package_ids\",\n      render: (text, record) => <span>{text.join(\",\")}</span>\n    },\n    {\n      title: \"代理\",\n      dataIndex: \"proxy_user_id\"\n    },\n    {\n      title: \"公告类型\",\n      dataIndex: \"type\",\n      render: (text, record) => (\n        <span>{text === \"1\" || text === 1 ? \"活动\" : \"公告\"}</span>\n      )\n    },\n    {\n      title: \"是否跑马灯\",\n      dataIndex: \"is_slider\",\n      render: (text, record) => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"公告内容\",\n      dataIndex: \"words\",\n      render: (text, record) => (\n        <Popover content={text} trigger=\"click\" overlayStyle={{ width: \"30%\" }}>\n          <div\n            style={{\n              width: \"100px\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\"\n            }}\n          >\n            {text}\n          </div>\n        </Popover>\n      ),\n      onCell: (record, rowIndex) => {\n        return {\n          onClick: event => {}, // 点击行\n          onDoubleClick: event => {},\n          onContextMenu: event => {},\n          onMouseEnter: event => {\n            event.target.style.cursor = \"pointer\";\n          }, // 鼠标移入行\n          onMouseLeave: event => {}\n        };\n      }\n    },\n    {\n      title: \"开始时间\",\n      dataIndex: \"start_time\",\n      render: formateDate\n    },\n    {\n      title: \"截止时间\",\n      dataIndex: \"end_time\",\n      render: formateDate\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"create_time\",\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\n            编辑\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.onDelete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <Button type=\"danger\" size=\"small\">\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n}\n\nexport default Notice_list;\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Radio,\n  Checkbox,\n  DatePicker,\n  message\n} from \"antd\";\nimport { packageList, saveCustomerService} from \"../../../api\";\nimport moment from \"moment\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nclass AddDataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      checkedList: this.props.isEdit\n        ? this.props.editDataRecord.package_ids.split(\",\").map(Number)\n        : []\n    };\n  }\n  getPackageList = async () => {\n    let res = await packageList();\n    if (res.status === 0) {\n      let arr = [];\n      res.data.forEach(element => {\n        arr.push({ label: element.name, value: element.id });\n      });\n      this.setState({\n        options: arr\n      });\n    }\n  };\n  componentDidMount() {\n    this.getPackageList();\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { editDataRecord, isEdit } = this.props;\n    return (\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"账号\">\n          {getFieldDecorator(\"user_id\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.user_id) : ''\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"昵称\">\n          {getFieldDecorator(\"nick_name\", {\n            rules: [\n              {\n                required: true,\n                message: \"该项不能为空\"\n              }\n            ],\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"授权品牌\">\n          {getFieldDecorator(\"package_ids\", {\n            rules: [{ required: true, message: \"请选择品牌!\" }],\n            initialValue:\n              isEdit && editDataRecord.package_ids.split(\",\").map(Number)\n          })(\n            <Checkbox.Group\n              options={this.state.options}\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label=\"账号类型\">\n          {getFieldDecorator(\"user_type\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.user_type) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>人工充值</Radio>\n              <Radio value={2}>人工兑换</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"是否显示\">\n          {getFieldDecorator(\"status\", {\n            rules: [\n              {\n                required: true\n              }\n            ],\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\n          })(\n            <Radio.Group>\n              <Radio value={1}>是</Radio>\n              <Radio value={0}>否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"显示排序\">\n          {getFieldDecorator(\"sort\", {\n            rules: [{ required: true }],\n            initialValue: isEdit && editDataRecord.sort\n          })(<Input style={{ width: \"60%\" }} />)}\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"login-form-button\"\n          >\n            提交\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      let id = this.props.editDataRecord\n        ? this.props.editDataRecord.user_id\n        : \"\";\n      if (!err) {\n        value.package_ids.forEach(item => {\n          let str = \"group[\" + item + \"]\";\n          value[str] = item;\n        });\n        delete value.package_ids;\n        const res = !this.props.isEdit\n          ? await saveCustomerService(value, \"add\")\n          : await saveCustomerService(value, \"edit\", id);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.props.refreshPage();\n          this.props.cancel();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n  checkboxOnChange = checkedList => {\n    this.setState({\n      checkedList: checkedList\n    });\n  };\n}\n\nconst WrappedAddDataForm = Form.create()(AddDataForm);\n\nexport default WrappedAddDataForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Popconfirm,\n  Button\n} from \"antd\";\nimport { customerList, saveCustomerService } from \"../../../api/index\";\nimport WrappedAddDataForm from \"./addorEdit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport LinkButton from \"../../../components/link-button\";\n\nclass Customer_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isAddDataShow: false,\n      isEditDataShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await customerList(page, limit);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: result.count\n      });\n    } else {\n      message.error(\"网络问题\");\n    }\n  };\n  onSearchData = async () => {\n    const res = await customerList(1, 20, this.input.input.value);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    }\n  };\n  addData = () => {\n    this.setState({\n      isAddDataShow: true\n    });\n  };\n  edit = async record => {\n    this.editDataRecord = record;\n    this.setState({\n      isEditDataShow: true\n    });\n  };\n  onDelete = async record => {\n    let user_id = record.user_id;\n    let res = await saveCustomerService({ user_id }, \"del\");\n    if (res.status === 0) {\n      message.success(\"删除成功\");\n      this.refreshPage();\n    } else {\n      message.error(\"出错了：\" + res.msg);\n    }\n  };\n  refreshPage = () => {\n    this.setState({\n      data: [],\n      count: 0,\n      pageSize: 20,\n      isAddDataShow: false,\n      isEditDataShow: false\n    });\n    this.getUsers(1, 20);\n    this.input.handleReset();\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <span>\n            <Input\n              type=\"text\"\n              placeholder=\"请输入支付名称\"\n              style={{ width: 150 }}\n              ref={input => (this.input = input)}\n            />\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.addData} size=\"default\">\n              <Icon type=\"user-add\" />\n              添加\n            </LinkButton>\n          </span>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey=\"user_id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getUsers(page, pageSize);\n              this.setState({\n                pageSize: pageSize\n              });\n            },\n            onShowSizeChange: (current, size) => {\n              this.getUsers(current, size);\n            }\n          }}\n          scroll={{ x: 1300, y: \"60vh\" }}\n        />\n        <Modal\n          title=\"新增\"\n          visible={this.state.isAddDataShow}\n          onCancel={() => {\n            this.setState({ isAddDataShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedAddDataForm\n            cancel={() =>\n              this.setState({\n                isAddDataShow: false\n              })\n            }\n            refreshPage={this.refreshPage}\n          />\n        </Modal>\n        {this.state.isEditDataShow && (\n          <Modal\n            title=\"编辑用户\"\n            visible={this.state.isEditDataShow}\n            // onOk={this.handleAddData}\n            onCancel={() => {\n              this.setState({ isEditDataShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedAddDataForm\n              isEdit\n              editDataRecord={this.editDataRecord}\n              cancel={() =>\n                this.setState({\n                  isEditDataShow: false\n                })\n              }\n              refreshPage={() => this.getUsers(1, 20)}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"账号\",\n      dataIndex: \"user_id\",\n      width: 150\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"nick_name\",\n      width: 150\n    },\n    {\n      title: \"品牌ID\",\n      dataIndex: \"package_ids\",\n      width: 100\n    },\n    {\n      title: \"是否显示\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record) => (text === 1 ? \"是\" : \"否\")\n    },\n    {\n      title: \"账号类型\",\n      dataIndex: \"user_type\",\n      width: 100,\n      render: text => (parseInt(text) === 1 ? \"人工充值\" : \"人工兑换\")\n    },\n    {\n      title: \"排序\",\n      dataIndex: \"sort\",\n      width: 100\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"create_time\",\n      width: 200,\n      render: (text, record) => (\n        <span>{formateDate(record.create_time / 1000)}</span>\n      )\n    },\n    {\n      title: \"修改时间\",\n      dataIndex: \"update_time\",\n      width: 200,\n      render: (text, record) => (\n        <span>{formateDate(record.update_time / 1000)}</span>\n      )\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\n            编辑\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.onDelete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <Button type=\"danger\" size=\"small\">\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n}\n\nexport default Customer_list;\n","import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass GoldDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { data } = this.props.detailRecord;\n    return (\n      <Table\n        bordered\n        rowKey={(record,index)=>`${index}`}\n        dataSource={data}\n        columns={this.initColumns()}\n        size=\"small\"\n      />\n    );\n  }\n  initColumns = () => {\n    if (this.props.action === \"check\") {\n      return [\n        {\n          title: \"审核人\",\n          dataIndex: \"review_name\"\n        },\n        {\n          title: \"审核时间\",\n          dataIndex: \"review_at\",\n          render: formateDate\n        }\n      ];\n    } else if (this.props.action === \"risk\") {\n      return [\n        {\n          title: \"user_id\",\n          dataIndex: \"id\"\n        },\n        {\n          title: \"产生来源\",\n          dataIndex: \"pay_account_name\"\n        },\n\n        {\n          title: \"余额(变动前)\",\n          dataIndex: \"total_balance\"\n        },\n        {\n          title: \"变动金额\",\n          dataIndex: \"final_pay\",\n\n          sorter: (a, b) => a.total_balance - b.total_balance\n        },\n        {\n          title: \"税收\",\n          dataIndex: \"tax\"\n        },\n        {\n          title: \"余额(变动后)\",\n          dataIndex: \"total_final_balance\"\n        },\n        {\n          title: \"备注\",\n          dataIndex: \"pay_reason\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"create_time\"\n        }\n      ];\n    } else {\n      return [\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"内容\",\n          dataIndex: \"content\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"created_at\",\n          render: formateDate\n        }\n      ];\n    }\n  };\n}\n\nexport default GoldDetail;\n","import React from \"react\";\nimport { Form, Input, Radio, message } from \"antd\";\nimport { orderWithDrawReview, withDrawRemark } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\n\nclass EditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const data = this.props.editData;\n    let review_status = parseInt(data.review_status);\n    let status = parseInt(data.status);\n    let orderStatusShow,\n      reviewShow,\n      confirmButtonShow,\n      submitRadio,\n      successRadio,\n      failRadio,\n      submitRadioChecked,\n      successRadioChecked,\n      failRadioChecked;\n    switch (status) {\n      case 1:\n        orderStatusShow = true;\n        confirmButtonShow = true;\n        break;\n      case 2:\n        orderStatusShow = true;\n        reviewShow = true;\n        switch (review_status) {\n          case 1:\n            successRadio = true;\n            failRadio = true;\n            submitRadioChecked = true;\n            break;\n          case 2:\n            submitRadio = true;\n            failRadio = true;\n            successRadioChecked = true;\n            break;\n          case 3:\n            successRadio = true;\n            submitRadio = true;\n            failRadioChecked = true;\n            break;\n          default:\n            break;\n        }\n        break;\n      case 3:\n        orderStatusShow = true;\n        confirmButtonShow = true;\n        submitRadio = true;\n        break;\n      default:\n        break;\n    }\n    return (\n      <Form labelCol={{ span: 4 }} labelAlign=\"left\">\n        <Form.Item label=\"订单ID\">\n          <Input\n            style={{ width: \"60%\" }}\n            value={data.order_id}\n            readOnly\n          ></Input>\n        </Form.Item>\n        <Form.Item label=\"用户ID\">\n          <Input style={{ width: \"60%\" }} value={data.user_id} readOnly></Input>\n        </Form.Item>\n        <Form.Item label=\"金额\">\n          <Input style={{ width: \"60%\" }} value={data.amount} readOnly></Input>\n        </Form.Item>\n\n        <Form.Item\n          label=\"订单状态:\"\n          style={orderStatusShow ? {} : { display: \"none\" }}\n        >\n          <Radio.Group\n            defaultValue={review_status}\n            onChange={e => (this.orderStatus = e.target.value)}\n          >\n            <Radio\n              value={1}\n              disabled={submitRadio}\n              checked={submitRadioChecked}\n            >\n              提交第三方\n            </Radio>\n            <Radio\n              value={2}\n              disabled={successRadio}\n              checked={successRadioChecked}\n            >\n              已成功\n            </Radio>\n            <Radio value={3} disabled={failRadio} checked={failRadioChecked}>\n              已失败\n            </Radio>\n          </Radio.Group>\n          <LinkButton\n            onClick={this.sumbitOrderStatus}\n            style={confirmButtonShow ? {} : { display: \"none\" }}\n          >\n            确认\n          </LinkButton>\n        </Form.Item>\n\n        <Form.Item label=\"复审:\" style={reviewShow ? {} : { display: \"none\" }}>\n          <LinkButton\n            onClick={() => {\n              this.review(1);\n            }}\n          >\n            通过\n          </LinkButton>\n          <LinkButton\n            onClick={() => {\n              this.review(2);\n            }}\n          >\n            拒绝\n          </LinkButton>\n        </Form.Item>\n        <Form.Item label=\"备注[用户]\">\n          <Input\n            style={{ width: \"60%\" }}\n            onChange={e => {\n              this.remarkUser = e.target.value;\n            }}\n          ></Input>\n          <LinkButton onClick={this.sumbitRemarkUser}>确认</LinkButton>\n        </Form.Item>\n        <Form.Item label=\"备注[运营]\">\n          <Input\n            style={{ width: \"60%\" }}\n            onChange={e => {\n              this.remarkOperator = e.target.value;\n            }}\n          ></Input>\n          <LinkButton onClick={this.sumbitRemarkOperator}>确认</LinkButton>\n        </Form.Item>\n      </Form>\n    );\n  }\n  sumbitOrderStatus = async () => {\n    const data = this.props.editData;\n    if (!this.orderStatus) {\n      message.error(\"请选择订单状态！\");\n    } else {\n      let reqData = {\n        order_id: data.order_id,\n        review_status: this.orderStatus,\n        user_id: data.user_id,\n        review_type: 1,\n        is_pass: 1\n      };\n      const res = await orderWithDrawReview(reqData);\n      if (res.status === 0) {\n        message.success(res.msg);\n      } else {\n        message.error(\"操作失败\");\n      }\n      this.props.onclose();\n    }\n  };\n  review = async is_pass => {\n    const data = this.props.editData;\n    let reqData = {\n      order_id: data.order_id,\n      review_status: data.review_status,\n      user_id: data.user_id,\n      review_type: 2,\n      is_pass: is_pass\n    };\n    const res = await orderWithDrawReview(reqData);\n    if (res.status === 0) {\n      message.info(res.msg);\n    } else {\n      message.error(\"操作失败\");\n    }\n    this.props.onclose();\n  };\n  sumbitRemarkUser = async () => {\n    console.log(this.remarkUser);\n    const data = this.props.editData;\n    if (!this.remarkUser) {\n      message.error(\"请输入有效内容！\");\n    } else {\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 1);\n      if (res.status === 0) {\n        message.success(res.msg);\n      } else {\n        message.error(res.msg);\n      }\n    }\n  };\n  sumbitRemarkOperator = async () => {\n    console.log(this.remarkOperator);\n    const data = this.props.editData;\n    if (!this.remarkOperator) {\n      message.error(\"请输入有效内容！\");\n    } else {\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 2);\n      if (res.status === 0) {\n        message.success(res.msg);\n      } else {\n        message.error(res.msg);\n      }\n    }\n  };\n}\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  Icon,\n  Input,\n  Select,\n  Popover,\n  message\n} from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport {\n  withDraw,\n  downloadWithdrawList,\n  userDetail,\n  reviewInfo,\n  remarkInfo,\n  auditOrder\n} from \"../../../api\";\nimport WrappedComponent from \"./details\";\nimport WrappedEdit from \"./edit\";\n\nclass Withdraw_list extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      start_time: \"\",\n      end_time: \"\",\n      order_status: \"\",\n      type: \"\",\n      filed: \"\",\n      inputParam: \"\",\n      user_id: \"\",\n      order_id: \"\",\n      isBindInfoShow: false,\n      isEditShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await withDraw(page, limit, 3);\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  handleChange(event) {\n    this.setState({ inputParam: event.target.value });\n  }\n  onSearchData = async () => {\n    const result = await withDraw(1, 20, 3, this.state);\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  download = () => {\n    downloadWithdrawList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ filed: value })}\n            >\n              <Select.Option value=\"order_id\">订单id</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Input\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n              style={{ width: 150 }}\n              value={this.state.inputParam}\n              onChange={this.handleChange}\n            />\n            &nbsp; &nbsp;\n            <MyDatePicker\n              handleValue={val => {\n                this.setState({\n                  start_time: val[0],\n                  end_time: val[1]\n                });\n              }}\n            />\n            &nbsp; &nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ order_status: value })}\n            >\n              <Select.Option value=\"\">订单状态</Select.Option>\n              <Select.Option value=\"1\">待审核</Select.Option>\n              <Select.Option value=\"2\">处理中</Select.Option>\n              <Select.Option value=\"3\">已提交</Select.Option>\n              <Select.Option value=\"4\">已成功</Select.Option>\n              <Select.Option value=\"5\">已失败</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ type: value })}\n            >\n              <Select.Option value=\"\">兑换方式</Select.Option>\n              <Select.Option value=\"1\">alipay</Select.Option>\n              <Select.Option value=\"2\">bank</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => {\n                window.location.reload();\n              }}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n          scroll={{ x: 2600, y: \"60vh\" }}\n        />\n        <Modal\n          title={\n            this.action === \"check\"\n              ? \"审核信息\"\n              : this.action === \"risk\"\n              ? \"资金明细\"\n              : \"运营备注\"\n          }\n          visible={this.state.isDetailShow}\n          onCancel={() => {\n            this.setState({ isDetailShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <WrappedComponent\n            detailRecord={this.detailRecord}\n            action={this.action}\n          />\n        </Modal>\n        {this.state.isEditShow && (\n          <Modal\n            title=\"编辑\"\n            visible={this.state.isEditShow}\n            onCancel={() => {\n              this.setState({ isEditShow: false });\n            }}\n            footer={null}\n            width=\"50%\"\n          >\n            <WrappedEdit\n              editData={this.editData}\n              onclose={() => {\n                this.setState({ isEditShow: false });\n                this.onSearchData();\n                // window.location.reload();\n              }}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 300\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 100\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\",\n      width: 100\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 100,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"申请费率\",\n      dataIndex: \"handling_fee\",\n      width: 100\n    },\n    {\n      title: \"实际费率\",\n      dataIndex: \"gold\",\n      width: 100\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 100,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"兑换方式\",\n      dataIndex: \"order_type\",\n      width: 100\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"待审核\";\n            break;\n          case \"2\":\n            word = \"处理中\";\n            break;\n          case \"3\":\n            word = \"已提交\";\n            break;\n          case \"4\":\n            word = \"已成功\";\n            break;\n          case \"5\":\n            word = \"已失败\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 80,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"兑换账号\",\n      dataIndex: \"pay_account\",\n      width: 200\n    },\n    {\n      title: \"账号名称\",\n      dataIndex: \"pay_name\",\n      width: 100\n    },\n\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 150,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 150,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"风控\",\n      dataIndex: \"\",\n      width: 200,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getDetail(record, \"risk\")}>\n            风控\n          </LinkButton>\n          <LinkButton>游戏数据</LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"审核详情\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"备注内容\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <Popover\n            content={record.user_remark}\n            title={record.user_id + \"用户备注\"}\n            trigger=\"click\"\n          >\n            <LinkButton>用户备注</LinkButton>\n          </Popover>\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\n            运营备注\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  getDetail = async (record, action) => {\n    this.action = action;\n    this.detailRecord = {\n      data: [],\n      count: 0,\n      id: record.user_id\n    };\n    const res =\n      action === \"risk\"\n        ? await userDetail(1, 20, record.user_id)\n        : action === \"check\"\n        ? await reviewInfo(1, 20, record.order_id)\n        : await remarkInfo(1, 20, record.order_id);\n    if (res.status === 0) {\n      this.detailRecord.data = res.data;\n      this.detailRecord.count = res.count;\n    }\n    this.setState({ isDetailShow: true });\n  };\n  edit = async record => {\n    let reqData = {\n      flag: 3,\n      order_id: record.order_id\n    };\n    const res = await auditOrder(reqData);\n    if (res.status === 0) {\n      this.editData = res.data[0];\n      this.setState({ isEditShow: true });\n    } else {\n      message.error(\"操作失败\");\n    }\n  };\n}\n\nexport default Withdraw_list;\n","import React, { Component } from \"react\";\nimport { Progress } from \"antd\";\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/addon/lint/lint.css\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/mode/javascript/javascript.js\";\nimport \"codemirror/addon/lint/lint.js\";\nimport \"codemirror/addon/lint/json-lint.js\";\nimport \"codemirror/theme/rubyblue.css\";\n\nexport class MyProgress extends React.Component {\n  state = {\n    percent: 0\n  };\n  handle;\n  render() {\n    return (\n      <Progress\n        type=\"circle\"\n        strokeColor={{\n          \"0%\": \"#108ee9\",\n          \"100%\": \"#87d068\"\n        }}\n        percent={this.state.percent}\n      />\n    );\n  }\n}\nconst options = {\n  lineNumbers: true, //显示行号\n  mode: { name: \"javascript\", json: true }, //定义mode\n  theme: \"rubyblue\" //选中的theme\n};\nexport class CodeEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const conf_val = JSON.stringify([JSON.parse(this.props.conf_val)], null, 2);\n    //使用默认传过来的onChange事件\n    const { onChange } = this.props;\n    return (\n      <div className=\"json-editor\">\n        <CodeMirror\n          // ref=\"editor-sql\"\n          value={conf_val}\n          onChange={(editor, data, value) => {\n            //返回value值给edit中的form\n            return onChange(JSON.stringify(JSON.parse(value)[0]));\n          }}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { saveConf } from \"../../../api/index\";\nimport { CodeEditor } from \"../../../components/myComponents\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  let getValueFromEvent = e => {\n    console.log(\"Upload event:\", e);\n    // if (Array.isArray(e)) {\n    //   return e;\n    // }\n    // return e && e.fileList;\n  };\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      console.log(value);\n      if (!err) {\n        if (props.action === \"edit\") {\n          value.id = record.id;\n        }\n        const res = await saveConf(value, props.action);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <Form labelCol={{ span: 3 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\n      <Form.Item label=\"配置名\">\n        {getFieldDecorator(\"name\", {\n          rules: [{ required: true, message: \"请输入配置名\" }],\n          initialValue: props.action === \"add\" ? \"\" : props.record.name\n        })(<Input style={{ width: \"50%\" }} />)}\n      </Form.Item>\n      <Form.Item label=\"配置Key\">\n        {getFieldDecorator(\"conf_key\", {\n          rules: [{ required: true, message: \"请输入配置Key\" }],\n          initialValue: props.action === \"add\" ? \"\" : props.record.conf_key\n        })(<Input style={{ width: \"50%\" }} />)}\n      </Form.Item>\n      <Form.Item label=\"配置Val\">\n        {getFieldDecorator(\"conf_val\", {\n          rules: [{ required: true, message: \"请输入配置Val\" }]\n        })(\n          props.action === \"add\" ? (\n            <Input style={{ width: \"50%\" }} />\n          ) : (\n            <CodeEditor conf_val={props.record.conf_val} />\n          )\n        )}\n        <span style={props.action === \"add\" ? { display: \"none\" } : {}}>\n          请注意首尾中括号【】为代码编辑器携带符号，实际参数不带首尾中括号,请勿修改删除【】\n        </span>\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Popconfirm,\n  Button\n} from \"antd\";\nimport { configList, saveConf } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass Config extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await configList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Input\n              style={{ width: 120 }}\n              placeholder=\"请输入配置Key\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              size=\"default\"\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton type=\"primary\" onClick={this.onAdd} size=\"default\">\n              添加\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size=\"default\">\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          // scroll={{ y: \"100%\" }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"add\" ? \"添加配置\" : \"编辑配置\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n            width=\"50%\"\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"配置名\",\n      dataIndex: \"name\"\n    },\n    {\n      title: \"配置Key\",\n      dataIndex: \"conf_key\"\n    },\n    {\n      title: \"配置值\",\n      dataIndex: \"conf_val\",\n      width: 150\n    },\n    {\n      title: \"更新时间\",\n      dataIndex: \"created_at\",\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\n            编辑\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.onDelete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <Button type=\"danger\" size=\"small\">\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let conf_key = this.input.input.value;\n    const res = await configList(1, 20, conf_key);\n    this.setState({ data: res.data, count: res.count });\n  };\n  onDelete = async record => {\n    let res = await saveConf({ id: record.id }, \"del\");\n    if (res.status === 0) {\n      message.success(\"删除成功:\" + res.msg);\n      this.getInitialData(this.state.page, this.state.pageSize);\n    } else {\n      message.error(\"出错了：\" + res.msg);\n    }\n  };\n  onAdd = async () => {\n    this.action = \"add\";\n    this.setState({\n      isEditFormShow: true\n    });\n  };\n  edit = async record => {\n    this.action = \"edit\";\n    this.editDataRecord = record;\n    this.setState({\n      isEditFormShow: true\n    });\n  };\n}\nexport default Config;\n","import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { changeUserBalance } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  let params = JSON.parse(record.params);\n\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        let obj = {\n          \"data[id]\": record.id,\n          \"data[params]\": record.params,\n          \"data[status]\": 2\n        };\n        if (props.action === \"review\") {\n          obj[\"data[pay_reason]\"] = value.reason;\n          obj[\"data[status]\"] = 1;\n        }\n        const res = await changeUserBalance(obj);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <div>\n      <span>\n        ID:{params.user_id} 资金变动：{params.amount} 复审\n        {props.action === \"review\" ? \"备注\" : \"拒绝\"}\n      </span>\n      <Form\n        labelCol={{ span: 4 }}\n        labelAlign=\"left\"\n        onSubmit={handleEditSubmit}\n      >\n        <Form.Item\n          style={{ display: props.action === \"review\" ? \"block\" : \"none\" }}\n        >\n          {getFieldDecorator(\"reason\", {\n            initialValue: params.reason\n          })(<Input.TextArea autosize={{ minRows: 5, maxRows: 10 }} />)}\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Popconfirm,\n  Button,\n  Select\n} from \"antd\";\nimport { tasksList, saveConf, reviewTask } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await tasksList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.start_time = val[0];\n                this.end_time = val[1];\n              }}\n            ></MyDatePicker>\n            &nbsp;&nbsp;&nbsp;\n            <Select\n              placeholder=\"任务状态\"\n              style={{ width: 150 }}\n              onChange={value => (this.status = value)}\n            >\n              <Select.Option value=\"0\">待操作</Select.Option>\n              <Select.Option value=\"1\">已复审</Select.Option>\n              <Select.Option value=\"2\">复审拒绝</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入创建人昵称\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n              size=\"normal\"\n            ></LinkButton>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size=\"normal\">\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState(\n                {\n                  page: page\n                },\n                () => {\n                  this.onSearch();\n                }\n              );\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState(\n                {\n                  pageSize: size\n                },\n                () => {\n                  this.onSearch();\n                }\n              );\n            }\n          }}\n          scroll={{ x: 2000 }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"review\" ? \"复审\" : \"拒绝\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"任务ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"任务信息\",\n      dataIndex: \"params\",\n      render: (text, record) => (\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\n          {text}\n        </div>\n      )\n    },\n    {\n      title: \"任务来源\",\n      dataIndex: \"task_type\",\n      render: (text, record, index) => (\n        <span>\n          {parseInt(text) === 0\n            ? \"用户列表资金变动\"\n            : parseInt(text) === 1\n            ? \"代理配置列表资金变动\"\n            : parseInt(text) === 2\n            ? \"用户重置密码\"\n            : \"\"}\n        </span>\n      )\n    },\n    {\n      title: \"创建人昵称\",\n      dataIndex: \"operator_nick\"\n    },\n    {\n      title: \"复审人昵称\",\n      dataIndex: \"review_nick\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\"\n    },\n    {\n      title: \"更新时间\",\n      dataIndex: \"updated_at\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      render: (text, record, index) => {\n        let res;\n        switch (text) {\n          case 0:\n            res = (\n              <div>\n                <LinkButton size=\"small\" onClick={() => this.review(record)}>\n                  复审\n                </LinkButton>\n                <LinkButton\n                  size=\"small\"\n                  type=\"danger\"\n                  onClick={() => this.refuse(record)}\n                >\n                  拒绝\n                </LinkButton>\n              </div>\n            );\n            break;\n          case 1:\n            res = <LinkButton size=\"small\">已复审</LinkButton>;\n            break;\n          case 2:\n            res = (\n              <LinkButton size=\"small\" type=\"danger\">\n                复审拒绝\n              </LinkButton>\n            );\n            break;\n          default:\n            break;\n        }\n        return res;\n      }\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      start_time: this.start_time || \"\",\n      end_time: this.end_time || \"\",\n      // status: this.status || \"\",\n      operator_nick: this.input.input.value || \"\"\n    };\n    if (this.status) {\n      value.status = this.status;\n    }\n    const res = await tasksList(this.state.page, this.state.pageSize, value);\n    this.setState({ data: res.data, count: res.count });\n  };\n  review = async record => {\n    if (record.task_type === 2) {\n      let value = {\n        id: record.id,\n        params: record.params,\n        status: 1\n      };\n      const res = await reviewTask(value);\n      if (res.status === 0) {\n        message.success(\"提交成功\" + res.msg);\n        this.onSearch();\n      } else {\n        message.error(\"出错了：\" + res.msg);\n      }\n    } else {\n      this.action = \"review\";\n      this.editDataRecord = record;\n      this.setState({ isEditFormShow: true });\n    }\n  };\n  refuse = async record => {\n    if (record.task_type === 2) {\n      let value = {\n        id: record.id,\n        params: record.params,\n        status: 2\n      };\n      const res = await reviewTask(value);\n      if (res.status === 0) {\n        message.success(\"提交成功\" + res.msg);\n        this.onSearch();\n      } else {\n        message.error(\"出错了：\" + res.msg);\n      }\n    } else {\n      this.action = \"refuse\";\n      this.editDataRecord = record;\n      this.setState({ isEditFormShow: true });\n    }\n  };\n}\nexport default Tasks;\n","import React from \"react\";\nimport { Modal, Table } from \"antd\";\nimport {} from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport QRCode from \"qrcode.react\";\n\nconst EditForm = props => {\n  const data = props.record;\n  function checkQrcode(record) {\n    Modal.success({\n      title: \"收款码\",\n      content: (<div><QRCode value={record.pay_url}></QRCode></div>),\n      width: 250\n    });\n  }\n  let initColumns = [\n    {\n      title: \"账号类型\",\n      dataIndex: \"type\",\n      render: (text, record, index) => {\n        let res;\n        switch (text) {\n          case 1:\n            res = \"微信\";\n            break;\n          case 2:\n            res = \"alipay\";\n            break;\n          case 3:\n            res = \"银行卡\";\n            break;\n          case 4:\n            res = \"花呗\";\n            break;\n          case 5:\n            res = \"信用卡\";\n            break;\n          default:\n            res = \"\";\n            break;\n        }\n        return <span>{res}</span>;\n      }\n    },\n    {\n      title: \"账户名\",\n      dataIndex: \"account_name\"\n    },\n    {\n      title: \"账号\",\n      dataIndex: \"account_num\"\n    },\n    {\n      title: \"开户行\",\n      dataIndex: \"bank_name\"\n    },\n    {\n      title: \"收款码\",\n      dataIndex: \"pay_url\",\n      render: (text, record, index) => {\n        if (text && text.length > 0) {\n          return (\n            <LinkButton onClick={() => checkQrcode(record)}>预览</LinkButton>\n          );\n        }\n      }\n    },\n    {\n      title: \"状态[收款码审核]\",\n      dataIndex: \"status\"\n    },\n    {\n      title: \"绑定时间\",\n      dataIndex: \"created_at\"\n    },\n    {\n      title: \"修改时间\",\n      dataIndex: \"updated_at\"\n    }\n  ];\n  return (\n    <Table\n      bordered\n      rowKey={(record, index) => `${index}`}\n      dataSource={data}\n      columns={initColumns}\n      size=\"small\"\n    />\n  );\n};\n\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message,  Input, Select } from \"antd\";\nimport { allAccountList, resetPassword, accountList } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\n\nclass AccountList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await allAccountList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Select defaultValue=\"user_id\" style={{ width: 150 }}>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入user_id\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n            />\n            {/* <br />\n            <br />\n            <LinkButton style={{ float: \"right\" }} onClick={this.download} icon=\"download\">\n            </LinkButton> */}\n          </span>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          // scroll={{ x: 1800 }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title=\"绑定收付款账户详情\"\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            width=\"60%\"\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\"\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\"\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\"\n    },\n    {\n      title: \"资金密码操作\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <LinkButton\n          size=\"small\"\n          onClick={() => {\n            this.resetPassword(record);\n          }}\n        >\n          重置\n        </LinkButton>\n      )\n    },\n    {\n      title: \"绑定账号\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <LinkButton\n          size=\"small\"\n          onClick={() => {\n            this.checkAccount(record);\n          }}\n        >\n          查看\n        </LinkButton>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      user_id: this.input.input.value\n    };\n    const res = await allAccountList(\n      this.state.page,\n      this.state.pageSize,\n      value\n    );\n    this.setState({ data: res.data, count: parseInt(res.count) });\n  };\n  resetPassword = async record => {\n    const res = await resetPassword(record.user_id);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n  };\n  checkAccount = async record => {\n    const res = await accountList(record.user_id);\n    this.editDataRecord = res.data;\n    if (res.status !== 0) {\n      message.error(res.msg);\n    }\n    this.setState({ isEditFormShow: true });\n  };\n  // download=async()=>{\n\n  // }\n}\nexport default AccountList;\n","import React from \"react\";\nimport { Table } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nconst EditForm = props => {\n  const data = props.record||[];\n  const action = props.action;\n  let initColumns = [];\n  switch (action) {\n    case \"detail\":\n      initColumns = [\n        {\n          title: \"user_id\",\n          dataIndex: \"user_id\"\n        },\n        {\n          title: \"申请数量\",\n          dataIndex: \"\"\n        },\n        {\n          title: \"成交数量\",\n          dataIndex: \"\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"\"\n        }\n      ];\n      break;\n    case \"check\":\n      initColumns = [\n        {\n          title: \"审核人\",\n          dataIndex: \"review_name\"\n        },\n        {\n          title: \"审核时间\",\n          dataIndex: \"review_at\",\n          render: formateDate\n        }\n      ];\n      break;\n    case \"operatorRemark\":\n      initColumns = [\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"内容\",\n          dataIndex: \"content\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"created_at\",\n          render: formateDate\n        }\n      ];\n      break;\n    default:\n      break;\n  }\n  return (\n    <Table\n      bordered\n      rowKey={(record, index) => `${index}`}\n      dataSource={data}\n      columns={initColumns}\n      size=\"small\"\n    />\n  );\n};\n\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Select\n} from \"antd\";\nimport {\n  sellGoldApplyList,\n  tradeRemark,\n  sellGoldInfoList,\n  reviewInfo2,\n  remarkInfo2\n} from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false,\n    };\n    this.filed = \"id\";\n  }\n  getInitialData = async (page, limit) => {\n    const res = await sellGoldApplyList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.start_time = val[0];\n                this.end_time = val[1];\n              }}\n            ></MyDatePicker>\n            &nbsp;&nbsp;&nbsp;\n            <Select\n              defaultValue=\"id\"\n              style={{ width: 150 }}\n              onChange={value => (this.filed = value)}\n            >\n              <Select.Option value=\"id\">ID</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n              <Select.Option value=\"source\">所属代理</Select.Option>\n              <Select.Option value=\"group\">所属品牌</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入关键字搜索\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onChange={value => (this.status = value)}\n            >\n              <Select.Option value=\"\">状态</Select.Option>\n              <Select.Option value=\"1\">待初审</Select.Option>\n              <Select.Option value=\"2\">初审通过</Select.Option>\n              <Select.Option value=\"3\">初审拒绝</Select.Option>\n              <Select.Option value=\"4\">复审通过</Select.Option>\n              <Select.Option value=\"5\">复审拒绝</Select.Option>\n              <Select.Option value=\"6\">已下架</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()}>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: parseInt(this.state.count),\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          scroll={{ x: 1800 }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={\n              this.action === \"detail\"\n                ? \"详情\"\n                : this.action === \"check\"\n                ? \"审核详情\"\n                : \"运营备注详情\"\n            }\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 150\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\"\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\"\n    },\n    {\n      title: \"兑换单价\",\n      dataIndex: \"exchange_price\"\n    },\n    {\n      title: \"上架金币数\",\n      dataIndex: \"gold\"\n    },\n    {\n      title: \"上架金币余额\",\n      dataIndex: \"last_gold\"\n    },\n    {\n      title: \"最低兑换额\",\n      dataIndex: \"min_gold\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      render: (text, record, index) => {\n        let res;\n        switch (parseInt(text)) {\n          case 1:\n            res = (\n              <span>\n                <LinkButton size=\"small\">初审通过</LinkButton>\n                <LinkButton size=\"small\">初审拒绝</LinkButton>\n              </span>\n            );\n            break;\n          case 2:\n            res = (\n              <span>\n                <LinkButton size=\"small\">复审通过</LinkButton>\n                <LinkButton size=\"small\">复审拒绝</LinkButton>\n              </span>\n            );\n            break;\n          case 3:\n            res = <span>一审拒绝</span>;\n            break;\n          case 4:\n            res = <span>已上架</span>;\n            break;\n          case 5:\n            res = <span>二审拒绝</span>;\n            break;\n          case 6:\n            res = <span>已下架</span>;\n            break;\n          default:\n            break;\n        }\n        return res;\n      }\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      render: formateDate\n    },\n    {\n      title: \"风控\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton size=\"small\" type=\"dashed\">\n            风控\n          </LinkButton>\n          <LinkButton size=\"small\" type=\"dashed\">\n            游戏数据\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton size=\"small\" onClick={() => this.edit(record)}>\n            编辑\n          </LinkButton>\n          <LinkButton size=\"small\" onClick={() => this.checkDetail(record, \"detail\")}>\n            详情\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"审核详情\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            type=\"default\"\n            onClick={() => this.checkDetail(record, \"check\")}\n          >\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"备注内容\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            type=\"default\"\n            onClick={() => this.checkDetail(record, \"userRemark\")}\n          >\n            用户备注\n          </LinkButton>\n          <LinkButton\n            size=\"small\"\n            type=\"default\"\n            onClick={() => this.checkDetail(record, \"operatorRemark\")}\n          >\n            运营备注\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      end_time: this.start_time || \"\",\n      start_time: this.start_time || \"\",\n      status: this.status || \"\",\n      [this.filed]: this.input.input.value\n    };\n    const res = await sellGoldApplyList(\n      this.state.page,\n      this.state.pageSize,\n      value\n    );\n    this.setState({ data: res.data, count: res.count });\n  };\n  edit = async record => {\n    Modal.info({\n      title: \"编辑\",\n      okText: \"关闭\",\n      okType: \"default\",\n      width: \"50%\",\n      content: (\n        <div>\n          <div>\n            <span>备注[用户]&nbsp;&nbsp;&nbsp;</span>\n            <Input\n              style={{ width: \"60%\" }}\n              placeholder=\"请输入备注内容，用户查看使用\"\n              ref={Input => {\n                this.userRemarkInput = Input;\n              }}\n            />\n            <span>&nbsp;&nbsp;&nbsp;</span>\n            <LinkButton\n              onClick={() => {\n                this.editComfirm(record, 1);\n              }}\n            >\n              确定\n            </LinkButton>\n          </div>\n          <br />\n          <div>\n            <span>备注[运营]&nbsp;&nbsp;&nbsp;</span>\n            <Input\n              style={{ width: \"60%\" }}\n              placeholder=\"请输入备注内容，运营人员记录使用\"\n              ref={Input => {\n                this.operatorRemarkInput = Input;\n              }}\n            />\n            <span>&nbsp;&nbsp;&nbsp;</span>\n            <LinkButton\n              onClick={() => {\n                this.editComfirm(record, 2);\n              }}\n            >\n              确定\n            </LinkButton>\n          </div>\n        </div>\n      )\n    });\n  };\n  editComfirm = async (record, remark_type) => {\n    let value = {\n      id: record.id,\n      temarks:\n        remark_type === 1\n          ? this.userRemarkInput.input.value\n          : this.operatorRemarkInput.input.value,\n      remark_type: remark_type\n    };\n    if (remark_type === 2) {\n      value.type = 6;\n    }\n    const res = await tradeRemark(value);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n  };\n  checkDetail = async (record, action) => {\n    if (action === \"userRemark\") {\n      Modal.info({\n        title: `订单ID为【${record.id}】的用户备注`,\n        content: <div>{record.user_remark||'无'}</div>,\n        okText:'关闭'\n      });\n    } else {\n      let res;\n      switch (action) {\n        case \"detail\":\n          res = await sellGoldInfoList(1, 100, record.id);\n          break;\n        case \"check\":\n          res = await reviewInfo2(1, 100, record.id);\n          break;\n        case \"operatorRemark\":\n          res = await remarkInfo2(1, 100, record.id);\n          break;\n        default:\n          break;\n      }\n      this.editDataRecord = res.data;\n      this.action = action;\n      this.setState({ isEditFormShow: true });\n    }\n  };\n}\nexport default Tasks;\n","import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { changeUserBalance } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  let params = JSON.parse(record.params);\n\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        let obj = {\n          \"data[id]\": record.id,\n          \"data[params]\": record.params,\n          \"data[status]\": 2\n        };\n        if (props.action === \"review\") {\n          obj[\"data[pay_reason]\"] = value.reason;\n          obj[\"data[status]\"] = 1;\n        }\n        const res = await changeUserBalance(obj);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <div>\n      <span>\n        ID:{params.user_id} 资金变动：{params.amount} 复审\n        {props.action === \"review\" ? \"备注\" : \"拒绝\"}\n      </span>\n      <Form\n        labelCol={{ span: 4 }}\n        labelAlign=\"left\"\n        onSubmit={handleEditSubmit}\n      >\n        <Form.Item\n          style={{ display: props.action === \"review\" ? \"block\" : \"none\" }}\n        >\n          {getFieldDecorator(\"reason\", {\n            initialValue: params.reason\n          })(<Input.TextArea autosize={{ minRows: 5, maxRows: 10 }} />)}\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Input, Select } from \"antd\";\nimport { sellGoldOrderList } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\n\nclass Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await sellGoldOrderList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } \n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.start_time = val[0];\n                this.end_time = val[1];\n              }}\n            ></MyDatePicker>\n            &nbsp;&nbsp;&nbsp;\n            <Select\n              placeholder=\"任务状态\"\n              style={{ width: 150 }}\n              onChange={value => (this.status = value)}\n            >\n              <Select.Option value=\"0\">待操作</Select.Option>\n              <Select.Option value=\"1\">已复审</Select.Option>\n              <Select.Option value=\"2\">复审拒绝</Select.Option>\n            </Select>\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入创建人昵称\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              type=\"primary\"\n              onClick={this.onSearch}\n              icon=\"search\"\n            ></LinkButton>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()}>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n          scroll={{ x: 1800 }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"review\" ? \"复审\" : \"拒绝\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"买家ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"买家昵称\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"卖家ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"卖家昵称\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"兑换单价\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"支付金额\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"兑换金额\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"完成时间\",\n      dataIndex: \"\"\n    }\n  ];\n  // onSearch = async () => {\n  //   let value = {\n  //     end_time: this.start_time || \"\",\n  //     start_time: this.start_time || \"\",\n  //     status: this.status || \"\",\n  //     operator_nick: this.input.input.value || \"\"\n  //   };\n  //   const res = await tasksList(this.state.page, this.state.pageSize, value);\n  //   this.setState({ data: res.data, count: res.count });\n  // };\n  review = async record => {\n    this.action = \"review\";\n    this.editDataRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n  refuse = async record => {\n    this.action = \"refuse\";\n    this.editDataRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n}\nexport default Tasks;\n","import React from \"react\";\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\nimport { saveActivityConfig } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  const action = props.action;\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        if (action === \"edit\") {\n          value.id = record.id;\n        }\n        const res = await saveActivityConfig(value);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <div>\n      <Form\n        labelCol={{ span: 6 }}\n        labelAlign=\"left\"\n        onSubmit={handleEditSubmit}\n      >\n        <Form.Item label=\"活动名称\">\n          {getFieldDecorator(\"name\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.name\n          })(<Input style={{ width: \"40%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"品牌\">\n          {getFieldDecorator(\"package_id\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.package_id\n          })(\n            <Select style={{ width: \"40%\" }}>\n              <Select.Option value=\"1\">博臣娱乐</Select.Option>\n              <Select.Option value=\"2\">机器人首领</Select.Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"状态\">\n          {getFieldDecorator(\"is_close\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.is_close\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">关闭</Radio>\n              <Radio value=\"2\">开启</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"需要绑定电话\">\n          {getFieldDecorator(\"need_mobile\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.need_mobile\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">是</Radio>\n              <Radio value=\"2\">否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"需要绑定银行卡\">\n          {getFieldDecorator(\"need_bankcard\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.need_bankcard\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">是</Radio>\n              <Radio value=\"2\">否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"排序\">\n          {getFieldDecorator(\"order_by\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.order_by\n          })(<Input style={{ width: \"40%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"活动内容\">\n          {getFieldDecorator(\"info\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.info\n          })(\n            <Input.TextArea\n              style={{ width: \"70%\" }}\n              autosize={{ maxRows: 10 }}\n            />\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Input, Popconfirm } from \"antd\";\nimport {\n  activityConfigList,\n  delActivityConfig\n} from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport WrappedEditForm from \"./editForm\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass AccountList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await activityConfigList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.setState({\n                  start_time: val[0],\n                  end_time: val[1]\n                });\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入活动id\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              onClick={this.onSearch}\n              icon=\"search\"\n              size=\"default\"\n            ></LinkButton>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton onClick={this.add} size=\"default\">\n              添加\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"add\" ? \"添加\" : \"编辑\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"活动名称\",\n      dataIndex: \"name\"\n    },\n    {\n      title: \"品牌ID\",\n      dataIndex: \"package_id\"\n    },\n    {\n      title: \"活动状态\",\n      dataIndex: \"is_close\",\n      render: text => <span>{text === \"1\" ? \"关闭\" : \"开启\"}</span>\n    },\n    {\n      title: \"需要绑定电话\",\n      dataIndex: \"need_mobile\",\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"需要绑定银行卡\",\n      dataIndex: \"need_bankcard\",\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"活动内容\",\n      dataIndex: \"info\",\n      width: 200\n    },\n    {\n      title: \"排序\",\n      dataIndex: \"order_by\"\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      render: formateDate\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            onClick={() => {\n              this.edit(record);\n            }}\n          >\n            编辑\n          </LinkButton>\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.delete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <LinkButton type=\"danger\" size=\"small\">\n              删除\n            </LinkButton>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      user_id: this.input.input.value\n    };\n    const res = await activityConfigList(\n      this.state.page,\n      this.state.pageSize,\n      value\n    );\n    this.setState({ data: res.data, count: parseInt(res.count) });\n  };\n  add = async record => {\n    this.action = \"add\";\n    this.setState({ isEditFormShow: true });\n  };\n  edit = async record => {\n    this.action = \"edit\";\n    this.editDataRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n  delete = async record => {\n    const res = await delActivityConfig(record.id);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n    this.getInitialData(1, 20);\n  };\n}\nexport default AccountList;\n","import React, { Component } from \"react\";\nimport { Card, Table, message, Input, Popconfirm, Modal } from \"antd\";\nimport { activityList } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass AccountList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await activityList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(\"接口异常,未检索到数据\");\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.start_time = val[0];\n                this.end_time = val[1];\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入活动id\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              onClick={this.onSearch}\n              icon=\"search\"\n              size=\"default\"\n            ></LinkButton>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton onClick={this.add} size=\"default\">\n              添加\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n        />\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\"\n    },\n    {\n      title: \"活动Id\",\n      dataIndex: \"activity_id\"\n    },\n    {\n      title: \"活动名称\",\n      dataIndex: \"activity_name\"\n    },\n    {\n      title: \"品牌Id\",\n      dataIndex: \"package_id\"\n    },\n    {\n      title: \"领取日期\",\n      dataIndex: \"receive_date\"\n    },\n    {\n      title: \"领取详情\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            onClick={() => {\n              this.check(record);\n            }}\n          >\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      render: formateDate\n    }\n  ];\n  check=(record)=>{\n    Modal.info({\n      title:\"领取详情\",\n      content:record.receive_info\n    })\n  }\n  onSearch = async () => {\n    let value = {\n      user_id: this.input.input.value,\n      start_time: this.start_time,\n      end_time: this.end_time\n    };\n    const res = await activityList(this.state.page, this.state.pageSize, value);\n    if (res.status === 0) {\n      this.setState({ data: res.data, count: parseInt(res.count) });\n    } else {\n      message.error(\"接口异常,未检索到数据\");\n    }\n  };\n}\nexport default AccountList;\n","import React from \"react\";\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\nimport { saveActivityConfig } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const record = props.record;\n  const action = props.action;\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        if (action === \"edit\") {\n          value.id = record.id;\n        }\n        const res = await saveActivityConfig(value);\n        if (res.status === 0) {\n          message.success(\"提交成功\" + res.msg);\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <div>\n      <Form\n        labelCol={{ span: 6 }}\n        labelAlign=\"left\"\n        onSubmit={handleEditSubmit}\n      >\n        <Form.Item label=\"活动名称\">\n          {getFieldDecorator(\"name\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.name\n          })(<Input style={{ width: \"40%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"品牌\">\n          {getFieldDecorator(\"package_id\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.package_id\n          })(\n            <Select style={{ width: \"40%\" }}>\n              <Select.Option value=\"1\">博臣娱乐</Select.Option>\n              <Select.Option value=\"2\">机器人首领</Select.Option>\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item label=\"状态\">\n          {getFieldDecorator(\"is_close\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.is_close\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">关闭</Radio>\n              <Radio value=\"2\">开启</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"需要绑定电话\">\n          {getFieldDecorator(\"need_mobile\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.need_mobile\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">是</Radio>\n              <Radio value=\"2\">否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"需要绑定银行卡\">\n          {getFieldDecorator(\"need_bankcard\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.need_bankcard\n          })(\n            <Radio.Group>\n              <Radio value=\"1\">是</Radio>\n              <Radio value=\"2\">否</Radio>\n            </Radio.Group>\n          )}\n        </Form.Item>\n        <Form.Item label=\"排序\">\n          {getFieldDecorator(\"order_by\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.order_by\n          })(<Input style={{ width: \"40%\" }} />)}\n        </Form.Item>\n        <Form.Item label=\"活动内容\">\n          {getFieldDecorator(\"info\", {\n            rules: [{ required: true }],\n            initialValue: action === \"add\" ? \"\" : record.info\n          })(\n            <Input.TextArea\n              style={{ width: \"70%\" }}\n              autosize={{ maxRows: 10 }}\n            />\n          )}\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            确定\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Input, Popconfirm } from \"antd\";\nimport { giftVoucherList, delActivityConfig } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport WrappedEditForm from \"./editForm\";\n\nclass AccountList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      page: 1,\n      pageSize: 20,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async (page, limit) => {\n    const res = await giftVoucherList(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: parseInt(res.count)\n      });\n    } else {\n      message.error(\"接口异常,未检索到数据\");\n    }\n  };\n  componentDidMount() {\n    this.getInitialData(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <MyDatePicker\n              handleValue={val => {\n                this.setState({\n                  start_time: val[0],\n                  end_time: val[1]\n                });\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <Input\n              style={{ width: 150 }}\n              placeholder=\"请输入活动id\"\n              ref={Input => {\n                this.input = Input;\n              }}\n            />\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton\n              onClick={this.onSearch}\n              icon=\"search\"\n              size=\"default\"\n            ></LinkButton>\n            &nbsp;&nbsp;&nbsp;\n            <LinkButton onClick={this.add} size=\"default\">\n              添加\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => window.location.reload()}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.setState({\n                page: page\n              });\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.setState({\n                pageSize: size\n              });\n              this.getInitialData(current, size);\n            }\n          }}\n        />\n        {this.state.isEditFormShow && (\n          <Modal\n            title={this.action === \"add\" ? \"添加\" : \"编辑\"}\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n          >\n            <WrappedEditForm\n              finished={() => {\n                this.getInitialData(this.state.page, this.state.pageSize);\n                this.setState({ isEditFormShow: false });\n              }}\n              record={this.editDataRecord}\n              action={this.action}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"ID\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"领取人ID\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"领取人昵称\",\n      dataIndex: \"\"\n    },\n    {\n      title: \"代理ID\",\n      dataIndex: \"\",\n      render: text => <span>{text === \"1\" ? \"关闭\" : \"开启\"}</span>\n    },\n    {\n      title: \"code\",\n      dataIndex: \"\",\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"领取金额\",\n      dataIndex: \"\",\n      render: text => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"\",\n      width: 200\n    },\n    {\n      title: \"领取时间\",\n      dataIndex: \"order_by\"\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record) => (\n        <span>\n          <LinkButton\n            size=\"small\"\n            onClick={() => {\n              this.edit(record);\n            }}\n          >\n            编辑\n          </LinkButton>\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.delete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <LinkButton type=\"danger\" size=\"small\">\n              删除\n            </LinkButton>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n  onSearch = async () => {\n    let value = {\n      user_id: this.input.input.value\n    };\n    const res = await giftVoucherList(\n      this.state.page,\n      this.state.pageSize,\n      value\n    );\n    this.setState({ data: res.data, count: parseInt(res.count) });\n  };\n  add = async record => {\n    this.action = \"add\";\n    this.setState({ isEditFormShow: true });\n  };\n  edit = async record => {\n    this.action = \"edit\";\n    this.editDataRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n  delete = async record => {\n    const res = await delActivityConfig(record.id);\n    if (res.status === 0) {\n      message.success(res.msg);\n    } else {\n      message.error(res.msg);\n    }\n    this.getInitialData(1, 20);\n  };\n}\nexport default AccountList;\n","import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass GoldDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { data } = this.props.detailRecord;\n    console.log(data);\n\n    return (\n      <Table\n        bordered\n        rowKey={(record,index)=>`${index}`}\n        dataSource={data}\n        columns={this.initColumns()}\n        size=\"small\"\n      />\n    );\n  }\n  initColumns = () => {\n    if (this.props.action === \"check\") {\n      return [\n        {\n          title: \"审核人\",\n          dataIndex: \"review_name\"\n        },\n        {\n          title: \"审核时间\",\n          dataIndex: \"review_at\",\n          render: formateDate\n        }\n      ];\n    } else if (this.props.action === \"risk\") {\n      return [\n        {\n          title: \"user_id\",\n          dataIndex: \"id\"\n        },\n        {\n          title: \"产生来源\",\n          dataIndex: \"pay_account_name\"\n        },\n\n        {\n          title: \"余额(变动前)\",\n          dataIndex: \"total_balance\"\n        },\n        {\n          title: \"变动金额\",\n          dataIndex: \"final_pay\",\n\n          sorter: (a, b) => a.total_balance - b.total_balance\n        },\n        {\n          title: \"税收\",\n          dataIndex: \"tax\"\n        },\n        {\n          title: \"余额(变动后)\",\n          dataIndex: \"total_final_balance\"\n        },\n        {\n          title: \"备注\",\n          dataIndex: \"pay_reason\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"create_time\"\n        }\n      ];\n    } else {\n      return [\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"内容\",\n          dataIndex: \"content\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"created_at\",\n          render: formateDate\n        }\n      ];\n    }\n  };\n}\n\nexport default GoldDetail;\n","import React, { Component } from \"react\";\nimport { Form, Input, Button, message, Select, Radio } from \"antd\";\nimport { withDrawReview } from \"../../../api/index\";\nclass EditForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      review_status: \"\"\n    };\n  }\n  render() {\n    const record = this.props.record;\n    return (\n      <div>\n        <div>订单ID:{record.order_id}</div>\n        <div>用户ID:{record.user_id}</div>\n        <div>金额:{record.amount}</div>\n        <div>\n          订单状态:\n          <Radio.Group\n            onChange={e => {\n              this.setState({ review_status: e.target.value });\n            }}\n            value={this.state.review_status}\n          >\n            <Radio value={2}>已成功</Radio>\n            <Radio value={3}>已失败</Radio>\n          </Radio.Group>\n          <Button onClick={() => this.orderStatus(record)}>确认</Button>\n        </div>\n      </div>\n    );\n  }\n  orderStatus = async record => {\n    const res = await withDrawReview(\n      record.order_id,\n      record.user_id,\n      this.state.review_status\n    );\n    message.info(res.msg);\n  };\n}\n\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, Icon, Input, Select, Popover } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport {\n  withDraw,\n  downloadWithdrawList,\n  userDetail,\n  reviewInfo,\n  remarkInfo\n} from \"../../../api\";\nimport WrappedComponent from \"./details\";\nimport EditForm from \"./editForm\";\n\nclass Withdraw_list extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      start_time: \"\",\n      end_time: \"\",\n      order_status: \"\",\n      type: 5,\n      filed: \"\",\n      inputParam: \"\",\n      user_id: \"\",\n      order_id: \"\",\n      isBindInfoShow: false,\n      isEditFormShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    const result = await withDraw(page, limit, 1, this.state);\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  handleChange(event) {\n    this.setState({ inputParam: event.target.value });\n  }\n  onSearchData = async () => {\n    const result = await withDraw(1, 20, 1, this.state);\n    this.setState({\n      data: result.data,\n      count: parseInt(result.count)\n    });\n  };\n  download = () => {\n    downloadWithdrawList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ filed: value })}\n            >\n              <Select.Option value=\"order_id\">订单id</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n              <Select.Option value=\"replace_id\">被赠人ID</Select.Option>\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Input\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n              style={{ width: 150 }}\n              value={this.state.inputParam}\n              onChange={this.handleChange}\n            />\n            &nbsp; &nbsp;\n            <MyDatePicker\n              handleValue={val => {\n                this.setState({\n                  start_time: val[0],\n                  end_time: val[1]\n                });\n              }}\n            />\n            &nbsp; &nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ order_status: value })}\n            >\n              <Select.Option value=\"\">订单状态</Select.Option>\n              <Select.Option value=\"1\">待审核</Select.Option>\n              <Select.Option value=\"2\">处理中</Select.Option>\n              <Select.Option value=\"3\">已提交</Select.Option>\n              <Select.Option value=\"4\">已成功</Select.Option>\n              <Select.Option value=\"5\">已失败</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => {\n                window.location.reload();\n              }}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n          scroll={{ x: 2400, y: \"60vh\" }}\n        />\n        <Modal\n          title={\n            this.action === \"check\"\n              ? \"审核信息\"\n              : this.action === \"risk\"\n              ? \"资金明细\"\n              : \"运营备注\"\n          }\n          visible={this.state.isDetailShow}\n          onCancel={() => {\n            this.setState({ isDetailShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <WrappedComponent\n            detailRecord={this.detailRecord}\n            action={this.action}\n          />\n        </Modal>\n        {this.state.isEditFormShow && (\n          <Modal\n            title=\"编辑\"\n            visible={this.state.isEditFormShow}\n            onCancel={() => {\n              this.setState({ isEditFormShow: false });\n            }}\n            footer={null}\n            width=\"70%\"\n          >\n            <EditForm record={this.editRecord} />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 300\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 100\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 100,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"申请费率\",\n      dataIndex: \"handling_fee\",\n      width: 100\n    },\n    {\n      title: \"实际费率\",\n      dataIndex: \"gold\",\n      width: 100\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 100,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"兑换方式\",\n      dataIndex: \"order_type\",\n      width: 100\n    },\n    {\n      title: \"被赠人ID\",\n      dataIndex: \"replace_id\",\n      width: 100\n    },\n    {\n      title: \"被赠人昵称\",\n      dataIndex: \"replace_name\",\n      width: 100\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"待审核\";\n            break;\n          case \"2\":\n            word = \"处理中\";\n            break;\n          case \"3\":\n            word = \"已提交\";\n            break;\n          case \"4\":\n            word = \"已成功\";\n            break;\n          case \"5\":\n            word = \"已失败\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\",\n      width: 100\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 150,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 150,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 200,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"审核详情\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"备注内容\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <Popover\n            content={record.user_remark}\n            title={record.user_id + \"用户备注\"}\n            trigger=\"click\"\n          >\n            <LinkButton>用户备注</LinkButton>\n          </Popover>\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\n            运营备注\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  dataPickerOnChange = (date, dateString) => {\n    let startTime = dateString[0] + \" 00:00:00\";\n    let endTime = dateString[1] + \" 00:00:00\";\n    this.setState({\n      start_time: startTime,\n      end_time: endTime\n    });\n  };\n  getDetail = async (record, action) => {\n    this.action = action;\n    this.detailRecord = {\n      data: [],\n      count: 0,\n      id: record.user_id\n    };\n    const res =\n      action === \"risk\"\n        ? await userDetail(1, 20, record.user_id)\n        : action === \"check\"\n        ? await reviewInfo(1, 20, record.order_id)\n        : await remarkInfo(1, 20, record.order_id);\n    if (res.status === 0) {\n      this.detailRecord.data = res.data;\n      this.detailRecord.count = res.count;\n    }\n    this.setState({ isDetailShow: true });\n  };\n  edit = record => {\n    console.log(123);\n    \n    this.editRecord = record;\n    this.setState({ isEditFormShow: true });\n  };\n}\n\nexport default Withdraw_list;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Card, message, Input, Button, Form, Radio, Select } from \"antd\";\nimport { getConfigList, setGiftConfig } from \"../../../api/index\";\n\nclass Channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  getUsers = async () => {\n    let reqData = {\n      conf_key: \"give_info\",\n      get_val: 1\n    };\n    const res = await getConfigList(reqData);\n    if (res.status === 0) {\n      this.resData = res.data;\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getUsers();\n  }\n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    return (\n      <Card\n        extra={\n          <span>\n            <Button\n              style={{ float: \"right\" }}\n              icon=\"reload\"\n              onClick={() => {\n                window.location.reload();\n              }}\n            />\n          </span>\n        }\n      >\n        <Form\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 20 }}\n          onSubmit={this.handleSubmit}\n        >\n          <Form.Item label=\"品牌\">\n            {getFieldDecorator(\"package_id\", {})(\n              // <Select defaultValue=\"请选择\">\n              //   <Select.Option value=\"jack\">Jack</Select.Option>\n              //   <Select.Option value=\"lucy\">Lucy</Select.Option>\n              // </Select>\n              <Radio.Group>\n                <Radio value={1}>博臣娱乐</Radio>\n                <Radio value={0}>机器人首领</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item label=\"开关\">\n            {getFieldDecorator(\"is_close\", {\n              initialValue: 1\n            })(\n              <Radio.Group>\n                <Radio value={0}>开启</Radio>\n                <Radio value={1}>关闭</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item\n            label=\"赠送区间\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"min_amount\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                },\n                {\n                  validator: (rule, value, callback) => {\n                    if (value < 0) {\n                      callback(\"金额不能为负\"); //如果还没填写，则不进行验证\n                    }\n                    if (!value) {\n                      callback();\n                    }\n                    callback();\n                  }\n                }\n              ]\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"max_amount\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                },\n                {\n                  validator: (rule, value, callback) => {\n                    if (!value) {\n                      callback(); //如果还没填写，则不进行一致性验证\n                    }\n                    if (value < getFieldValue(\"min_amount\")) {\n                      callback(\"最大面值小于最小面值\");\n                    }\n                    if (value < 0) {\n                      callback(\"金额不能为负\");\n                    }\n                    callback();\n                  }\n                }\n              ]\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item wrapperCol={{ offset: 4 }}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              disabled\n            >\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      console.log(value);\n      if (!err) {\n        console.log(this.resData);\n        const { id, name, conf_val, conf_key } = this.resData;\n        let reqData = {\n          id,\n          name,\n          ...value,\n          action: \"edit\",\n          conf_key,\n          give_info: conf_val,\n          version: \"V2.0\"\n        };\n        // reqData.give_info = new_conf_val;\n        const res = await setGiftConfig(reqData);\n        if (res.status === 0) {\n          message.success(\"提交成功:\" + res.msg);\n          this.getUsers();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\nconst WrappedChannel = Form.create()(Channel);\n\nexport default withRouter(WrappedChannel);\n","import React, { Component } from \"react\";\nimport { Card, Table, Input, Select, message, Modal } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport {\n  getAIList,\n  reqLoadGold,\n  setGameUserNickName,\n  changeInternalUserBalance\n} from \"../../../api\";\n\nclass Withdraw_list extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      minGold: \"\",\n      maxGold: \"\"\n    };\n  }\n  getUsers = async (page, limit) => {\n    const result = await getAIList(page, limit, 5);\n    this.setState({\n      data: result.data.game_user,\n      count: parseInt(result.count)\n    });\n  };\n  onSearchData = async () => {\n    let value = {\n      [this.filed]: this.input.input.value\n    };\n    const result = await getAIList(1, 20, 5, value);\n    this.setState({\n      data: result.data.game_user,\n      count: parseInt(result.count)\n    });\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 150 }}\n              onSelect={value => (this.filed = value)}\n            >\n              <Select.Option value=\"game_nick\">昵称</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Input\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n              style={{ width: 150 }}\n              ref={Input => (this.input = Input)}\n            />\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => {\n                window.location.reload();\n              }}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <LinkButton onClick={this.changeGold}>批量增减金币</LinkButton>\n        <LinkButton onClick={this.changeNickname}>批量修改昵称</LinkButton>\n        <br />\n        <Table\n          rowSelection={this.rowSelection()}\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n        />\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"user_id\",\n      dataIndex: \"id\"\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"game_nick\"\n    },\n    {\n      title: \"账户余额\",\n      dataIndex: \"game_gold\"\n    },\n    {\n      title: \"实时余额\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.check(record)}>查看</LinkButton>\n        </span>\n      )\n    }\n  ];\n  rowSelection = () => {\n    return {\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.selectedRows = selectedRows;\n      },\n      getCheckboxProps: record => ({\n        // disabled: record.name === \"Disabled User\", // Column configuration not to be checked\n        // name: record.name\n      })\n    };\n  };\n  check = async record => {\n    const res = await reqLoadGold(record.id);\n    message.info(res.data[0].game_gold);\n  };\n  changeGold = async () => {\n    if (!this.selectedRows || !this.selectedRows[0]) {\n      message.error(\"user_id为空，请至少选择1位user_id\");\n    } else {\n      console.log(this.selectedRows);\n      Modal.confirm({\n        title: \"添加金额区间\",\n        okText: \"提交\",\n        okType: \"primary\",\n        width: \"30%\",\n        onOk: () => {\n          let { minGold, maxGold } = this.state;\n          if (minGold && maxGold) {\n            if (minGold > maxGold) {\n              message.error(\"请确认最大值大于最小值\");\n            } else {\n              this.handleOk(minGold, maxGold);\n            }\n          } else {\n            message.error(\"请输入有效值\");\n          }\n        },\n        content: (\n          <div>\n            <div>金额区间：</div>\n            <Input\n              type=\"text\"\n              style={{ width: \"40%\" }}\n              placeholder=\"￥最小值\"\n              // value={this.state.minGold}\n              // onChange={e => {\n              //   this.setState({ minGold: e.target.value });\n              // }}\n              onBlur={e => this.setState({ minGold: e.target.value })}\n              // ref={Input => (this.minInput = Input)}\n            />\n            --\n            <Input\n              type=\"text\"\n              style={{ width: \"40%\" }}\n              placeholder=\"￥最大值\"\n              onBlur={e => this.setState({ maxGold: e.target.value })}\n              // ref={Input => (this.maxInput = Input)}\n            />\n          </div>\n        )\n      });\n    }\n  };\n  handleOk = async (minGold, maxGold) => {\n    let amount = this.randNum(minGold, maxGold);\n    for (let i = 0; i < this.selectedRows.length; i++) {\n      let user_id = this.selectedRows[i].id;\n      const res = await changeInternalUserBalance(user_id, amount);\n      message.info(res.msg);\n    }\n    this.getUsers(1, 20);\n  };\n  randNum = (min, max) => {\n    min = parseInt(min);\n    max = parseInt(max);\n    var Range = max - min;\n    var Rand = Math.random();\n    var num = min + Math.round(Rand * Range); //四舍五入\n    return num;\n  };\n  changeNickname = async () => {\n    if (this.selectedRows && this.selectedRows[0]) {\n      for (let i = 0; i < this.selectedRows.length; i++) {\n        let { id } = this.selectedRows[i];\n        let game_nick = \"VIP\" + this.randNum(100000, 999999);\n        const res = await setGameUserNickName(id, game_nick);\n        message.info(res.msg);\n      }\n      this.getUsers(1, 20);\n    } else {\n      message.error(\"user_id为空，请至少选择1位user_id\");\n    }\n  };\n}\n\nexport default Withdraw_list;\n","import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport { formateDate } from \"../../../utils/dateUtils\";\n\nclass GoldDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { data } = this.props.detailRecord;\n    console.log(data);\n\n    return (\n      <Table\n        bordered\n        rowKey={(record,index)=>`${index}`}\n        dataSource={data}\n        columns={this.initColumns()}\n        size=\"small\"\n      />\n    );\n  }\n  initColumns = () => {\n    if (this.props.action === \"check\") {\n      return [\n        {\n          title: \"审核人\",\n          dataIndex: \"review_name\"\n        },\n        {\n          title: \"审核时间\",\n          dataIndex: \"review_at\",\n          render: formateDate\n        }\n      ];\n    } else if (this.props.action === \"risk\") {\n      return [\n        {\n          title: \"user_id\",\n          dataIndex: \"id\"\n        },\n        {\n          title: \"产生来源\",\n          dataIndex: \"pay_account_name\"\n        },\n\n        {\n          title: \"余额(变动前)\",\n          dataIndex: \"total_balance\"\n        },\n        {\n          title: \"变动金额\",\n          dataIndex: \"final_pay\",\n\n          sorter: (a, b) => a.total_balance - b.total_balance\n        },\n        {\n          title: \"税收\",\n          dataIndex: \"tax\"\n        },\n        {\n          title: \"余额(变动后)\",\n          dataIndex: \"total_final_balance\"\n        },\n        {\n          title: \"备注\",\n          dataIndex: \"pay_reason\"\n        },\n        {\n          title: \"创建时间\",\n          dataIndex: \"create_time\"\n        }\n      ];\n    } else {\n      return [\n        {\n          title: \"备注人\",\n          dataIndex: \"remark_name\"\n        },\n        {\n          title: \"内容\",\n          dataIndex: \"content\"\n        },\n        {\n          title: \"备注时间\",\n          dataIndex: \"created_at\",\n          render: formateDate\n        }\n      ];\n    }\n  };\n}\n\nexport default GoldDetail;\n","import React from \"react\";\nimport { Form, Input, Radio, message } from \"antd\";\nimport { orderWithDrawReview, withDrawRemark } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\n\nclass EditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const data = this.props.editData;\n    let review_status = parseInt(data.review_status);\n    let status = parseInt(data.status);\n    let orderStatusShow,\n      reviewShow,\n      confirmButtonShow,\n      submitRadio,\n      successRadio,\n      failRadio,\n      submitRadioChecked,\n      successRadioChecked,\n      failRadioChecked;\n    switch (status) {\n      case 1:\n        orderStatusShow = true;\n        confirmButtonShow = true;\n        successRadio = true;\n        failRadio = true;\n        break;\n      case 2:\n        orderStatusShow = true;\n        reviewShow = true;\n        submitRadio = true;\n        successRadio = true;\n        failRadio = true;\n        switch (review_status) {\n          case 1:\n            submitRadio = false;\n            break;\n          case 2:\n            successRadio = false;\n            break;\n          case 3:\n            failRadio = false;\n            break;\n          default:\n            break;\n        }\n        break;\n      case 3:\n        orderStatusShow = true;\n        confirmButtonShow = true;\n        submitRadio = true;\n        break;\n      default:\n        break;\n    }\n    return (\n      <Form labelCol={{ span: 4 }} labelAlign=\"left\">\n        <Form.Item label=\"订单ID\">\n          <Input\n            style={{ width: \"60%\" }}\n            value={data.order_id}\n            readOnly\n          ></Input>\n        </Form.Item>\n        <Form.Item label=\"用户ID\">\n          <Input style={{ width: \"60%\" }} value={data.user_id} readOnly></Input>\n        </Form.Item>\n        <Form.Item label=\"金额\">\n          <Input style={{ width: \"60%\" }} value={data.amount} readOnly></Input>\n        </Form.Item>\n\n        <Form.Item\n          label=\"订单状态:\"\n          style={orderStatusShow ? {} : { display: \"none\" }}\n        >\n          <Radio.Group\n            defaultValue={review_status}\n            onChange={e => (this.orderStatus = e.target.value)}\n          >\n            <Radio\n              value={1}\n              disabled={submitRadio}\n              checked={submitRadioChecked}\n            >\n              提交第三方\n            </Radio>\n            <Radio\n              value={2}\n              disabled={successRadio}\n              checked={successRadioChecked}\n            >\n              已成功\n            </Radio>\n            <Radio value={3} disabled={failRadio} checked={failRadioChecked}>\n              已失败\n            </Radio>\n          </Radio.Group>\n          <LinkButton\n            onClick={this.sumbitOrderStatus}\n            style={confirmButtonShow ? {} : { display: \"none\" }}\n          >\n            确认\n          </LinkButton>\n        </Form.Item>\n\n        <Form.Item label=\"复审:\" style={reviewShow ? {} : { display: \"none\" }}>\n          <LinkButton\n            onClick={() => {\n              this.review(1);\n            }}\n          >\n            通过\n          </LinkButton>\n          <LinkButton\n            onClick={() => {\n              this.review(2);\n            }}\n          >\n            拒绝\n          </LinkButton>\n        </Form.Item>\n        <Form.Item label=\"备注[用户]\">\n          <Input\n            style={{ width: \"60%\" }}\n            onChange={e => {\n              this.remarkUser = e.target.value;\n            }}\n          ></Input>\n          <LinkButton onClick={this.sumbitRemarkUser}>确认</LinkButton>\n        </Form.Item>\n        <Form.Item label=\"备注[运营]\">\n          <Input\n            style={{ width: \"60%\" }}\n            onChange={e => {\n              this.remarkOperator = e.target.value;\n            }}\n          ></Input>\n          <LinkButton onClick={this.sumbitRemarkOperator}>确认</LinkButton>\n        </Form.Item>\n      </Form>\n    );\n  }\n  sumbitOrderStatus = async () => {\n    const data = this.props.editData;\n    if (!this.orderStatus) {\n      message.error(\"请选择订单状态！\");\n    } else {\n      let reqData = {\n        order_id: data.order_id,\n        review_status: this.orderStatus,\n        user_id: data.user_id,\n        review_type: 1,\n        is_pass: 1\n      };\n      const res = await orderWithDrawReview(reqData);\n      if (res.status === 0) {\n        message.success(\"操作成功\");\n      } else {\n        message.error(\"操作失败\");\n      }\n      this.props.onclose();\n    }\n  };\n  review = async is_pass => {\n    const data = this.props.editData;\n    let reqData = {\n      order_id: data.order_id,\n      review_status: data.review_status,\n      user_id: data.user_id,\n      review_type: 2,\n      is_pass: is_pass\n    };\n    const res = await orderWithDrawReview(reqData);\n    if (res.status === 0) {\n      message.info(res.msg);\n    } else {\n      message.error(\"操作失败\");\n    }\n    this.props.onclose();\n  };\n  sumbitRemarkUser = async () => {\n    console.log(this.remarkUser);\n    const data = this.props.editData;\n    if (!this.remarkUser) {\n      message.error(\"请输入有效内容！\");\n    } else {\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 1);\n      if (res.status === 0) {\n        message.success(res.msg);\n      } else {\n        message.error(res.msg);\n      }\n    }\n  };\n  sumbitRemarkOperator = async () => {\n    console.log(this.remarkOperator);\n    const data = this.props.editData;\n    if (!this.remarkOperator) {\n      message.error(\"请输入有效内容！\");\n    } else {\n      const res = await withDrawRemark(data.order_id, this.remarkUser, 2);\n      if (res.status === 0) {\n        message.success(res.msg);\n      } else {\n        message.error(res.msg);\n      }\n    }\n  };\n}\nexport default EditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Select,\n  ConfigProvider,\n  DatePicker,\n  Popover\n} from \"antd\";\nimport \"moment/locale/zh-cn\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport { formateDate } from \"../../../utils/dateUtils\";\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\nimport \"moment/locale/zh-cn\";\nimport {\n  withDraw,\n  downloadWithdrawList,\n  userDetail,\n  reviewInfo,\n  remarkInfo,\n  auditOrder\n} from \"../../../api\";\nimport WrappedComponent from \"./details\";\nimport WrappedEdit from \"./edit\";\n\nconst { RangePicker } = DatePicker;\nclass Daiti extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      pageSize: 20,\n      start_time: \"\",\n      end_time: \"\",\n      order_status: \"\",\n      type: 3,\n      filed: \"\",\n      user_id: \"\",\n      order_id: \"\",\n      isBindInfoShow: false\n    };\n    this.initColumns();\n  }\n  getUsers = async (page, limit) => {\n    let data = { inputParam: \"\", ...this.state };\n    const result = await withDraw(page, limit, 1, data);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: parseInt(result.count)\n      });\n    }\n  };\n  onSearchData = async () => {\n    let data = { inputParam: this.input.input.value, ...this.state };\n    console.log(data);\n\n    const result = await withDraw(1, 20, 1, data);\n    if (result.status === 0) {\n      this.setState({\n        data: result.data,\n        count: parseInt(result.count)\n      });\n    } else {\n      this.setState({\n        data: result.data,\n        count: parseInt(result.count)\n      });\n      message.error(\"请检查输入的关键词或网络\");\n    }\n  };\n  download = () => {\n    downloadWithdrawList(this.state);\n  };\n  componentDidMount() {\n    this.getUsers(1, 20);\n  }\n  render() {\n    return (\n      <Card\n        title={\n          <div>\n            <ConfigProvider locale={zh_CN}>\n              <RangePicker\n                // defaultValue={[moment().locale(\"zh-cn\")]}\n                // showTime={{ format: \"HH:mm\" }}\n                format=\"YYYY-MM-DD\"\n                placeholder={[\"开始日期\", \"结束日期\"]}\n                onChange={this.dataPickerOnChange}\n              />\n            </ConfigProvider>\n            &nbsp; &nbsp;\n            <Select\n              placeholder=\"请选择\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ filed: value })}\n            >\n              <Select.Option value=\"order_id\">订单id</Select.Option>\n              <Select.Option value=\"user_id\">user_id</Select.Option>\n              <Select.Option value=\"replace_id\">代提ID</Select.Option>\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <Input\n              type=\"text\"\n              placeholder=\"请输入关键字\"\n              style={{ width: 150 }}\n              // value={this.state.inputParam}\n              // onChange={this.handleChange}\n              ref={Input => (this.input = Input)}\n            />\n            &nbsp; &nbsp;\n            <Select\n              defaultValue=\"\"\n              style={{ width: 150 }}\n              onSelect={value => this.setState({ order_status: value })}\n            >\n              <Select.Option value=\"\">订单状态</Select.Option>\n              <Select.Option value=\"1\">待审核</Select.Option>\n              <Select.Option value=\"2\">处理中</Select.Option>\n              <Select.Option value=\"3\">已提交</Select.Option>\n              <Select.Option value=\"4\">已成功</Select.Option>\n              <Select.Option value=\"5\">已失败</Select.Option>\n            </Select>\n            &nbsp; &nbsp;\n            <LinkButton onClick={this.onSearchData} size=\"default\">\n              <Icon type=\"search\" />\n            </LinkButton>\n          </div>\n        }\n        extra={\n          <span>\n            <LinkButton\n              style={{ float: \"right\" }}\n              onClick={() => {\n                window.location.reload();\n              }}\n              icon=\"reload\"\n              size=\"default\"\n            />\n          </span>\n        }\n      >\n        <Table\n          bordered\n          size=\"small\"\n          rowKey=\"id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          pagination={{\n            defaultPageSize: this.state.pageSize,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              if (page && pageSize) {\n                this.setState({\n                  pageSize: pageSize\n                });\n                this.getUsers(page, pageSize);\n              } else return;\n            },\n            onShowSizeChange: (current, size) => {\n              if (size) {\n                this.getUsers(current, size);\n              } else return;\n            }\n          }}\n          scroll={{ x: 2600, y: \"60vh\" }}\n        />\n        <Modal\n          title={\n            this.action === \"check\"\n              ? \"审核信息\"\n              : this.action === \"risk\"\n              ? \"资金明细\"\n              : \"运营备注\"\n          }\n          visible={this.state.isDetailShow}\n          onCancel={() => {\n            this.setState({ isDetailShow: false });\n          }}\n          footer={null}\n          width=\"70%\"\n        >\n          <WrappedComponent\n            detailRecord={this.detailRecord}\n            action={this.action}\n          />\n        </Modal>\n        {this.state.isEditShow && (\n          <Modal\n            title=\"编辑\"\n            visible={this.state.isEditShow}\n            onCancel={() => {\n              this.setState({ isEditShow: false });\n            }}\n            footer={null}\n            width=\"50%\"\n          >\n            <WrappedEdit\n              editData={this.editData}\n              onclose={() => {\n                this.setState({ isEditShow: false });\n              }}\n            />\n          </Modal>\n        )}\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"订单ID\",\n      dataIndex: \"order_id\",\n      width: 300\n    },\n    {\n      title: \"user_id\",\n      dataIndex: \"user_id\",\n      width: 100\n    },\n    {\n      title: \"昵称\",\n      dataIndex: \"user_name\",\n      width: 150\n    },\n    {\n      title: \"所属品牌\",\n      dataIndex: \"package_nick\",\n      width: 100\n    },\n    {\n      title: \"所属代理\",\n      dataIndex: \"proxy_user_id\",\n      width: 100\n    },\n    {\n      title: \"下单金额\",\n      dataIndex: \"amount\",\n      width: 100,\n      sorter: (a, b) => a.amount - b.amount\n    },\n    {\n      title: \"实际费率\",\n      dataIndex: \"platform_rate\",\n      width: 100\n    },\n    {\n      title: \"到账金额\",\n      dataIndex: \"arrival_amount\",\n      width: 100,\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\n    },\n    {\n      title: \"兑换方式\",\n      dataIndex: \"order_type\",\n      width: 100\n    },\n    {\n      title: \"兑换账号\",\n      dataIndex: \"pay_account\",\n      width: 200\n    },\n    {\n      title: \"账号名称\",\n      dataIndex: \"pay_name\",\n      width: 100\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      width: 100,\n      render: (text, record, index) => {\n        let word;\n        switch (text) {\n          case \"1\":\n            word = \"待审核\";\n            break;\n          case \"2\":\n            word = \"处理中\";\n            break;\n          case \"3\":\n            word = \"已提交\";\n            break;\n          case \"4\":\n            word = \"已成功\";\n            break;\n          case \"5\":\n            word = \"已失败\";\n            break;\n          default:\n            word = \"\";\n            break;\n        }\n        return <span>{word}</span>;\n      }\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      width: 150,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"代提ID\",\n      dataIndex: \"replace_id\",\n      width: 100\n    },\n    {\n      title: \"创建时间\",\n      dataIndex: \"created_at\",\n      width: 150,\n      render: formateDate,\n      sorter: (a, b) => a.created_at - b.created_at\n    },\n    {\n      title: \"到账时间\",\n      dataIndex: \"arrival_at\",\n      width: 150,\n      render: (text, record, index) => {\n        if (text === \"0\" || !text) {\n          return \"\";\n        } else return formateDate(text);\n      },\n      sorter: (a, b) => a.arrival_at - b.arrival_at\n    },\n    {\n      title: \"风控\",\n      dataIndex: \"\",\n      width: 180,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getDetail(record, \"risk\")}>\n            风控\n          </LinkButton>\n          <LinkButton>游戏数据</LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"审核详情\",\n      dataIndex: \"\",\n      width: 100,\n      render: record => (\n        <span>\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\n            查看\n          </LinkButton>\n        </span>\n      )\n    },\n    {\n      title: \"备注内容\",\n      dataIndex: \"\",\n      render: record => (\n        <span>\n          <Popover\n            content={record.user_remark}\n            title={record.user_id + \"用户备注\"}\n            trigger=\"click\"\n          >\n            <LinkButton>用户备注</LinkButton>\n          </Popover>\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\n            运营备注\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  dataPickerOnChange = (date, dateString) => {\n    let startTime = dateString[0] + \" 00:00:00\";\n    let endTime = dateString[1] + \" 00:00:00\";\n    this.setState({\n      start_time: startTime,\n      end_time: endTime\n    });\n  };\n  getDetail = async (record, action) => {\n    this.action = action;\n    this.detailRecord = {\n      data: [],\n      count: 0,\n      id: record.user_id\n    };\n    const res =\n      action === \"risk\"\n        ? await userDetail(1, 20, record.user_id)\n        : action === \"check\"\n        ? await reviewInfo(1, 20, record.order_id)\n        : await remarkInfo(1, 20, record.order_id);\n    if (res.status === 0) {\n      this.detailRecord.data = res.data;\n      this.detailRecord.count = res.count;\n    }\n    this.setState({ isDetailShow: true });\n  };\n  edit = async record => {\n    let reqData = {\n      flag: 1,\n      type: 3,\n      order_id: record.order_id\n    };\n    const res = await auditOrder(reqData);\n    if (res.status === 0) {\n      this.editData = res.data[0];\n      this.setState({ isEditShow: true });\n    } else {\n      message.error(\"操作失败\");\n    }\n  };\n}\n\nexport default Daiti;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Card,\n  message,\n  Input,\n  Button,\n  Form,\n  Switch,\n  Radio,\n  Divider\n} from \"antd\";\nimport { getConfigList, saveWithDrawChannel } from \"../../../api/index\";\n\nclass Channel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\"\n    };\n  }\n  getUsers = async () => {\n    let reqData = {\n      conf_key: \"withdraw_channel_info\",\n      get_val: 1\n    };\n    const res = await getConfigList(reqData);\n    if (res.status === 0) {\n      this.initialData = res.data;\n      this.setState({ data: JSON.parse(res.data.conf_val) });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getUsers();\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const data = this.state.data;\n    return (\n      <Card\n        extra={\n          <span>\n            <Button\n              style={{ float: \"right\" }}\n              icon=\"reload\"\n              onClick={() => {\n                window.location.reload();\n              }}\n            />\n          </span>\n        }\n      >\n        <Form\n          labelCol={{ span: 4 }}\n          wrapperCol={{ span: 20 }}\n          onSubmit={this.handleSubmit}\n        >\n          <Form.Item label=\"提款支付宝\">\n            {getFieldDecorator(\"alipay[is_close]\", {\n              initialValue: data && data.alipay.is_close === 1 ? true : false,\n              valuePropName: \"checked\"\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\n          </Form.Item>\n          <Divider></Divider>\n          <Form.Item label=\"提款银行卡\">\n            {getFieldDecorator(\"bankcard[is_close]\", {\n              initialValue: data && data.bankcard.is_close === 1 ? true : false,\n              valuePropName: \"checked\"\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\n          </Form.Item>\n          <Form.Item label=\"古都银行卡状态\">\n            {getFieldDecorator(\"bankcard[channel][2][is_close]\", {\n              initialValue: data && parseInt(data.bankcard.channel[0].is_close)\n            })(\n              <Radio.Group>\n                <Radio value={1}>启用</Radio>\n                <Radio value={0}>停用</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item label=\"显示名称\">\n            {getFieldDecorator(\"bankcard[channel][2][channel_name]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[0].channel_name\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item\n            label=\"提款限额\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][2][min_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[0].min_amount\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][2][max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[0].max_amount\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"渠道排序\">\n            {getFieldDecorator(\"bankcard[channel][2][sort]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[0].sort\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"第三方代付状态\">\n            {getFieldDecorator(\"bankcard[channel][3][is_close]\", {\n              initialValue: data && parseInt(data.bankcard.channel[1].is_close)\n            })(\n              <Radio.Group>\n                <Radio value={1}>启用</Radio>\n                <Radio value={0}>停用</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item label=\"显示名称\">\n            {getFieldDecorator(\"bankcard[channel][3][channel_name]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[1].channel_name\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item\n            label=\"提款限额\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][3][min_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[1].min_amount\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][3][max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[1].max_amount\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"渠道排序\">\n            {getFieldDecorator(\"bankcard[channel][3][sort]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[1].sort\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"onepay状态\">\n            {getFieldDecorator(\"bankcard[channel][7][is_close]\", {\n              initialValue: data && parseInt(data.bankcard.channel[2].is_close)\n            })(\n              <Radio.Group>\n                <Radio value={1}>启用</Radio>\n                <Radio value={0}>停用</Radio>\n              </Radio.Group>\n            )}\n          </Form.Item>\n          <Form.Item label=\"显示名称\">\n            {getFieldDecorator(\"bankcard[channel][7][channel_name]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[2].channel_name\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n          <Form.Item\n            label=\"提款限额\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][7][min_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[2].min_amount\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"bankcard[channel][7][max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[2].max_amount\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"渠道排序\">\n            {getFieldDecorator(\"bankcard[channel][7][sort]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.bankcard.channel[2].sort\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n\n          <Divider></Divider>\n          <Form.Item label=\"人工兑换\">\n            {getFieldDecorator(\"artificial[is_close]\", {\n              initialValue:\n                data && data.artificial.is_close === 1 ? true : false,\n              valuePropName: \"checked\"\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\n          </Form.Item>\n          <Form.Item\n            label=\"提款限额\"\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            labelCol={{ span: 9, offset: 7 }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"artificial[min_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.artificial.min_amount\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\n            <span>-</span>\n          </Form.Item>\n          <Form.Item\n            style={{ display: \"inline-block\", width: \"25%\" }}\n            wrapperCol={{ span: 8 }}\n          >\n            {getFieldDecorator(\"artificial[max_amount]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.artificial.max_amount\n            })(<Input style={{ width: \"80%\" }} />)}\n          </Form.Item>\n          <Form.Item label=\"费率\">\n            {getFieldDecorator(\"artificial[rate]\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"该项不能为空\"\n                }\n              ],\n              initialValue: data && data.artificial.rate\n            })(<Input style={{ width: \"30%\" }} />)}\n          </Form.Item>\n\n          <Form.Item wrapperCol={{ offset: 4 }}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      let { id, name } = this.initialData;\n      let obj = {};\n      value.bankcard.channel.forEach((item, index) => {\n        for (const key in item) {\n          obj[`bankcard[channel][${index}][${key}]`] = item[key];\n        }\n      });\n\n      obj[\"bankcard[is_close]\"] = value.bankcard.is_close ? \"on\" : \"off\";\n      obj[\"alipay[is_close]\"] = value.alipay.is_close ? \"on\" : \"off\";\n      for (const key in value.artificial) {\n        obj[`artificial[${key}]`] = value.artificial[key];\n      }\n      if (!err) {\n        const res = await saveWithDrawChannel(id, name, obj);\n        if (res.status === 0) {\n          message.success(\"提交成功:\" + res.msg);\n          console.log(res);\n          this.getUsers();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      } else {\n        message.error(\"提交失败\");\n      }\n    });\n  };\n}\nconst WrappedChannel = Form.create()(Channel);\n\nexport default withRouter(WrappedChannel);\n","import React, {Component} from 'react'\nimport {Button, Row, Col} from 'antd'\nimport './not-found.less'\n/*\n前台404页面\n */\nexport default class NotFound extends Component {\n  render() {\n    return (\n\n      <Row className='not-found'>\n        <Col span={12} className='left'></Col>\n        <Col span={12} className='right'>\n          <h1>404</h1>\n          <h2>抱歉，你访问的页面不存在</h2>\n          <div>\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\n              回到首页\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}","import React from \"react\";\nimport { Table} from \"antd\";\n// import {  Table,Button} from 'element-react';\n// import \"element-theme-default\";\n\nconst DateGameReport = props => {\n  let initColumns = () => [\n    {\n      title: \"游戏\",\n      dataIndex: \"game_name\"\n    },\n    {\n      title: \"玩家总赢额\",\n      dataIndex: \"win_statement_total\",\n      width: 150\n    },\n    {\n      title: \"玩家总输额\",\n      dataIndex: \"lose_statement_total\",\n      width: 150\n    },\n    {\n      title: \"玩家总流水\",\n      dataIndex: \"statement_total\",\n      width: 150\n    },\n    {\n      title: \"盈亏比\",\n      dataIndex: \"statement_ratio\",\n      width: 150\n    }\n  ];\n  return (\n    <Table\n      bordered\n      rowKey={(record, index) => `${index}`}\n      dataSource={props.data}\n      columns={initColumns()}\n      size=\"small\"\n      // scroll={{ x: 3000 }}\n      // footer={this.footerData}\n    />\n  );\n};\n\nexport default DateGameReport;\n","import React, { Component } from \"react\";\nimport { Table, Button, Modal } from \"antd\";\n// import {  Table,Button} from 'element-react';\n// import \"element-theme-default\";\nimport { oneDayGameReport } from \"../../../api/index\";\nimport DateGameReport from \"./dateGameReport\";\n\nclass MoreDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: \"\",\n      isGameReportShow: false,\n      nextLevelData: \"\"\n    };\n  }\n  render() {\n    const { data } = this.props.reportData;\n    return (\n      <div>\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={data}\n          columns={this.initColumns()}\n          size=\"small\"\n          scroll={{ x: 2000 }}\n          // footer={this.footerData}\n        />\n        <Modal\n          title={this.state.date + \"/游戏数据\"}\n          width=\"80%\"\n          visible={this.state.isGameReportShow}\n          onCancel={() => {\n            this.setState({ isGameReportShow: false });\n          }}\n          footer={null}\n        >\n          <DateGameReport data={this.state.nextLevelData} />\n        </Modal>\n      </div>\n    );\n  }\n  initColumns = () => {\n    if (this.props.action === \"getDateReport\") {\n      let tableHeader = [\n        {\n          title: \"日期\",\n          dataIndex: \"date\"\n        },\n        {\n          title: \"新增用户\",\n          dataIndex: \"regin_user_number\"\n        },\n        {\n          title: \"活跃用户\",\n          dataIndex: \"active_user_number\"\n        },\n        {\n          title: \"官方首充用户\",\n          dataIndex: \"first_pay_user_number\"\n        },\n        {\n          title: \"官方首充金额\",\n          dataIndex: \"first_pay_money_total\"\n        },\n        {\n          title: \"官方充值用户\",\n          dataIndex: \"pay_user_number\"\n        },\n        {\n          title: \"官方充值金额\",\n          dataIndex: \"pay_money_total\"\n        },\n        {\n          title: \"人工首充用户\",\n          dataIndex: \"first_pay_user_number_res\"\n        },\n        {\n          title: \"人工首充金额\",\n          dataIndex: \"first_pay_money_total_res\"\n        },\n        {\n          title: \"人工充值用户\",\n          dataIndex: \"pay_user_number_res\"\n        },\n        {\n          title: \"人工充值金额\",\n          dataIndex: \"pay_money_total_res\"\n        },\n        {\n          title: \"官方兑换用户\",\n          dataIndex: \"exchange_user_number\"\n        },\n        {\n          title: \"官方兑换金额\",\n          dataIndex: \"exchange_money_total\"\n        },\n        {\n          title: \"人工兑换用户\",\n          dataIndex: \"exchange_user_number_res\"\n        },\n        {\n          title: \"人工兑换金额\",\n          dataIndex: \"exchange_money_total_res\"\n        },\n        {\n          title: \"玩家总赢额\",\n          dataIndex: \"win_statement_total\"\n        },\n        {\n          title: \"玩家总输额\",\n          dataIndex: \"lose_statement_total\"\n        },\n        {\n          title: \"玩家总流水\",\n          dataIndex: \"statement_total\"\n        },\n        {\n          title: \"盈亏比\",\n          dataIndex: \"statement_ratio\"\n        },\n        {\n          title: \"操作\",\n          dataIndex: \"\",\n          render: (text, record, index) => (\n            <span>\n              <Button size=\"small\" onClick={() => this.getGameReport(record)}>\n                游戏\n              </Button>\n            </span>\n          )\n        }\n      ];\n      return tableHeader;\n    }\n  };\n  footerData = page => {\n    console.log(page);\n    return (\n      <tr>\n        <td>合计</td>\n        <td style={{ width: 80 }}>regin_user_number</td>\n        <td>regin_user_number</td>\n        <td>regin_user_number</td>\n        <td>regin_user_number</td>\n        <td>regin_user_number</td>\n      </tr>\n    );\n  };\n  getGameReport = async record => {\n    const res = await oneDayGameReport(\n      1,\n      20,\n      this.props.package_id,\n      record.date\n    );\n    this.props.parse(res);\n    this.setState({\n      date: record.date,\n      isGameReportShow: true,\n      nextLevelData: res.data\n    });\n  };\n}\n\nexport default MoreDetail;\n","import React, { Component } from \"react\";\nimport { Card, Table, Modal, message, Icon, Select } from \"antd\";\nimport LinkButton from \"../../../components/link-button/index\";\nimport {\n  dailyReport,\n  packageList,\n  dateReport,\n  gameReport\n} from \"../../../api/index\";\nimport MoreDetail from \"./details\";\nimport moment from \"moment\";\nimport MyDatePicker from \"../../../components/MyDatePicker\";\nimport DateGameReport from \"./dateGameReport\";\n\nclass DailyReport extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      packageList: [],\n      count: 0,\n      pageSize: 20,\n      reportTable: false,\n      isGameReportShow: false\n    };\n  }\n  getInitialData = async () => {\n    const res = await packageList();\n    // const result = await dailyReportInit(page, limit);\n    if (res.status === 0) {\n      this.setState({\n        // data: result.data,\n        packageList: res.data\n      });\n    }\n  };\n  componentDidMount() {\n    this.getInitialData();\n  }\n  render() {\n    const packageNode = this.state.packageList.map(item => {\n      return (\n        <Select.Option value={item.id} key={item.id}>\n          {item.name}\n        </Select.Option>\n      );\n    });\n    return (\n      <Card\n        title={\n          <div>\n            <div>\n              <MyDatePicker\n                handleValue={val => {\n                  let diffDays = moment(val[1]).diff(moment(val[0]), \"days\");\n                  if (diffDays > 7) {\n                    message.error(\"请选择时间范围小于7天\");\n                  } else {\n                    this.startTime = val[0];\n                    this.endTime = val[1];\n                  }\n                }}\n              />\n              &nbsp; &nbsp;\n              <Select\n                placeholder=\"请选择\"\n                style={{ width: 120 }}\n                onSelect={value => (this.package_id = value)}\n              >\n                {packageNode}\n              </Select>\n              &nbsp; &nbsp;\n              <LinkButton onClick={this.onSearchData} size=\"default\">\n                <Icon type=\"search\" />\n              </LinkButton>\n              &nbsp; &nbsp;\n            </div>\n          </div>\n        }\n      >\n        <div style={{ marginBottom: 20, backgroundColor: \"#ddd\" }}>\n          <span style={{ border: \"1px solid #ddd\" }}>\n            <b>默认所选品牌7天的统计数据</b>\n          </span>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <span style={{ border: \"1px solid #ddd\" }}>\n            <b>总流水=玩家赢额+(abs)玩家输额</b>\n          </span>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <span style={{ border: \"1px solid #ddd\" }}>\n            <b>盈亏比=(玩家输额(abs) - 玩家赢额) /(玩家输额(abs) + 玩家赢额)</b>\n          </span>\n        </div>\n        <Table\n          bordered\n          rowKey=\"package_id\"\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          scroll={{ x: 2500 }}\n        />\n        <Modal\n          title=\"按日期查看\"\n          width=\"80%\"\n          visible={this.state.reportTable}\n          onCancel={() => {\n            this.setState({ reportTable: false });\n          }}\n          footer={null}\n        >\n          <MoreDetail\n            reportData={this.reportData}\n            action={this.action}\n            package_id={this.package_id}\n            parse={this.parseGameData}\n          />\n        </Modal>\n        <Modal\n          title=\"游戏数据\"\n          width=\"80%\"\n          visible={this.state.isGameReportShow}\n          onCancel={() => {\n            this.setState({ isGameReportShow: false });\n          }}\n          footer={null}\n        >\n          <DateGameReport data={this.state.nextLevelData} />\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"品牌\",\n      dataIndex: \"package_nick\"\n    },\n    {\n      title: \"新增用户\",\n      dataIndex: \"regin_user_number\"\n    },\n    {\n      title: \"活跃用户\",\n      dataIndex: \"active_user_number\"\n    },\n    {\n      title: \"官方首充用户\",\n      dataIndex: \"first_pay_user_number\"\n    },\n    {\n      title: \"官方首充金额\",\n      dataIndex: \"first_pay_money_total\"\n    },\n    {\n      title: \"官方充值用户\",\n      dataIndex: \"pay_user_number\"\n    },\n    {\n      title: \"官方充值金额\",\n      dataIndex: \"pay_money_total\"\n    },\n    {\n      title: \"人工首充用户\",\n      dataIndex: \"first_pay_user_number_res\"\n    },\n    {\n      title: \"人工首充金额\",\n      dataIndex: \"first_pay_money_total_res\"\n    },\n    {\n      title: \"人工充值用户\",\n      dataIndex: \"pay_user_number_res\"\n    },\n    {\n      title: \"人工充值金额\",\n      dataIndex: \"pay_money_total_res\"\n    },\n    {\n      title: \"官方兑换用户\",\n      dataIndex: \"exchange_user_number\"\n    },\n    {\n      title: \"官方兑换金额\",\n      dataIndex: \"exchange_money_total\"\n    },\n    {\n      title: \"人工兑换用户\",\n      dataIndex: \"exchange_user_number_res\"\n    },\n    {\n      title: \"人工兑换金额\",\n      dataIndex: \"exchange_money_total_res\"\n    },\n    {\n      title: \"玩家总赢额\",\n      dataIndex: \"win_statement_total\"\n    },\n    {\n      title: \"玩家总输额\",\n      dataIndex: \"lose_statement_total\"\n    },\n    {\n      title: \"玩家总流水\",\n      dataIndex: \"statement_total\"\n    },\n    {\n      title: \"盈亏比\",\n      dataIndex: \"statement_ratio\"\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <LinkButton onClick={() => this.getDateReport(record)}>\n            日期\n          </LinkButton>\n          <LinkButton onClick={() => this.getGameReport(record)}>\n            游戏\n          </LinkButton>\n        </span>\n      )\n    }\n  ];\n  onSearchData = async () => {\n    if (!this.startTime || !this.package_id) {\n      message.info(\"请选择时间日期和品牌\");\n      return;\n    }\n    const res = await dailyReport(\n      1,\n      20,\n      this.package_id,\n      this.startTime,\n      this.endTime\n    );\n    const newRes = this.parseData(res);\n    this.setState({ data: newRes.data, count: newRes.count });\n  };\n  parseData = res => {\n    console.log(\"res:\", res);\n    var length = 0;\n    var format_data = [];\n    if (res.status === 0 && res.data) {\n      //用户  (e.active_user_number = e.login_user_number - e.regin_user_number),\n      if (res.data.user) {\n        res.data.user\n          .filter(e => e && e._id)\n          .map(\n            e => ((e.package_id = parseInt(e._id.package_id)), delete e._id)\n          );\n      }\n      //充提交易所\n      if (res.data.order) {\n        res.data.order\n          .filter(e => e && e._id)\n          .map(\n            e => (\n              (e.first_pay_user_number = e.first_pay_user.length),\n              (e.pay_user_number = e.pay_user.length),\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\n              (e.pay_user_number_res = e.pay_user_res.length),\n              (e.exchange_user_number = e.exchange_user.length),\n              (e.exchange_user_number_res = e.exchange_user_res.length),\n              (e.package_id = parseInt(e._id.package_id)),\n              delete e._id\n            )\n          );\n        // 合并\n        res.data.user.map(e =>\n          Object.assign(\n            e,\n            res.data.order.find(d => d.package_id === e.package_id)\n          )\n        );\n      }\n\n      //游戏\n      if (res.data.game) {\n        res.data.game\n          .filter(e => e && e._id)\n          .map(\n            e => (\n              (e.statement_ratio = (\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\n              ).toFixed(4)),\n              (e.win_statement_total =\n                Math.round(e.win_statement_total * 10000) / 10000),\n              (e.lose_statement_total =\n                Math.round(e.lose_statement_total * 10000) / 10000),\n              (e.statement_total =\n                Math.round(\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\n                    10000\n                ) / 10000),\n              (e.package_id = parseInt(e._id.package_id)),\n              delete e._id\n            )\n          );\n\n        // 合并\n        res.data.user.map(e =>\n          Object.assign(\n            e,\n            res.data.game.find(d => d.package_id === e.package_id)\n          )\n        );\n      }\n\n      length = res.data.user.length;\n      format_data = res.data.user;\n      console.log(\"res.data.user assign后\", res.data.user);\n    }\n\n    return {\n      code: res.code,\n      msg: res.msg,\n      count: length,\n      data: format_data\n    };\n  };\n  parseDateData = res => {\n    console.log(res);\n    var length = 0;\n    var format_data = [];\n    if (res.status === 0 && res.data) {\n      //用户 (e.active_user_number = e.login_user_number - e.regin_user_number),\n      if (res.data.user) {\n        res.data.user.map(e => ((e.date = e._id.create_time), delete e._id));\n      }\n      //充提交易所\n      if (res.data.order) {\n        //res.data.order.filter(e => (e && e._id)).map(e => ((e.exchange_money_total = Math.abs(e.exchange_money_total)), (e.date = e._id.create_time), delete e._id));\n        res.data.order\n          .filter(e => e && e._id)\n          .map(\n            e => (\n              (e.first_pay_user_number = e.first_pay_user.length),\n              (e.pay_user_number = e.pay_user.length),\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\n              (e.pay_user_number_res = e.pay_user_res.length),\n              (e.exchange_user_number = e.exchange_user.length),\n              (e.exchange_user_number_res = e.exchange_user_res.length),\n              (e.date = e._id.create_time),\n              delete e._id\n            )\n          );\n        // 合并\n        res.data.user.map(e =>\n          Object.assign(e, res.data.order.find(d => d.date === e.date))\n        );\n      }\n      //游戏\n      if (res.data.game) {\n        //四舍五入保留四位小数\n        res.data.game\n          .filter(e => e && e._id)\n          .map(\n            e => (\n              (e.statement_ratio = (\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\n              ).toFixed(4)),\n              (e.win_statement_total =\n                Math.round(e.win_statement_total * 10000) / 10000),\n              (e.lose_statement_total =\n                Math.round(e.lose_statement_total * 10000) / 10000),\n              (e.statement_total =\n                Math.round(\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\n                    10000\n                ) / 10000),\n              (e.date = e._id.create_time),\n              delete e._id\n            )\n          );\n\n        // 合并\n        res.data.user.map(e =>\n          Object.assign(e, res.data.game.find(d => d.date === e.date))\n        );\n      }\n\n      // 排序\n      res.data.user.sort(\n        (a, b) =>\n          parseInt(b.date.replace(/-/g, \"\")) -\n          parseInt(a.date.replace(/-/g, \"\"))\n      );\n      length = res.data.user.length;\n      format_data = res.data.user;\n      console.log(res.data.user);\n    }\n    return {\n      code: res.code,\n      msg: res.msg,\n      count: length,\n      data: format_data\n    };\n  };\n  parseGameData = res => {\n    console.log(res);\n    //总流水\n    if (res.status === 0 && res.data) {\n      res.data.map(\n        e => (\n          (e.statement_ratio = (\n            (Math.abs(e.lose_statement_total) - e.win_statement_total) /\n            (e.win_statement_total + Math.abs(e.lose_statement_total))\n          ).toFixed(4)),\n          (e.win_statement_total =\n            Math.round(e.win_statement_total * 10000) / 10000),\n          (e.lose_statement_total =\n            Math.round(e.lose_statement_total * 10000) / 10000),\n          (e.statement_total =\n            Math.round(\n              (e.win_statement_total + Math.abs(e.lose_statement_total)) * 10000\n            ) / 10000)\n        )\n      );\n    }\n  };\n  getDateReport = async record => {\n    const res = await dateReport(\n      1,\n      20,\n      record.package_id,\n      this.startTime,\n      this.endTime\n    );\n    const reportData = this.parseDateData(res);\n    this.reportData = reportData;\n    this.action = \"getDateReport\";\n    this.setState({ reportTable: true });\n  };\n  getGameReport = async record => {\n    const res = await gameReport(1, 20, this.package_id, record.date);\n    this.parseGameData(res);\n    this.setState({\n      date: record.date,\n      isGameReportShow: true,\n      nextLevelData: res.data\n    });\n  };\n}\n\nexport default DailyReport;\n","import React from \"react\";\nimport { Form, Input, Select, Button, message, Radio } from \"antd\";\nimport { editRule } from \"../../../api/index\";\nconst EditForm = props => {\n  const { getFieldDecorator } = props.form;\n  const data = props.data;\n  let handleEditSubmit = event => {\n    event.preventDefault();\n    props.form.validateFields(async (err, value) => {\n      if (!err) {\n        for (const key in value) {\n          if (value[key] === undefined) {\n            value[key] = \"\";\n          }\n        }\n        const res = await editRule(data.id, value);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          props.finished();\n          props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  return (\n    <Form labelCol={{ span: 4 }} labelAlign=\"left\" onSubmit={handleEditSubmit}>\n      <Form.Item label=\"父级权限\">\n        {getFieldDecorator(\"pid\", {\n          rules: [{ required: true, message: \"请选择权限\" }],\n          initialValue: data.pid\n        })(\n          <Select style={{ width: \"60%\" }}>\n            <Select.Option value={0}>一级权限</Select.Option>\n            {props.packageNode}\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item label=\"菜单名\">\n        {getFieldDecorator(\"name\", {\n          rules: [{ required: true, message: \"请输入菜单名\" }],\n          initialValue: data.name.replace(/&nbsp;/g, \"\")\n        })(<Input style={{ width: \"60%\" }} placeholder=\"菜单名\" />)}\n      </Form.Item>\n      <Form.Item label=\"模块名\">\n        {getFieldDecorator(\"module\", { initialValue: data.module })(\n          <Input style={{ width: \"60%\" }} placeholder=\"模块名\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"方法名\">\n        {getFieldDecorator(\"action\", { initialValue: data.action })(\n          <Input style={{ width: \"60%\" }} placeholder=\"方法名\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"模板路径\">\n        {getFieldDecorator(\"href\", { initialValue: data.href })(\n          <Input style={{ width: \"60%\" }} placeholder=\"模板路径\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"路由key\">\n        {getFieldDecorator(\"key\", { initialValue: data.router_key })(\n          <Input style={{ width: \"60%\" }} placeholder=\"路由key\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"icon样式\">\n        {getFieldDecorator(\"icon\", { initialValue: data.icon })(\n          <Input style={{ width: \"60%\" }} placeholder=\"icon样式\" />\n        )}\n      </Form.Item>\n      <Form.Item label=\"菜单排序\">\n        {getFieldDecorator(\"sort\", {\n          rules: [{ required: true, message: \"请输入排序值\" }],\n          initialValue: data.sort\n        })(<Input style={{ width: \"60%\" }} placeholder=\"菜单排序\" />)}\n      </Form.Item>\n      <Form.Item label=\"显示状态\">\n        {getFieldDecorator(\"status\", {\n          initialValue: data.status\n        })(\n          <Radio.Group>\n            <Radio value={1}>显示</Radio>\n            <Radio value={0}>不显示</Radio>\n          </Radio.Group>\n        )}\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          提交\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nconst WrappedEditForm = Form.create()(EditForm);\n\nexport default WrappedEditForm;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Table,\n  Modal,\n  message,\n  Icon,\n  Input,\n  Popconfirm,\n  Select,\n  Button,\n  Form\n} from \"antd\";\nimport { ruleList, addRule, ruleDel } from \"../../../api/index\";\nimport LinkButton from \"../../../components/link-button\";\nimport WrappedEditForm from \"./edit\";\n\nclass Rule extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      count: 0,\n      isEditFormShow: false\n    };\n  }\n  getInitialData = async () => {\n    const res = await ruleList();\n    if (res.status === 0) {\n      this.setState({\n        data: res.data,\n        count: res.count\n      });\n    } else {\n      message.error(res.msg);\n    }\n  };\n  componentDidMount() {\n    this.getInitialData();\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const packageNode = this.state.data.map(item => {\n      return (\n        <Select.Option value={item.id} key={item.name}>\n          {item.name.replace(/&nbsp;/g, \"-\")}\n        </Select.Option>\n      );\n    });\n    return (\n      <Card\n        title={\n          <div>\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n              <Form.Item>\n                {getFieldDecorator(\"pid\", {\n                  rules: [{ required: true, message: \"请选择权限\" }],\n                  initialValue: \"0\"\n                })(\n                  <Select style={{ width: 200 }}>\n                    <Select.Option value=\"0\">一级权限</Select.Option>\n                    {packageNode}\n                  </Select>\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"name\", {\n                  rules: [{ required: true, message: \"请输入菜单名\" }]\n                })(<Input style={{ width: 120 }} placeholder=\"菜单名\" />)}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"module\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"模块名\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"action\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"方法名\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"href\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"模板路径\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"key\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"路由key\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"icon\", {})(\n                  <Input style={{ width: 120 }} placeholder=\"icon样式\" />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"sort\", {\n                  rules: [{ required: true, message: \"请输入排序值\" }]\n                })(<Input style={{ width: 120 }} placeholder=\"菜单排序\" />)}\n              </Form.Item>\n              <Form.Item>\n                <Button\n                 size='default' \n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                >\n                  增加\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        }\n        extra={\n          <LinkButton onClick={() => window.location.reload()} size='default'>\n            <Icon type=\"reload\" />\n          </LinkButton>\n        }\n      >\n        <Table\n          bordered\n          rowKey={(record, index) => `${index}`}\n          dataSource={this.state.data}\n          columns={this.initColumns()}\n          size=\"small\"\n          pagination={{\n            defaultPageSize: 20,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) => `共${total}条`,\n            defaultCurrent: 1,\n            total: this.state.count,\n            onChange: (page, pageSize) => {\n              this.getInitialData(page, pageSize);\n            },\n            onShowSizeChange: (current, size) => {\n              this.getInitialData(current, size);\n            }\n          }}\n        />\n        <Modal\n          title=\"编辑\"\n          visible={this.state.isEditFormShow}\n          onCancel={() => {\n            this.setState({ isEditFormShow: false });\n          }}\n          footer={null}\n        >\n          <WrappedEditForm\n            finished={() => {\n              this.getInitialData();\n              this.setState({ isEditFormShow: false });\n            }}\n            packageNode={packageNode}\n            data={this.editDataRecord}\n          />\n        </Modal>\n      </Card>\n    );\n  }\n  initColumns = () => [\n    {\n      title: \"菜单名\",\n      dataIndex: \"name\",\n      render: (text, record, index) => (\n        <span>{record.name.replace(/&nbsp;/g, \"-\")}</span>\n      )\n    },\n    {\n      title: \"模块名\",\n      dataIndex: \"module\"\n    },\n    {\n      title: \"方法名\",\n      dataIndex: \"action\"\n    },\n    {\n      title: \"模板路径\",\n      dataIndex: \"href\"\n    },\n    {\n      title: \"路由key\",\n      dataIndex: \"router_key\"\n    },\n    {\n      title: \"icon样式\",\n      dataIndex: \"icon\"\n    },\n    {\n      title: \"显示\",\n      dataIndex: \"status\"\n    },\n    {\n      title: \"菜单排序\",\n      dataIndex: \"sort\"\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"\",\n      render: (text, record, index) => (\n        <span>\n          <Button type=\"primary\" onClick={() => this.edit(record)} size=\"small\">\n            编辑\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Popconfirm\n            title=\"确定要删除吗?\"\n            onConfirm={() => this.onDelete(record)}\n            okText=\"删除\"\n            cancelText=\"取消\"\n          >\n            <Button type=\"danger\" size=\"small\">\n              删除\n            </Button>\n          </Popconfirm>\n        </span>\n      )\n    }\n  ];\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, value) => {\n      if (!err) {\n        for (const key in value) {\n          if (value[key] === undefined) {\n            value[key] = \"\";\n          }\n        }\n        const res = await addRule(value);\n        if (res.status === 0) {\n          message.success(\"提交成功\");\n          this.getInitialData();\n          this.props.form.resetFields();\n        } else {\n          message.error(\"出错了：\" + res.msg);\n        }\n      }\n    });\n  };\n  onDelete = async record => {\n    let res = await ruleDel(record.id);\n    if (res.status === 0) {\n      message.success(\"删除成功\");\n      this.getInitialData();\n    } else {\n      message.error(\"出错了：\" + res.msg);\n    }\n  };\n  edit = async record => {\n    this.editDataRecord = record;\n    this.setState({\n      isEditFormShow: true\n    });\n  };\n}\nconst RuleManage = Form.create()(Rule);\nexport default RuleManage;\n","import React, { Component } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { createHashHistory } from \"history\";\nimport { reqUsers } from \"../../api/index\";\nimport { Layout } from \"antd\";\n\nimport LeftNav from \"../../components/left-nav\";\nimport Header from \"../../components/header\";\nimport Home from \"../home/home\";\nimport User from \"../user/user\";\nimport Admin_manage_list from \"../admin_manage/admin_manage_list/admin_manage_list\";\nimport Role from \"../admin_manage/role/role\";\nimport Order_list from \"../charge/order_list/order_list\";\nimport Channel_list from \"../charge/channel_list/channel_list\";\nimport Bankcard_list from \"../charge/bankcard_list/bankcard_list\";\nimport Recharge_order from \"../charge/recharge_order/recharge_order\";\nimport Recharge_channel from \"../charge/recharge_channel/recharge_channel\";\nimport NoticeList from \"../customer_service/notice_list\";\nimport Customer_list from \"../customer_service/customer_list\";\nimport Withdraw_list from \"../withdraw/withdraw_list\";\nimport WrappedConfig from \"../gameSetting/config\";\nimport Tasks from \"../messageCenter/tasks\";\nimport AccountList from \"../trade/accountList\";\nimport ApplyHistory from \"../trade/applyHistory\";\nimport TradeOrder from \"../trade/tradeOrder\";\nimport ActivityList from \"../activity/activityList\";\nimport ActivityRecieve from \"../activity/recieve\";\nimport GiftVoucher from \"../activity/giftVoucher\";\nimport GiftList from \"../gift/giftList\";\nimport GiftSetting from \"../gift/giftSetting\";\nimport AI from \"../AI/robot\";\n// import Withdraw_list from \"../withdraw/withdraw_list\";\n\nimport Daiti_list from \"../withdraw/Daiti_list\";\nimport Channel from \"../withdraw/Channel\";\nimport NotFound from \"../not-found/not-found\";\nimport DailyReport from \"../list/DailyReport\";\nimport RuleManage from \"../admin_manage/ruleManage\";\nimport { Provider, KeepAlive } from \"react-keep-alive\";\nconst { Sider, Content } = Layout;\n\nconst history = createHashHistory();\n/*\n后台管理的路由组件\n */\nexport default class Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //header和left-nav通过共同父组件传值\n  // onRef = ref => {\n  //   this.child1 = ref;\n  // };\n  render() {\n    const token = localStorage.token;\n    // 如果内存没有存储token ==> 当前没有登陆\n    if (!token) {\n      return <Redirect to=\"/login\" />;\n    }\n    //如果内存中存储的token超过24小时，需要验证token，如果已经延期更新时间戳，如果未延期，更新token\n    const timeStamp = new Date().getTime();\n    const tokenTimeStamp = localStorage.tokenTimeStamp;\n    let time = timeStamp - tokenTimeStamp;\n    if (time > 24 * 3600 * 1000) {\n      const res = reqUsers(1, 20);\n      if (res.status !== 0) {\n        localStorage.removeItem(\"menuList\");\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"name\");\n        localStorage.removeItem(\"tokenTimeStamp\");\n        return <Redirect to=\"/login\" />;\n      }\n    }\n    return (\n      <Layout style={{ minHeight: \"100%\" }}>\n        <Sider>\n          <LeftNav\n            onClick={tabConfig => {\n              this.child1.add && this.child1.add(tabConfig);\n            }}\n          />\n        </Sider>\n        <Layout>\n          <Header onRef={ref => (this.child1 = ref)} history={history}>\n            Header\n          </Header>\n          <Content style={{ margin: 5, backgroundColor: \"#fff\" }}>\n            <Provider>\n              <div style={{ height: \"100%\" }}>\n                <Switch>\n                  <Redirect from=\"/\" exact to=\"/home\" />\n                  <Route path=\"/home\" exact component={Home} />\n                  <Route path=\"/user/user-list\" exact>\n                    <KeepAlive name=\"User\">\n                      <User />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/customer_service/notice_list\">\n                    <KeepAlive name=\"Notice_list\">\n                      <NoticeList />\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/customer_service/customer_list\"\n                    exact\n                    component={Customer_list}\n                  >\n                    <KeepAlive name=\"Customer_list\">\n                      <Customer_list></Customer_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/admin_manage/list\"\n                    exact\n                    component={Admin_manage_list}\n                  >\n                    <KeepAlive name=\"Admin_manage_list\">\n                      <Admin_manage_list></Admin_manage_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/admin_manage/rule\" exact component={RuleManage}>\n                    <KeepAlive name=\"RuleManage\">\n                      <RuleManage></RuleManage>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/admin_manage/role\" exact component={Role}>\n                    <KeepAlive name=\"Role\">\n                      <Role></Role>\n                    </KeepAlive>\n                  </Route>\n\n                  <Route path=\"/list/daily-report\" exact>\n                    <KeepAlive name=\"DailyReport\">\n                      <DailyReport></DailyReport>\n                    </KeepAlive>\n                  </Route>\n\n                  <Route path=\"/gameSetting/config\" exact>\n                    <KeepAlive name=\"WrappedConfig\">\n                      <WrappedConfig></WrappedConfig>\n                    </KeepAlive>\n                  </Route>\n\n                  <Route path=\"/messageCenter/tasks\" exact>\n                    <KeepAlive name=\"Tasks\">\n                      <Tasks></Tasks>\n                    </KeepAlive>\n                  </Route>\n\n                  <Route path=\"/trade/accountList\" exact>\n                    <KeepAlive name=\"AccountList\">\n                      <AccountList></AccountList>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/trade/applyHistory\" exact>\n                    <KeepAlive name=\"ApplyHistory\">\n                      <ApplyHistory></ApplyHistory>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/trade/tradeOrder\" exact>\n                    <KeepAlive name=\"TradeOrder\">\n                      <TradeOrder></TradeOrder>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/activity/list\" exact>\n                    <KeepAlive name=\"ActivityList\">\n                      <ActivityList />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/activity/recieve\" exact>\n                    <KeepAlive name=\"ActivityRecieve\">\n                      <ActivityRecieve />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/activity/giftVoucher\" exact>\n                    <KeepAlive name=\"giftVoucher\">\n                      <GiftVoucher />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/charge/order_list\" exact component={Order_list}>\n                    <KeepAlive name=\"Order_list\">\n                      <Order_list></Order_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/charge/channel-list\"\n                    exact\n                    component={Channel_list}\n                  >\n                    <KeepAlive name=\"Channel_list\">\n                      <Channel_list></Channel_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/charge/bankcard-list\"\n                    exact\n                    component={Bankcard_list}\n                  >\n                    <KeepAlive name=\"Bankcard_list\">\n                      <Bankcard_list></Bankcard_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/artificialcharge/order\"\n                    exact\n                    component={Recharge_order}\n                  >\n                    <KeepAlive name=\"Recharge_order\">\n                      <Recharge_order></Recharge_order>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/charge/recharge_channel\"\n                    exact\n                    component={Recharge_channel}\n                  >\n                    <KeepAlive name=\"Recharge_channel\">\n                      <Recharge_channel></Recharge_channel>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/withdraw/withdraw_list\"\n                    exact\n                    component={Withdraw_list}\n                  >\n                    <KeepAlive name=\"Withdraw_list\">\n                      <Withdraw_list></Withdraw_list>\n                    </KeepAlive>\n                  </Route>\n                  <Route\n                    path=\"/withdraw/daiti_list\"\n                    exact\n                    component={Daiti_list}\n                  >\n                    <KeepAlive name=\"Daiti_list\">\n                      <Daiti_list />\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/withdraw/channel\" exact>\n                    <KeepAlive name=\"Channel\">\n                      <Channel></Channel>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/gift/list\" exact>\n                    <KeepAlive name=\"GiftList\">\n                      <GiftList></GiftList>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/gift/setting\" exact>\n                    <KeepAlive name=\"GiftSetting\">\n                      <GiftSetting></GiftSetting>\n                    </KeepAlive>\n                  </Route>\n                  <Route path=\"/AI/robot\" exact>\n                    <KeepAlive name=\"AI\">\n                      <AI></AI>\n                    </KeepAlive>\n                  </Route>\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n            </Provider>\n          </Content>\n          {/* <Footer style={{ textAlign: \"center\", color: \"#cccccc\", padding: 5 }}>\n            推荐使用谷歌浏览器，可以获得更佳页面操作体验\n          </Footer> */}\n        </Layout>\n      </Layout>\n    );\n  }\n}\n","const defaultState = {\n  inputValue: \"\"\n};\nexport default (state = defaultState, action) => {\n  // console.log(state, action);\n  let newState = JSON.parse(JSON.stringify(state));\n  switch (action.type) {\n    case \"change_input\":\n      newState.inputValue = action.value;\n      break;\n    case \"resetPassword\":\n      newState.inputValue = \"\";\n      break;\n    default:\n      break;\n  }\n  return newState;\n};\n","import { createStore } from \"redux\";\nimport reducer from \"./reducer.js\";\nconst store = createStore(reducer);\nexport default store;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport Login from \"./pages/login/login\";\nimport Admin from \"./pages/admin/admin\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n\n//应用的根组件\n \nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            {/*只匹配其中一个*/}\n            <Route path=\"/login\" component={Login}></Route>\n            <Route path=\"/\" component={Admin}></Route>\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n","/*\n进行local数据存储管理的工具模块\n */\nimport store from 'store'\nconst USER = 'user_key'\nexport default {\n  /*\n  保存user\n   */\n  saveUser (user) {\n    // localStorage.setItem(USER_TOKEN, JSON.stringify(user))\n    store.set(USER, user)\n  },\n\n  /*\n  读取user\n   */\n  getUser () {\n    // return JSON.parse(localStorage.getItem(USER_TOKEN) || '{}')\n    return store.get(USER) || {}\n  },\n\n  /*\n  删除user\n   */\n  removeUser () {\n    localStorage.removeItem(USER)\n    store.remove(USER)\n  }\n}","/*\n入口js\n */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport storageUtils from './utils/storageUtils'\nimport memoryUtils from './utils/memoryUtils'\n\n\n\nimport { Router } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\nimport {Modal} from 'antd';\n\n//在react-router4中监听路由变化\nconst history = createBrowserHistory()\nhistory.listen((location, action) => {\n    // location is an object like window.location\n    console.log('history',action, location.pathname, location.state)\n    //每次变化执行\n    Modal.destroyAll();\n    //使用 Modal.destroyAll() 可以销毁弹出的确认窗（即 Modal.info、Modal.success、Modal.error、Modal.warning、Modal.confirm）。通常用于路由监听当中，处理路由前进、后退不能销毁确认对话框的问题，而不用各处去使用实例的返回值进行关闭（modal.destroy() 适用于主动关闭，而不是路由这样被动关闭）\n    //注意无法销毁<Modal></Modal>创建的模态框\n  })\n\n// 读取local中保存user, 保存到内存中\nconst user = storageUtils.getUser()\nmemoryUtils.user = user\n\n\n// 将App组件标签渲染到index页面的div上\nReactDOM.render(<Router history={history}>\n    <App/>\n  </Router>, document.getElementById('root'))"],"sourceRoot":""}