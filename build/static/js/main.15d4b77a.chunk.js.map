{"version":3,"sources":["api/ajax.js","utils/storageUtils.js","api/index.js","pages/login/login.jsx","components/left-nav/index.jsx","components/link-button/index.jsx","utils/memoryUtils.js","components/header/index.jsx","pages/home/home.jsx","utils/dateUtils.js","pages/user/user-nick.jsx","pages/user/gold_details.jsx","pages/user/user.jsx","pages/admin_manage/admin_manage_list/addData.jsx","pages/admin_manage/admin_manage_list/admin_manage_list.jsx","pages/admin_manage/role/addData.jsx","pages/admin_manage/role/role.jsx","pages/charge/order_list/order_list.jsx","pages/charge/channel_list/addorEdit.jsx","pages/charge/channel_list/channel_list.jsx","pages/charge/bankcard_list/addorEdit.jsx","pages/charge/bankcard_list/bankcard_list.jsx","pages/charge/recharge_order/recharge_order.jsx","pages/charge/recharge_channel/recharge_channel.jsx","pages/customer_service/notice_list/addorEdit.jsx","pages/customer_service/notice_list/index.jsx","pages/customer_service/customer_list/addorEdit.jsx","pages/customer_service/customer_list/index.jsx","pages/withdraw/withdraw_list/details.jsx","pages/withdraw/withdraw_list/index.jsx","pages/withdraw/Daiti_list/details.jsx","pages/withdraw/Daiti_list/edit.jsx","pages/withdraw/Daiti_list/index.jsx","pages/withdraw/Channel/index.jsx","pages/not-found/not-found.jsx","pages/list/DailyReport/details.jsx","pages/list/DailyReport/index.jsx","pages/admin/admin.jsx","store/reducer.js","store/index.js","App.js","index.js"],"names":["ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","promise","axios","get","params","defaults","headers","post","transformRequest","ret","it","encodeURIComponent","then","response","catch","error","message","USER","storageUtils","saveUser","user","store","set","getUser","removeUser","localStorage","removeItem","remove","BASE","process","token","reqLogin","username","password","authcode","reqAuthCode","navList","reqUsers","page","limit","setGameUserNickName","id","game_nick","changeGold","record","value","obj","str","gold","desc","proxy_user_id","package_id","Object","objectSpread","task_type","searchData","start","end","param","key","val","reqLoadGold","userDetail","bindInfo","user_id","saveUserBlack","action","createTask","resetpwd","params[id]","params[account_pass]","reqAdminList","searchAdminData","name","roleList","packageList","addUser","formValue","forEach","element","newobj","status","userStatus","group_id","userGroup","source","proxy","user_money","loadGold","pass","repass","confirmPssword","editUser","resetAuthCode","getRoleList","addRole","rules","editRole","role_name","role_id","getList","addNotice","formData","updateNotice","delNotice","customerList","saveCustomerService","dailyReport","dateReport","group_by","reqOrder_list","start_time","end_time","order_status","inputParam","paramKey","order_id","time_type","downloadList","window","open","getChannelList","addChannel","editPayChannel","bankList","saveBankCard","deleteBankCard","rechargeOrder","getChannel","getChannelInfo","channel_id","editChannelInfo","pay_code","withDraw","flag","filed","reviewInfo","remarkInfo","downloadWithdrawList","withDrawRemark","temarks","remark_type","getConfigList","conf_key","get_val","saveWithDrawChannel","alipay[name]","alipay[withdraw_type]","bankcard[name]","bankcard[withdraw_type]","Item","es_form","Login","getMenuList","_callee","result","regenerator_default","a","wrap","_context","prev","next","sent","children","item","title","slice","setItem","JSON","stringify","setTimeout","_this","props","history","replace","stop","handleSubmit","event","preventDefault","form","validateFields","_ref2","asyncToGenerator","mark","_callee2","err","values","_context2","success","msg","console","log","_x","_x2","apply","this","handleClick","_ref3","_callee3","_context3","modal","info","content","react_default","createElement","src","qrurl","alt","_x3","_x4","validatePwd","rule","callback","test","_id","react_router","to","getFieldDecorator","className","onSubmit","required","whitespace","min","max","pattern","initialValue","input","prefix","icon","style","color","placeholder","validator","marginTop","onClick","es_button","htmlType","Component","WrapLogin","create","SubMenu","menu","LeftNav","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","getMenuNodes","menuList","path","location","pathname","reduce","pre","find","cItem","indexOf","openKey","push","cpre","ele","react_router_dom","state","parse","getItem","menuNodes","justifyContent","mode","theme","selectedKeys","defaultOpenKeys","withRouter","LinkButton","assign","memoryUtils","TabPane","Header","onChange","activeKey","onEdit","targetKey","add","tabConfig","oldKey","panes","isTabExist","concat","newTabIndex","lastIndex","pane","i","filter","logout","confirm","onOk","assertThisInitialized","closable","clearInterval","intervalId","onRef","tabs","hideAdd","map","tab","forceRender","Home","formateDate","time","timeStamp","parseInt","moment","format","FormItem","NormalLoginForm","_this$props","isNickModal","goldRecord","display","label","TextArea","autosize","minRows","maxRows","WrappedNormalLoginForm","GoldDetail","initColumns","isBindInfo","dataIndex","sorter","b","total_balance","_this$props$GoldDetai","GoldDetailRecord","count","table","bordered","rowKey","dataSource","columns","size","RangePicker","Option","User","pageSize","isNickShow","isGoldShow","isGoldDetailShow","isBindInfoShow","isResetPwdShow","startTime","endTime","loading","fixed","width","onCell","rowIndex","onDoubleClick","onContextMenu","onMouseEnter","target","cursor","onMouseLeave","game_gold","render","regin_time","login_time","getGoldDetail","popconfirm","onConfirm","onCancel","okText","cancelText","resetPwd","getLoadGold","getUsers","_ref","_result$data","game_user","proxy_user","proxy_nick","proxy_pid","changeNickName","refs","getFormValue","index","resetFields","res","_x5","_x6","dataPickerOnChange","date","dateString","onSearchData","_callee4","_result$data2","_context4","_ref5","_callee5","_context5","_x7","_ref6","_callee6","_context6","t0","_x8","_x9","_ref7","_callee7","isAdd","_context7","_x10","_x11","resetPwdId","handleResetpwd","_callee8","_context8","handleChange","bind","_this2","_this$state","config_provider","locale","zh_CN","es_select","defaultValue","user_Option","ref","Input","extra","handleReset","card","pagination","defaultPageSize","showSizeChanger","showQuickJumper","defaultCurrent","total","onShowSizeChange","current","scroll","x","y","visible","user_nick","footer","gold_details","e","AddDataForm","checkboxOnChange","checkedList","indeterminate","checkAll","onCheckAllChange","list","checked","setFieldsValue","isEdit","editDataRecord","refreshPage","cancel","isBan","group","split","Number","_this$props$form","getFieldValue","optionList","labelCol","span","labelAlign","es_radio","Group","es_checkbox","options","use_balance","WrappedAddDataForm","Admin_manage_list","text","wordWrap","wordBreak","align","edit","addData","isAddDataShow","_ref4","isEditDataShow","_onOk","TreeNode","getTreeNodes","onSelect","node","expandedKeys","isLeaf","expanded","k","eventKey","onCheck","checkedKeys","onExpand","defaultCheckedKeys","treeData","tree","checkable","description","Role","role_addData","Order_list","download","word","replace_id","amount","arrival_amount","created_at","arrival_at","order_list_RangePicker","float","wrapperCol","nick_name","pay_type","min_amount","max_amount","span_amount","seed","rate","sort","Channel_list","addorEdit","card_name","bank_name","card_num","offset","Bankcard_list","delete","bankcard_list_addorEdit","Recharge_order","recharge_order_RangePicker","Recharge_channel","expandedRowRender","indent","childData","onExpandRow","keys","expandedRowKeys","recordId","handleEditData","expandRowByClick","getPackageList","arr","$oid","package_ids","is_open","words","date_picker","Notice_list","onDelete","join","popover","trigger","overlayStyle","textOverflow","whiteSpace","overflow","notice_list_addorEdit","Customer_list","customer_list_addorEdit","detailRecord","Withdraw_list","getDetail","user_remark","t1","isDetailShow","withdraw_list_RangePicker","details","submitRemark","margin","onBlur","userRemark","operatorRemark","Daiti","isEditShow","Daiti_list_RangePicker","Daiti_list_details","edit_AddDataForm","Channel","initialData","conf_val","_this$initialData","bankcard","channel","is_close","alipay","artificial","reload","valuePropName","es_switch","checkedChildren","unCheckedChildren","divider","channel_name","marginRight","WrappedChannel","NotFound","row","col","MoreDetail","getGameReport","footerData","reportData","border","showSummary","DailyReport","getInitialData","newRes","parseData","format_data","order","first_pay_user_number","first_pay_user","pay_user_number","pay_user","first_pay_user_number_res","first_pay_user_res","pay_user_number_res","pay_user_res","exchange_user_number","exchange_user","exchange_user_number_res","exchange_user_res","d","game","statement_ratio","Math","abs","lose_statement_total","win_statement_total","toFixed","round","statement_total","code","parseDateData","create_time","getDateReport","reportTable","packageNode","DailyReport_RangePicker","marginBottom","backgroundColor","DailyReport_details","Sider","Content","Admin","layout","minHeight","components_left_nav","child1","components_header","Provider","height","from","exact","component","KeepAlive","home_Home","user_User","notice_list","customer_list","admin_manage_list","role","list_DailyReport","order_list","channel_list","bankcard_list","recharge_order","recharge_channel","withdraw_list","Daiti_list","withdraw_Channel","defaultState","inputValue","createStore","newState","App","es","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.15d4b77a.chunk.js","sourcesContent":["/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\n//设置axios为form-data\r\n\r\nexport default function ajax(url, data = {}, type = \"GET\") {\r\n  // axios.interceptors.request.use((config) => {\r\n  //   if (['/user/login', '/user/register'].indexOf(config.url) === -1) {\r\n  //     const token = localStorage.getItem('token')\r\n  //     if (token) {\r\n  //       config.headers.Authorization = token\r\n  //     }\r\n  //   }\r\n  //   return config\r\n  // })\r\n  return new Promise((resolve, reject) => {\r\n    let promise;\r\n    // 1. 执行异步ajax请求\r\n    if (type === \"GET\") {\r\n      // 发GET请求\r\n      promise = axios.get(url, {\r\n        // 配置对象\r\n        params: data // 指定请求参数\r\n      });\r\n    } else {\r\n      // 发POST请求\r\n      axios.defaults.headers.post[\"Content-Type\"] =\r\n        \"application/x-www-form-urlencoded\";\r\n      axios.defaults.transformRequest = [\r\n        function(data) {\r\n          let ret = \"\";\r\n          for (let it in data) {\r\n            ret +=\r\n              encodeURIComponent(it) + \"=\" + encodeURIComponent(data[it]) + \"&\";\r\n          }\r\n          return ret;\r\n        }\r\n      ];\r\n      promise = axios.post(url, data);\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise\r\n      .then(response => {\r\n        resolve(response.data);\r\n        // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n      })\r\n      .catch(error => {\r\n        // reject(error)\r\n        message.error(\"请求出错了: \" + error.message);\r\n      });\r\n  });\r\n}","/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_TOKEN, JSON.stringify(user))\r\n    store.set(USER, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_TOKEN) || '{}')\r\n    return store.get(USER) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    localStorage.removeItem(USER)\r\n    store.remove(USER)\r\n  }\r\n}","import ajax from \"./ajax\";\r\nimport storageUtils from \"../utils/storageUtils\";\r\n\r\nconst BASE = process.env.REACT_APP_HOST;\r\nconst token = storageUtils.getUser().token;\r\n\r\n// 登陆\r\nexport const reqLogin = (username, password, authcode) =>\r\n  ajax(BASE + \"/login/login\", { username, password, authcode }, \"POST\");\r\n\r\n// 获取authCode\r\nexport const reqAuthCode = (username, password) =>\r\n  ajax(BASE + \"/login/authCode\", { username, password }, \"POST\");\r\n\r\n// 获取菜单\r\nexport const navList = () => {\r\n  const token = storageUtils.getUser().token;\r\n  return ajax(BASE + \"/acl/navList\", { token }, \"POST\");\r\n};\r\n//用户列表\r\nexport const reqUsers = (page, limit) =>\r\n  ajax(BASE + \"/user/index\", { token, page, limit }, \"POST\");\r\nexport const setGameUserNickName = (id, game_nick) =>\r\n  ajax(BASE + \"/user/setGameUserNickName\", { token, id, game_nick }, \"POST\");\r\nexport const changeGold = (record, value) => {\r\n  let obj = {};\r\n  let str = \"params[user_id]\";\r\n  obj[str] = record.id;\r\n  str = \"params[amount]\";\r\n  obj[str] = value.gold;\r\n  str = \"params[reason]\";\r\n  obj[str] = value.desc;\r\n  str = \"params[user_name]\";\r\n  obj[str] = record.game_nick;\r\n  str = \"params[proxy_user_id]\";\r\n  obj[str] = record.proxy_user_id;\r\n  str = \"params[package_id]\";\r\n  obj[str] = record.package_id;\r\n  return ajax(\r\n    BASE + \"/user/changeGold\",\r\n    { token, task_type: 0, ...obj },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const searchData = (page, limit, start, end, param) => {\r\n  let key = param.key;\r\n  let obj = { page, limit, token, start, end };\r\n  obj[key] = param.val ? param.val : \"\";\r\n  return ajax(BASE + \"/user/index\", obj, \"POST\");\r\n};\r\nexport const reqLoadGold = id => {\r\n  return ajax(\r\n    BASE + \"/user/getGameUser\",\r\n    {\r\n      page: 1,\r\n      limit: 10,\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const userDetail = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/user/userDetail\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const bindInfo = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/user/bindInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      user_id: id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveUserBlack = (user_id, action) => {\r\n  return ajax(\r\n    BASE + \"/trade/saveUserBlack\",\r\n    {\r\n      token,\r\n      type: 1,\r\n      user_id,\r\n      action\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const createTask = (user_id, resetpwd) => {\r\n  return ajax(\r\n    BASE + \"/tasks/createTask\",\r\n    {\r\n      token,\r\n      task_type: 2,\r\n      \"params[id]\": user_id,\r\n      \"params[account_pass]\": resetpwd\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//后台管理-账户列表\r\nexport const reqAdminList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/acl/index\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const searchAdminData = name => {\r\n  return ajax(\r\n    BASE + \"/acl/index\",\r\n    {\r\n      page: 1,\r\n      limit: 20,\r\n      token,\r\n      name\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const roleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/roleList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const packageList = () => {\r\n  return ajax(\r\n    BASE + \"/user/packageList\",\r\n    {\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addUser = formValue => {\r\n  let obj = {};\r\n  formValue.packageList.forEach(element => {\r\n    let str = \"group[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    username: formValue.username,\r\n    status: formValue.userStatus,\r\n    group_id: formValue.userGroup,\r\n    source: formValue.proxy ? formValue.proxy : [],\r\n    ...obj,\r\n    user_money: formValue.loadGold,\r\n    pass: formValue.password,\r\n    repass: formValue.confirmPssword,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/addUser\", newobj, \"POST\");\r\n};\r\nexport const editUser = (formValue, id) => {\r\n  let obj = {};\r\n  formValue.packageList.forEach(element => {\r\n    let str = \"group[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    id,\r\n    username: formValue.username,\r\n    status: formValue.userStatus,\r\n    group_id: formValue.userGroup,\r\n    source: formValue.proxy ? formValue.proxy : [],\r\n    ...obj,\r\n    user_money: formValue.loadGold,\r\n    pass: formValue.password ? formValue.password : [],\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/editUser\", newobj, \"POST\");\r\n};\r\nexport const resetAuthCode = id => {\r\n  return ajax(\r\n    BASE + \"/acl/resetAuthCode\",\r\n    {\r\n      id,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\n//后台管理-角色管理\r\nexport const getRoleList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/acl/roleList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const getRuleList = () => {\r\n  return ajax(\r\n    BASE + \"/acl/ruleList\",\r\n    {\r\n      page: 1,\r\n      limit: 10,\r\n      token,\r\n      flag: 1\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const addRole = (name, rules, desc) => {\r\n  let obj = {};\r\n  rules.forEach(element => {\r\n    let str = \"rules[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    name,\r\n    ...obj,\r\n    desc,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/addRole\", newobj, \"POST\");\r\n};\r\nexport const editRole = (name, rules, desc, id) => {\r\n  let obj = {};\r\n  rules.forEach(element => {\r\n    let str = \"rules[\" + element + \"]\";\r\n    obj[str] = element;\r\n  });\r\n  let newobj = {\r\n    role_name: name,\r\n    role_id: id,\r\n    ...obj,\r\n    desc,\r\n    token\r\n  };\r\n  return ajax(BASE + \"/acl/editRole\", newobj, \"POST\");\r\n};\r\n//客服-公告设置\r\nexport const getList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/notice/getList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addNotice = formData => {\r\n  return ajax(\r\n    BASE + \"/notice/addNotice\",\r\n    {\r\n      token,\r\n      ...formData\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const updateNotice = (formData, id) => {\r\n  return ajax(\r\n    BASE + \"/notice/updateNotice\",\r\n    {\r\n      token,\r\n      id,\r\n      ...formData\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const delNotice = id => {\r\n  return ajax(\r\n    BASE + \"/notice/delNotice\",\r\n    {\r\n      token,\r\n      id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//客服-代充账号\r\nexport const customerList = (page, limit, user_id) => {\r\n  return ajax(\r\n    BASE + \"/customer/customerList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      user_id: user_id ? user_id : \"\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveCustomerService = (formData, action, user_id) => {\r\n  if (user_id) {\r\n    formData.user_id = user_id;\r\n  }\r\n  return ajax(\r\n    BASE + \"/customer/saveCustomerService\",\r\n    {\r\n      token,\r\n      ...formData,\r\n      action\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//风控-日常运营\r\nexport const dailyReport = (page, limit, package_id, start = \"\", end = \"\") => {\r\n  return ajax(\r\n    BASE + \"/report/dailyReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      start,\r\n      end\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const dateReport = (page, limit, package_id, start = \"\", end = \"\") => {\r\n  return ajax(\r\n    BASE + \"/report/dateReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      start,\r\n      end,\r\n      group_by: \"date\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const gameReport = (page, limit, package_id, start = \"\", end = \"\") => {\r\n  return ajax(\r\n    BASE + \"/report/dateReport\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      package_id,\r\n      start,\r\n      end,\r\n      group_by: \"date\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\n//充值-充值订单\r\nexport const reqOrder_list = (page, limit, searchData) => {\r\n  if (searchData) {\r\n    let {\r\n      start_time,\r\n      end_time,\r\n      order_status,\r\n      type,\r\n      inputParam,\r\n      paramKey,\r\n      order_id,\r\n      user_id\r\n    } = searchData;\r\n    //处理输入关键字和选择关键字，组合成传输参数\r\n    let obj = {};\r\n    if (paramKey === \"1\" || paramKey === \"2\") {\r\n      obj.time_type = paramKey;\r\n    } else {\r\n      let str = paramKey;\r\n      obj[str] = inputParam;\r\n    }\r\n    return ajax(\r\n      BASE + \"/order/recharge\",\r\n      {\r\n        page,\r\n        limit,\r\n        token,\r\n        start_time,\r\n        end_time,\r\n        order_status,\r\n        type,\r\n        order_id,\r\n        user_id,\r\n        ...obj\r\n      },\r\n      \"POST\"\r\n    );\r\n  } else {\r\n    return ajax(\r\n      BASE + \"/order/recharge\",\r\n      {\r\n        page,\r\n        limit,\r\n        token\r\n      },\r\n      \"POST\"\r\n    );\r\n  }\r\n};\r\nexport const downloadList = searchData => {\r\n  let {\r\n    start_time,\r\n    end_time,\r\n    order_status,\r\n    type,\r\n    inputParam,\r\n    paramKey\r\n  } = searchData;\r\n  if (!paramKey || paramKey === \"\") {\r\n    paramKey = 0;\r\n  }\r\n  let params =\r\n    \"token=\" +\r\n    token +\r\n    \"&filed=\" +\r\n    paramKey +\r\n    \"&keyword=\" +\r\n    inputParam +\r\n    \"&start_time=\" +\r\n    start_time +\r\n    \"&end_time=\" +\r\n    end_time +\r\n    \"&order_status=\" +\r\n    order_status +\r\n    \"&type=\" +\r\n    type;\r\n  let url = BASE + \"/order/recharge/?export=2&\" + params;\r\n  if (paramKey) {\r\n    switch (paramKey) {\r\n      case \"user_id\":\r\n        url = url + \"&user_id=\" + inputParam;\r\n        break;\r\n      case \"order_id\":\r\n        url = url + \"&order_id=\" + inputParam;\r\n        break;\r\n      case \"create_time\":\r\n        url = url + \"&time_type=1\";\r\n        break;\r\n      case \"arrival_time\":\r\n        url = url + \"&time_type=2\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  window.open(url);\r\n};\r\nexport const getChannelList = (page, limit, name) => {\r\n  return ajax(\r\n    BASE + \"/order/channelList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      name: name ? name : \"\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const addChannel = value => {\r\n  return ajax(\r\n    BASE + \"/order/addChannel\",\r\n    {\r\n      ...value,\r\n      token,\r\n      action: \"add\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const editPayChannel = (value, id) => {\r\n  return ajax(\r\n    BASE + \"/order/editPayChannel\",\r\n    {\r\n      ...value,\r\n      token,\r\n      id,\r\n      action: \"edit\"\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-古都银行卡\r\nexport const bankList = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/order/bankList\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const saveBankCard = (searchData, id) => {\r\n  if (id) {\r\n    searchData.id = id;\r\n  }\r\n  return ajax(\r\n    BASE + \"/order/saveBankCard\",\r\n    {\r\n      ...searchData,\r\n      action: id ? \"edit\" : \"add\",\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const deleteBankCard = id => {\r\n  return ajax(\r\n    BASE + \"/order/saveBankCard\",\r\n    {\r\n      id,\r\n      action: \"del\",\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-代充订单\r\nexport const rechargeOrder = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/order/rechargeOrder\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      type: 14\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//充值-渠道配置\r\nexport const getChannel = (page, limit) => {\r\n  return ajax(\r\n    BASE + \"/order/getChannel\",\r\n    {\r\n      page,\r\n      limit,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const getChannelInfo = channel_id => {\r\n  return ajax(\r\n    BASE + \"/order/getChannelInfo\",\r\n    {\r\n      page: 1,\r\n      limit: 20,\r\n      token,\r\n      channel_id\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n\r\nexport const editChannelInfo = (id, pay_code) => {\r\n  return ajax(\r\n    BASE + \"/order/editChannelInfo\",\r\n    {\r\n      id,\r\n      token,\r\n      pay_code\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//兑换-兑换订单&代提设置\r\nexport const withDraw = (page, limit, flag, searchData) => {\r\n  if (searchData) {\r\n    let {\r\n      start_time,\r\n      end_time,\r\n      order_status,\r\n      type,\r\n      inputParam,\r\n      filed\r\n    } = searchData;\r\n    //处理输入关键字和选择关键字，组合成传输参数\r\n    let obj = {};\r\n    if (filed !== \"create_time\" && filed !== \"arrival_time\") {\r\n      obj[filed] = inputParam;\r\n    } else if (filed !== \"create_time\") {\r\n      obj.time_type = 1;\r\n    } else if (filed !== \"arrival_time\") {\r\n      obj.time_type = 2;\r\n    }\r\n    return ajax(\r\n      BASE + \"/order/withDraw\",\r\n      {\r\n        page,\r\n        limit,\r\n        token,\r\n        start_time,\r\n        end_time,\r\n        order_status,\r\n        type,\r\n        ...obj,\r\n        flag\r\n      },\r\n      \"POST\"\r\n    );\r\n  } else {\r\n    return ajax(\r\n      BASE + \"/order/withDraw\",\r\n      {\r\n        page,\r\n        limit,\r\n        token,\r\n        flag: 3\r\n      },\r\n      \"POST\"\r\n    );\r\n  }\r\n};\r\nexport const reviewInfo = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/reviewInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      id,\r\n      type: 2\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const remarkInfo = (page, limit, id) => {\r\n  return ajax(\r\n    BASE + \"/order/remarkInfo\",\r\n    {\r\n      page,\r\n      limit,\r\n      token,\r\n      id,\r\n      type: 2\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const downloadWithdrawList = searchData => {\r\n  let {\r\n    start_time,\r\n    end_time,\r\n    order_status,\r\n    type,\r\n    inputParam,\r\n    filed\r\n  } = searchData;\r\n  let params =\r\n    \"token=\" +\r\n    token +\r\n    \"&filed=\" +\r\n    filed +\r\n    \"&keyword=\" +\r\n    inputParam +\r\n    \"&start_time=\" +\r\n    start_time +\r\n    \"&end_time=\" +\r\n    end_time +\r\n    \"&order_status=\" +\r\n    order_status +\r\n    \"&type=\" +\r\n    type;\r\n  let url = BASE + \"/order/withDraw/?export=2&flag=2&\" + params;\r\n  if (filed) {\r\n    switch (filed) {\r\n      case \"user_id\":\r\n        url = url + \"&user_id=\" + inputParam;\r\n        break;\r\n      case \"order_id\":\r\n        url = url + \"&order_id=\" + inputParam;\r\n        break;\r\n      case \"create_time\":\r\n        url = url + \"&time_type=1\";\r\n        break;\r\n      case \"arrival_time\":\r\n        url = url + \"&time_type=2\";\r\n        break;\r\n      case \"replace_id\":\r\n        url = url + \"&replace_id=\" + inputParam;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  window.open(url);\r\n};\r\nexport const withDrawRemark = (id, temarks, remark_type) => {\r\n  return ajax(\r\n    BASE + \"/order/withDrawRemark\",\r\n    {\r\n      token,\r\n      id,\r\n      temarks,\r\n      remark_type,\r\n      type: 2\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n//兑换-第三方提款设置\r\nexport const getConfigList = () => {\r\n  return ajax(\r\n    BASE + \"/config/list\",\r\n    {\r\n      conf_key: \"withdraw_channel_info\",\r\n      get_val: 1,\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\nexport const saveWithDrawChannel = (id, name, value) => {\r\n  return ajax(\r\n    BASE + \"/config/saveWithDrawChannel\",\r\n    {\r\n      id,\r\n      name,\r\n      ...value,\r\n      \"alipay[name]\": \"支付宝\",\r\n      \"alipay[withdraw_type]\": 1,\r\n      \"bankcard[name]\": \"银行卡\",\r\n      \"bankcard[withdraw_type]\": 2,\r\n      conf_key: \"withdraw_channel_info\",\r\n      action: \"edit\",\r\n      token\r\n    },\r\n    \"POST\"\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Form, Icon, Input, Button, Modal, message } from \"antd\";\r\nimport \"./login.less\";\r\nimport { reqLogin, reqAuthCode, navList } from \"../../api\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\n\r\nconst Item = Form.Item; // 不能写在import之前\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n    if (result.status === 0) {\r\n      let { data } = result;\r\n      data.forEach(element => {\r\n        if (element.children) {\r\n          element.children.forEach(item => {\r\n            item.title = item.title.slice(24);\r\n          });\r\n        }\r\n      });\r\n      localStorage.setItem(\"menuList\", JSON.stringify(data));\r\n      // 跳转到管理界面 (不需要再回退回到登陆)\r\n      // this.props.history.replace(\"/\");\r\n      setTimeout(() => this.props.history.replace(\"/\"), 300);\r\n    }\r\n  };\r\n  handleSubmit = event => {\r\n    // 阻止事件的默认行为\r\n    event.preventDefault();\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // 请求登陆\r\n        const { username, password, authcode } = values;\r\n        const result = await reqLogin(username, password, authcode);\r\n\r\n        if (result.status === 0) {\r\n          // 登陆成功\r\n          message.success(\"登陆成功\");\r\n          storageUtils.saveUser(result.data); // 保存到local中\r\n          this.getMenuList();\r\n        } else {\r\n          // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"检验失败!\");\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // 请求登陆\r\n        const { username, password } = values;\r\n        const result = await reqAuthCode(username, password);\r\n        console.log(\"请求成功\", result);\r\n        if (result.status === 0 && result.data) {\r\n          // 登陆成功\r\n          Modal.info({\r\n            title: \"首次登录扫码获取验证码\",\r\n            content: (\r\n              <div>\r\n                <img src={result.data.qrurl} alt=\"验证码\" />\r\n              </div>\r\n            )\r\n          });\r\n        } else {\r\n          // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"检验失败!\");\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  };\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    console.log(\"validatePwd()\", rule, value);\r\n    if (!value) {\r\n      callback(\"密码必须输入\");\r\n    } else if (value.length < 4) {\r\n      callback(\"密码长度不能小于4位\");\r\n    } else if (value.length > 12) {\r\n      callback(\"密码长度不能大于12位\");\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback(\"密码必须是英文、数字或下划线组成\");\r\n    } else {\r\n      callback(); // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  };\r\n\r\n  render() {\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const user = storageUtils.getUser();\r\n    if (user && user._id) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form;\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <h1>QGame: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {/*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */}\r\n              {getFieldDecorator(\"username\", {\r\n                // 配置对象: 属性名是特定的一些名称\r\n                // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"用户名必须输入\"\r\n                  },\r\n                  { min: 3, message: \"用户名至少3位\" },\r\n                  { max: 12, message: \"用户名最多12位\" },\r\n                  {\r\n                    pattern: /^[a-zA-Z0-9_]+$/,\r\n                    message: \"用户名必须是英文、数字或下划线组成\"\r\n                  }\r\n                ],\r\n                initialValue: \"ice\" // 初始值\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"用户名\"\r\n                />\r\n              )}\r\n            </Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  {\r\n                    validator: this.validatePwd\r\n                  }\r\n                ],\r\n                initialValue: \"123456\"\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"密码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"authcode\", {\r\n                rules: [\r\n                  //{ required: true, whitespace: true, message: '验证码必须输入' },\r\n                  //{ min: 4, message: '验证码至少4位' }\r\n                ],\r\n                initialValue: \"123456\"\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type=\"qrcode\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  type=\"password\"\r\n                  placeholder=\"验证码\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <span style={{ marginTop: 5 }} onClick={this.handleClick}>\r\n              首次登录，手机下载Google Authenticator\r\n              安装，点击此处扫码获取验证码\r\n            </span>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"login-form-button\"\r\n              >\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst WrapLogin = Form.create()(Login);\r\nexport default WrapLogin;\r\n/*\r\n1. 高阶函数\r\n    1). 一类特别的函数\r\n        a. 接受函数类型的参数\r\n        b. 返回值是函数\r\n    2). 常见\r\n        a. 定时器: setTimeout()/setInterval()\r\n        b. Promise: Promise(() => {}) then(value => {}, reason => {})\r\n        c. 数组遍历相关的方法: forEach()/filter()/map()/reduce()/find()/findIndex()\r\n        d. 函数对象的bind()\r\n        e. Form.create()() / getFieldDecorator()()\r\n    3). 高阶函数更新动态, 更加具有扩展性\r\n\r\n2. 高阶组件\r\n    1). 本质就是一个函数\r\n    2). 接收一个组件(被包装组件), 返回一个新的组件(包装组件), 包装组件会向被包装组件传入特定属性\r\n    3). 作用: 扩展组件的功能\r\n    4). 高阶组件也是高阶函数: 接收一个组件函数, 返回是一个新的组件函数\r\n */\r\n/*\r\n包装Form组件生成一个新的组件: Form(Login)\r\n新组件会向Form组件传递一个强大的对象属性: form\r\n */\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu, message } from \"antd\";\r\nimport { navList } from \"../../api\";\r\nimport \"./index.less\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n// 左侧导航的组件\r\nclass LeftNav extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { data: [] };\r\n  }\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n\r\n    if (result.status === 0) {\r\n      //登陆成功\r\n      this.setState({\r\n        data: result.data\r\n      });\r\n    } else {\r\n      // 提示错误信息\r\n      message.error(result.msg);\r\n    }\r\n  };\r\n  /*\r\n   获取左侧菜单导航栏\r\n    */\r\n  getMenuList = async () => {\r\n    const result = await navList();\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data\r\n      });\r\n    } else {\r\n      message.error(\"网络问题，请重新登陆\");\r\n    }\r\n  };\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = menuList => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname;\r\n    return menuList.reduce((pre, item) => {\r\n      // 向pre添加<Menu.Item>\r\n      if (item.key) {\r\n        //按需渲染侧边栏，必须已经在后台-权限管理中设置了路由key才能渲染\r\n        if (!item.children) {\r\n          pre.push(\r\n            <Menu.Item\r\n              key={item.key}\r\n              onClick={() => {\r\n                this.props.onClick(item);\r\n              }}\r\n            >\r\n              <Link to={item.key}>\r\n                {/* <Icon type={item.icon} /> */}\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        } else {\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(\r\n            cItem => path.indexOf(cItem.key) === 0\r\n          );\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key;\r\n          }\r\n          pre.push(\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {item.children.reduce((cpre, ele) => {\r\n                cpre.push(\r\n                  <Menu.Item\r\n                    key={ele.key}\r\n                    onClick={() => {\r\n                      this.props.onClick(ele);\r\n                    }}\r\n                  >\r\n                    <Link to={ele.key}>\r\n                      <span>{ele.title}</span>\r\n                    </Link>\r\n                  </Menu.Item>\r\n                );\r\n                return cpre;\r\n              }, [])}\r\n            </SubMenu>\r\n          );\r\n        }\r\n      }\r\n      return pre;\r\n    }, []);\r\n  };\r\n  // componentDidMount() {\r\n  //   this.getMenuList();\r\n  // }\r\n  render() {\r\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n    const menuNodes = this.getMenuNodes(menuList);\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname;\r\n    // 得到需要打开菜单项的key\r\n    const openKey = this.openKey;\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link\r\n          to=\"/\"\r\n          className=\"left-nav-header\"\r\n          style={{ justifyContent: \"center\" }}\r\n        >\r\n          <h1>QGame后台管理</h1>\r\n        </Link>\r\n\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n          {menuNodes}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default withRouter(LeftNav);\r\n","import React from 'react'\r\nimport './index.less'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {}, // 保存当前登陆的user\r\n}","import React, { Component } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Modal, Tabs } from \"antd\";\r\n\r\nimport LinkButton from \"../link-button\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport \"./index.less\"\r\nconst { TabPane } = Tabs;\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.newTabIndex = 0;\r\n    const panes = [\r\n      {\r\n        title: \"首页\",\r\n        content: \"Content of Tab 1\",\r\n        key: \"1\",\r\n        closable: false,\r\n        path: \"/home\"\r\n      }\r\n    ];\r\n    this.state = {\r\n      activeKey: panes[0].key,\r\n      panes\r\n    };\r\n  }\r\n  onChange = activeKey => {\r\n    this.setState({ activeKey });\r\n  };\r\n\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  };\r\n\r\n  add = tabConfig => {\r\n    // console.log(\"tabConfig\", tabConfig);\r\n    const { panes } = this.state;\r\n    let isTabExist = false;\r\n    let oldKey;\r\n    panes.forEach(item => {\r\n      if (item.title === tabConfig.title) {\r\n        isTabExist = true;\r\n        oldKey = item.key;\r\n      }\r\n    });\r\n    if (isTabExist) {\r\n      this.onChange(oldKey);\r\n    } else {\r\n      const activeKey = `newTab${this.newTabIndex++}`;\r\n      panes.push({\r\n        title: tabConfig.title,\r\n        content: \"Content of new Tab\",\r\n        key: activeKey,\r\n        path: tabConfig.key\r\n      });\r\n      this.onChange(activeKey);\r\n      this.setState({ panes, activeKey });\r\n    }\r\n  };\r\n\r\n  remove = targetKey => {\r\n    let { activeKey } = this.state;\r\n    let lastIndex;\r\n    this.state.panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n    if (panes.length && activeKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        activeKey = panes[lastIndex].key;\r\n      } else {\r\n        activeKey = panes[0].key;\r\n      }\r\n    }\r\n    this.setState({ panes, activeKey });\r\n  };\r\n\r\n  /*\r\n  退出登陆\r\n   */\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: \"确定退出吗?\",\r\n      onOk: () => {\r\n        console.log(\"OK\", this);\r\n        // 删除保存的user数据\r\n        storageUtils.removeUser();\r\n        memoryUtils.user = {};\r\n        localStorage.removeItem('menuList')\r\n        // 跳转到login\r\n        this.props.history.replace(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId);\r\n  }\r\n  componentDidMount() {\r\n    this.props.onRef && this.props.onRef(this);\r\n    let data = this.state;\r\n    const path = this.props.location.pathname;\r\n    let title;\r\n    if (path !== \"/home\" && path !== \"/\") {\r\n      const menuList=JSON.parse(localStorage.getItem('menuList'))\r\n      menuList.forEach(item => {\r\n        if (!item.children && item.key === path) {\r\n          title = item.title;\r\n        } else if (item.children) {\r\n          item.children.forEach(val => {\r\n            if (val.key === path) {\r\n              title = val.title;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      data.activeKey = \"2\";\r\n      data.panes.push({\r\n        title: title,\r\n        key: \"2\",\r\n        path: path\r\n      });\r\n      this.setState({\r\n        ...data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const username = memoryUtils.user.username;\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎！{username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          {/* <div className=\"header-bottom-left\">{title}</div> */}\r\n          <Tabs\r\n            onChange={this.onChange}\r\n            activeKey={this.state.activeKey}\r\n            type=\"editable-card\"\r\n            onEdit={this.onEdit}\r\n            hideAdd\r\n          >\r\n            {this.state.panes.map(pane => (\r\n              <TabPane\r\n                tab={<Link to={pane.path}>{pane.title}</Link>}\r\n                key={pane.key}\r\n                closable={pane.closable}\r\n                forceRender\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React, { Component } from \"react\";\r\n// import { Icon} from \"antd\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return <span>欢迎您！</span>;\r\n  }\r\n}\r\n","import moment from \"moment\";\r\n/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return \"\";\r\n  let timeStamp = parseInt(time);\r\n  if (timeStamp === 0) return \"\";\r\n  return moment(timeStamp * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\r\n  // let date = new Date(time * 1000);\r\n  // return (\r\n  //   date.getFullYear() +\r\n  //   \"-\" +\r\n  //   (date.getMonth() + 1) +\r\n  //   \"-\" +\r\n  //   date.getDate() +\r\n  //   \" \" +\r\n  //   date.getHours() +\r\n  //   \":\" +\r\n  //   date.getMinutes() +\r\n  //   \":\" +\r\n  //   date.getSeconds()\r\n  // );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input } from \"antd\";\r\n\r\nconst FormItem = Form.Item;\r\nclass NormalLoginForm extends Component {\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { isNickModal, goldRecord } = this.props;\r\n    return (\r\n      <Form className=\"login-form\">\r\n        <FormItem style={isNickModal ? {} : { display: \"none\" }}>\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: isNickModal,\r\n                message: \"Please input your username!\"\r\n              }\r\n            ],\r\n            initialValue: this.props.val\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              placeholder=\"请输入昵称\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n        <FormItem label=\"金额\" style={isNickModal ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"gold\", {\r\n            rules: [\r\n              {\r\n                required: !isNickModal,\r\n                whitespace: true,\r\n                pattern: /^\\d+(\\.\\d+)?$/,\r\n                message: \"必须为数字，减少时金额为负\"\r\n              }\r\n            ],\r\n          })(<Input placeholder=\"必须为数字，减少时金额为负\" />)}\r\n        </FormItem>\r\n        <FormItem label=\"备注\" style={isNickModal ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"desc\", {\r\n            rules: [\r\n              { max: 400, message: \"最多400字\" },\r\n              {\r\n                required: !isNickModal\r\n              }\r\n            ]\r\n          })(\r\n            <Input.TextArea\r\n              placeholder=\"请输入文字\"\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n            />\r\n          )}\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create()(NormalLoginForm);\r\n\r\nexport default WrappedNormalLoginForm;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { userDetail } from \"../../api/index\";\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data, count, id } = this.props.GoldDetailRecord;\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey=\"_id\"\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.isBindInfo) {\r\n      return [\r\n        {\r\n          title: \"支付宝账号\",\r\n          dataIndex: \"alipay_account\"\r\n        },\r\n        {\r\n          title: \"绑定支付宝时间\",\r\n          dataIndex: \"bind_alipay_at\"\r\n        },\r\n\r\n        {\r\n          title: \"开户人姓名\",\r\n          dataIndex: \"card_name\"\r\n        },\r\n        {\r\n          title: \"银行名称\",\r\n          dataIndex: \"bank_name\",\r\n        },\r\n        {\r\n          title: \"银行卡号\",\r\n          dataIndex: \"bank_num\"\r\n        },\r\n        {\r\n          title: \"绑定银行卡时间\",\r\n          dataIndex: \"bind_bank_at\"\r\n        },\r\n        {\r\n          title: \"是否灰名单\",\r\n          dataIndex: \"is_gray\"\r\n        },\r\n        {\r\n          title: \"灰名单备注\",\r\n          dataIndex: \"black_remark\"\r\n        },\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"remark_at\"\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          dataIndex: \"option\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  DatePicker,\r\n  Icon,\r\n  Select,\r\n  Input,\r\n  ConfigProvider,\r\n  Popconfirm,\r\n  Button\r\n} from \"antd\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\n// import moment from \"moment\";\r\nimport \"moment/locale/zh-cn\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport LinkButton from \"../../components/link-button/index\";\r\nimport {\r\n  reqUsers,\r\n  setGameUserNickName,\r\n  changeGold,\r\n  searchData,\r\n  reqLoadGold,\r\n  userDetail,\r\n  bindInfo,\r\n  saveUserBlack,\r\n  createTask\r\n} from \"../../api/index\";\r\nimport WrappedNormalLoginForm from \"././user-nick\";\r\nimport WrappedComponent from \"./gold_details\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.initColumns();\r\n    this.inputParam = {\r\n      key: \"id\",\r\n      val: \"\"\r\n    };\r\n  }\r\n  state = {\r\n    data: [],\r\n    count: 0,\r\n    pageSize: 20,\r\n    isNickShow: false,\r\n    isGoldShow: false,\r\n    isGoldDetailShow: false,\r\n    isBindInfoShow: false,\r\n    isResetPwdShow: false,\r\n    resetpwd: \"\",\r\n    game_nick: \"\",\r\n    startTime: \"\",\r\n    endTime: \"\",\r\n    loading: false\r\n  };\r\n\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      fixed: \"left\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"game_nick\",\r\n      key: \"game_nick\",\r\n      fixed: \"left\",\r\n      width: 150,\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.game_nick = record.game_nick;\r\n            this.id = record.id;\r\n            this.rowIndex = rowIndex;\r\n            this.setState({\r\n              isNickShow: true\r\n            });\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n\r\n    {\r\n      title: \"账户余额\",\r\n      dataIndex: \"game_gold\",\r\n      key: \"game_gold\",\r\n      sorter: (a, b) => a.game_gold - b.game_gold,\r\n      width: 150,\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {\r\n            this.goldRecord = record;\r\n            this.setState({\r\n              isGoldShow: true\r\n            });\r\n          }, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      key: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_nick\",\r\n      key: \"proxy_nick\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"手机\",\r\n      dataIndex: \"phone_number\",\r\n      key: \"phone_number\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"role_name\",\r\n      key: \"role_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"注册时间\",\r\n      dataIndex: \"regin_time\",\r\n      render: formateDate,\r\n      key: \"regin_time\",\r\n      sorter: (a, b) => a.regin_time - b.regin_time,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"登录IP\",\r\n      dataIndex: \"login_ip\",\r\n      key: \"login_ip\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"登陆时间\",\r\n      dataIndex: \"login_time\",\r\n      render: formateDate,\r\n      sorter: (a, b) => a.login_time - b.login_time,\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getGoldDetail(record)}>\r\n            资金明细\r\n          </LinkButton>\r\n          <LinkButton onClick={() => this.getGoldDetail(record, true)}>\r\n            查看绑定信息\r\n          </LinkButton>\r\n          <Popconfirm\r\n            title=\"交易所黑名单\"\r\n            onConfirm={() => this.saveUserBlack(record, true)}\r\n            onCancel={() => this.saveUserBlack(record, false)}\r\n            okText=\"添加\"\r\n            cancelText=\"移除\"\r\n          >\r\n            <LinkButton>交易所黑名单</LinkButton>\r\n          </Popconfirm>\r\n          <LinkButton onClick={() => this.resetPwd(record)}>\r\n            重置密码\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"实时余额\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getLoadGold(record)}>查看</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqUsers(page, limit);\r\n    if (result.status === 0) {\r\n      const { game_user, proxy_user } = result.data;\r\n      game_user.forEach(element => {\r\n        proxy_user.forEach(item => {\r\n          if (element.id === item.id) {\r\n            element.proxy_nick = item.proxy_pid;\r\n          }\r\n        });\r\n      });\r\n      this.setState({\r\n        data: game_user,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(result.msg);\r\n    }\r\n  };\r\n  changeNickName = () => {\r\n    let form = this.refs.getFormValue; //通过refs属性可以获得对话框内form对象\r\n    form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        this.setState({ isNickShow: false });\r\n        if (value.name !== this.game_nick) {\r\n          const result = await setGameUserNickName(this.id, value.name);\r\n          if (result.status === 0) {\r\n            message.success(\"修改成功!\");\r\n            // 首先拿到索引, 也可以从参数中传递过来\r\n            let index = this.rowIndex;\r\n            // 然后根据索引修改\r\n            this.state.data[index][`game_nick`] = value.name;\r\n            // 这个时候并不会更新视图, 需要 setState更新 arr\r\n            this.setState({\r\n              data: this.state.data\r\n            });\r\n          }\r\n        }\r\n      }\r\n      form.resetFields();\r\n    });\r\n  };\r\n  changeGold = () => {\r\n    this.setState({ loading: true });\r\n    //这里直接复用了user-nick的模态框，所以取input的值时用value.name\r\n    let form = this.refs.getFormValue;\r\n    let goldRecord = this.goldRecord;\r\n    form.validateFields(async (err, value) => {\r\n      const res = await changeGold(goldRecord, value);\r\n      if (res.status === 0) {\r\n        message.success(res.msg);\r\n        this.setState({ isGoldShow: false, loading: false });\r\n      } else {\r\n        message.error(res.msg);\r\n      }\r\n      form.resetFields();\r\n    });\r\n  };\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      startTime: startTime,\r\n      endTime: endTime\r\n    });\r\n  };\r\n  handleChange(event) {\r\n    let data = Object.assign({}, this.state.inputParam, {\r\n      val: event.target.value\r\n    });\r\n    this.setState({ inputParam: data });\r\n  }\r\n  onSearchData = async () => {\r\n    this.inputParam.val=this.input.input.value\r\n    const result = await searchData(\r\n      1,\r\n      this.state.pageSize,\r\n      this.state.startTime,\r\n      this.state.endTime,\r\n      this.inputParam\r\n    );\r\n    if (result.status === 0) {\r\n      const { game_user, proxy_user } = result.data;\r\n      game_user.forEach(element => {\r\n        proxy_user.forEach(item => {\r\n          if (element.id === item.id) {\r\n            element.proxy_nick = item.proxy_pid;\r\n          }\r\n        });\r\n      });\r\n      this.setState({\r\n        data: game_user,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"查不到输入的关键字\");\r\n    }\r\n  };\r\n  getLoadGold = async record => {\r\n    const id = record.id;\r\n    const result = await reqLoadGold(id);\r\n    if (result.status === 0) {\r\n      Modal.success({\r\n        title: \"实时余额\",\r\n        content: `用户${record.id}实时余额是 : ${result.data[0].game_gold}`\r\n      });\r\n    }\r\n  };\r\n  getGoldDetail = async (record, isBindInfo) => {\r\n    this.isBindInfo = isBindInfo;\r\n    this.GoldDetailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.id\r\n    };\r\n    const res = !isBindInfo\r\n      ? await userDetail(1, 20, record.id)\r\n      : await bindInfo(1, 20, record.id);\r\n    if (res.status === 0) {\r\n      this.GoldDetailRecord.data = res.data;\r\n      this.GoldDetailRecord.count = res.count;\r\n    }\r\n    this.setState({ isGoldDetailShow: true });\r\n  };\r\n  saveUserBlack = async (record, isAdd) => {\r\n    let action = isAdd ? \"add\" : \"remove\";\r\n    const res = await saveUserBlack(record.id, action);\r\n    if (res.status === 0) {\r\n      message.success(\"操作成功！\");\r\n    } else {\r\n      message.success(\"操作失败:\" + res.msg);\r\n    }\r\n  };\r\n  resetPwd = record => {\r\n    this.setState({ isResetPwdShow: true });\r\n    this.resetPwdId = record.id;\r\n  };\r\n  handleResetpwd = async () => {\r\n    const res = await createTask(this.resetPwdId, this.state.resetpwd);\r\n    if (res.status === 0) {\r\n      message.success(\"操作成功！\");\r\n      this.setState({ resetpwd: \"\", isResetPwdShow: false });\r\n    } else {\r\n      message.success(\"操作失败:\" + res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    const { data, count } = this.state;\r\n    const title = (\r\n      <span>\r\n        <ConfigProvider locale={zh_CN}>\r\n          <RangePicker\r\n            // defaultValue={[moment().locale(\"zh-cn\")]}\r\n            // showTime={{ format: \"HH:mm\" }}\r\n            format=\"YYYY-MM-DD\"\r\n            placeholder={[\"开始日期\", \"结束日期\"]}\r\n            onChange={this.dataPickerOnChange}\r\n          />\r\n        </ConfigProvider>\r\n        &nbsp; &nbsp;\r\n        <Select\r\n          style={{ width: 200 }}\r\n          placeholder=\"Select a person\"\r\n          defaultValue=\"id\"\r\n          onChange={val => {\r\n            this.inputParam.key= val\r\n          }}\r\n        >\r\n          <Option value=\"id\">user_id</Option>\r\n          <Option value=\"game_nick\">昵称</Option>\r\n          <Option value=\"phone_number\">手机号</Option>\r\n          <Option value=\"role_name\">账号</Option>\r\n          <Option value=\"proxy_nick\">所属代理</Option>\r\n          <Option value=\"package_nick\">所属品牌</Option>\r\n        </Select>\r\n        &nbsp; &nbsp;\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"请输入关键字搜索\"\r\n          style={{ width: 150 }}\r\n          // value={this.state.inputParam.val}\r\n          // onChange={this.handleChange}\r\n          ref={Input => (this.input = Input)}\r\n        />\r\n        &nbsp; &nbsp;\r\n        <button onClick={this.onSearchData}>\r\n          <Icon type=\"search\" />\r\n        </button>\r\n      </span>\r\n    );\r\n    const extra = (\r\n      <button onClick={() => {this.getUsers(1, 20);this.input.handleReset()}}>\r\n        <Icon type=\"reload\" />\r\n      </button>\r\n    );\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 2100, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"修改昵称\"\r\n          visible={this.state.isNickShow}\r\n          onOk={this.changeNickName}\r\n          onCancel={() => {\r\n            this.setState({ isNickShow: false });\r\n          }}\r\n        >\r\n          <WrappedNormalLoginForm\r\n            ref=\"getFormValue\"\r\n            val={this.game_nick}\r\n            isNickModal\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"修改金额\"\r\n          visible={this.state.isGoldShow}\r\n          // onOk={this.changeGold}\r\n          onCancel={() => {\r\n            this.setState({ isGoldShow: false });\r\n          }}\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              onClick={() => {\r\n                this.setState({ isGoldShow: false });\r\n              }}\r\n            >\r\n              取消\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              loading={this.state.loading}\r\n              onClick={this.changeGold}\r\n            >\r\n              确定\r\n            </Button>\r\n          ]}\r\n        >\r\n          <WrappedNormalLoginForm\r\n            ref=\"getFormValue\"\r\n            goldRecord={this.goldRecord}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title={this.isBindInfo ? \"查看绑定信息\" : \"资金明细\"}\r\n          visible={this.state.isGoldDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isGoldDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            GoldDetailRecord={this.GoldDetailRecord}\r\n            isBindInfo={this.isBindInfo}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title=\"重置密码\"\r\n          visible={this.state.isResetPwdShow}\r\n          onOk={this.handleResetpwd}\r\n          onCancel={() => {\r\n            this.setState({ isResetPwdShow: false });\r\n          }}\r\n        >\r\n          <span>重置密码</span>\r\n          <Input\r\n            value={this.state.resetpwd}\r\n            onChange={e => this.setState({ resetpwd: e.target.value })}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Radio,\r\n  Select,\r\n  Checkbox,\r\n  Button,\r\n  message\r\n} from \"antd\";\r\nimport { addUser, editUser } from \"../../../api\";\r\n\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isBan: 1,\r\n      checkedList: [],\r\n      indeterminate: true,\r\n      checkAll: false\r\n    };\r\n  }\r\n  checkboxOnChange = checkedList => {\r\n    console.log(checkedList);\r\n    this.setState({\r\n      checkedList,\r\n      indeterminate:\r\n        !!checkedList.length &&\r\n        checkedList.length < this.props.packageList.length,\r\n      checkAll: checkedList.length === this.props.packageList.length\r\n    });\r\n  };\r\n  onCheckAllChange = e => {\r\n    let list = this.props.packageList.map(item => {\r\n      return item.value;\r\n    });\r\n    this.setState(\r\n      {\r\n        checkedList: e.target.checked ? list : [],\r\n        indeterminate: false,\r\n        checkAll: e.target.checked\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          packageList: this.state.checkedList\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await addUser(value)\r\n          : await editUser(value, this.props.editDataRecord.id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.isEdit && this.props.editDataRecord.group) {\r\n      let defaultValue = this.props.editDataRecord.group.split(\",\");\r\n      this.props.form.setFieldsValue({\r\n        packageList: defaultValue.map(Number)\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    const Option = this.props.optionList.map(item => (\r\n      <Select.Option value={item.id} key={item.id}>\r\n        {item.name}\r\n      </Select.Option>\r\n    ));\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        onSubmit={this.handleSubmit}\r\n        labelAlign=\"left\"\r\n      >\r\n        <Form.Item label=\"登录名\">\r\n          {getFieldDecorator(\"username\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"登录名必须输入\"\r\n              },\r\n              { min: 3, message: \"用户名至少3位\" },\r\n              { max: 10, message: \"用户名最多10位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"用户名必须是英文、数字或下划线组成\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"将会成为您唯一的登入名\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户状态\">\r\n          {getFieldDecorator(\"userStatus\", {\r\n            initialValue: isEdit ? editDataRecord.status : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>启用</Radio>\r\n              <Radio value={0}>禁用</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用户组\">\r\n          {getFieldDecorator(\"userGroup\", {\r\n            rules: [{ required: true, message: \"请选择用户组!\" }],\r\n            initialValue: isEdit && editDataRecord.group_id\r\n          })(\r\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择用户组\">\r\n              {Option}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权品牌\">\r\n          <Checkbox\r\n            indeterminate={this.state.indeterminate}\r\n            onChange={this.onCheckAllChange}\r\n            checked={this.state.checkAll}\r\n          >\r\n            全选\r\n          </Checkbox>\r\n          {getFieldDecorator(\"packageList\", {\r\n            rules: [{ required: true, message: \"请选择授权品牌!\" }]\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.props.packageList}\r\n              // value={this.state.checkedList}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权代理\">\r\n          {getFieldDecorator(\"proxy\", {\r\n            rules: [\r\n              {\r\n                whitespace: true,\r\n                message: \"多个代理请用英文逗号分隔\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.proxy : \"\"\r\n          })(\r\n            <Input\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"多个代理请用英文逗号分隔\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"携带金额\">\r\n          {getFieldDecorator(\"loadGold\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              },\r\n              {\r\n                pattern: /^\\d+(\\.\\d+)?$/,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.use_balance\r\n          })(<Input style={{ width: \"60%\" }} placeholder=\"请输入数字\" />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true,\r\n                message: \"密码不能为空\"\r\n              },\r\n              { min: 6, message: \"密码至少6位\" },\r\n              { max: 16, message: \"密码最多16位\" },\r\n              {\r\n                pattern: /^[a-zA-Z0-9_]+$/,\r\n                message: \"密码必须是英文、数字或下划线组成\"\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"确认密码\" style={isEdit ? { display: \"none\" } : {}}>\r\n          {getFieldDecorator(\"confirmPssword\", {\r\n            rules: [\r\n              {\r\n                required: isEdit ? false : true,\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"密码(选填)\"\r\n          style={!isEdit ? { display: \"none\" } : {}}\r\n        >\r\n          {getFieldDecorator(\"editPassword\", {\r\n            rules: [\r\n              {\r\n                whitespace: true\r\n              },\r\n              {\r\n                validator: (rule, value, callback) => {\r\n                  if (!value) {\r\n                    callback(); //如果还没填写，则不进行一致性验证\r\n                  }\r\n                  if (value === getFieldValue(\"password\")) {\r\n                    callback();\r\n                  } else {\r\n                    callback(\"两次密码不一致\");\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              type=\"password\"\r\n              style={{ width: \"60%\" }}\r\n              placeholder=\"6到16个字符，重置密码时使用\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\nimport WrappedAddDataForm from \"./addData\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n  reqAdminList,\r\n  searchAdminData,\r\n  roleList,\r\n  packageList,\r\n  resetAuthCode\r\n} from \"../../../api/index\";\r\n\r\nclass Admin_manage_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      fixed: \"left\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"用户名\",\r\n      dataIndex: \"name\",\r\n      fixed: \"left\",\r\n      width: 150,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"角色\",\r\n      dataIndex: \"role_name\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"授权品牌\",\r\n      dataIndex: \"group\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"授权代理\",\r\n      dataIndex: \"proxy\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"可使用金额\",\r\n      dataIndex: \"use_balance\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 180,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"更新时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 180,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      //   width: 80,\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 1 ? \"启用\" : \"禁用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      width: 200,\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n          <LinkButton onClick={() => this.resetAuthCode(record)}>\r\n            AuthCode重置\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqAdminList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await searchAdminData(this.state.inputParam);\r\n    // if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: 1\r\n      });\r\n    // }\r\n  };\r\n  addData = async () => {\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isAddDataShow: true\r\n      });\r\n    }\r\n  };\r\n  edit = async record => {\r\n    console.log(record);\r\n    this.editDataRecord = record;\r\n    const res = await roleList();\r\n    const result = await packageList();\r\n    if (res.status === 0 && result.status === 0) {\r\n      this.optionList = res.data;\r\n      this.packageList = result.data.map(item => {\r\n        return { label: item.name, value: item.id };\r\n      });\r\n      this.setState({\r\n        isEditDataShow: true\r\n      });\r\n    }\r\n  };\r\n  resetAuthCode = record => {\r\n    Modal.confirm({\r\n      title: \"信息\",\r\n      content: \"真的要重置么?\",\r\n      async onOk() {\r\n        const res = await resetAuthCode(record.id);\r\n        if (res.status === 0) {\r\n          message.success(res.msg);\r\n        } else {\r\n          message.success(res.msg);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入用户名\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={this.handleChange}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.onSearchData}>\r\n              <Icon type=\"search\" />\r\n            </button>\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加账户\r\n            </button>\r\n          </span>\r\n        }\r\n        extra={\r\n          <button onClick={() => this.getUsers(1, 20)}>\r\n            <Icon type=\"reload\" />\r\n          </button>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1500, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"添加用户\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            optionList={this.optionList}\r\n            packageList={this.packageList}\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={() => this.getUsers(1, 20)}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit=\"true\"\r\n              optionList={this.optionList}\r\n              packageList={this.packageList}\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin_manage_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Tree } from \"antd\";\r\nimport { addRole, editRole } from \"../../../api\";\r\n\r\nconst { TreeNode } = Tree;\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandedKeys: [],\r\n      selectedKeys: [],\r\n      checkedKeys: this.props.isEdit\r\n        ? this.props.editDataRecord.rules.split(\",\")\r\n        : [],\r\n      defaultCheckedKeys: []\r\n    };\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const menuList = JSON.parse(localStorage.getItem(\"menuList\"));\r\n    const treeData = this.getTreeNodes(menuList);\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 4 }}\r\n        onSubmit={this.handleSubmit}\r\n        labelAlign=\"left\"\r\n      >\r\n        <Form.Item label=\"角色名\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"角色名必须输入\"\r\n              },\r\n              { min: 3, message: \"用户名至少3位\" }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"分配权限\">\r\n          <br />\r\n          <Tree\r\n            checkable\r\n            defaultCheckedKeys={isEdit ? editDataRecord.rules.split(\",\") : []}\r\n            expandedKeys={this.state.expandedKeys}\r\n            selectedKeys={this.state.selectedKeys}\r\n            onSelect={this.onSelect}\r\n            onCheck={this.onCheck}\r\n            onExpand={this.onExpand}\r\n          >\r\n            {treeData}\r\n          </Tree>\r\n        </Form.Item>\r\n        <Form.Item label=\"描述\">\r\n          {getFieldDecorator(\"desc\", {\r\n            rules: [{ max: 400, message: \"最多400字\" }],\r\n            initialValue: isEdit ? editDataRecord.description : \"\"\r\n          })(\r\n            <Input.TextArea\r\n              placeholder=\"请输入文字\"\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  getTreeNodes = menuList => {\r\n    return menuList.map(item => {\r\n      if (!item.children) {\r\n        return <TreeNode key={item.id} title={item.title} />;\r\n      } else {\r\n        return (\r\n          <TreeNode key={item.id} title={item.title}>\r\n            {this.getTreeNodes(item.children)}\r\n          </TreeNode>\r\n        );\r\n      }\r\n    });\r\n  };\r\n  onSelect = (selectedKeys, info) => {\r\n    const { node } = info;\r\n    const { expandedKeys } = this.state;\r\n    if (node.props.isLeaf) {\r\n      this.setState({ selectedKeys });\r\n    } else {\r\n      this.setState({\r\n        expandedKeys: node.props.expanded\r\n          ? expandedKeys.filter(k => k !== node.props.eventKey)\r\n          : expandedKeys.concat(node.props.eventKey)\r\n      });\r\n    }\r\n  };\r\n  onCheck = (checkedKeys, info) => {\r\n    // console.log(\"onCheck\", checkedKeys, info);\r\n    this.setState({\r\n      checkedKeys: checkedKeys.map(Number)\r\n    });\r\n  };\r\n  onExpand = (expandedKeys, info) => {\r\n    this.setState({ expandedKeys });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      if (!err) {\r\n        let { name, desc } = value;\r\n        let rules = this.state.checkedKeys;\r\n        let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n        const res = !this.props.isEdit\r\n          ? await addRole(name, rules, desc)\r\n          : await editRole(name, rules, desc, id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n          this.setState({\r\n            checkedKeys: []\r\n          });\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport WrappedAddDataForm from \"./addData\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getRoleList, getRuleList } from \"../../../api/index\";\r\n\r\nclass Role extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"id\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"角色名\",\r\n      dataIndex: \"name\",\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"描述\",\r\n      dataIndex: \"description\"\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 1 ? \"已启用\" : \"禁用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  getUsers = async (page, limit) => {\r\n    const result = await getRoleList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  addData = async () => {\r\n    //getRuleList的请求/acl/ruleList返回的不是树状结构的数据，所以使用缓存在本地navlist返回的menulist\r\n    // const res = await getRuleList();\r\n    // if (res.status === 0) {\r\n    //   this.ruleList = res.data;\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n    // }\r\n  };\r\n  edit = async record => {\r\n    // console.log(record);\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <button onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加账户\r\n            </button>\r\n          </span>\r\n        }\r\n        extra={\r\n          <button onClick={() => this.getUsers(1, 20)}>\r\n            <Icon type=\"reload\" />\r\n          </button>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n            // scroll={{ x: 1500, y: 550 }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={() => this.getUsers(1, 20)}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit=\"true\"\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Role;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  ConfigProvider,\r\n  DatePicker,\r\n  Button\r\n} from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\n// import ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\nimport \"moment/locale/zh-cn\";\r\nimport { reqOrder_list, downloadList } from \"../../../api/index\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nclass Order_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: \"\",\r\n      paramKey: \"\",\r\n      inputParam: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\"\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await reqOrder_list(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await reqOrder_list(1, 20, this.state);\r\n    // if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    // }\r\n  };\r\n  download = () => {\r\n    downloadList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <ConfigProvider locale={zh_CN}>\r\n                <RangePicker\r\n                  // defaultValue={[moment().locale(\"zh-cn\")]}\r\n                  // showTime={{ format: \"HH:mm\" }}\r\n                  format=\"YYYY-MM-DD\"\r\n                  placeholder={[\"开始日期\", \"结束日期\"]}\r\n                  onChange={this.dataPickerOnChange}\r\n                />\r\n              </ConfigProvider>\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => this.setState({ paramKey: value })}\r\n              >\r\n                <Select.Option value=\"order_id\">订单id</Select.Option>\r\n                <Select.Option value=\"user_id\">user_id</Select.Option>\r\n                <Select.Option value=\"1\">创建时间</Select.Option>\r\n                <Select.Option value=\"2\">到账时间</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"请输入关键字\"\r\n                style={{ width: 150 }}\r\n                value={this.state.inputParam}\r\n                onChange={this.handleChange}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 200 }}\r\n                onSelect={value => this.setState({ order_status: value })}\r\n              >\r\n                <Select.Option value=\"\">订单状态</Select.Option>\r\n                <Select.Option value=\"0\">全部</Select.Option>\r\n                <Select.Option value=\"1\">未支付</Select.Option>\r\n                <Select.Option value=\"4\">已撤销</Select.Option>\r\n                <Select.Option value=\"5\">已支付</Select.Option>\r\n                <Select.Option value=\"6\">已完成</Select.Option>\r\n                <Select.Option value=\"7\">补单初审通过</Select.Option>\r\n                <Select.Option value=\"8\">补单初审拒绝</Select.Option>\r\n                <Select.Option value=\"9\">补单复审通过</Select.Option>\r\n                <Select.Option value=\"10\">补单复审拒绝</Select.Option>\r\n                <Select.Option value=\"11\">充值失败</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => this.setState({ type: value })}\r\n              >\r\n                <Select.Option value=\"\">订单类型</Select.Option>\r\n                <Select.Option value=\"0\">全部</Select.Option>\r\n                <Select.Option value=\"1\">alipay</Select.Option>\r\n                <Select.Option value=\"2\">银行卡转账</Select.Option>\r\n                <Select.Option value=\"3\">人工代充</Select.Option>\r\n                <Select.Option value=\"4\">人工代提</Select.Option>\r\n                <Select.Option value=\"6\">微信支付</Select.Option>\r\n                <Select.Option value=\"7\">银联支付</Select.Option>\r\n                <Select.Option value=\"8\">网银支付</Select.Option>\r\n                <Select.Option value=\"9\">快捷支付</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <button onClick={this.onSearchData}>\r\n                <Icon type=\"search\" />\r\n                订单查询\r\n              </button>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n            <div style={{ marginTop: 10 }}>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"user_id\"\r\n                style={{ width: 150 }}\r\n                value={this.state.user_id}\r\n                onChange={e => this.setState({ user_id: e.target.value })}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"订单Id\"\r\n                style={{ width: 300 }}\r\n                value={this.state.order_id}\r\n                onChange={e => this.setState({ order_id: e.target.value })}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <button onClick={this.onSearchData}>\r\n                <Icon type=\"search\" />\r\n                玩家掉单查询\r\n              </button>\r\n            </div>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <Button style={{ float: \"right\" }} onClick={() => this.getUsers(1, 20)} icon=\"reload\" />\r\n            <br />\r\n            <br />\r\n            <Button onClick={this.download} icon=\"download\">\r\n              下载列表\r\n            </Button>\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 1900, y: \"60vh\" }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"支付渠道\",\r\n      dataIndex: \"channel_type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"0\":\r\n            word = record.replace_id;\r\n            break;\r\n          case \"5\":\r\n            word = \"充提UC\";\r\n            break;\r\n          case \"12\":\r\n            word = \"onePay\";\r\n            break;\r\n          case \"11\":\r\n            word = \"古都\";\r\n            break;\r\n          case [\"10\", \"13\", \"14\", \"15\", \"16\"]:\r\n            word = \"聚鑫\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"支付类型\",\r\n      dataIndex: \"type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"alipay\";\r\n            break;\r\n          case \"2\":\r\n            word = \"银行卡转账\";\r\n            break;\r\n          case \"3\":\r\n            word = \"人工代充\";\r\n            break;\r\n          case \"4\":\r\n            word = \"人工代提\";\r\n            break;\r\n          case \"5\":\r\n            word = \"被赠送\";\r\n            break;\r\n          case \"6\":\r\n            word = \"微信支付\";\r\n            break;\r\n          case \"7\":\r\n            word = \"银联支付\";\r\n            break;\r\n          case \"8\":\r\n            word = \"网银支付\";\r\n            break;\r\n          case \"9\":\r\n            word = \"快捷支付\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"订单状态\",\r\n      dataIndex: \"status\",\r\n      width: 130,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"未支付\";\r\n            break;\r\n          case \"2\":\r\n            word = \"已过期\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已分配\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已撤销\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已支付\";\r\n            break;\r\n          case \"6\":\r\n            word = \"已完成\";\r\n            break;\r\n          case \"7\":\r\n            word = \"补单初审通过\";\r\n            break;\r\n          case \"8\":\r\n            word = \"初审拒绝\";\r\n            break;\r\n          case \"9\":\r\n            word = \"补单复审通过\";\r\n            break;\r\n          case \"10\":\r\n            word = \"复审拒绝\";\r\n            break;\r\n          case \"11\":\r\n            word = \"充值失败\";\r\n            break;\r\n          case \"12\":\r\n            word = \"客服拒绝\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 200,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"handle\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"备注\",\r\n      dataIndex: \"remark\"\r\n    }\r\n  ];\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      start_time: startTime,\r\n      end_time: endTime\r\n    });\r\n  };\r\n}\r\n\r\nexport default Order_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\r\nimport { addChannel, editPayChannel } from \"../../../api\";\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 7 }}\r\n        wrapperCol={{ span: 17 }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form.Item label=\"支付名称\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"所属渠道ID\">\r\n          {getFieldDecorator(\"channel_id\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.channel_id : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付名称\">\r\n          {getFieldDecorator(\"nick_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>开启</Radio>\r\n              <Radio value={0}>关闭</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付方式\">\r\n          {getFieldDecorator(\"pay_type\", {\r\n            rules: [{ required: true, message: \"请选择支付方式!\" }],\r\n            initialValue: isEdit && editDataRecord.pay_type\r\n          })(\r\n            <Select style={{ width: \" 40%\" }} placeholder=\"选择支付方式\">\r\n              <Select.Option value=\"7\">支付宝H5</Select.Option>\r\n              <Select.Option value=\"8\">支付宝扫码</Select.Option>\r\n              <Select.Option value=\"2\">快捷支付</Select.Option>\r\n              <Select.Option value=\"4\">微信H5</Select.Option>\r\n              <Select.Option value=\"5\">微信扫码</Select.Option>\r\n              <Select.Option value=\"1\">网银支付</Select.Option>\r\n              <Select.Option value=\"13\">银联扫码</Select.Option>\r\n              <Select.Option value=\"17\">转账银行卡</Select.Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付限额最小面值\">\r\n          {getFieldDecorator(\"min_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.min_amount : \"\"\r\n          })(<Input style={{ width: \"30%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付限额最大面值\">\r\n          {getFieldDecorator(\"max_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.max_amount : \"\"\r\n          })(<Input style={{ width: \"30%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"固定面值\">\r\n          {getFieldDecorator(\"span_amount\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.span_amount\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"单笔间隔\">\r\n          {getFieldDecorator(\"seed\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                whitespace: true,\r\n                message: \"请输入有效数字\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.seed\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"玩家承担费率%\">\r\n          {getFieldDecorator(\"rate\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit && editDataRecord.rate\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"显示排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            initialValue: isEdit ? editDataRecord.sort : \"0\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await addChannel(value)\r\n          : await editPayChannel(value,id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getChannelList, getRuleList } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Channel_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getChannelList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  onSearchData = async () => {\r\n    const res = await getChannelList(1, 20, this.state.inputParam);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  refreshPage=()=>{\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  }\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入支付名称\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={e => this.setState({ inputParam: e.target.value })}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.onSearchData}>\r\n              <Icon type=\"search\" />\r\n            </button>\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </button>\r\n          </span>\r\n        }\r\n        extra={\r\n          <button\r\n            onClick={this.refreshPage}\r\n          >\r\n            <Icon type=\"reload\" />\r\n          </button>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1900, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"支付名称\",\r\n      dataIndex: \"name\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"渠道昵称\",\r\n      dataIndex: \"nick_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"单笔-最小限额\",\r\n      dataIndex: \"min_amount\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"单笔-最大限额\",\r\n      dataIndex: \"max_amount\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"单笔间隔\",\r\n      dataIndex: \"seed\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"玩家承担的费率%\",\r\n      dataIndex: \"rate\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"固定面值\",\r\n      dataIndex: \"span_amount\",\r\n      width: 250\r\n    },\r\n    {\r\n      title: \"支付方式\",\r\n      dataIndex: \"pay_type\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"7\":\r\n            word = \"支付宝H5\";\r\n            break;\r\n          case \"8\":\r\n            word = \"支付宝扫码\";\r\n            break;\r\n          case \"2\":\r\n            word = \"快捷支付\";\r\n            break;\r\n          case \"4\":\r\n            word = \"微信H5\";\r\n            break;\r\n          case \"5\":\r\n            word = \"微信扫码\";\r\n            break;\r\n          case \"1\":\r\n            word = \"网银支付\";\r\n            break;\r\n          case \"13\":\r\n            word = \"银联扫码\";\r\n            break;\r\n          case \"17\":\r\n            word = \"转账银行卡\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 80,\r\n      render: (text, record, index) => {\r\n        return <span>{text === \"1\" ? \"开启\" : \"关闭\"}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"显示顺序\",\r\n      width: 100,\r\n      dataIndex: \"sort\"\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Channel_list;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\r\nimport { saveBankCard } from \"../../../api\";\r\n\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //   componentDidMount() {\r\n  //     if (this.props.isEdit) {\r\n  //       if (this.props.editDataRecord.rules) {\r\n  //         let defaultValue = this.props.editDataRecord.rules.split(\",\");\r\n  //         this.setState({\r\n  //           defaultCheckedKeys: defaultValue\r\n  //         });\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 7 }}\r\n        wrapperCol={{ span: 17 }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form.Item label=\"开户人\">\r\n          {getFieldDecorator(\"card_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.card_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"银行名称\">\r\n          {getFieldDecorator(\"bank_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.bank_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"卡号\">\r\n          {getFieldDecorator(\"card_num\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              },\r\n              {\r\n                min: 15,\r\n                max: 20,\r\n                message: \"请输入15-20位正确卡号\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.card_num : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"用途\">\r\n          {getFieldDecorator(\"type\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>收款卡</Radio>\r\n              <Radio value={0}>出款卡</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"状态\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 2\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>空闲</Radio>\r\n              <Radio value={2}>使用中</Radio>\r\n              <Radio value={3}>停用</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"支付密码\">\r\n          {getFieldDecorator(\"pay_password\", {})(\r\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"查询密码\">\r\n          {getFieldDecorator(\"query_password\", {})(\r\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"U盾密码\">\r\n          {getFieldDecorator(\"u_code\", {})(\r\n            <Input placeholder=\"出款卡时必填\" style={{ width: \"60%\" }} />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ offset: 18 }}>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord ? this.props.editDataRecord.id : \"\";\r\n      if (!err) {\r\n        const res = !this.props.isEdit\r\n          ? await saveBankCard(value)\r\n          : await saveBankCard(value, id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功:\" + res.msg);\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input, Popconfirm } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { bankList, deleteBankCard } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass Bankcard_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await bankList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题:\" + result.msg);\r\n    }\r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    // console.log(record);\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  delete = async record => {\r\n    const result = await deleteBankCard(record.id);\r\n    if (result.status === 0) {\r\n      message.success(result.msg);\r\n      this.refreshPage(1, 20);\r\n    } else {\r\n      message.error(\"网络问题:\" + result.msg);\r\n    }\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <button onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </button>\r\n          </span>\r\n        }\r\n        extra={\r\n          <button onClick={this.refreshPage}>\r\n            <Icon type=\"reload\" />\r\n          </button>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1000, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      width: 50\r\n    },\r\n    {\r\n      title: \"卡使用类型\",\r\n      dataIndex: \"type\",\r\n      width: 100,\r\n      render: (text, record, index) => (\r\n        <span>{text === \"1\" ? \"收款卡\" : \"出款卡\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"银行卡号\",\r\n      dataIndex: \"card_num\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"开户人姓名\",\r\n      dataIndex: \"card_name\",\r\n      width: 100,\r\n      render: (text, record) => (\r\n        <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n          {text}\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: \"银行名称\",\r\n      dataIndex: \"bank_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => (\r\n        <span>{text === \"1\" ? \"空闲\" : text === \"2\" ? \"使用中\" : \"停用\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"updated_at\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 150,\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n          <Popconfirm\r\n            title=\"确定要删除吗\"\r\n            onConfirm={() => this.delete(record)}\r\n            okText=\"删除\"\r\n            cancelText=\"取消\"\r\n          >\r\n            <LinkButton>删除</LinkButton>\r\n          </Popconfirm>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Bankcard_list;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  ConfigProvider,\r\n  DatePicker,\r\n  Button\r\n} from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport \"moment/locale/zh-cn\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\nimport { rechargeOrder, reqOrder_list, downloadList } from \"../../../api/index\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nclass Recharge_order extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: \"14\",\r\n      paramKey: \"\",\r\n      inputParam: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\"\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await rechargeOrder(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await reqOrder_list(1, 20, this.state);\r\n    // if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    // }\r\n  };\r\n  download = () => {\r\n    downloadList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <ConfigProvider locale={zh_CN}>\r\n                <RangePicker\r\n                  // defaultValue={[moment().locale(\"zh-cn\")]}\r\n                  // showTime={{ format: \"HH:mm\" }}\r\n                  format=\"YYYY-MM-DD\"\r\n                  placeholder={[\"开始日期\", \"结束日期\"]}\r\n                  onChange={this.dataPickerOnChange}\r\n                />\r\n              </ConfigProvider>\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => this.setState({ paramKey: value })}\r\n              >\r\n                <Select.Option value=\"order_id\">订单id</Select.Option>\r\n                <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"请输入关键字\"\r\n                style={{ width: 150 }}\r\n                value={this.state.inputParam}\r\n                onChange={this.handleChange}\r\n              />\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                defaultValue=\"\"\r\n                style={{ width: 100 }}\r\n                onSelect={value => this.setState({ order_status: value })}\r\n              >\r\n                <Select.Option value=\"\">状态</Select.Option>\r\n                <Select.Option value=\"0\">未成功</Select.Option>\r\n                <Select.Option value=\"1\">已分配</Select.Option>\r\n                <Select.Option value=\"4\">已撤销</Select.Option>\r\n                <Select.Option value=\"6\">已完成</Select.Option>\r\n                <Select.Option value=\"7\">初审通过</Select.Option>\r\n                <Select.Option value=\"8\">初审拒绝</Select.Option>\r\n                <Select.Option value=\"9\">复审通过</Select.Option>\r\n                <Select.Option value=\"10\">复审拒绝</Select.Option>\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <button onClick={this.onSearchData}>\r\n                <Icon type=\"search\" />\r\n              </button>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              onClick={() => this.getUsers(1, 20)}\r\n              icon=\"reload\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <Button onClick={this.download} icon=\"download\">\r\n              下载列表\r\n            </Button>\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 1900, y: \"60vh\" }}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"代充ID\",\r\n      dataIndex: \"replace_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"代充昵称\",\r\n      dataIndex: \"replace_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"订单状态\",\r\n      dataIndex: \"status\",\r\n      width: 130,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"未支付\";\r\n            break;\r\n          case \"2\":\r\n            word = \"已过期\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已分配\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已撤销\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已支付\";\r\n            break;\r\n          case \"6\":\r\n            word = \"已完成\";\r\n            break;\r\n          case \"7\":\r\n            word = \"补单初审通过\";\r\n            break;\r\n          case \"8\":\r\n            word = \"初审拒绝\";\r\n            break;\r\n          case \"9\":\r\n            word = \"补单复审通过\";\r\n            break;\r\n          case \"10\":\r\n            word = \"复审拒绝\";\r\n            break;\r\n          case \"11\":\r\n            word = \"充值失败\";\r\n            break;\r\n          case \"12\":\r\n            word = \"客服拒绝\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 200,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 200,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    }\r\n  ];\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      start_time: startTime,\r\n      end_time: endTime\r\n    });\r\n  };\r\n}\r\n\r\nexport default Recharge_order;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Input,\r\n  Button,\r\n} from \"antd\";\r\nimport { getChannel, getChannelInfo,editChannelInfo } from \"../../../api/index\";\r\n\r\nclass Recharge_channel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      childData: [],\r\n      expandedRowKeys: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isEditDataShow: false,\r\n      recordId: \"\"\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getChannel(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              onClick={() => this.getUsers(1, 20)}\r\n              icon=\"reload\"\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"middle\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          expandedRowRender={this.expandedRowRender}\r\n          expandRowByClick\r\n          onExpand={this.onExpandRow}\r\n          expandedRowKeys={this.state.expandedRowKeys}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n        />\r\n        <Modal\r\n          title=\"修改\"\r\n          visible={this.state.isEditDataShow}\r\n          onOk={this.handleEditData}\r\n          onCancel={() => {\r\n            this.setState({ isEditDataShow: false });\r\n          }}\r\n        >\r\n          <span>pay_code:</span>\r\n          <Input\r\n            type=\"text\"\r\n            value={this.state.inputParam}\r\n            onChange={event =>\r\n              this.setState({ inputParam: event.target.value })\r\n            }\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\"\r\n    },\r\n    {\r\n      title: \"渠道名\",\r\n      dataIndex: \"name\"\r\n    },\r\n    {\r\n      title: \"商户号\",\r\n      dataIndex: \"member_id\"\r\n    }\r\n  ];\r\n  expandedRowRender = (record, index, indent, expanded) => {\r\n    const columns = [\r\n      {\r\n        title: \"支付方式名称\",\r\n        dataIndex: \"pay_name\",\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"所属支付渠道\",\r\n        dataIndex: \"channel_name\",\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"pay_code\",\r\n        dataIndex: \"pay_code\",\r\n        width: 200\r\n      },\r\n      {\r\n        title: \"操作\",\r\n        dataIndex: \"action\",\r\n        render: (text, record, index) => (\r\n          <Button onClick={() => this.edit(record)}>修改pay_code</Button>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <Table\r\n        columns={columns}\r\n        dataSource={this.state.childData}\r\n        pagination={false}\r\n      />\r\n    );\r\n  };\r\n  onExpandRow = async (expanded, record) => {\r\n    let keys = [];\r\n    if (expanded) {\r\n      keys.push(record.id);\r\n      this.setState({\r\n        expandedRowKeys: keys\r\n      });\r\n      const result = await getChannelInfo(record.id);\r\n      if (result.status === 0) {\r\n        result.data.forEach((element, index) => {\r\n          element.key = index;\r\n        });\r\n        this.setState({\r\n          childData: result.data\r\n        });\r\n      } else {\r\n        message.error(\"网络问题\");\r\n        this.setState({\r\n          childData: []\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        expandedRowKeys: []\r\n      });\r\n    }\r\n  };\r\n  edit = record => {\r\n    console.log(record.pay_code);\r\n    this.setState({\r\n      recordId: record.id,\r\n      inputParam: record.pay_code,\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  handleEditData = async () => {\r\n    const result = await editChannelInfo(this.state.recordId, this.state.inputParam);\r\n    if (result.status === 0) {\r\n      message.success(result.msg);\r\n      this.setState({\r\n        isEditDataShow: false,\r\n        expandedRowKeys:[],\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n}\r\nexport default Recharge_channel;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Checkbox,\r\n  DatePicker,\r\n  message\r\n} from \"antd\";\r\nimport { packageList, addNotice, updateNotice } from \"../../../api\";\r\nimport moment from \"moment\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      checkedList: this.props.isEdit\r\n        ? this.props.editDataRecord.package_ids\r\n        : []\r\n    };\r\n  }\r\n  getPackageList = async () => {\r\n    let res = await packageList();\r\n    if (res.status === 0) {\r\n      let arr = [];\r\n      res.data.forEach(element => {\r\n        arr.push({ label: element.name, value: element.id });\r\n      });\r\n      this.setState({\r\n        options: arr\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getPackageList();\r\n  }\r\n  //index.js:1375 Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in the componentWillUnmount method.              in AddDataForm (created by Form(AddDataForm))\r\n  //解决上诉错误：\r\n  // componentWillUnmount() {\r\n  //   this.setState = (state, callback) => {\r\n  //     return;\r\n  //   };\r\n  // }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"开关\">\r\n          {getFieldDecorator(\"is_open\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.is_open) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>开启</Radio>\r\n              <Radio value={0}>关闭</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"标题\">\r\n          {getFieldDecorator(\"title\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.title : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"品牌\">\r\n          {getFieldDecorator(\"packageList\", {\r\n            rules: [{ required: true, message: \"请选择品牌!\" }],\r\n            initialValue: isEdit && editDataRecord.package_ids\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.state.options}\r\n              // defaultValue={editDataRecord.package_ids}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"公告类型\">\r\n          {getFieldDecorator(\"type\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>活动</Radio>\r\n              <Radio value={2}>公告</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"是否跑马灯\">\r\n          {getFieldDecorator(\"is_slider\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.type) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>是</Radio>\r\n              <Radio value={0}>否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            rules: [{ required: true }],\r\n            initialValue: isEdit && editDataRecord.sort\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"内容\">\r\n          {getFieldDecorator(\"words\", {\r\n            rules: [{ required: true }],\r\n            initialValue: isEdit ? editDataRecord.words : \"\"\r\n          })(\r\n            <Input.TextArea\r\n              autosize={{ minRows: 2, maxRows: 6 }}\r\n              style={{ width: \"60%\" }}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"开始日期\">\r\n          {getFieldDecorator(\"start_time\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit && moment(editDataRecord.start_time * 1000)\r\n          })(<DatePicker format={\"YYYY-MM-DD 00:00:00\"} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"截止日期\">\r\n          {getFieldDecorator(\"end_time\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit && moment(editDataRecord.end_time * 1000)\r\n          })(<DatePicker format={\"YYYY-MM-DD 00:00:00\"} />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord\r\n        ? this.props.editDataRecord._id.$oid\r\n        : \"\";\r\n      if (!err) {\r\n        value.packageList.forEach(item => {\r\n          let str = \"group[\" + item + \"]\";\r\n          value[str] = item;\r\n        });\r\n        value.start_time = value.start_time.format(\"YYYY-MM-DD 00:00:00\");\r\n        value.end_time = value.end_time.format(\"YYYY-MM-DD 00:00:00\");\r\n        delete value.packageList;\r\n        const res = !this.props.isEdit\r\n          ? await addNotice(value)\r\n          : await updateNotice(value, id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  checkboxOnChange = checkedList => {\r\n    this.setState({\r\n      checkedList: checkedList\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popover,\r\n  Popconfirm\r\n} from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { getList, packageList, addNotice, delNotice } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Notice_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await getList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  // onSearchData = async () => {\r\n  //   const res = await getChannelList(1, 20, this.state.inputParam);\r\n  //   if (res.status === 0) {\r\n  //     this.setState({\r\n  //       data: res.data,\r\n  //       count: parseInt(res.count)\r\n  //     });\r\n  //   } else {\r\n  //     message.error(\"网络问题\");\r\n  //   }\r\n  // };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  onDelete = async record => {\r\n    let res = await delNotice(record._id.$oid);\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.refreshPage();\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      inputParam: \"\",\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <button onClick={this.addData}>添加</button>\r\n          </span>\r\n        }\r\n        extra={\r\n          <button onClick={this.refreshPage}>\r\n            <Icon type=\"reload\" />\r\n          </button>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey={record => record._id.$oid}\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1700, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"新增公告\"\r\n          visible={this.state.isAddDataShow}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"标题\",\r\n      dataIndex: \"title\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"品牌\",\r\n      dataIndex: \"package_ids\",\r\n      width: 120,\r\n      render: (text, record) => <span>{text.join(\",\")}</span>\r\n    },\r\n    {\r\n      title: \"代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"公告类型\",\r\n      dataIndex: \"type\",\r\n      width: 120,\r\n      render: (text, record) => (\r\n        <span>{text === \"1\" || text === 1 ? \"活动\" : \"公告\"}</span>\r\n      )\r\n    },\r\n    {\r\n      title: \"是否跑马灯\",\r\n      dataIndex: \"is_slider\",\r\n      width: 120,\r\n      render: (text, record) => <span>{text === \"1\" ? \"是\" : \"否\"}</span>\r\n    },\r\n    {\r\n      title: \"公告内容\",\r\n      dataIndex: \"words\",\r\n      width: 300,\r\n      render: (text, record) => (\r\n        <Popover content={text} trigger=\"click\" overlayStyle={{ width: \"60%\" }}>\r\n          <div\r\n            style={{\r\n              width: 250,\r\n              textOverflow: \"ellipsis\",\r\n              whiteSpace: \"nowrap\",\r\n              overflow: \"hidden\"\r\n            }}\r\n          >\r\n            {text}\r\n          </div>\r\n        </Popover>\r\n      ),\r\n      onCell: (record, rowIndex) => {\r\n        return {\r\n          onClick: event => {}, // 点击行\r\n          onDoubleClick: event => {},\r\n          onContextMenu: event => {},\r\n          onMouseEnter: event => {\r\n            event.target.style.cursor = \"pointer\";\r\n          }, // 鼠标移入行\r\n          onMouseLeave: event => {}\r\n        };\r\n      }\r\n    },\r\n    {\r\n      title: \"开始时间\",\r\n      dataIndex: \"start_time\",\r\n      width: 150,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"截止时间\",\r\n      dataIndex: \"end_time\",\r\n      width: 150,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"create_time\",\r\n      width: 150,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n          <LinkButton>\r\n            <Popconfirm\r\n              title=\"确定要删除吗?\"\r\n              onConfirm={()=>this.onDelete(record)}\r\n              okText=\"删除\"\r\n              cancelText=\"取消\"\r\n            >\r\n              删除\r\n            </Popconfirm>\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Notice_list;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Checkbox,\r\n  DatePicker,\r\n  message\r\n} from \"antd\";\r\nimport { packageList, saveCustomerService} from \"../../../api\";\r\nimport moment from \"moment\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nclass AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      checkedList: this.props.isEdit\r\n        ? this.props.editDataRecord.package_ids.split(\",\").map(Number)\r\n        : []\r\n    };\r\n  }\r\n  getPackageList = async () => {\r\n    let res = await packageList();\r\n    if (res.status === 0) {\r\n      let arr = [];\r\n      res.data.forEach(element => {\r\n        arr.push({ label: element.name, value: element.id });\r\n      });\r\n      this.setState({\r\n        options: arr\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getPackageList();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { editDataRecord, isEdit } = this.props;\r\n    return (\r\n      <Form labelCol={{ span: 5 }} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"账号\">\r\n          {getFieldDecorator(\"user_id\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.user_id) : ''\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"昵称\">\r\n          {getFieldDecorator(\"nick_name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"该项不能为空\"\r\n              }\r\n            ],\r\n            initialValue: isEdit ? editDataRecord.nick_name : \"\"\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"授权品牌\">\r\n          {getFieldDecorator(\"package_ids\", {\r\n            rules: [{ required: true, message: \"请选择品牌!\" }],\r\n            initialValue:\r\n              isEdit && editDataRecord.package_ids.split(\",\").map(Number)\r\n          })(\r\n            <Checkbox.Group\r\n              options={this.state.options}\r\n              onChange={checkedList => this.checkboxOnChange(checkedList)}\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"是否显示\">\r\n          {getFieldDecorator(\"status\", {\r\n            rules: [\r\n              {\r\n                required: true\r\n              }\r\n            ],\r\n            initialValue: isEdit ? parseInt(editDataRecord.status) : 1\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>是</Radio>\r\n              <Radio value={0}>否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"显示排序\">\r\n          {getFieldDecorator(\"sort\", {\r\n            rules: [{ required: true }],\r\n            initialValue: isEdit && editDataRecord.sort\r\n          })(<Input style={{ width: \"60%\" }} />)}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let id = this.props.editDataRecord\r\n        ? this.props.editDataRecord.user_id\r\n        : \"\";\r\n      if (!err) {\r\n        value.package_ids.forEach(item => {\r\n          let str = \"group[\" + item + \"]\";\r\n          value[str] = item;\r\n        });\r\n        delete value.package_ids;\r\n        const res = !this.props.isEdit\r\n          ? await saveCustomerService(value, \"add\")\r\n          : await saveCustomerService(value, \"edit\", id);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功\");\r\n          this.props.refreshPage();\r\n          this.props.cancel();\r\n          this.props.form.resetFields();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n  checkboxOnChange = checkedList => {\r\n    this.setState({\r\n      checkedList: checkedList\r\n    });\r\n  };\r\n}\r\n\r\nconst WrappedAddDataForm = Form.create()(AddDataForm);\r\n\r\nexport default WrappedAddDataForm;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Modal, message, Icon, Input,Popconfirm } from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { customerList, saveCustomerService } from \"../../../api/index\";\r\nimport WrappedAddDataForm from \"./addorEdit\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass Customer_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await customerList(page, limit);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: result.count\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  onSearchData = async () => {\r\n    const res = await customerList(1, 20, this.input.input.value);\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        data: res.data,\r\n        count: parseInt(res.count)\r\n      });\r\n    } \r\n  };\r\n  addData = () => {\r\n    this.setState({\r\n      isAddDataShow: true\r\n    });\r\n  };\r\n  edit = async record => {\r\n    this.editDataRecord = record;\r\n    this.setState({\r\n      isEditDataShow: true\r\n    });\r\n  };\r\n  onDelete = async record => {\r\n    let user_id=record.user_id\r\n    let res = await saveCustomerService({user_id},\"del\");\r\n    if (res.status === 0) {\r\n      message.success(\"删除成功\");\r\n      this.refreshPage();\r\n    } else {\r\n      message.error(\"出错了：\" + res.msg);\r\n    }\r\n  };\r\n  refreshPage = () => {\r\n    this.setState({\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      isAddDataShow: false,\r\n      isEditDataShow: false\r\n    });\r\n    this.getUsers(1, 20);\r\n    this.input.handleReset()\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <span>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入支付名称\"\r\n              style={{ width: 150 }}\r\n              ref={input => (this.input = input)}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.onSearchData}>\r\n              <Icon type=\"search\" />\r\n            </button>\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.addData}>\r\n              <Icon type=\"user-add\" />\r\n              添加\r\n            </button>\r\n          </span>\r\n        }\r\n        extra={\r\n          <button onClick={this.refreshPage}>\r\n            <Icon type=\"reload\" />\r\n          </button>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          rowKey=\"user_id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 1200, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title=\"新增\"\r\n          visible={this.state.isAddDataShow}\r\n          onCancel={() => {\r\n            this.setState({ isAddDataShow: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <WrappedAddDataForm\r\n            cancel={() =>\r\n              this.setState({\r\n                isAddDataShow: false\r\n              })\r\n            }\r\n            refreshPage={this.refreshPage}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditDataShow && (\r\n          <Modal\r\n            title=\"编辑用户\"\r\n            visible={this.state.isEditDataShow}\r\n            // onOk={this.handleAddData}\r\n            onCancel={() => {\r\n              this.setState({ isEditDataShow: false });\r\n            }}\r\n            footer={null}\r\n          >\r\n            <WrappedAddDataForm\r\n              isEdit\r\n              editDataRecord={this.editDataRecord}\r\n              cancel={() =>\r\n                this.setState({\r\n                  isEditDataShow: false\r\n                })\r\n              }\r\n              refreshPage={() => this.getUsers(1, 20)}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"账号\",\r\n      dataIndex: \"user_id\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"nick_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"品牌ID\",\r\n      dataIndex: \"package_ids\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"是否显示\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record) => (text === 1 ? \"是\" : \"否\")\r\n    },\r\n    {\r\n      title: \"排序\",\r\n      dataIndex: \"sort\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"create_time\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"修改时间\",\r\n      dataIndex: \"update_time\",\r\n      width: 200,\r\n      render: formateDate\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n          <LinkButton>\r\n            <Popconfirm\r\n              title=\"确定要删除吗?\"\r\n              onConfirm={()=>this.onDelete(record)}\r\n              okText=\"删除\"\r\n              cancelText=\"取消\"\r\n            >\r\n              删除\r\n            </Popconfirm>\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n}\r\n\r\nexport default Customer_list;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data } = this.props.detailRecord;\r\n    console.log(data);\r\n\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey={(record,index)=>`${index}`}\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"check\") {\r\n      return [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    } else if (this.props.action === \"risk\") {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  ConfigProvider,\r\n  DatePicker,\r\n  Button,\r\n  Popover\r\n} from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\n// import ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\nimport \"moment/locale/zh-cn\";\r\nimport {\r\n  withDraw,\r\n  downloadWithdrawList,\r\n  userDetail,\r\n  reviewInfo,\r\n  remarkInfo\r\n} from \"../../../api\";\r\nimport WrappedComponent from \"./details\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nclass Withdraw_list extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: \"\",\r\n      filed: \"\",\r\n      inputParam: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\",\r\n      isBindInfoShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const result = await withDraw(page, limit, 3);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  handleChange(event) {\r\n    this.setState({ inputParam: event.target.value });\r\n  }\r\n  onSearchData = async () => {\r\n    const result = await withDraw(1, 20, 3, this.state);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n      message.error(\"请检查输入的关键词或网络\");\r\n    }\r\n  };\r\n  download = () => {\r\n    downloadWithdrawList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <ConfigProvider locale={zh_CN}>\r\n              <RangePicker\r\n                // defaultValue={[moment().locale(\"zh-cn\")]}\r\n                // showTime={{ format: \"HH:mm\" }}\r\n                format=\"YYYY-MM-DD\"\r\n                placeholder={[\"开始日期\", \"结束日期\"]}\r\n                onChange={this.dataPickerOnChange}\r\n              />\r\n            </ConfigProvider>\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ filed: value })}\r\n            >\r\n              <Select.Option value=\"order_id\">订单id</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\r\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              value={this.state.inputParam}\r\n              onChange={this.handleChange}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ order_status: value })}\r\n            >\r\n              <Select.Option value=\"\">订单状态</Select.Option>\r\n              <Select.Option value=\"1\">待审核</Select.Option>\r\n              <Select.Option value=\"2\">处理中</Select.Option>\r\n              <Select.Option value=\"3\">已提交</Select.Option>\r\n              <Select.Option value=\"4\">已成功</Select.Option>\r\n              <Select.Option value=\"5\">已失败</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ type: value })}\r\n            >\r\n              <Select.Option value=\"\">兑换方式</Select.Option>\r\n              <Select.Option value=\"1\">alipay</Select.Option>\r\n              <Select.Option value=\"2\">bank</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.onSearchData}>\r\n              <Icon type=\"search\" />\r\n            </button>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                this.setState(\r\n                  {\r\n                    data: [],\r\n                    count: 0,\r\n                    pageSize: 20\r\n                  },\r\n                  () => {\r\n                    this.getUsers(1, 20);\r\n                  }\r\n                );\r\n              }}\r\n              icon=\"reload\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <Button onClick={this.download} icon=\"download\">\r\n              下载列表\r\n            </Button>\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 2400, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title={\r\n            this.action === \"check\"\r\n              ? \"审核信息\"\r\n              : this.action === \"risk\"\r\n              ? \"资金明细\"\r\n              : \"运营备注\"\r\n          }\r\n          visible={this.state.isDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            detailRecord={this.detailRecord}\r\n            action={this.action}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"申请费率\",\r\n      dataIndex: \"handling_fee\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"实际费率\",\r\n      dataIndex: \"gold\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"兑换方式\",\r\n      dataIndex: \"order_type\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"兑换账号\",\r\n      dataIndex: \"pay_account\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"账号名称\",\r\n      dataIndex: \"pay_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"待审核\";\r\n            break;\r\n          case \"2\":\r\n            word = \"处理中\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已提交\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已成功\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已失败\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 150,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 150,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"风控\",\r\n      dataIndex: \"\",\r\n      width: 150,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"risk\")}>\r\n            风控\r\n          </LinkButton>\r\n          <LinkButton>游戏数据</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <Popover\r\n            content={record.user_remark}\r\n            title={record.user_id + \"用户备注\"}\r\n            trigger=\"click\"\r\n          >\r\n            <LinkButton>用户备注</LinkButton>\r\n          </Popover>\r\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      start_time: startTime,\r\n      end_time: endTime\r\n    });\r\n  };\r\n  getDetail = async (record, action) => {\r\n    this.action = action;\r\n    this.detailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.user_id\r\n    };\r\n    const res =\r\n      action === \"risk\"\r\n        ? await userDetail(1, 20, record.user_id)\r\n        : action === \"check\"\r\n        ? await reviewInfo(1, 20, record.order_id)\r\n        : await remarkInfo(1, 20, record.order_id);\r\n    if (res.status === 0) {\r\n      this.detailRecord.data = res.data;\r\n      this.detailRecord.count = res.count;\r\n    }\r\n    this.setState({ isDetailShow: true });\r\n  };\r\n}\r\n\r\nexport default Withdraw_list;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass GoldDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data } = this.props.detailRecord;\r\n    console.log(data);\r\n\r\n    return (\r\n      <Table\r\n        bordered\r\n        rowKey={(record,index)=>`${index}`}\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"check\") {\r\n      return [\r\n        {\r\n          title: \"审核人\",\r\n          dataIndex: \"review_name\"\r\n        },\r\n        {\r\n          title: \"审核时间\",\r\n          dataIndex: \"review_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    } else if (this.props.action === \"risk\") {\r\n      return [\r\n        {\r\n          title: \"user_id\",\r\n          dataIndex: \"id\"\r\n        },\r\n        {\r\n          title: \"产生来源\",\r\n          dataIndex: \"pay_account_name\"\r\n        },\r\n\r\n        {\r\n          title: \"余额(变动前)\",\r\n          dataIndex: \"total_balance\"\r\n        },\r\n        {\r\n          title: \"变动金额\",\r\n          dataIndex: \"final_pay\",\r\n\r\n          sorter: (a, b) => a.total_balance - b.total_balance\r\n        },\r\n        {\r\n          title: \"税收\",\r\n          dataIndex: \"tax\"\r\n        },\r\n        {\r\n          title: \"余额(变动后)\",\r\n          dataIndex: \"total_final_balance\"\r\n        },\r\n        {\r\n          title: \"备注\",\r\n          dataIndex: \"pay_reason\"\r\n        },\r\n        {\r\n          title: \"创建时间\",\r\n          dataIndex: \"create_time\"\r\n        }\r\n      ];\r\n    } else {\r\n      return [\r\n        {\r\n          title: \"备注人\",\r\n          dataIndex: \"remark_name\"\r\n        },\r\n        {\r\n          title: \"内容\",\r\n          dataIndex: \"content\"\r\n        },\r\n        {\r\n          title: \"备注时间\",\r\n          dataIndex: \"created_at\",\r\n          render: formateDate\r\n        }\r\n      ];\r\n    }\r\n  };\r\n}\r\n\r\nexport default GoldDetail;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Icon, Input, Button, message, Radio, Select } from \"antd\";\r\nimport { withDrawRemark } from \"../../../api\";\r\n\r\nexport default class AddDataForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { editDataRecord } = this.props;\r\n    return (\r\n      <div>\r\n        <div>订单ID:{editDataRecord.order_id}</div>\r\n        <div>用户ID:{editDataRecord.user_id}</div>\r\n        <div>金额:{editDataRecord.amount}</div>\r\n        <div>\r\n          <span>备注[用户]:</span>\r\n          <Input\r\n            type=\"text\"\r\n            style={{ width: \"70%\", margin: \"0 10px\" }}\r\n            placeholder=\"请输入备注内容，用户查看使用\"\r\n            onBlur={e => (this.userRemark = e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"login-form-button\"\r\n            onClick={() =>\r\n              this.submitRemark(editDataRecord.order_id, this.userRemark, 1)\r\n            }\r\n          >\r\n            提交\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <span>备注[运营]:</span>\r\n          <Input\r\n            type=\"text\"\r\n            style={{ width: \"70%\", margin: \"0 10px\" }}\r\n            placeholder=\"请输入备注内容，运营人员记录使用\"\r\n            onBlur={e => (this.operatorRemark = e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"login-form-button\"\r\n            onClick={() =>\r\n              this.submitRemark(editDataRecord.order_id, this.operatorRemark, 2)\r\n            }\r\n          >\r\n            提交\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  submitRemark = async (id, temarks, remark_type) => {\r\n    const res = await withDrawRemark(id, temarks, remark_type);\r\n    if (res.status === 0) {\r\n      message.success(\"操作成功:\" + res.msg);\r\n    } else {\r\n      message.error(\"操作失败:\" + res.msg);\r\n    }\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Select,\r\n  ConfigProvider,\r\n  DatePicker,\r\n  Button,\r\n  Popover\r\n} from \"antd\";\r\nimport \"moment/locale/zh-cn\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\nimport \"moment/locale/zh-cn\";\r\nimport {\r\n  withDraw,\r\n  downloadWithdrawList,\r\n  userDetail,\r\n  reviewInfo,\r\n  remarkInfo\r\n} from \"../../../api\";\r\nimport WrappedComponent from \"./details\";\r\nimport AddDataForm from \"./edit\";\r\n\r\nconst { RangePicker } = DatePicker;\r\nclass Daiti extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      start_time: \"\",\r\n      end_time: \"\",\r\n      order_status: \"\",\r\n      type: 3,\r\n      filed: \"\",\r\n      user_id: \"\",\r\n      order_id: \"\",\r\n      isBindInfoShow: false\r\n    };\r\n    this.initColumns();\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    let data = { inputParam: \"\", ...this.state };\r\n    const result = await withDraw(page, limit, 1, data);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      message.error(\"网络问题\");\r\n    }\r\n  };\r\n  onSearchData = async () => {\r\n    let data = { inputParam: this.input.input.value, ...this.state };\r\n    console.log(data);\r\n\r\n    const result = await withDraw(1, 20, 1, data);\r\n    if (result.status === 0) {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data: result.data,\r\n        count: parseInt(result.count)\r\n      });\r\n      message.error(\"请检查输入的关键词或网络\");\r\n    }\r\n  };\r\n  download = () => {\r\n    downloadWithdrawList(this.state);\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers(1, 20);\r\n  }\r\n  render() {\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <ConfigProvider locale={zh_CN}>\r\n              <RangePicker\r\n                // defaultValue={[moment().locale(\"zh-cn\")]}\r\n                // showTime={{ format: \"HH:mm\" }}\r\n                format=\"YYYY-MM-DD\"\r\n                placeholder={[\"开始日期\", \"结束日期\"]}\r\n                onChange={this.dataPickerOnChange}\r\n              />\r\n            </ConfigProvider>\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              placeholder=\"请选择\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ filed: value })}\r\n            >\r\n              <Select.Option value=\"order_id\">订单id</Select.Option>\r\n              <Select.Option value=\"user_id\">user_id</Select.Option>\r\n              <Select.Option value=\"replace_id\">代提ID</Select.Option>\r\n              <Select.Option value=\"create_time\">创建时间</Select.Option>\r\n              <Select.Option value=\"arrival_time\">到账时间</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"请输入关键字\"\r\n              style={{ width: 150 }}\r\n              // value={this.state.inputParam}\r\n              // onChange={this.handleChange}\r\n              ref={Input => (this.input = Input)}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <Select\r\n              defaultValue=\"\"\r\n              style={{ width: 150 }}\r\n              onSelect={value => this.setState({ order_status: value })}\r\n            >\r\n              <Select.Option value=\"\">订单状态</Select.Option>\r\n              <Select.Option value=\"1\">待审核</Select.Option>\r\n              <Select.Option value=\"2\">处理中</Select.Option>\r\n              <Select.Option value=\"3\">已提交</Select.Option>\r\n              <Select.Option value=\"4\">已成功</Select.Option>\r\n              <Select.Option value=\"5\">已失败</Select.Option>\r\n            </Select>\r\n            &nbsp; &nbsp;\r\n            <button onClick={this.onSearchData}>\r\n              <Icon type=\"search\" />\r\n            </button>\r\n          </div>\r\n        }\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              onClick={() => {\r\n                this.setState(\r\n                  {\r\n                    data: [],\r\n                    count: 0,\r\n                    pageSize: 20\r\n                  },\r\n                  () => {\r\n                    this.getUsers(1, 20);\r\n                  }\r\n                );\r\n              }}\r\n              icon=\"reload\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <Button onClick={this.download} icon=\"download\">\r\n              下载列表\r\n            </Button>\r\n          </span>\r\n        }\r\n      >\r\n        <Table\r\n          bordered\r\n          size=\"small\"\r\n          rowKey=\"id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              if (page && pageSize) {\r\n                this.setState({\r\n                  pageSize: pageSize\r\n                });\r\n                this.getUsers(page, pageSize);\r\n              } else return;\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              if (size) {\r\n                this.getUsers(current, size);\r\n              } else return;\r\n            }\r\n          }}\r\n          scroll={{ x: 2500, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title={\r\n            this.action === \"check\"\r\n              ? \"审核信息\"\r\n              : this.action === \"risk\"\r\n              ? \"资金明细\"\r\n              : \"运营备注\"\r\n          }\r\n          visible={this.state.isDetailShow}\r\n          onCancel={() => {\r\n            this.setState({ isDetailShow: false });\r\n          }}\r\n          footer={null}\r\n          width=\"70%\"\r\n        >\r\n          <WrappedComponent\r\n            detailRecord={this.detailRecord}\r\n            action={this.action}\r\n          />\r\n        </Modal>\r\n        {this.state.isEditShow && (\r\n          <Modal\r\n            title=\"编辑\"\r\n            visible={this.state.isEditShow}\r\n            onCancel={() => {\r\n              this.setState({ isEditShow: false });\r\n            }}\r\n            footer={null}\r\n            width=\"40%\"\r\n          >\r\n            <AddDataForm editDataRecord={this.editDataRecord} />\r\n          </Modal>\r\n        )}\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"订单ID\",\r\n      dataIndex: \"order_id\",\r\n      width: 300\r\n    },\r\n    {\r\n      title: \"user_id\",\r\n      dataIndex: \"user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"昵称\",\r\n      dataIndex: \"user_name\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"下单金额\",\r\n      dataIndex: \"amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.amount - b.amount\r\n    },\r\n    {\r\n      title: \"到账金额\",\r\n      dataIndex: \"arrival_amount\",\r\n      width: 100,\r\n      sorter: (a, b) => a.arrival_amount - b.arrival_amount\r\n    },\r\n    {\r\n      title: \"兑换方式\",\r\n      dataIndex: \"order_type\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"兑换账号\",\r\n      dataIndex: \"pay_account\",\r\n      width: 200\r\n    },\r\n    {\r\n      title: \"账号名称\",\r\n      dataIndex: \"pay_name\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      width: 100,\r\n      render: (text, record, index) => {\r\n        let word;\r\n        switch (text) {\r\n          case \"1\":\r\n            word = \"待审核\";\r\n            break;\r\n          case \"2\":\r\n            word = \"处理中\";\r\n            break;\r\n          case \"3\":\r\n            word = \"已提交\";\r\n            break;\r\n          case \"4\":\r\n            word = \"已成功\";\r\n            break;\r\n          case \"5\":\r\n            word = \"已失败\";\r\n            break;\r\n          default:\r\n            word = \"\";\r\n            break;\r\n        }\r\n        return <span>{word}</span>;\r\n      }\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      width: 150,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.edit(record)}>编辑</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"所属品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"所属代理\",\r\n      dataIndex: \"proxy_user_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"代提ID\",\r\n      dataIndex: \"replace_id\",\r\n      width: 100\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      width: 150,\r\n      render: formateDate,\r\n      sorter: (a, b) => a.created_at - b.created_at\r\n    },\r\n    {\r\n      title: \"到账时间\",\r\n      dataIndex: \"arrival_at\",\r\n      width: 150,\r\n      render: (text, record, index) => {\r\n        if (text === \"0\" || !text) {\r\n          return \"\";\r\n        } else return formateDate(text);\r\n      },\r\n      sorter: (a, b) => a.arrival_at - b.arrival_at\r\n    },\r\n    {\r\n      title: \"风控\",\r\n      dataIndex: \"\",\r\n      width: 150,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"risk\")}>\r\n            风控\r\n          </LinkButton>\r\n          <LinkButton>游戏数据</LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"审核详情\",\r\n      dataIndex: \"\",\r\n      width: 100,\r\n      render: record => (\r\n        <span>\r\n          <LinkButton onClick={() => this.getDetail(record, \"check\")}>\r\n            查看\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      title: \"备注内容\",\r\n      dataIndex: \"\",\r\n      render: record => (\r\n        <span>\r\n          <Popover\r\n            content={record.user_remark}\r\n            title={record.user_id + \"用户备注\"}\r\n            trigger=\"click\"\r\n          >\r\n            <LinkButton>用户备注</LinkButton>\r\n          </Popover>\r\n          <LinkButton onClick={() => this.getDetail(record, \"operatorRemark\")}>\r\n            运营备注\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  dataPickerOnChange = (date, dateString) => {\r\n    let startTime = dateString[0] + \" 00:00:00\";\r\n    let endTime = dateString[1] + \" 00:00:00\";\r\n    this.setState({\r\n      start_time: startTime,\r\n      end_time: endTime\r\n    });\r\n  };\r\n  getDetail = async (record, action) => {\r\n    this.action = action;\r\n    this.detailRecord = {\r\n      data: [],\r\n      count: 0,\r\n      id: record.user_id\r\n    };\r\n    const res =\r\n      action === \"risk\"\r\n        ? await userDetail(1, 20, record.user_id)\r\n        : action === \"check\"\r\n        ? await reviewInfo(1, 20, record.order_id)\r\n        : await remarkInfo(1, 20, record.order_id);\r\n    if (res.status === 0) {\r\n      this.detailRecord.data = res.data;\r\n      this.detailRecord.count = res.count;\r\n    }\r\n    this.setState({ isDetailShow: true });\r\n  };\r\n  edit = async record => {\r\n    this.setState({ isEditShow: true });\r\n    this.editDataRecord = record;\r\n  };\r\n}\r\n\r\nexport default Daiti;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  message,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  Switch,\r\n  Radio,\r\n  Divider\r\n} from \"antd\";\r\nimport { getConfigList, saveWithDrawChannel } from \"../../../api/index\";\r\n\r\nclass Channel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\"\r\n    };\r\n  }\r\n  getUsers = async (page, limit) => {\r\n    const res = await getConfigList();\r\n    if (res.status === 0) {\r\n      this.initialData = res.data;\r\n      this.setState({ data: JSON.parse(res.data.conf_val) });\r\n    } else {\r\n      message.error(res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const data = this.state.data;\r\n    return (\r\n      <Card\r\n        extra={\r\n          <span>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              icon=\"reload\"\r\n              onClick={() => {\r\n                window.location.reload();\r\n              }}\r\n            />\r\n          </span>\r\n        }\r\n      >\r\n        <Form\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 20 }}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <Form.Item label=\"提款支付宝\">\r\n            {getFieldDecorator(\"alipay[is_close]\", {\r\n              initialValue: data && data.alipay.is_close === 1 ? true : false,\r\n              valuePropName: \"checked\"\r\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\r\n          </Form.Item>\r\n          <Divider></Divider>\r\n          <Form.Item label=\"提款银行卡\">\r\n            {getFieldDecorator(\"bankcard[is_close]\", {\r\n              initialValue: data && data.bankcard.is_close === 1 ? true : false,\r\n              valuePropName: \"checked\"\r\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"古都银行卡状态\">\r\n            {getFieldDecorator(\"bankcard[channel][2][is_close]\", {\r\n              initialValue: data && parseInt(data.bankcard.channel[0].is_close)\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"显示名称\">\r\n            {getFieldDecorator(\"bankcard[channel][2][channel_name]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[0].channel_name\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][2][min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[0].min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][2][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[0].max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"渠道排序\">\r\n            {getFieldDecorator(\"bankcard[channel][2][sort]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[0].sort\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"第三方代付状态\">\r\n            {getFieldDecorator(\"bankcard[channel][3][is_close]\", {\r\n              initialValue: data && parseInt(data.bankcard.channel[1].is_close)\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"显示名称\">\r\n            {getFieldDecorator(\"bankcard[channel][3][channel_name]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[1].channel_name\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][3][min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[1].min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][3][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[1].max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"渠道排序\">\r\n            {getFieldDecorator(\"bankcard[channel][3][sort]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[1].sort\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"onepay状态\">\r\n            {getFieldDecorator(\"bankcard[channel][7][is_close]\", {\r\n              initialValue: data && parseInt(data.bankcard.channel[2].is_close)\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>启用</Radio>\r\n                <Radio value={0}>停用</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"显示名称\">\r\n            {getFieldDecorator(\"bankcard[channel][7][channel_name]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[2].channel_name\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][7][min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[2].min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"bankcard[channel][7][max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[2].max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"渠道排序\">\r\n            {getFieldDecorator(\"bankcard[channel][7][sort]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.bankcard.channel[2].sort\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n\r\n          <Divider></Divider>\r\n          <Form.Item label=\"人工兑换\">\r\n            {getFieldDecorator(\"artificial[is_close]\", {\r\n              initialValue:\r\n                data && data.artificial.is_close === 1 ? true : false,\r\n              valuePropName: \"checked\"\r\n            })(<Switch checkedChildren=\"ON\" unCheckedChildren=\"OFF\" />)}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"提款限额\"\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            labelCol={{ span: 9, offset: 7 }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"artificial[min_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.artificial.min_amount\r\n            })(<Input style={{ width: \"80%\", marginRight: 5 }} />)}\r\n            <span>-</span>\r\n          </Form.Item>\r\n          <Form.Item\r\n            style={{ display: \"inline-block\", width: \"25%\" }}\r\n            wrapperCol={{ span: 8 }}\r\n          >\r\n            {getFieldDecorator(\"artificial[max_amount]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.artificial.max_amount\r\n            })(<Input style={{ width: \"80%\" }} />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"费率\">\r\n            {getFieldDecorator(\"artificial[rate]\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"该项不能为空\"\r\n                }\r\n              ],\r\n              initialValue: data && data.artificial.rate\r\n            })(<Input style={{ width: \"30%\" }} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ offset: 4 }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, value) => {\r\n      let { id, name } = this.initialData;\r\n      let obj = {};\r\n      value.bankcard.channel.forEach((item, index) => {\r\n        for (const key in item) {\r\n          obj[`bankcard[channel][${index}][${key}]`] = item[key];\r\n        }\r\n      });\r\n\r\n      obj[\"bankcard[is_close]\"] = value.bankcard.is_close ? \"on\" : \"off\";\r\n      obj[\"alipay[is_close]\"] = value.alipay.is_close ? \"on\" : \"off\";\r\n      for (const key in value.artificial) {\r\n        obj[`artificial[${key}]`] = value.artificial[key];\r\n      }\r\n      if (!err) {\r\n        const res = await saveWithDrawChannel(id, name, obj);\r\n        if (res.status === 0) {\r\n          message.success(\"提交成功:\" + res.msg);\r\n          console.log(res);\r\n          this.getUsers();\r\n        } else {\r\n          message.error(\"出错了：\" + res.msg);\r\n        }\r\n      } else {\r\n        message.error(\"提交失败\");\r\n      }\r\n    });\r\n  };\r\n}\r\nconst WrappedChannel = Form.create()(Channel);\r\n\r\nexport default withRouter(WrappedChannel);\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './not-found.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Table, Button } from \"antd\";\r\n// import { Table, Button } from 'element-react';\r\n\r\n// import 'element-theme-default';\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\n\r\nclass MoreDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const { data } = this.props.reportData;\r\n    return (\r\n      <Table\r\n        border={true}\r\n        showSummary={true}\r\n        rowKey={(record, index) => `${index}`}\r\n        dataSource={data}\r\n        columns={this.initColumns()}\r\n        size=\"small\"\r\n        scroll={{ x: 3000 }}\r\n        footer={this.footerData}\r\n      />\r\n    );\r\n  }\r\n  initColumns = () => {\r\n    if (this.props.action === \"getDateReport\") {\r\n      let tableHeader = [\r\n        {\r\n          title: \"日期\",\r\n          dataIndex: \"date\"\r\n        },\r\n        {\r\n          title: \"新增用户\",\r\n          dataIndex: \"regin_user_number\",\r\n          width: 80\r\n        },\r\n        {\r\n          title: \"活跃用户\",\r\n          dataIndex: \"active_user_number\",\r\n          width: 80\r\n        },\r\n        {\r\n          title: \"官方首充用户\",\r\n          dataIndex: \"first_pay_user_number\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"官方首充金额\",\r\n          dataIndex: \"first_pay_money_total\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"官方充值用户\",\r\n          dataIndex: \"pay_user_number\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"官方充值金额\",\r\n          dataIndex: \"pay_money_total\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"人工首充用户\",\r\n          dataIndex: \"first_pay_user_number_res\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"人工首充金额\",\r\n          dataIndex: \"first_pay_money_total_res\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"人工充值用户\",\r\n          dataIndex: \"pay_user_number_res\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"人工充值金额\",\r\n          dataIndex: \"pay_money_total_res\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"官方兑换用户\",\r\n          dataIndex: \"exchange_user_number\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"官方兑换金额\",\r\n          dataIndex: \"exchange_money_total\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"人工兑换用户\",\r\n          dataIndex: \"exchange_user_number_res\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"人工兑换金额\",\r\n          dataIndex: \"exchange_money_total_res\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"玩家总赢额\",\r\n          dataIndex: \"win_statement_total\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"玩家总输额\",\r\n          dataIndex: \"lose_statement_total\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"玩家总流水\",\r\n          dataIndex: \"statement_total\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"盈亏比\",\r\n          dataIndex: \"statement_ratio\",\r\n          width: 150\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          dataIndex: \"\",\r\n          render: (text, record, index) => (\r\n            <span>\r\n              <Button size=\"small\" onClick={() => this.getGameReport(record)}>\r\n                游戏\r\n              </Button>\r\n            </span>\r\n          )\r\n        }\r\n      ];\r\n      return tableHeader;\r\n    }\r\n    // else {\r\n    //   return [\r\n    //     {\r\n    //       title: \"备注人\",\r\n    //       dataIndex: \"remark_name\"\r\n    //     },\r\n    //     {\r\n    //       title: \"内容\",\r\n    //       dataIndex: \"content\"\r\n    //     },\r\n    //     {\r\n    //       title: \"备注时间\",\r\n    //       dataIndex: \"created_at\",\r\n    //       render: formateDate\r\n    //     }\r\n    //   ];\r\n    // }\r\n  };\r\n  footerData = page => {\r\n    console.log(page);\r\n    // page.map(item=>{\r\n    //   return \r\n    // })\r\n    return <tr>\r\n      <td>合计</td>\r\n      <td style={{width:80}}>regin_user_number</td>\r\n      <td>regin_user_number</td>\r\n      <td>regin_user_number</td>\r\n      <td>regin_user_number</td>\r\n      <td>regin_user_number</td>\r\n    </tr>;\r\n  };\r\n  // getDateReport = async record => {\r\n  //   const res = await dateReport(1, 20, record.package_id);\r\n  //   const reportData = this.parseDateData(res);\r\n  //   this.reportData = reportData;\r\n  //   this.action='getDateReport'\r\n  //   this.setState({ reportTable: true });\r\n  // };\r\n}\r\n\r\nexport default MoreDetail;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Icon,\r\n  Input,\r\n  Popconfirm,\r\n  Select,\r\n  ConfigProvider,\r\n  DatePicker,\r\n  Button\r\n} from \"antd\";\r\nimport LinkButton from \"../../../components/link-button/index\";\r\nimport {\r\n  dailyReport,\r\n  packageList,\r\n  dateReport,\r\n  gameReport\r\n} from \"../../../api/index\";\r\nimport MoreDetail from \"./details\";\r\nimport { formateDate } from \"../../../utils/dateUtils\";\r\nimport \"moment/locale/zh-cn\";\r\nimport zh_CN from \"antd/lib/locale-provider/zh_CN\";\r\nconst { RangePicker } = DatePicker;\r\nclass DailyReport extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      packageList: [],\r\n      count: 0,\r\n      pageSize: 20,\r\n      reportTable: false\r\n    };\r\n  }\r\n  getInitialData = async () => {\r\n    const res = await packageList();\r\n    if (res.status === 0) {\r\n      this.setState({\r\n        packageList: res.data\r\n      });\r\n    } else {\r\n      message.error(\"网络问题:\" + res.msg);\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getInitialData();\r\n  }\r\n  render() {\r\n    const packageNode = this.state.packageList.map(item => {\r\n      return (\r\n        <Select.Option value={item.id} key={item.id}>\r\n          {item.name}\r\n        </Select.Option>\r\n      );\r\n    });\r\n    return (\r\n      <Card\r\n        title={\r\n          <div>\r\n            <div>\r\n              <ConfigProvider locale={zh_CN}>\r\n                <RangePicker\r\n                  // defaultValue={[moment().locale(\"zh-cn\")]}\r\n                  // showTime={{ format: \"HH:mm\" }}\r\n                  format=\"YYYY-MM-DD\"\r\n                  placeholder={[\"开始日期\", \"结束日期\"]}\r\n                  onChange={this.dataPickerOnChange}\r\n                />\r\n              </ConfigProvider>\r\n              &nbsp; &nbsp;\r\n              <Select\r\n                placeholder=\"请选择\"\r\n                style={{ width: 120 }}\r\n                onSelect={value => (this.package_id = value)}\r\n              >\r\n                {packageNode}\r\n              </Select>\r\n              &nbsp; &nbsp;\r\n              <button onClick={this.onSearchData}>\r\n                <Icon type=\"search\" />\r\n              </button>\r\n              &nbsp; &nbsp;\r\n            </div>\r\n          </div>\r\n        }\r\n      >\r\n        <div style={{ marginBottom: 20, backgroundColor: \"#ddd\" }}>\r\n          <span style={{ border: \"1px solid #ddd\" }}>\r\n            <b>默认所选品牌7天的统计数据</b>\r\n          </span>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span style={{ border: \"1px solid #ddd\" }}>\r\n            <b>总流水=玩家赢额+(abs)玩家输额</b>\r\n          </span>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span style={{ border: \"1px solid #ddd\" }}>\r\n            <b>盈亏比=(玩家输额(abs) - 玩家赢额) /(玩家输额(abs) + 玩家赢额)</b>\r\n          </span>\r\n        </div>\r\n        <Table\r\n          bordered\r\n          rowKey=\"package_id\"\r\n          dataSource={this.state.data}\r\n          columns={this.initColumns()}\r\n          size=\"small\"\r\n          pagination={{\r\n            defaultPageSize: this.state.pageSize,\r\n            showSizeChanger: true,\r\n            showQuickJumper: true,\r\n            defaultCurrent: 1,\r\n            total: this.state.count,\r\n            onChange: (page, pageSize) => {\r\n              this.getUsers(page, pageSize);\r\n              this.setState({\r\n                pageSize: pageSize\r\n              });\r\n            },\r\n            onShowSizeChange: (current, size) => {\r\n              this.getUsers(current, size);\r\n            }\r\n          }}\r\n          scroll={{ x: 3000, y: \"60vh\" }}\r\n        />\r\n        <Modal\r\n          title={this.action === \"getDateReport\" ? \"按日期查看\" : \"游戏数据\"}\r\n          width=\"80%\"\r\n          visible={this.state.reportTable}\r\n          // onOk={this.handleAddData}\r\n          onCancel={() => {\r\n            this.setState({ reportTable: false });\r\n          }}\r\n          footer={null}\r\n        >\r\n          <MoreDetail reportData={this.reportData} action={this.action} />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n  initColumns = () => [\r\n    {\r\n      title: \"品牌\",\r\n      dataIndex: \"package_nick\",\r\n      width: 120\r\n    },\r\n    {\r\n      title: \"新增用户\",\r\n      dataIndex: \"regin_user_number\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"活跃用户\",\r\n      dataIndex: \"active_user_number\",\r\n      width: 80\r\n    },\r\n    {\r\n      title: \"官方首充用户\",\r\n      dataIndex: \"first_pay_user_number\",\r\n      width: 150\r\n      // render: (text, record) => (\r\n      //   <div style={{ wordWrap: \"break-word\", wordBreak: \"break-all\" }}>\r\n      //     {text}\r\n      //   </div>\r\n      // )\r\n    },\r\n    {\r\n      title: \"官方首充金额\",\r\n      dataIndex: \"first_pay_money_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"官方充值用户\",\r\n      dataIndex: \"pay_user_number\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"官方充值金额\",\r\n      dataIndex: \"pay_money_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"人工首充用户\",\r\n      dataIndex: \"first_pay_user_number_res\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"人工首充金额\",\r\n      dataIndex: \"first_pay_money_total_res\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"人工充值用户\",\r\n      dataIndex: \"pay_user_number_res\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"人工充值金额\",\r\n      dataIndex: \"pay_money_total_res\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"官方兑换用户\",\r\n      dataIndex: \"exchange_user_number\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"官方兑换金额\",\r\n      dataIndex: \"exchange_money_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"人工兑换用户\",\r\n      dataIndex: \"exchange_user_number_res\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"人工兑换金额\",\r\n      dataIndex: \"exchange_money_total_res\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"玩家总赢额\",\r\n      dataIndex: \"win_statement_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"玩家总输额\",\r\n      dataIndex: \"lose_statement_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"玩家总流水\",\r\n      dataIndex: \"statement_total\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"盈亏比\",\r\n      dataIndex: \"statement_ratio\",\r\n      width: 150\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"\",\r\n      render: (text, record, index) => (\r\n        <span>\r\n          <LinkButton \r\n          // onClick={() => this.getDateReport(record)}\r\n          >\r\n            日期\r\n          </LinkButton>\r\n          <LinkButton onClick={() => this.getGameReport(record)}>\r\n            游戏\r\n          </LinkButton>\r\n        </span>\r\n      )\r\n    }\r\n  ];\r\n  dataPickerOnChange = (date, dateString) => {\r\n    this.startTime = dateString[0] + \" 00:00:00\";\r\n    this.endTime = dateString[1] + \" 00:00:00\";\r\n  };\r\n  onSearchData = async () => {\r\n    const res = await dailyReport(\r\n      1,\r\n      20,\r\n      this.package_id,\r\n      this.startTime,\r\n      this.endTime\r\n    );\r\n    const newRes = this.parseData(res);\r\n    console.log(\"newRes\", newRes);\r\n    this.setState({ data: newRes.data, count: newRes.count });\r\n  };\r\n  parseData = res => {\r\n    console.log(\"res:\", res);\r\n    var length = 0;\r\n    var format_data = [];\r\n    if (res.status === 0 && res.data) {\r\n      //用户  (e.active_user_number = e.login_user_number - e.regin_user_number),\r\n      if (res.data.user) {\r\n        res.data.user\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => ((e.package_id = parseInt(e._id.package_id)), delete e._id)\r\n          );\r\n      }\r\n      //充提交易所\r\n      if (res.data.order) {\r\n        res.data.order\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.first_pay_user_number = e.first_pay_user.length),\r\n              (e.pay_user_number = e.pay_user.length),\r\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\r\n              (e.pay_user_number_res = e.pay_user_res.length),\r\n              (e.exchange_user_number = e.exchange_user.length),\r\n              (e.exchange_user_number_res = e.exchange_user_res.length),\r\n              (e.package_id = parseInt(e._id.package_id)),\r\n              delete e._id\r\n            )\r\n          );\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(\r\n            e,\r\n            res.data.order.find(d => d.package_id === e.package_id)\r\n          )\r\n        );\r\n      }\r\n\r\n      //游戏\r\n      if (res.data.game) {\r\n        res.data.game\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.statement_ratio = (\r\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\r\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\r\n              ).toFixed(4)),\r\n              (e.win_statement_total =\r\n                Math.round(e.win_statement_total * 10000) / 10000),\r\n              (e.lose_statement_total =\r\n                Math.round(e.lose_statement_total * 10000) / 10000),\r\n              (e.statement_total =\r\n                Math.round(\r\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\r\n                    10000\r\n                ) / 10000),\r\n              (e.package_id = parseInt(e._id.package_id)),\r\n              delete e._id\r\n            )\r\n          );\r\n\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(\r\n            e,\r\n            res.data.game.find(d => d.package_id === e.package_id)\r\n          )\r\n        );\r\n      }\r\n\r\n      length = res.data.user.length;\r\n      format_data = res.data.user;\r\n      console.log(\"res.data.user assign后\", res.data.user);\r\n    }\r\n\r\n    return {\r\n      code: res.code,\r\n      msg: res.msg,\r\n      count: length,\r\n      data: format_data\r\n    };\r\n  };\r\n  parseDateData = res => {\r\n    console.log(res);\r\n    var length = 0;\r\n    var format_data = [];\r\n    if (res.status === 0 && res.data) {\r\n      //用户 (e.active_user_number = e.login_user_number - e.regin_user_number),\r\n      if (res.data.user) {\r\n        res.data.user.map(e => ((e.date = e._id.create_time), delete e._id));\r\n      }\r\n      //充提交易所\r\n      if (res.data.order) {\r\n        //res.data.order.filter(e => (e && e._id)).map(e => ((e.exchange_money_total = Math.abs(e.exchange_money_total)), (e.date = e._id.create_time), delete e._id));\r\n        res.data.order\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.first_pay_user_number = e.first_pay_user.length),\r\n              (e.pay_user_number = e.pay_user.length),\r\n              (e.first_pay_user_number_res = e.first_pay_user_res.length),\r\n              (e.pay_user_number_res = e.pay_user_res.length),\r\n              (e.exchange_user_number = e.exchange_user.length),\r\n              (e.exchange_user_number_res = e.exchange_user_res.length),\r\n              (e.date = e._id.create_time),\r\n              delete e._id\r\n            )\r\n          );\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(e, res.data.order.find(d => d.date === e.date))\r\n        );\r\n      }\r\n      //游戏\r\n      if (res.data.game) {\r\n        //四舍五入保留四位小数\r\n        res.data.game\r\n          .filter(e => e && e._id)\r\n          .map(\r\n            e => (\r\n              (e.statement_ratio = (\r\n                (Math.abs(e.lose_statement_total) - e.win_statement_total) /\r\n                (e.win_statement_total + Math.abs(e.lose_statement_total))\r\n              ).toFixed(4)),\r\n              (e.win_statement_total =\r\n                Math.round(e.win_statement_total * 10000) / 10000),\r\n              (e.lose_statement_total =\r\n                Math.round(e.lose_statement_total * 10000) / 10000),\r\n              (e.statement_total =\r\n                Math.round(\r\n                  (e.win_statement_total + Math.abs(e.lose_statement_total)) *\r\n                    10000\r\n                ) / 10000),\r\n              (e.date = e._id.create_time),\r\n              delete e._id\r\n            )\r\n          );\r\n\r\n        // 合并\r\n        res.data.user.map(e =>\r\n          Object.assign(e, res.data.game.find(d => d.date === e.date))\r\n        );\r\n      }\r\n\r\n      // 排序\r\n      res.data.user.sort(\r\n        (a, b) =>\r\n          parseInt(b.date.replace(/-/g, \"\")) -\r\n          parseInt(a.date.replace(/-/g, \"\"))\r\n      );\r\n      length = res.data.user.length;\r\n      format_data = res.data.user;\r\n      console.log(res.data.user);\r\n    }\r\n    return {\r\n      code: res.code,\r\n      msg: res.msg,\r\n      count: length,\r\n      data: format_data\r\n    };\r\n  };\r\n  getDateReport = async record => {\r\n    const res = await dateReport(\r\n      1,\r\n      20,\r\n      record.package_id,\r\n      this.startTime,\r\n      this.endTime\r\n    );\r\n    const reportData = this.parseDateData(res);\r\n    this.reportData = reportData;\r\n    console.log(\"reportData\", reportData);\r\n    this.action = \"getDateReport\";\r\n    this.setState({ reportTable: true });\r\n  };\r\n  getGameReport = record => {};\r\n}\r\n\r\nexport default DailyReport;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport LeftNav from \"../../components/left-nav\";\r\nimport Header from \"../../components/header\";\r\nimport Home from \"../home/home\";\r\nimport User from \"../user/user\";\r\nimport Admin_manage_list from \"../admin_manage/admin_manage_list/admin_manage_list\";\r\nimport Role from \"../admin_manage/role/role\";\r\nimport Order_list from \"../charge/order_list/order_list\";\r\nimport Channel_list from \"../charge/channel_list/channel_list\";\r\nimport Bankcard_list from \"../charge/bankcard_list/bankcard_list\";\r\nimport Recharge_order from \"../charge/recharge_order/recharge_order\";\r\nimport Recharge_channel from \"../charge/recharge_channel/recharge_channel\";\r\nimport Notice_list from \"../customer_service/notice_list\";\r\nimport Customer_list from \"../customer_service/customer_list\";\r\nimport Withdraw_list from \"../withdraw/withdraw_list\";\r\nimport Daiti_list from \"../withdraw/Daiti_list\";\r\nimport Channel from \"../withdraw/Channel\";\r\nimport NotFound from \"../not-found/not-found\";\r\nimport DailyReport from \"../list/DailyReport\";\r\nimport { Provider, KeepAlive } from \"react-keep-alive\";\r\nconst { Sider, Content } = Layout;\r\n\r\n/*\r\n后台管理的路由组件\r\n */\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  //header和left-nav通过共同父组件传值\r\n  // onRef = ref => {\r\n  //   this.child1 = ref;\r\n  // };\r\n  render() {\r\n    const user = storageUtils.getUser();\r\n    // 如果内存没有存储user ==> 当前没有登陆\r\n    if (!user || !user.id) {\r\n      // 自动跳转到登陆(在render()中)\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: \"100%\" }}>\r\n        <Sider>\r\n          <LeftNav\r\n            onClick={tabConfig => {\r\n              this.child1.add && this.child1.add(tabConfig);\r\n            }}\r\n          />\r\n        </Sider>\r\n        <Layout>\r\n          <Header onRef={ref => (this.child1 = ref)}>Header</Header>\r\n          <Content style={{ margin: 5, backgroundColor: \"#fff\" }}>\r\n            <Provider>\r\n              <div style={{ height: \"100%\" }}>\r\n                <Switch>\r\n                  <Redirect from=\"/\" exact to=\"/home\" />\r\n                  <Route path=\"/home\" exact component={Home}>\r\n                    <KeepAlive name=\"Home\">\r\n                      <Home></Home>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/user/user-list\" exact component={User}>\r\n                    <KeepAlive name=\"User\">\r\n                      <User></User>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/customer_service/notice_list\"\r\n                    exact\r\n                    component={Notice_list}\r\n                  >\r\n                    <KeepAlive name=\"Notice_list\">\r\n                      <Notice_list></Notice_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/customer_service/customer_list\"\r\n                    exact\r\n                    component={Customer_list}\r\n                  >\r\n                    <KeepAlive name=\"Customer_list\">\r\n                      <Customer_list></Customer_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/admin_manage/list\"\r\n                    exact\r\n                    component={Admin_manage_list}\r\n                  >\r\n                    <KeepAlive name=\"Admin_manage_list\">\r\n                      <Admin_manage_list></Admin_manage_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/admin_manage/role\" exact component={Role}>\r\n                    <KeepAlive name=\"Role\">\r\n                      <Role></Role>\r\n                    </KeepAlive>\r\n                  </Route>\r\n\r\n                  <Route\r\n                    path=\"/list/daily-report\"\r\n                    exact\r\n                  >\r\n                    <KeepAlive name=\"DailyReport\">\r\n                      <DailyReport></DailyReport>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/charge/order_list\" exact component={Order_list}>\r\n                    <KeepAlive name=\"Order_list\">\r\n                      <Order_list></Order_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/channel-list\"\r\n                    exact\r\n                    component={Channel_list}\r\n                  >\r\n                    <KeepAlive name=\"Channel_list\">\r\n                      <Channel_list></Channel_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/bankcard-list\"\r\n                    exact\r\n                    component={Bankcard_list}\r\n                  >\r\n                    <KeepAlive name=\"Bankcard_list\">\r\n                      <Bankcard_list></Bankcard_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/recharge_order\"\r\n                    exact\r\n                    component={Recharge_order}\r\n                  >\r\n                    <KeepAlive name=\"Recharge_order\">\r\n                      <Recharge_order></Recharge_order>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/charge/recharge_channel\"\r\n                    exact\r\n                    component={Recharge_channel}\r\n                  >\r\n                    <KeepAlive name=\"Recharge_channel\">\r\n                      <Recharge_channel></Recharge_channel>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/withdraw/withdraw_list\"\r\n                    exact\r\n                    component={Withdraw_list}\r\n                  >\r\n                    <KeepAlive name=\"Withdraw_list\">\r\n                      <Withdraw_list></Withdraw_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route\r\n                    path=\"/withdraw/daiti_list\"\r\n                    exact\r\n                    component={Daiti_list}\r\n                  >\r\n                    <KeepAlive name=\"Daiti_list\">\r\n                      <Daiti_list></Daiti_list>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route path=\"/withdraw/channel\" exact component={Channel}>\r\n                    <KeepAlive name=\"Channel\">\r\n                      <Channel></Channel>\r\n                    </KeepAlive>\r\n                  </Route>\r\n                  <Route component={NotFound} />\r\n                </Switch>\r\n              </div>\r\n            </Provider>\r\n          </Content>\r\n          {/* <Footer style={{ textAlign: \"center\", color: \"#cccccc\", padding: 5 }}>\r\n            推荐使用谷歌浏览器，可以获得更佳页面操作体验\r\n          </Footer> */}\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","const defaultState = {\r\n  inputValue: \"\"\r\n};\r\nexport default (state = defaultState, action) => {\r\n  // console.log(state, action);\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case \"change_input\":\r\n      newState.inputValue = action.value;\r\n      break;\r\n    case \"resetPassword\":\r\n      newState.inputValue = \"\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer.js\";\r\nconst store = createStore(reducer);\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Login from \"./pages/login/login\";\r\nimport Admin from \"./pages/admin/admin\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n/*\r\n应用的根组件\r\n */\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            {/*只匹配其中一个*/}\r\n            <Route path=\"/login\" component={Login}></Route>\r\n            <Route path=\"/\" component={Admin}></Route>\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\nimport storageUtils from './utils/storageUtils'\r\nimport memoryUtils from './utils/memoryUtils'\r\n\r\n// 读取local中保存user, 保存到内存中\r\nconst user = storageUtils.getUser()\r\nmemoryUtils.user = user\r\n\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}